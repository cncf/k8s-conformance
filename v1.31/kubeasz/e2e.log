  I1112 13:38:34.149554      22 e2e.go:109] Starting e2e run "53b1e325-7b82-40d5-83f4-e85cf91f7ab1" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1731418713 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1112 13:38:34.301238 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:38:34.302007 22 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1112 13:38:34.322361 22 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1112 13:38:34.324630 22 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1112 13:38:34.324658 22 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  I1112 13:38:34.324672 22 e2e.go:245] e2e test version: v1.31.2
  I1112 13:38:34.325208 22 e2e.go:254] kube-apiserver version: v1.31.2
  I1112 13:38:34.325278 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:38:34.327337 22 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.026 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 11/12/24 13:38:34.46
  I1112 13:38:34.460896 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/12/24 13:38:34.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:38:34.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:38:34.476
  STEP: creating the policy @ 11/12/24 13:38:34.481
  STEP: waiting until the marker is denied @ 11/12/24 13:38:34.494
  STEP: testing a replicated Deployment to be allowed @ 11/12/24 13:38:36.185
  STEP: testing a non-replicated ReplicaSet not to be denied @ 11/12/24 13:38:37.395
  I1112 13:38:37.625978 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1689" for this suite. @ 11/12/24 13:38:37.628
• [3.172 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 11/12/24 13:38:37.632
  I1112 13:38:37.632906 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename cronjob @ 11/12/24 13:38:37.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:38:37.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:38:37.643
  STEP: Creating a suspended cronjob @ 11/12/24 13:38:37.646
  STEP: Ensuring no jobs are scheduled @ 11/12/24 13:38:37.65
  STEP: Ensuring no job exists by listing jobs explicitly @ 11/12/24 13:43:37.65
  STEP: Removing cronjob @ 11/12/24 13:43:37.652
  I1112 13:43:37.655084 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3205" for this suite. @ 11/12/24 13:43:37.656
• [300.027 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 11/12/24 13:43:37.659
  I1112 13:43:37.659559 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubelet-test @ 11/12/24 13:43:37.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:43:37.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:43:37.668
  I1112 13:43:43.696597 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3917" for this suite. @ 11/12/24 13:43:43.698
• [6.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 11/12/24 13:43:43.7
  I1112 13:43:43.700794 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename limitrange @ 11/12/24 13:43:43.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:43:43.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:43:43.707
  STEP: Creating LimitRange "e2e-limitrange-knpfn" in namespace "limitrange-4892" @ 11/12/24 13:43:43.708
  STEP: Creating another limitRange in another namespace @ 11/12/24 13:43:43.711
  I1112 13:43:43.810782 22 limit_range.go:299] Namespace "e2e-limitrange-knpfn-5472" created
  I1112 13:43:43.810875 22 limit_range.go:300] Creating LimitRange "e2e-limitrange-knpfn" in namespace "e2e-limitrange-knpfn-5472"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-knpfn" @ 11/12/24 13:43:43.813
  I1112 13:43:43.814090 22 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-knpfn" in "limitrange-4892" namespace @ 11/12/24 13:43:43.814
  I1112 13:43:43.816923 22 limit_range.go:335] LimitRange "e2e-limitrange-knpfn" has been patched
  STEP: Delete LimitRange "e2e-limitrange-knpfn" by Collection with labelSelector: "e2e-limitrange-knpfn=patched" @ 11/12/24 13:43:43.816
  STEP: Confirm that the limitRange "e2e-limitrange-knpfn" has been deleted @ 11/12/24 13:43:43.819
  I1112 13:43:43.819225 22 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1112 13:43:43.820129 22 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-knpfn=patched"
  I1112 13:43:43.820146 22 limit_range.go:344] LimitRange "e2e-limitrange-knpfn" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-knpfn" @ 11/12/24 13:43:43.82
  I1112 13:43:43.821091 22 limit_range.go:350] Found 1 limitRange
  I1112 13:43:43.821174 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4892" for this suite. @ 11/12/24 13:43:43.822
  STEP: Destroying namespace "e2e-limitrange-knpfn-5472" for this suite. @ 11/12/24 13:43:43.824
• [0.127 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 11/12/24 13:43:43.827
  I1112 13:43:43.827504 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-watch @ 11/12/24 13:43:43.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:43:43.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:43:43.91
  I1112 13:43:43.912218 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Creating first CR  @ 11/12/24 13:43:46.433
  I1112 13:43:46.436126 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-12T13:43:46Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-12T13:43:46Z]] name:name1 resourceVersion:1746 uid:206a5a08-5b4e-4185-ab62-64a7a6a202e8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 11/12/24 13:43:56.437
  I1112 13:43:56.440348 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-12T13:43:56Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-12T13:43:56Z]] name:name2 resourceVersion:1785 uid:e94db174-e4ae-4132-808c-b5bf647f2bc9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 11/12/24 13:44:06.442
  I1112 13:44:06.445417 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-12T13:43:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-12T13:44:06Z]] name:name1 resourceVersion:1804 uid:206a5a08-5b4e-4185-ab62-64a7a6a202e8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 11/12/24 13:44:16.446
  I1112 13:44:16.450036 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-12T13:43:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-12T13:44:16Z]] name:name2 resourceVersion:1820 uid:e94db174-e4ae-4132-808c-b5bf647f2bc9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 11/12/24 13:44:26.45
  I1112 13:44:26.454113 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-12T13:43:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-12T13:44:06Z]] name:name1 resourceVersion:1845 uid:206a5a08-5b4e-4185-ab62-64a7a6a202e8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 11/12/24 13:44:36.454
  I1112 13:44:36.458405 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-12T13:43:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-12T13:44:16Z]] name:name2 resourceVersion:1861 uid:e94db174-e4ae-4132-808c-b5bf647f2bc9] num:map[num1:9223372036854775807 num2:1000000]]}
  I1112 13:44:46.964681 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1869" for this suite. @ 11/12/24 13:44:46.966
• [63.142 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 11/12/24 13:44:46.969
  I1112 13:44:46.969273 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename dns @ 11/12/24 13:44:46.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:44:46.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:44:46.977
  STEP: Creating a test headless service @ 11/12/24 13:44:46.979
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8654 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8654;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8654 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8654;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8654.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8654.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8654.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8654.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8654.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8654.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8654.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8654.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8654.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8654.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8654.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8654.svc;check="$$(dig +notcp +noall +answer +search 163.154.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.154.163_udp@PTR;check="$$(dig +tcp +noall +answer +search 163.154.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.154.163_tcp@PTR;sleep 1; done
   @ 11/12/24 13:44:46.986
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8654 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8654;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8654 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8654;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8654.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8654.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8654.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8654.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8654.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8654.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8654.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8654.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8654.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8654.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8654.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8654.svc;check="$$(dig +notcp +noall +answer +search 163.154.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.154.163_udp@PTR;check="$$(dig +tcp +noall +answer +search 163.154.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.154.163_tcp@PTR;sleep 1; done
   @ 11/12/24 13:44:46.986
  STEP: creating a pod to probe DNS @ 11/12/24 13:44:46.986
  STEP: submitting the pod to kubernetes @ 11/12/24 13:44:46.986
  STEP: retrieving the pod @ 11/12/24 13:45:11.02
  STEP: looking for the results for each expected name from probers @ 11/12/24 13:45:11.021
  I1112 13:45:11.023056 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.024240 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.025387 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.026495 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.027674 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.028743 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.029799 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.030856 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.036220 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.037271 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.038257 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.039230 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.040160 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.041153 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.042139 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.043198 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:11.047329 22 dns_common.go:489] Lookups using dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8654 wheezy_tcp@dns-test-service.dns-8654 wheezy_udp@dns-test-service.dns-8654.svc wheezy_tcp@dns-test-service.dns-8654.svc wheezy_udp@_http._tcp.dns-test-service.dns-8654.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8654.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8654 jessie_tcp@dns-test-service.dns-8654 jessie_udp@dns-test-service.dns-8654.svc jessie_tcp@dns-test-service.dns-8654.svc jessie_udp@_http._tcp.dns-test-service.dns-8654.svc jessie_tcp@_http._tcp.dns-test-service.dns-8654.svc]

  I1112 13:45:11.054348 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 13:45:11.063007 22 dns_common.go:495] Pod client logs for querier: 
  I1112 13:45:11.073032 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 13:45:16.024759 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.026168 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.027350 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.028434 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.029488 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.030556 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.031631 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.032659 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.037997 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.039028 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.040118 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.041191 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.042267 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.043253 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.044336 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.045354 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:16.049407 22 dns_common.go:489] Lookups using dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8654 wheezy_tcp@dns-test-service.dns-8654 wheezy_udp@dns-test-service.dns-8654.svc wheezy_tcp@dns-test-service.dns-8654.svc wheezy_udp@_http._tcp.dns-test-service.dns-8654.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8654.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8654 jessie_tcp@dns-test-service.dns-8654 jessie_udp@dns-test-service.dns-8654.svc jessie_tcp@dns-test-service.dns-8654.svc jessie_udp@_http._tcp.dns-test-service.dns-8654.svc jessie_tcp@_http._tcp.dns-test-service.dns-8654.svc]

  I1112 13:45:16.051559 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 13:45:16.054608 22 dns_common.go:495] Pod client logs for querier: 
  I1112 13:45:16.064619 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 13:45:21.024320 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.025673 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.026848 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.027901 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.029039 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.030091 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.031126 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.032175 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.037362 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.038354 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.039380 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.040375 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8654 from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.041341 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.042402 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.043459 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.044502 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8654.svc from pod dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279: the server could not find the requested resource (get pods dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279)
  I1112 13:45:21.048650 22 dns_common.go:489] Lookups using dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8654 wheezy_tcp@dns-test-service.dns-8654 wheezy_udp@dns-test-service.dns-8654.svc wheezy_tcp@dns-test-service.dns-8654.svc wheezy_udp@_http._tcp.dns-test-service.dns-8654.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8654.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8654 jessie_tcp@dns-test-service.dns-8654 jessie_udp@dns-test-service.dns-8654.svc jessie_tcp@dns-test-service.dns-8654.svc jessie_udp@_http._tcp.dns-test-service.dns-8654.svc jessie_tcp@_http._tcp.dns-test-service.dns-8654.svc]

  I1112 13:45:21.050841 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 13:45:21.059024 22 dns_common.go:495] Pod client logs for querier: 
  I1112 13:45:21.069039 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 13:45:26.049582 22 dns_common.go:527] DNS probes using dns-8654/dns-test-f153e2ca-9708-45db-85c3-13dbdc6a3279 succeeded

  STEP: deleting the pod @ 11/12/24 13:45:26.049
  STEP: deleting the test service @ 11/12/24 13:45:26.064
  STEP: deleting the test headless service @ 11/12/24 13:45:26.082
  I1112 13:45:26.089407 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8654" for this suite. @ 11/12/24 13:45:26.093
• [39.137 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 11/12/24 13:45:26.106
  I1112 13:45:26.106295 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 13:45:26.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:45:26.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:45:26.119
  STEP: Setting up server cert @ 11/12/24 13:45:26.214
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 13:45:26.473
  STEP: Deploying the webhook pod @ 11/12/24 13:45:26.477
  STEP: Wait for the deployment to be ready @ 11/12/24 13:45:26.482
  I1112 13:45:26.484518 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I1112 13:45:28.489868 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:45:30.492677 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:45:32.492583 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 45, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 11/12/24 13:45:34.491
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 13:45:34.496
  I1112 13:45:35.497222 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 11/12/24 13:45:35.5
  STEP: create a namespace for the webhook @ 11/12/24 13:45:35.508
  STEP: create a configmap should be unconditionally rejected by the webhook @ 11/12/24 13:45:35.514
  I1112 13:45:35.542415 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7624" for this suite. @ 11/12/24 13:45:35.544
  STEP: Destroying namespace "webhook-markers-1128" for this suite. @ 11/12/24 13:45:35.548
  STEP: Destroying namespace "fail-closed-namespace-7412" for this suite. @ 11/12/24 13:45:35.55
• [9.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 11/12/24 13:45:35.553
  I1112 13:45:35.553851 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename job @ 11/12/24 13:45:35.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:45:35.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:45:35.618
  STEP: Creating a job @ 11/12/24 13:45:35.62
  STEP: Ensuring active pods == parallelism @ 11/12/24 13:45:35.622
  STEP: Orphaning one of the Job's Pods @ 11/12/24 13:45:37.625
  I1112 13:45:38.133592 22 pod_client.go:173] Successfully updated pod "adopt-release-cclxc"
  STEP: Checking that the Job readopts the Pod @ 11/12/24 13:45:38.133
  STEP: Removing the labels from the Job's Pod @ 11/12/24 13:45:40.137
  I1112 13:45:40.643246 22 pod_client.go:173] Successfully updated pod "adopt-release-cclxc"
  STEP: Checking that the Job releases the Pod @ 11/12/24 13:45:40.643
  I1112 13:45:42.647336 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-734" for this suite. @ 11/12/24 13:45:42.648
• [7.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 11/12/24 13:45:42.651
  I1112 13:45:42.651725 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename gc @ 11/12/24 13:45:42.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:45:42.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:45:42.658
  STEP: create the rc @ 11/12/24 13:45:42.749
  W1112 13:45:42.753482      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/12/24 13:45:48.757
  STEP: wait for the rc to be deleted @ 11/12/24 13:45:48.772
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 11/12/24 13:45:53.777
  STEP: Gathering metrics @ 11/12/24 13:46:23.783
  W1112 13:46:23.785968      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1112 13:46:23.785992 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1112 13:46:23.786050 22 delete.go:95] Deleting pod "simpletest.rc-22fvp" in namespace "gc-1537"
  I1112 13:46:23.791912 22 delete.go:95] Deleting pod "simpletest.rc-27926" in namespace "gc-1537"
  I1112 13:46:23.796473 22 delete.go:95] Deleting pod "simpletest.rc-2srpq" in namespace "gc-1537"
  I1112 13:46:23.801248 22 delete.go:95] Deleting pod "simpletest.rc-2tjpk" in namespace "gc-1537"
  I1112 13:46:23.807299 22 delete.go:95] Deleting pod "simpletest.rc-2v6mk" in namespace "gc-1537"
  I1112 13:46:23.812286 22 delete.go:95] Deleting pod "simpletest.rc-2vfm7" in namespace "gc-1537"
  I1112 13:46:23.818009 22 delete.go:95] Deleting pod "simpletest.rc-46pzw" in namespace "gc-1537"
  I1112 13:46:23.821601 22 delete.go:95] Deleting pod "simpletest.rc-49rxz" in namespace "gc-1537"
  I1112 13:46:23.828165 22 delete.go:95] Deleting pod "simpletest.rc-4g2bt" in namespace "gc-1537"
  I1112 13:46:23.833783 22 delete.go:95] Deleting pod "simpletest.rc-4hxtk" in namespace "gc-1537"
  I1112 13:46:23.838295 22 delete.go:95] Deleting pod "simpletest.rc-4n8sz" in namespace "gc-1537"
  I1112 13:46:23.843661 22 delete.go:95] Deleting pod "simpletest.rc-4q7v5" in namespace "gc-1537"
  I1112 13:46:23.849423 22 delete.go:95] Deleting pod "simpletest.rc-54lgz" in namespace "gc-1537"
  I1112 13:46:23.854747 22 delete.go:95] Deleting pod "simpletest.rc-5hqvd" in namespace "gc-1537"
  I1112 13:46:23.860969 22 delete.go:95] Deleting pod "simpletest.rc-5rldx" in namespace "gc-1537"
  I1112 13:46:23.877090 22 delete.go:95] Deleting pod "simpletest.rc-67tb2" in namespace "gc-1537"
  I1112 13:46:23.888982 22 delete.go:95] Deleting pod "simpletest.rc-6fmkv" in namespace "gc-1537"
  I1112 13:46:23.897359 22 delete.go:95] Deleting pod "simpletest.rc-6x8gk" in namespace "gc-1537"
  I1112 13:46:23.903468 22 delete.go:95] Deleting pod "simpletest.rc-7clfk" in namespace "gc-1537"
  I1112 13:46:23.910606 22 delete.go:95] Deleting pod "simpletest.rc-7qw9t" in namespace "gc-1537"
  I1112 13:46:23.927272 22 delete.go:95] Deleting pod "simpletest.rc-8p6bf" in namespace "gc-1537"
  I1112 13:46:23.934817 22 delete.go:95] Deleting pod "simpletest.rc-8vkbk" in namespace "gc-1537"
  I1112 13:46:23.941985 22 delete.go:95] Deleting pod "simpletest.rc-95qrx" in namespace "gc-1537"
  I1112 13:46:23.963972 22 delete.go:95] Deleting pod "simpletest.rc-999zp" in namespace "gc-1537"
  I1112 13:46:23.972831 22 delete.go:95] Deleting pod "simpletest.rc-9bpp4" in namespace "gc-1537"
  I1112 13:46:23.982777 22 delete.go:95] Deleting pod "simpletest.rc-9dwns" in namespace "gc-1537"
  I1112 13:46:23.990579 22 delete.go:95] Deleting pod "simpletest.rc-9nz9s" in namespace "gc-1537"
  I1112 13:46:24.004595 22 delete.go:95] Deleting pod "simpletest.rc-b7xsq" in namespace "gc-1537"
  I1112 13:46:24.022178 22 delete.go:95] Deleting pod "simpletest.rc-bnlmt" in namespace "gc-1537"
  I1112 13:46:24.040245 22 delete.go:95] Deleting pod "simpletest.rc-bxfk9" in namespace "gc-1537"
  I1112 13:46:24.049571 22 delete.go:95] Deleting pod "simpletest.rc-c88bw" in namespace "gc-1537"
  I1112 13:46:24.061204 22 delete.go:95] Deleting pod "simpletest.rc-cjln6" in namespace "gc-1537"
  I1112 13:46:24.075011 22 delete.go:95] Deleting pod "simpletest.rc-cjnss" in namespace "gc-1537"
  I1112 13:46:24.080992 22 delete.go:95] Deleting pod "simpletest.rc-ct7vh" in namespace "gc-1537"
  I1112 13:46:24.102953 22 delete.go:95] Deleting pod "simpletest.rc-dj8tq" in namespace "gc-1537"
  I1112 13:46:24.123517 22 delete.go:95] Deleting pod "simpletest.rc-djhm8" in namespace "gc-1537"
  I1112 13:46:24.134858 22 delete.go:95] Deleting pod "simpletest.rc-dlf9l" in namespace "gc-1537"
  I1112 13:46:24.145750 22 delete.go:95] Deleting pod "simpletest.rc-dz8gc" in namespace "gc-1537"
  I1112 13:46:24.154362 22 delete.go:95] Deleting pod "simpletest.rc-f9sx8" in namespace "gc-1537"
  I1112 13:46:24.165423 22 delete.go:95] Deleting pod "simpletest.rc-fcjnj" in namespace "gc-1537"
  I1112 13:46:24.178502 22 delete.go:95] Deleting pod "simpletest.rc-fk28n" in namespace "gc-1537"
  I1112 13:46:24.190494 22 delete.go:95] Deleting pod "simpletest.rc-fw9mz" in namespace "gc-1537"
  I1112 13:46:24.199885 22 delete.go:95] Deleting pod "simpletest.rc-fzd2n" in namespace "gc-1537"
  I1112 13:46:24.214862 22 delete.go:95] Deleting pod "simpletest.rc-g7fqt" in namespace "gc-1537"
  I1112 13:46:24.227748 22 delete.go:95] Deleting pod "simpletest.rc-ghw4t" in namespace "gc-1537"
  I1112 13:46:24.242492 22 delete.go:95] Deleting pod "simpletest.rc-gs9lh" in namespace "gc-1537"
  I1112 13:46:24.251378 22 delete.go:95] Deleting pod "simpletest.rc-gs9wn" in namespace "gc-1537"
  I1112 13:46:24.262640 22 delete.go:95] Deleting pod "simpletest.rc-h8bmn" in namespace "gc-1537"
  I1112 13:46:24.282024 22 delete.go:95] Deleting pod "simpletest.rc-hp89q" in namespace "gc-1537"
  I1112 13:46:24.305118 22 delete.go:95] Deleting pod "simpletest.rc-hr6c2" in namespace "gc-1537"
  I1112 13:46:24.338956 22 delete.go:95] Deleting pod "simpletest.rc-j5jv5" in namespace "gc-1537"
  I1112 13:46:24.367933 22 delete.go:95] Deleting pod "simpletest.rc-jbvgv" in namespace "gc-1537"
  I1112 13:46:24.383491 22 delete.go:95] Deleting pod "simpletest.rc-jjcpd" in namespace "gc-1537"
  I1112 13:46:24.397025 22 delete.go:95] Deleting pod "simpletest.rc-jshp4" in namespace "gc-1537"
  I1112 13:46:24.415543 22 delete.go:95] Deleting pod "simpletest.rc-k8smz" in namespace "gc-1537"
  I1112 13:46:24.425802 22 delete.go:95] Deleting pod "simpletest.rc-krfpt" in namespace "gc-1537"
  I1112 13:46:24.453858 22 delete.go:95] Deleting pod "simpletest.rc-kw25b" in namespace "gc-1537"
  I1112 13:46:24.466012 22 delete.go:95] Deleting pod "simpletest.rc-l6x8t" in namespace "gc-1537"
  I1112 13:46:24.478051 22 delete.go:95] Deleting pod "simpletest.rc-lk5f2" in namespace "gc-1537"
  I1112 13:46:24.490383 22 delete.go:95] Deleting pod "simpletest.rc-ln98d" in namespace "gc-1537"
  I1112 13:46:24.504881 22 delete.go:95] Deleting pod "simpletest.rc-mw9nb" in namespace "gc-1537"
  I1112 13:46:24.512149 22 delete.go:95] Deleting pod "simpletest.rc-mxcrm" in namespace "gc-1537"
  I1112 13:46:24.519214 22 delete.go:95] Deleting pod "simpletest.rc-n29m5" in namespace "gc-1537"
  I1112 13:46:24.551523 22 delete.go:95] Deleting pod "simpletest.rc-n72ms" in namespace "gc-1537"
  I1112 13:46:24.594610 22 delete.go:95] Deleting pod "simpletest.rc-n8rpk" in namespace "gc-1537"
  I1112 13:46:24.639022 22 delete.go:95] Deleting pod "simpletest.rc-p29fb" in namespace "gc-1537"
  I1112 13:46:24.685754 22 delete.go:95] Deleting pod "simpletest.rc-p7b2k" in namespace "gc-1537"
  I1112 13:46:24.745268 22 delete.go:95] Deleting pod "simpletest.rc-pfhg6" in namespace "gc-1537"
  I1112 13:46:24.793463 22 delete.go:95] Deleting pod "simpletest.rc-prhn8" in namespace "gc-1537"
  I1112 13:46:24.840221 22 delete.go:95] Deleting pod "simpletest.rc-q868d" in namespace "gc-1537"
  I1112 13:46:24.886036 22 delete.go:95] Deleting pod "simpletest.rc-q9jcp" in namespace "gc-1537"
  I1112 13:46:24.937158 22 delete.go:95] Deleting pod "simpletest.rc-qqtml" in namespace "gc-1537"
  I1112 13:46:24.992534 22 delete.go:95] Deleting pod "simpletest.rc-rfvrz" in namespace "gc-1537"
  I1112 13:46:25.045227 22 delete.go:95] Deleting pod "simpletest.rc-rlvlh" in namespace "gc-1537"
  I1112 13:46:25.104763 22 delete.go:95] Deleting pod "simpletest.rc-s4ml6" in namespace "gc-1537"
  I1112 13:46:25.162245 22 delete.go:95] Deleting pod "simpletest.rc-sbtnd" in namespace "gc-1537"
  I1112 13:46:25.197129 22 delete.go:95] Deleting pod "simpletest.rc-sdqdq" in namespace "gc-1537"
  I1112 13:46:25.244343 22 delete.go:95] Deleting pod "simpletest.rc-sxx8j" in namespace "gc-1537"
  I1112 13:46:25.304236 22 delete.go:95] Deleting pod "simpletest.rc-t9895" in namespace "gc-1537"
  I1112 13:46:25.376344 22 delete.go:95] Deleting pod "simpletest.rc-tn8p6" in namespace "gc-1537"
  I1112 13:46:25.388280 22 delete.go:95] Deleting pod "simpletest.rc-tx8tc" in namespace "gc-1537"
  I1112 13:46:25.450216 22 delete.go:95] Deleting pod "simpletest.rc-v2brp" in namespace "gc-1537"
  I1112 13:46:25.492640 22 delete.go:95] Deleting pod "simpletest.rc-v2rlr" in namespace "gc-1537"
  I1112 13:46:25.540432 22 delete.go:95] Deleting pod "simpletest.rc-v6xmj" in namespace "gc-1537"
  I1112 13:46:25.595571 22 delete.go:95] Deleting pod "simpletest.rc-vgjr6" in namespace "gc-1537"
  I1112 13:46:25.637208 22 delete.go:95] Deleting pod "simpletest.rc-vmb2g" in namespace "gc-1537"
  I1112 13:46:25.689905 22 delete.go:95] Deleting pod "simpletest.rc-w62nh" in namespace "gc-1537"
  I1112 13:46:25.737408 22 delete.go:95] Deleting pod "simpletest.rc-w9dkn" in namespace "gc-1537"
  I1112 13:46:25.787774 22 delete.go:95] Deleting pod "simpletest.rc-wc7dv" in namespace "gc-1537"
  I1112 13:46:25.835309 22 delete.go:95] Deleting pod "simpletest.rc-xctq6" in namespace "gc-1537"
  I1112 13:46:25.896711 22 delete.go:95] Deleting pod "simpletest.rc-xfgpl" in namespace "gc-1537"
  I1112 13:46:25.938699 22 delete.go:95] Deleting pod "simpletest.rc-xq7vs" in namespace "gc-1537"
  I1112 13:46:26.008226 22 delete.go:95] Deleting pod "simpletest.rc-xtf7p" in namespace "gc-1537"
  I1112 13:46:26.039696 22 delete.go:95] Deleting pod "simpletest.rc-xzfs2" in namespace "gc-1537"
  I1112 13:46:26.095368 22 delete.go:95] Deleting pod "simpletest.rc-z7rx6" in namespace "gc-1537"
  I1112 13:46:26.144790 22 delete.go:95] Deleting pod "simpletest.rc-zcdnv" in namespace "gc-1537"
  I1112 13:46:26.206457 22 delete.go:95] Deleting pod "simpletest.rc-zg24s" in namespace "gc-1537"
  I1112 13:46:26.244421 22 delete.go:95] Deleting pod "simpletest.rc-zk8d7" in namespace "gc-1537"
  I1112 13:46:26.311590 22 delete.go:95] Deleting pod "simpletest.rc-zkjsv" in namespace "gc-1537"
  I1112 13:46:26.339974 22 delete.go:95] Deleting pod "simpletest.rc-zx5fd" in namespace "gc-1537"
  I1112 13:46:26.396402 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1537" for this suite. @ 11/12/24 13:46:26.435
• [43.831 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 11/12/24 13:46:26.483
  I1112 13:46:26.483718 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename subpath @ 11/12/24 13:46:26.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:46:26.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:46:26.519
  STEP: Setting up data @ 11/12/24 13:46:26.53
  STEP: Creating pod pod-subpath-test-secret-fvm9 @ 11/12/24 13:46:26.542
  STEP: Creating a pod to test atomic-volume-subpath @ 11/12/24 13:46:26.542
  STEP: Saw pod success @ 11/12/24 13:46:48.579
  I1112 13:46:48.580667 22 output.go:196] Trying to get logs from node worker02 pod pod-subpath-test-secret-fvm9 container test-container-subpath-secret-fvm9: <nil>
  STEP: delete the pod @ 11/12/24 13:46:48.583
  STEP: Deleting pod pod-subpath-test-secret-fvm9 @ 11/12/24 13:46:48.589
  I1112 13:46:48.589124 22 delete.go:62] Deleting pod "pod-subpath-test-secret-fvm9" in namespace "subpath-8920"
  I1112 13:46:48.590112 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8920" for this suite. @ 11/12/24 13:46:48.591
• [22.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 11/12/24 13:46:48.593
  I1112 13:46:48.593814 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 13:46:48.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:46:48.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:46:48.601
  STEP: Creating configMap with name configmap-test-upd-b02d7498-8b9f-4b9f-b048-9bd3c0ba4502 @ 11/12/24 13:46:48.692
  STEP: Creating the pod @ 11/12/24 13:46:48.694
  STEP: Updating configmap configmap-test-upd-b02d7498-8b9f-4b9f-b048-9bd3c0ba4502 @ 11/12/24 13:46:50.717
  STEP: waiting to observe update in volume @ 11/12/24 13:46:50.719
  I1112 13:48:06.874421 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3917" for this suite. @ 11/12/24 13:48:06.876
• [78.285 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 11/12/24 13:48:06.879
  I1112 13:48:06.879193 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 13:48:06.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:48:06.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:48:06.887
  STEP: creating an Endpoint @ 11/12/24 13:48:06.89
  STEP: waiting for available Endpoint @ 11/12/24 13:48:06.892
  STEP: listing all Endpoints @ 11/12/24 13:48:06.892
  STEP: updating the Endpoint @ 11/12/24 13:48:06.893
  STEP: fetching the Endpoint @ 11/12/24 13:48:06.895
  STEP: patching the Endpoint @ 11/12/24 13:48:06.896
  STEP: fetching the Endpoint @ 11/12/24 13:48:06.9
  STEP: deleting the Endpoint by Collection @ 11/12/24 13:48:06.901
  STEP: waiting for Endpoint deletion @ 11/12/24 13:48:06.903
  STEP: fetching the Endpoint @ 11/12/24 13:48:06.904
  I1112 13:48:06.905238 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7257" for this suite. @ 11/12/24 13:48:06.977
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 11/12/24 13:48:06.98
  I1112 13:48:06.980256 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 13:48:06.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:48:06.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:48:06.989
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/12/24 13:48:06.99
  STEP: Saw pod success @ 11/12/24 13:48:11
  I1112 13:48:11.001279 22 output.go:196] Trying to get logs from node worker02 pod pod-68ee7bb9-cb1b-4a76-9747-4c0699ce73e1 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 13:48:11.003
  I1112 13:48:11.009365 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9840" for this suite. @ 11/12/24 13:48:11.01
• [4.033 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 11/12/24 13:48:11.013
  I1112 13:48:11.013078 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 13:48:11.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:48:11.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:48:11.02
  STEP: Creating a ResourceQuota with terminating scope @ 11/12/24 13:48:11.021
  STEP: Ensuring ResourceQuota status is calculated @ 11/12/24 13:48:11.023
  STEP: Creating a ResourceQuota with not terminating scope @ 11/12/24 13:48:13.025
  STEP: Ensuring ResourceQuota status is calculated @ 11/12/24 13:48:13.027
  STEP: Creating a long running pod @ 11/12/24 13:48:15.029
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 11/12/24 13:48:15.036
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 11/12/24 13:48:17.038
  STEP: Deleting the pod @ 11/12/24 13:48:19.04
  STEP: Ensuring resource quota status released the pod usage @ 11/12/24 13:48:19.046
  STEP: Creating a terminating pod @ 11/12/24 13:48:21.048
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 11/12/24 13:48:21.054
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 11/12/24 13:48:23.056
  STEP: Deleting the pod @ 11/12/24 13:48:25.058
  STEP: Ensuring resource quota status released the pod usage @ 11/12/24 13:48:25.063
  I1112 13:48:27.065161 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7651" for this suite. @ 11/12/24 13:48:27.066
• [16.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 11/12/24 13:48:27.069
  I1112 13:48:27.069301 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename svcaccounts @ 11/12/24 13:48:27.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:48:27.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:48:27.077
  I1112 13:48:27.085702 22 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1112 13:48:27.085786 22 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1112 13:48:27.087850 22 service_accounts.go:253] created pod pod-service-account-mountsa
  I1112 13:48:27.087868 22 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1112 13:48:27.090136 22 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1112 13:48:27.090159 22 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1112 13:48:27.093668 22 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1112 13:48:27.093687 22 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1112 13:48:27.096754 22 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1112 13:48:27.096778 22 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1112 13:48:27.100231 22 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1112 13:48:27.100323 22 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1112 13:48:27.103253 22 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1112 13:48:27.103332 22 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1112 13:48:27.110149 22 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1112 13:48:27.110170 22 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1112 13:48:27.122954 22 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1112 13:48:27.122999 22 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1112 13:48:27.123100 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2106" for this suite. @ 11/12/24 13:48:27.171
• [0.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 11/12/24 13:48:27.181
  I1112 13:48:27.181712 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename runtimeclass @ 11/12/24 13:48:27.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:48:27.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:48:27.198
  STEP: getting /apis @ 11/12/24 13:48:27.2
  STEP: getting /apis/node.k8s.io @ 11/12/24 13:48:27.212
  STEP: getting /apis/node.k8s.io/v1 @ 11/12/24 13:48:27.214
  STEP: creating @ 11/12/24 13:48:27.215
  STEP: watching @ 11/12/24 13:48:27.224
  I1112 13:48:27.224499 22 runtimeclass.go:275] starting watch
  STEP: getting @ 11/12/24 13:48:27.227
  STEP: listing @ 11/12/24 13:48:27.231
  STEP: patching @ 11/12/24 13:48:27.232
  STEP: updating @ 11/12/24 13:48:27.238
  I1112 13:48:27.243038 22 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 11/12/24 13:48:27.243
  STEP: deleting a collection @ 11/12/24 13:48:27.251
  I1112 13:48:27.267938 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3101" for this suite. @ 11/12/24 13:48:27.27
• [0.093 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 11/12/24 13:48:27.274
  I1112 13:48:27.274445 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename gc @ 11/12/24 13:48:27.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:48:27.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:48:27.295
  STEP: create the rc1 @ 11/12/24 13:48:27.371
  STEP: create the rc2 @ 11/12/24 13:48:27.375
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 11/12/24 13:48:33.382
  STEP: delete the rc simpletest-rc-to-be-deleted @ 11/12/24 13:48:33.599
  STEP: wait for the rc to be deleted @ 11/12/24 13:48:33.601
  I1112 13:48:38.606712 22 garbage_collector.go:762] 70 pods remaining
  I1112 13:48:38.606744 22 garbage_collector.go:769] 70 pods has nil DeletionTimestamp
  I1112 13:48:38.606751 22 garbage_collector.go:770] 
  STEP: Gathering metrics @ 11/12/24 13:48:43.607
  W1112 13:48:43.609237      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1112 13:48:43.609260 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1112 13:48:43.609319 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2842g" in namespace "gc-2738"
  I1112 13:48:43.613805 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4c66p" in namespace "gc-2738"
  I1112 13:48:43.622168 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4nt8f" in namespace "gc-2738"
  I1112 13:48:43.628533 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4x25l" in namespace "gc-2738"
  I1112 13:48:43.633498 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ksnf" in namespace "gc-2738"
  I1112 13:48:43.640191 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5npbr" in namespace "gc-2738"
  I1112 13:48:43.646656 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5s6ss" in namespace "gc-2738"
  I1112 13:48:43.652436 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5wfjh" in namespace "gc-2738"
  I1112 13:48:43.656686 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64xvz" in namespace "gc-2738"
  I1112 13:48:43.662586 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69jhl" in namespace "gc-2738"
  I1112 13:48:43.668746 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6stfj" in namespace "gc-2738"
  I1112 13:48:43.675693 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-729vb" in namespace "gc-2738"
  I1112 13:48:43.683714 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7whrd" in namespace "gc-2738"
  I1112 13:48:43.689955 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8cp2d" in namespace "gc-2738"
  I1112 13:48:43.706266 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8smx6" in namespace "gc-2738"
  I1112 13:48:43.714067 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-97ddj" in namespace "gc-2738"
  I1112 13:48:43.719761 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-986zk" in namespace "gc-2738"
  I1112 13:48:43.726043 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9cvcs" in namespace "gc-2738"
  I1112 13:48:43.732631 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fkl9" in namespace "gc-2738"
  I1112 13:48:43.740888 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9h5bb" in namespace "gc-2738"
  I1112 13:48:43.747984 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9rql5" in namespace "gc-2738"
  I1112 13:48:43.759734 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9x954" in namespace "gc-2738"
  I1112 13:48:43.765759 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9xqps" in namespace "gc-2738"
  I1112 13:48:43.775284 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b22fn" in namespace "gc-2738"
  I1112 13:48:43.785020 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b2842" in namespace "gc-2738"
  I1112 13:48:43.792793 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bgxh8" in namespace "gc-2738"
  I1112 13:48:43.801745 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-br6qj" in namespace "gc-2738"
  I1112 13:48:43.816023 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-brnn4" in namespace "gc-2738"
  I1112 13:48:43.822596 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c76h8" in namespace "gc-2738"
  I1112 13:48:43.833564 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cvbzg" in namespace "gc-2738"
  I1112 13:48:43.840867 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cwhmk" in namespace "gc-2738"
  I1112 13:48:43.874139 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dmr6v" in namespace "gc-2738"
  I1112 13:48:43.890148 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dp5k4" in namespace "gc-2738"
  I1112 13:48:43.913546 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dqg9j" in namespace "gc-2738"
  I1112 13:48:43.921658 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dwdxw" in namespace "gc-2738"
  I1112 13:48:43.936440 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dwnfz" in namespace "gc-2738"
  I1112 13:48:44.000902 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dzn46" in namespace "gc-2738"
  I1112 13:48:44.011626 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f82lm" in namespace "gc-2738"
  I1112 13:48:44.031106 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fg5l4" in namespace "gc-2738"
  I1112 13:48:44.041412 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-flzx8" in namespace "gc-2738"
  I1112 13:48:44.052112 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g4h89" in namespace "gc-2738"
  I1112 13:48:44.068903 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g66wp" in namespace "gc-2738"
  I1112 13:48:44.092030 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g9bls" in namespace "gc-2738"
  I1112 13:48:44.103863 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gjqpq" in namespace "gc-2738"
  I1112 13:48:44.116133 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gkntk" in namespace "gc-2738"
  I1112 13:48:44.148018 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gstnn" in namespace "gc-2738"
  I1112 13:48:44.174528 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gw4h2" in namespace "gc-2738"
  I1112 13:48:44.191031 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hdxgh" in namespace "gc-2738"
  I1112 13:48:44.206616 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hnhbk" in namespace "gc-2738"
  I1112 13:48:44.218504 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hzklk" in namespace "gc-2738"
  I1112 13:48:44.227068 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2738" for this suite. @ 11/12/24 13:48:44.229
• [16.959 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 11/12/24 13:48:44.234
  I1112 13:48:44.234196 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename disruption @ 11/12/24 13:48:44.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:48:44.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:48:44.26
  STEP: Creating a kubernetes client @ 11/12/24 13:48:44.262
  I1112 13:48:44.262193 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename disruption-2 @ 11/12/24 13:48:44.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:48:44.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:48:44.35
  STEP: Waiting for the pdb to be processed @ 11/12/24 13:48:44.37
  STEP: Waiting for the pdb to be processed @ 11/12/24 13:48:46.375
  STEP: Waiting for the pdb to be processed @ 11/12/24 13:48:48.38
  STEP: listing a collection of PDBs across all namespaces @ 11/12/24 13:48:50.382
  STEP: listing a collection of PDBs in namespace disruption-6840 @ 11/12/24 13:48:50.383
  STEP: deleting a collection of PDBs @ 11/12/24 13:48:50.384
  STEP: Waiting for the PDB collection to be deleted @ 11/12/24 13:48:50.388
  I1112 13:48:50.389971 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7445" for this suite. @ 11/12/24 13:48:50.391
  I1112 13:48:50.393561 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6840" for this suite. @ 11/12/24 13:48:50.492
• [6.260 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 11/12/24 13:48:50.494
  I1112 13:48:50.494796 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 13:48:50.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:48:50.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:48:50.503
  STEP: creating service in namespace services-5309 @ 11/12/24 13:48:50.504
  STEP: creating service affinity-clusterip-transition in namespace services-5309 @ 11/12/24 13:48:50.504
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5309 @ 11/12/24 13:48:50.508
  I1112 13:48:50.513051      22 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5309, replica count: 3
  I1112 13:48:53.564665      22 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 13:48:53.567324 22 resource.go:361] Creating new exec pod
  I1112 13:48:56.573330 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5309 exec execpod-affinity5hmft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1112 13:48:56.652571 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1112 13:48:56.652608 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 13:48:56.652670 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5309 exec execpod-affinity5hmft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.188.183 80'
  I1112 13:48:56.729821 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.188.183 80\nConnection to 10.68.188.183 80 port [tcp/http] succeeded!\n"
  I1112 13:48:56.729858 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 13:48:56.733338 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5309 exec execpod-affinity5hmft -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.188.183:80/ ; done'
  I1112 13:48:56.855224 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n"
  I1112 13:48:56.855266 22 builder.go:147] stdout: "\naffinity-clusterip-transition-bqjjh\naffinity-clusterip-transition-4f7k8\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-bqjjh\naffinity-clusterip-transition-4f7k8\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-bqjjh\naffinity-clusterip-transition-4f7k8\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-bqjjh\naffinity-clusterip-transition-4f7k8\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-bqjjh\naffinity-clusterip-transition-4f7k8\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-bqjjh"
  I1112 13:48:56.855284 22 service.go:242] Received response from host: affinity-clusterip-transition-bqjjh
  I1112 13:48:56.855294 22 service.go:242] Received response from host: affinity-clusterip-transition-4f7k8
  I1112 13:48:56.855302 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.855310 22 service.go:242] Received response from host: affinity-clusterip-transition-bqjjh
  I1112 13:48:56.855319 22 service.go:242] Received response from host: affinity-clusterip-transition-4f7k8
  I1112 13:48:56.855331 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.855338 22 service.go:242] Received response from host: affinity-clusterip-transition-bqjjh
  I1112 13:48:56.855343 22 service.go:242] Received response from host: affinity-clusterip-transition-4f7k8
  I1112 13:48:56.855349 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.855356 22 service.go:242] Received response from host: affinity-clusterip-transition-bqjjh
  I1112 13:48:56.855364 22 service.go:242] Received response from host: affinity-clusterip-transition-4f7k8
  I1112 13:48:56.855371 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.855380 22 service.go:242] Received response from host: affinity-clusterip-transition-bqjjh
  I1112 13:48:56.855387 22 service.go:242] Received response from host: affinity-clusterip-transition-4f7k8
  I1112 13:48:56.855393 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.855398 22 service.go:242] Received response from host: affinity-clusterip-transition-bqjjh
  I1112 13:48:56.859673 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5309 exec execpod-affinity5hmft -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.188.183:80/ ; done'
  I1112 13:48:56.985040 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.188.183:80/\n"
  I1112 13:48:56.985081 22 builder.go:147] stdout: "\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg\naffinity-clusterip-transition-hk8cg"
  I1112 13:48:56.985098 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985108 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985113 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985125 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985132 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985141 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985146 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985153 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985163 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985174 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985183 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985193 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985199 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985207 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985213 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985221 22 service.go:242] Received response from host: affinity-clusterip-transition-hk8cg
  I1112 13:48:56.985283 22 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5309, will wait for the garbage collector to delete the pods @ 11/12/24 13:48:56.991
  I1112 13:48:57.044793 22 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 2.102251ms
  I1112 13:48:57.145839 22 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.036403ms
  I1112 13:49:00.054975 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5309" for this suite. @ 11/12/24 13:49:00.056
• [9.566 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 11/12/24 13:49:00.061
  I1112 13:49:00.061258 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pod-network-test @ 11/12/24 13:49:00.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:49:00.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:49:00.07
  STEP: Performing setup for networking test in namespace pod-network-test-4723 @ 11/12/24 13:49:00.071
  STEP: creating a selector @ 11/12/24 13:49:00.071
  STEP: Creating the service pods in kubernetes @ 11/12/24 13:49:00.071
  I1112 13:49:00.071914 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/12/24 13:49:12.189
  I1112 13:49:14.196735 22 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1112 13:49:14.196760 22 networking.go:42] Breadth first check of 172.20.241.96 on host 10.255.0.206...
  I1112 13:49:14.197813 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.30.94:9080/dial?request=hostname&protocol=http&host=172.20.241.96&port=8083&tries=1'] Namespace:pod-network-test-4723 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:49:14.197832 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:49:14.198224 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:49:14.198267 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4723/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.30.94%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.241.96%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1112 13:49:14.229946 22 utils.go:356] Waiting for responses: map[]
  I1112 13:49:14.229968 22 utils.go:360] reached 172.20.241.96 after 0/1 tries
  I1112 13:49:14.229976 22 networking.go:42] Breadth first check of 172.20.5.15 on host 10.255.0.207...
  I1112 13:49:14.231040 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.30.94:9080/dial?request=hostname&protocol=http&host=172.20.5.15&port=8083&tries=1'] Namespace:pod-network-test-4723 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:49:14.231058 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:49:14.231388 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:49:14.231429 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4723/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.30.94%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.5.15%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1112 13:49:14.262540 22 utils.go:356] Waiting for responses: map[]
  I1112 13:49:14.262574 22 utils.go:360] reached 172.20.5.15 after 0/1 tries
  I1112 13:49:14.262585 22 networking.go:42] Breadth first check of 172.20.30.92 on host 10.255.0.208...
  I1112 13:49:14.264033 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.30.94:9080/dial?request=hostname&protocol=http&host=172.20.30.92&port=8083&tries=1'] Namespace:pod-network-test-4723 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:49:14.264055 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:49:14.264378 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:49:14.264423 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4723/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.30.94%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.30.92%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1112 13:49:14.292499 22 utils.go:356] Waiting for responses: map[]
  I1112 13:49:14.292534 22 utils.go:360] reached 172.20.30.92 after 0/1 tries
  I1112 13:49:14.292549 22 networking.go:53] Going to retry 0 out of 3 pods....
  I1112 13:49:14.292638 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4723" for this suite. @ 11/12/24 13:49:14.294
• [14.236 seconds]
------------------------------
SSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 11/12/24 13:49:14.296
  I1112 13:49:14.296994 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename csi-storageclass @ 11/12/24 13:49:14.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:49:14.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:49:14.313
  STEP: Creating a StorageClass @ 11/12/24 13:49:14.315
  STEP: Get StorageClass "e2e-gnrxz" @ 11/12/24 13:49:14.317
  STEP: Patching the StorageClass "e2e-gnrxz" @ 11/12/24 13:49:14.318
  STEP: Delete StorageClass "e2e-gnrxz" @ 11/12/24 13:49:14.32
  STEP: Confirm deletion of StorageClass "e2e-gnrxz" @ 11/12/24 13:49:14.322
  STEP: Create a replacement StorageClass @ 11/12/24 13:49:14.323
  STEP: Updating StorageClass "e2e-v2-b9kdm" @ 11/12/24 13:49:14.325
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-b9kdm=updated" @ 11/12/24 13:49:14.328
  STEP: Deleting StorageClass "e2e-v2-b9kdm" via DeleteCollection @ 11/12/24 13:49:14.329
  STEP: Confirm deletion of StorageClass "e2e-v2-b9kdm" @ 11/12/24 13:49:14.331
  I1112 13:49:14.332334 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-5190" for this suite. @ 11/12/24 13:49:14.395
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 11/12/24 13:49:14.397
  I1112 13:49:14.397825 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename taint-multiple-pods @ 11/12/24 13:49:14.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:49:14.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:49:14.413
  I1112 13:49:14.414464 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1112 13:50:14.415235 22 util.go:393] Waiting for terminating namespaces to be deleted...
  I1112 13:50:14.417124 22 taints.go:144] Starting informer...
  STEP: Starting pods... @ 11/12/24 13:50:14.417
  I1112 13:50:14.627200 22 taints.go:463] Pod1 is running on worker01. Tainting Node
  I1112 13:50:16.837786 22 taints.go:471] Pod2 is running on worker01. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/12/24 13:50:16.837
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/12/24 13:50:16.843
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 11/12/24 13:50:16.846
  I1112 13:50:22.917195 22 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I1112 13:50:42.946861 22 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/12/24 13:50:42.952
  I1112 13:50:42.953849 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2750" for this suite. @ 11/12/24 13:50:42.955
• [88.559 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 11/12/24 13:50:42.957
  I1112 13:50:42.957224 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 13:50:42.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:50:42.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:50:42.966
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/12/24 13:50:42.967
  STEP: Saw pod success @ 11/12/24 13:50:46.977
  I1112 13:50:46.978368 22 output.go:196] Trying to get logs from node worker01 pod pod-440e0622-4341-4df7-9b22-af4a28d06de3 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 13:50:46.99
  I1112 13:50:46.996696 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1925" for this suite. @ 11/12/24 13:50:46.998
• [4.044 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 11/12/24 13:50:47.001
  I1112 13:50:47.001174 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename disruption @ 11/12/24 13:50:47.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:50:47.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:50:47.009
  STEP: creating the pdb @ 11/12/24 13:50:47.01
  STEP: Waiting for the pdb to be processed @ 11/12/24 13:50:47.012
  STEP: updating the pdb @ 11/12/24 13:50:49.014
  STEP: Waiting for the pdb to be processed @ 11/12/24 13:50:49.018
  STEP: patching the pdb @ 11/12/24 13:50:51.02
  STEP: Waiting for the pdb to be processed @ 11/12/24 13:50:51.024
  STEP: Waiting for the pdb to be deleted @ 11/12/24 13:50:53.028
  I1112 13:50:53.029751 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3001" for this suite. @ 11/12/24 13:50:53.031
• [6.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 11/12/24 13:50:53.033
  I1112 13:50:53.033652 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename discovery @ 11/12/24 13:50:53.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:50:53.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:50:53.044
  STEP: Setting up server cert @ 11/12/24 13:50:53.046
  STEP: Requesting APIResourceList from "/api/v1" @ 11/12/24 13:50:53.313
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 11/12/24 13:50:53.314
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 11/12/24 13:50:53.315
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 11/12/24 13:50:53.316
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 11/12/24 13:50:53.316
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 11/12/24 13:50:53.317
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 11/12/24 13:50:53.317
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 11/12/24 13:50:53.317
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 11/12/24 13:50:53.318
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 11/12/24 13:50:53.318
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 11/12/24 13:50:53.319
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 11/12/24 13:50:53.319
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 11/12/24 13:50:53.32
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 11/12/24 13:50:53.32
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 11/12/24 13:50:53.32
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 11/12/24 13:50:53.321
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 11/12/24 13:50:53.321
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 11/12/24 13:50:53.322
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 11/12/24 13:50:53.322
  I1112 13:50:53.323196 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8373" for this suite. @ 11/12/24 13:50:53.324
• [0.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 11/12/24 13:50:53.327
  I1112 13:50:53.327647 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 13:50:53.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:50:53.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:50:53.335
  STEP: Discovering how many secrets are in namespace by default @ 11/12/24 13:50:53.337
  STEP: Counting existing ResourceQuota @ 11/12/24 13:50:58.339
  STEP: Creating a ResourceQuota @ 11/12/24 13:51:03.341
  STEP: Ensuring resource quota status is calculated @ 11/12/24 13:51:03.343
  STEP: Creating a Secret @ 11/12/24 13:51:05.346
  STEP: Ensuring resource quota status captures secret creation @ 11/12/24 13:51:05.351
  STEP: Deleting a secret @ 11/12/24 13:51:07.354
  STEP: Ensuring resource quota status released usage @ 11/12/24 13:51:07.356
  I1112 13:51:09.358794 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9228" for this suite. @ 11/12/24 13:51:09.36
• [16.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 11/12/24 13:51:09.362
  I1112 13:51:09.362845 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 13:51:09.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:51:09.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:51:09.37
  STEP: Creating projection with secret that has name projected-secret-test-bb0c51f5-8f08-480f-832e-c4c7687c97e1 @ 11/12/24 13:51:09.372
  STEP: Creating a pod to test consume secrets @ 11/12/24 13:51:09.374
  STEP: Saw pod success @ 11/12/24 13:51:11.382
  I1112 13:51:11.383500 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-secrets-7665574a-af52-422c-b86e-1fef35333788 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 13:51:11.386
  I1112 13:51:11.392026 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4030" for this suite. @ 11/12/24 13:51:11.393
• [2.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 11/12/24 13:51:11.396
  I1112 13:51:11.396550 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 13:51:11.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:51:11.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:51:11.403
  STEP: Creating a ResourceQuota @ 11/12/24 13:51:11.405
  STEP: Getting a ResourceQuota @ 11/12/24 13:51:11.407
  STEP: Listing all ResourceQuotas with LabelSelector @ 11/12/24 13:51:11.409
  STEP: Patching the ResourceQuota @ 11/12/24 13:51:11.41
  STEP: Deleting a Collection of ResourceQuotas @ 11/12/24 13:51:11.413
  STEP: Verifying the deleted ResourceQuota @ 11/12/24 13:51:11.417
  I1112 13:51:11.418310 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9090" for this suite. @ 11/12/24 13:51:11.494
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 11/12/24 13:51:11.496
  I1112 13:51:11.496834 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 13:51:11.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:51:11.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:51:11.505
  STEP: creating a secret @ 11/12/24 13:51:11.506
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 11/12/24 13:51:11.508
  STEP: patching the secret @ 11/12/24 13:51:11.509
  STEP: deleting the secret using a LabelSelector @ 11/12/24 13:51:11.512
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 11/12/24 13:51:11.515
  I1112 13:51:11.516019 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7694" for this suite. @ 11/12/24 13:51:11.594
• [0.100 seconds]
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 11/12/24 13:51:11.596
  I1112 13:51:11.596909 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 13:51:11.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:51:11.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:51:11.605
  I1112 13:52:11.612695 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2079" for this suite. @ 11/12/24 13:52:11.614
• [60.020 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 11/12/24 13:52:11.616
  I1112 13:52:11.616529 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 13:52:11.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:52:11.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:52:11.624
  STEP: Setting up server cert @ 11/12/24 13:52:11.722
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 13:52:11.834
  STEP: Deploying the webhook pod @ 11/12/24 13:52:11.838
  STEP: Wait for the deployment to be ready @ 11/12/24 13:52:11.843
  I1112 13:52:11.845788 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/12/24 13:52:13.85
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 13:52:13.855
  I1112 13:52:14.855858 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1112 13:52:14.858881 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-32-crds.webhook.example.com via the AdmissionRegistration API @ 11/12/24 13:52:15.365
  STEP: Creating a custom resource while v1 is storage version @ 11/12/24 13:52:15.372
  STEP: Patching Custom Resource Definition to set v2 as storage @ 11/12/24 13:52:17.391
  STEP: Patching the custom resource while v2 is storage version @ 11/12/24 13:52:17.4
  I1112 13:52:17.951413 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1020" for this suite. @ 11/12/24 13:52:17.953
  STEP: Destroying namespace "webhook-markers-2360" for this suite. @ 11/12/24 13:52:17.955
• [6.341 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 11/12/24 13:52:17.957
  I1112 13:52:17.957532 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 11/12/24 13:52:17.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:52:17.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:52:17.965
  STEP: Setting up the test @ 11/12/24 13:52:17.967
  STEP: Creating hostNetwork=false pod @ 11/12/24 13:52:17.967
  STEP: Creating hostNetwork=true pod @ 11/12/24 13:52:19.975
  STEP: Running the test @ 11/12/24 13:52:21.983
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 11/12/24 13:52:21.983
  I1112 13:52:21.983478 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:21.983496 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:21.983855 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:21.983900 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1112 13:52:22.010778 22 exec_util.go:111] Exec stderr: ""
  I1112 13:52:22.010811 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:22.010821 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:22.011166 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:22.011206 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1112 13:52:22.039828 22 exec_util.go:111] Exec stderr: ""
  I1112 13:52:22.039863 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:22.039874 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:22.040211 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:22.040248 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1112 13:52:22.064890 22 exec_util.go:111] Exec stderr: ""
  I1112 13:52:22.064967 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:22.064979 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:22.065339 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:22.065377 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1112 13:52:22.091407 22 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 11/12/24 13:52:22.091
  I1112 13:52:22.091592 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:22.091606 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:22.091895 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:22.091933 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1112 13:52:22.116590 22 exec_util.go:111] Exec stderr: ""
  I1112 13:52:22.116613 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:22.116623 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:22.116917 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:22.116952 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1112 13:52:22.142902 22 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 11/12/24 13:52:22.142
  I1112 13:52:22.142957 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:22.142967 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:22.143305 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:22.143344 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1112 13:52:22.170064 22 exec_util.go:111] Exec stderr: ""
  I1112 13:52:22.170095 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:22.170104 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:22.170443 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:22.170486 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1112 13:52:22.195742 22 exec_util.go:111] Exec stderr: ""
  I1112 13:52:22.195775 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:22.195785 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:22.196149 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:22.196187 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1112 13:52:22.221140 22 exec_util.go:111] Exec stderr: ""
  I1112 13:52:22.221172 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7594 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:22.221196 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:22.221532 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:22.221577 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7594/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1112 13:52:22.249944 22 exec_util.go:111] Exec stderr: ""
  I1112 13:52:22.250048 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7594" for this suite. @ 11/12/24 13:52:22.251
• [4.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 11/12/24 13:52:22.255
  I1112 13:52:22.255045 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/12/24 13:52:22.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:52:22.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:52:22.263
  STEP: create the container to handle the HTTPGet hook request. @ 11/12/24 13:52:22.352
  STEP: create the pod with lifecycle hook @ 11/12/24 13:52:24.361
  STEP: check poststart hook @ 11/12/24 13:52:26.368
  STEP: delete the pod with lifecycle hook @ 11/12/24 13:52:26.371
  I1112 13:52:28.376977 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5284" for this suite. @ 11/12/24 13:52:28.378
• [6.126 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 11/12/24 13:52:28.381
  I1112 13:52:28.381039 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename daemonsets @ 11/12/24 13:52:28.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:52:28.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:52:28.388
  STEP: Creating simple DaemonSet "daemon-set" @ 11/12/24 13:52:28.482
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/12/24 13:52:28.485
  I1112 13:52:28.580734 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:52:28.580759 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:52:29.489962 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:52:29.489988 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:52:30.489941 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:52:30.489971 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:52:31.490081 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:52:31.490108 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:52:32.489136 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:52:32.489161 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:52:33.494967 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:52:33.494991 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:52:34.489580 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:52:34.489604 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:52:35.489754 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1112 13:52:35.489780 22 fixtures.go:130] Node worker02 is running 0 daemon pod, expected 1
  I1112 13:52:36.490116 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1112 13:52:36.490143 22 fixtures.go:130] Node worker02 is running 0 daemon pod, expected 1
  I1112 13:52:37.489646 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1112 13:52:37.489668 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 11/12/24 13:52:37.49
  I1112 13:52:37.589942 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1112 13:52:37.589967 22 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I1112 13:52:38.499158 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1112 13:52:38.499191 22 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I1112 13:52:39.506734 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1112 13:52:39.508020 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/12/24 13:52:39.509
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1934, will wait for the garbage collector to delete the pods @ 11/12/24 13:52:39.509
  I1112 13:52:39.566388 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.554949ms
  I1112 13:52:39.666808 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.41737ms
  I1112 13:52:41.168916 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:52:41.168949 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1112 13:52:41.170427 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9106"},"items":null}

  I1112 13:52:41.171659 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9106"},"items":null}

  I1112 13:52:41.176000 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1934" for this suite. @ 11/12/24 13:52:41.177
• [12.798 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 11/12/24 13:52:41.179
  I1112 13:52:41.179345 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 13:52:41.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:52:41.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:52:41.187
  STEP: Creating projection with secret that has name projected-secret-test-ca889106-8cb1-4759-8bdc-f2c59dbc20c3 @ 11/12/24 13:52:41.188
  STEP: Creating a pod to test consume secrets @ 11/12/24 13:52:41.19
  STEP: Saw pod success @ 11/12/24 13:52:45.199
  I1112 13:52:45.200607 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-secrets-2ed47fcd-e47d-47ff-83ad-a656f4483aef container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 13:52:45.203
  I1112 13:52:45.209004 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9610" for this suite. @ 11/12/24 13:52:45.21
• [4.033 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 11/12/24 13:52:45.212
  I1112 13:52:45.212518 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pod-network-test @ 11/12/24 13:52:45.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:52:45.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:52:45.22
  STEP: Performing setup for networking test in namespace pod-network-test-1415 @ 11/12/24 13:52:45.222
  STEP: creating a selector @ 11/12/24 13:52:45.222
  STEP: Creating the service pods in kubernetes @ 11/12/24 13:52:45.222
  I1112 13:52:45.222209 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/12/24 13:52:57.352
  I1112 13:52:59.365157 22 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1112 13:52:59.365183 22 utils.go:496] Going to poll 172.20.241.100 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1112 13:52:59.366145 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.241.100:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1415 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:59.366160 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:59.366517 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:59.366555 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-1415/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.241.100%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1112 13:52:59.399664 22 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1112 13:52:59.399699 22 utils.go:496] Going to poll 172.20.5.16 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1112 13:52:59.401149 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.5.16:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1415 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:59.401167 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:59.401513 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:59.401559 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-1415/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.5.16%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1112 13:52:59.433075 22 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1112 13:52:59.433102 22 utils.go:496] Going to poll 172.20.30.99 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1112 13:52:59.434405 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.30.99:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1415 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 13:52:59.434421 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:52:59.434779 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 13:52:59.434824 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-1415/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.30.99%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1112 13:52:59.468131 22 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1112 13:52:59.468224 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1415" for this suite. @ 11/12/24 13:52:59.469
• [14.260 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 11/12/24 13:52:59.472
  I1112 13:52:59.472346 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 13:52:59.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:52:59.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:52:59.48
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 13:52:59.482
  STEP: Saw pod success @ 11/12/24 13:53:01.489
  I1112 13:53:01.490585 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-b7257b38-3010-45c8-8d3a-66e9f2d0128f container client-container: <nil>
  STEP: delete the pod @ 11/12/24 13:53:01.492
  I1112 13:53:01.498867 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6248" for this suite. @ 11/12/24 13:53:01.5
• [2.031 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 11/12/24 13:53:01.503
  I1112 13:53:01.503762 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 13:53:01.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:53:01.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:53:01.51
  STEP: creating Agnhost RC @ 11/12/24 13:53:01.512
  I1112 13:53:01.512414 22 kubectl.go:1537] namespace kubectl-6178
  I1112 13:53:01.512476 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-6178 create -f -'
  I1112 13:53:01.599160 22 builder.go:146] stderr: ""
  I1112 13:53:01.599188 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/12/24 13:53:01.599
  I1112 13:53:02.601797 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1112 13:53:02.601832 22 framework.go:733] Found 1 / 1
  I1112 13:53:02.601846 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1112 13:53:02.603063 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1112 13:53:02.603082 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1112 13:53:02.603090 22 kubectl.go:1544] wait on agnhost-primary startup in kubectl-6178 
  I1112 13:53:02.603134 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-6178 logs agnhost-primary-ztc57 agnhost-primary'
  I1112 13:53:02.645577 22 builder.go:146] stderr: ""
  I1112 13:53:02.645613 22 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 11/12/24 13:53:02.645
  I1112 13:53:02.645686 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-6178 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1112 13:53:02.691799 22 builder.go:146] stderr: ""
  I1112 13:53:02.691838 22 builder.go:147] stdout: "service/rm2 exposed\n"
  I1112 13:53:02.695022 22 utils.go:1203] Service rm2 in namespace kubectl-6178 found.
  STEP: exposing service @ 11/12/24 13:53:04.697
  I1112 13:53:04.697637 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-6178 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1112 13:53:04.745018 22 builder.go:146] stderr: ""
  I1112 13:53:04.745062 22 builder.go:147] stdout: "service/rm3 exposed\n"
  I1112 13:53:04.746884 22 utils.go:1203] Service rm3 in namespace kubectl-6178 found.
  I1112 13:53:06.750497 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6178" for this suite. @ 11/12/24 13:53:06.751
• [5.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 11/12/24 13:53:06.754
  I1112 13:53:06.754248 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 13:53:06.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:53:06.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:53:06.762
  STEP: creating the pod @ 11/12/24 13:53:06.764
  STEP: submitting the pod to kubernetes @ 11/12/24 13:53:06.764
  STEP: verifying the pod is in kubernetes @ 11/12/24 13:53:08.772
  STEP: updating the pod @ 11/12/24 13:53:08.773
  I1112 13:53:09.279045 22 pod_client.go:173] Successfully updated pod "pod-update-35039baa-be55-4441-8257-04f19cd97821"
  STEP: verifying the updated pod is in kubernetes @ 11/12/24 13:53:09.28
  I1112 13:53:09.353937 22 pods.go:391] Pod update OK
  I1112 13:53:09.354041 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4861" for this suite. @ 11/12/24 13:53:09.355
• [2.604 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 11/12/24 13:53:09.358
  I1112 13:53:09.358229 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/12/24 13:53:09.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:53:09.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:53:09.369
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 11/12/24 13:53:09.37
  I1112 13:53:09.371090 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:53:10.620868 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:53:15.301100 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3699" for this suite. @ 11/12/24 13:53:15.304
• [5.949 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 11/12/24 13:53:15.307
  I1112 13:53:15.307482 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename aggregator @ 11/12/24 13:53:15.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:53:15.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:53:15.316
  I1112 13:53:15.317819 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Registering the sample API server. @ 11/12/24 13:53:15.318
  I1112 13:53:15.613352 22 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1112 13:53:15.624276 22 deployment.go:222] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I1112 13:53:17.643885 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:19.645519 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:21.647118 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:23.645727 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:25.646531 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:27.647038 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:29.646203 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:31.646843 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:33.647621 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:35.646368 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:37.647122 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:39.645765 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:41.645620 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1112 13:53:43.754900 22 aggregator.go:755] Waited 105.895041ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 11/12/24 13:53:43.772
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 11/12/24 13:53:43.774
  STEP: List APIServices @ 11/12/24 13:53:43.777
  I1112 13:53:43.779652 22 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 11/12/24 13:53:43.779
  I1112 13:53:43.785677 22 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 11/12/24 13:53:43.785
  I1112 13:53:43.789718 22 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.November, 12, 13, 53, 43, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 11/12/24 13:53:43.789
  I1112 13:53:43.791009 22 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-11-12 13:53:43 +0000 UTC Passed all checks passed}
  I1112 13:53:43.791028 22 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1112 13:53:43.791038 22 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 11/12/24 13:53:43.791
  I1112 13:53:43.795472 22 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1163074924" @ 11/12/24 13:53:43.795
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 11/12/24 13:53:43.8
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 11/12/24 13:53:43.803
  STEP: Patch APIService Status @ 11/12/24 13:53:43.804
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 11/12/24 13:53:43.807
  I1112 13:53:43.808562 22 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-11-12 13:53:43 +0000 UTC Passed all checks passed}
  I1112 13:53:43.808585 22 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1112 13:53:43.808599 22 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1112 13:53:43.808615 22 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 11/12/24 13:53:43.808
  STEP: Confirm that the generated APIService has been deleted @ 11/12/24 13:53:43.812
  I1112 13:53:43.812075 22 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1112 13:53:43.813053 22 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1112 13:53:43.813071 22 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1112 13:53:43.860874 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6845" for this suite. @ 11/12/24 13:53:43.862
• [28.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 11/12/24 13:53:43.865
  I1112 13:53:43.865190 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename daemonsets @ 11/12/24 13:53:43.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:53:43.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:53:43.873
  STEP: Creating simple DaemonSet "daemon-set" @ 11/12/24 13:53:43.966
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/12/24 13:53:43.968
  I1112 13:53:44.065033 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:53:44.065053 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:53:44.972637 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 13:53:44.972663 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:53:45.972969 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1112 13:53:45.972994 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 11/12/24 13:53:45.974
  STEP: DeleteCollection of the DaemonSets @ 11/12/24 13:53:45.975
  STEP: Verify that ReplicaSets have been deleted @ 11/12/24 13:53:45.977
  I1112 13:53:45.981886 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9674"},"items":null}

  I1112 13:53:45.986526 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9677"},"items":[{"metadata":{"name":"daemon-set-5zj6n","generateName":"daemon-set-","namespace":"daemonsets-2358","uid":"fa191ae8-8499-4208-97cd-ef419ce131e4","resourceVersion":"9677","creationTimestamp":"2024-11-12T13:53:43Z","deletionTimestamp":"2024-11-12T13:54:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b4e0e384-cdcf-412c-8d39-6aa179508605","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-12T13:53:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b4e0e384-cdcf-412c-8d39-6aa179508605\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-12T13:53:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.30.88\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-cfc7n","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-cfc7n","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:43Z"}],"hostIP":"10.255.0.208","hostIPs":[{"ip":"10.255.0.208"}],"podIP":"172.20.30.88","podIPs":[{"ip":"172.20.30.88"}],"startTime":"2024-11-12T13:53:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-12T13:53:44Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4a0a3a0ad9f4c8cfeefb4fef141a584261197a447510f341f44835d06151c815","started":true,"volumeMounts":[{"name":"kube-api-access-cfc7n","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kll7h","generateName":"daemon-set-","namespace":"daemonsets-2358","uid":"bddb2f1b-59e5-48cd-9491-cad75b62e665","resourceVersion":"9675","creationTimestamp":"2024-11-12T13:53:43Z","deletionTimestamp":"2024-11-12T13:54:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b4e0e384-cdcf-412c-8d39-6aa179508605","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-12T13:53:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b4e0e384-cdcf-412c-8d39-6aa179508605\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-12T13:53:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.241.83\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lq9jh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lq9jh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"master01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["master01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:43Z"}],"hostIP":"10.255.0.206","hostIPs":[{"ip":"10.255.0.206"}],"podIP":"172.20.241.83","podIPs":[{"ip":"172.20.241.83"}],"startTime":"2024-11-12T13:53:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-12T13:53:44Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://e2e867323f3478cc47973f657c10d4906ad4987d00ed841732cfaf6ccff2f097","started":true,"volumeMounts":[{"name":"kube-api-access-lq9jh","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-zv24z","generateName":"daemon-set-","namespace":"daemonsets-2358","uid":"a5224b83-4aa1-4eba-9c2b-63beb43a0e11","resourceVersion":"9669","creationTimestamp":"2024-11-12T13:53:43Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b4e0e384-cdcf-412c-8d39-6aa179508605","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-12T13:53:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b4e0e384-cdcf-412c-8d39-6aa179508605\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-12T13:53:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.5.9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fb5w8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-fb5w8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-12T13:53:43Z"}],"hostIP":"10.255.0.207","hostIPs":[{"ip":"10.255.0.207"}],"podIP":"172.20.5.9","podIPs":[{"ip":"172.20.5.9"}],"startTime":"2024-11-12T13:53:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-12T13:53:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f5dfe365061b4b72000249b5e45513be4affe2da020309e9793a5046d50e3f5d","started":true,"volumeMounts":[{"name":"kube-api-access-fb5w8","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1112 13:53:46.076175 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2358" for this suite. @ 11/12/24 13:53:46.077
• [2.215 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 11/12/24 13:53:46.079
  I1112 13:53:46.079895 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename job @ 11/12/24 13:53:46.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:53:46.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:53:46.088
  STEP: Looking for a node to schedule job pod @ 11/12/24 13:53:46.089
  STEP: Creating a job @ 11/12/24 13:53:46.173
  STEP: Ensuring job fails @ 11/12/24 13:53:46.176
  I1112 13:53:50.180382 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7480" for this suite. @ 11/12/24 13:53:50.182
• [4.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 11/12/24 13:53:50.184
  I1112 13:53:50.184653 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 13:53:50.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:53:50.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:53:50.192
  STEP: Creating secret with name secret-test-7605c9cc-df9d-4fbe-b9e6-b86391be1281 @ 11/12/24 13:53:50.194
  STEP: Creating a pod to test consume secrets @ 11/12/24 13:53:50.196
  STEP: Saw pod success @ 11/12/24 13:53:54.205
  I1112 13:53:54.206686 22 output.go:196] Trying to get logs from node worker01 pod pod-secrets-2f01362c-2c44-407a-8f1e-434ecb14d17e container secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 13:53:54.208
  I1112 13:53:54.214887 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9512" for this suite. @ 11/12/24 13:53:54.216
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 11/12/24 13:53:54.218
  I1112 13:53:54.218547 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename chunking @ 11/12/24 13:53:54.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:53:54.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:53:54.226
  STEP: creating a large number of resources @ 11/12/24 13:53:54.228
  STEP: retrieving those results in paged fashion several times @ 11/12/24 13:54:11.922
  I1112 13:54:11.971187 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1112 13:54:12.020905 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1112 13:54:12.071652 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1112 13:54:12.121418 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1112 13:54:12.171281 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1112 13:54:12.221347 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1112 13:54:12.271361 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1112 13:54:12.321273 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1112 13:54:12.371445 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1112 13:54:12.421633 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1112 13:54:12.471745 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1112 13:54:12.521874 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1112 13:54:12.572021 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1112 13:54:12.621060 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1112 13:54:12.671261 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1112 13:54:12.721273 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1112 13:54:12.771182 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1112 13:54:12.821149 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1112 13:54:12.870931 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1112 13:54:12.921806 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1112 13:54:12.971572 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1112 13:54:13.021441 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1112 13:54:13.071186 22 chunking.go:98] Retrieved 17/17 results with rv 10287 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1112 13:54:13.120892 22 chunking.go:98] Retrieved 9/17 results with rv 10287 and continue 
  I1112 13:54:13.171955 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1112 13:54:13.221620 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1112 13:54:13.271237 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1112 13:54:13.320866 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1112 13:54:13.371736 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1112 13:54:13.421512 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1112 13:54:13.471539 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1112 13:54:13.521373 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1112 13:54:13.571280 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1112 13:54:13.621361 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1112 13:54:13.671288 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1112 13:54:13.721063 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1112 13:54:13.770837 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1112 13:54:13.821555 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1112 13:54:13.871266 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1112 13:54:13.921075 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1112 13:54:13.971169 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1112 13:54:14.021236 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1112 13:54:14.071274 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1112 13:54:14.121352 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1112 13:54:14.171181 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1112 13:54:14.221173 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1112 13:54:14.271276 22 chunking.go:98] Retrieved 17/17 results with rv 10288 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyODgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1112 13:54:14.321259 22 chunking.go:98] Retrieved 9/17 results with rv 10288 and continue 
  I1112 13:54:14.371620 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1112 13:54:14.421776 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1112 13:54:14.472100 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1112 13:54:14.521142 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1112 13:54:14.571066 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1112 13:54:14.620962 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1112 13:54:14.671914 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1112 13:54:14.721840 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1112 13:54:14.771835 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1112 13:54:14.821896 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1112 13:54:14.871910 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1112 13:54:14.921817 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1112 13:54:14.971898 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1112 13:54:15.021943 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1112 13:54:15.072000 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1112 13:54:15.120765 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1112 13:54:15.171801 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1112 13:54:15.222826 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1112 13:54:15.271702 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1112 13:54:15.321803 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1112 13:54:15.371949 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1112 13:54:15.428424 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1112 13:54:15.471588 22 chunking.go:98] Retrieved 17/17 results with rv 10290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAyOTAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1112 13:54:15.521625 22 chunking.go:98] Retrieved 9/17 results with rv 10290 and continue 
  STEP: retrieving those results all at once @ 11/12/24 13:54:15.521
  I1112 13:54:15.574932 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2050" for this suite. @ 11/12/24 13:54:15.622
• [21.453 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 11/12/24 13:54:15.672
  I1112 13:54:15.672122 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename svcaccounts @ 11/12/24 13:54:15.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:54:15.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:54:15.679
  STEP: reading a file in the container @ 11/12/24 13:54:17.69
  I1112 13:54:17.690716 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4373 pod-service-account-9eb825fd-670d-4d79-97b0-3c2cf6dcb319 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 11/12/24 13:54:17.758
  I1112 13:54:17.758779 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4373 pod-service-account-9eb825fd-670d-4d79-97b0-3c2cf6dcb319 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 11/12/24 13:54:17.825
  I1112 13:54:17.825645 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4373 pod-service-account-9eb825fd-670d-4d79-97b0-3c2cf6dcb319 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1112 13:54:17.892980 22 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-4373"
  I1112 13:54:17.894215 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4373" for this suite. @ 11/12/24 13:54:17.895
• [2.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 11/12/24 13:54:17.898
  I1112 13:54:17.898244 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 13:54:17.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:54:17.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:54:17.906
  STEP: Creating secret with name projected-secret-test-da739297-d849-4efc-856f-98a65ca10cd2 @ 11/12/24 13:54:17.908
  STEP: Creating a pod to test consume secrets @ 11/12/24 13:54:17.91
  STEP: Saw pod success @ 11/12/24 13:54:21.92
  I1112 13:54:21.921549 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-secrets-443c80f1-d8b7-4938-86df-2169bea0671e container secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 13:54:21.924
  I1112 13:54:21.930002 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6679" for this suite. @ 11/12/24 13:54:21.931
• [4.035 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 11/12/24 13:54:21.933
  I1112 13:54:21.933438 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename subpath @ 11/12/24 13:54:21.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:54:21.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:54:21.941
  STEP: Setting up data @ 11/12/24 13:54:21.942
  STEP: Creating pod pod-subpath-test-configmap-lt2b @ 11/12/24 13:54:21.946
  STEP: Creating a pod to test atomic-volume-subpath @ 11/12/24 13:54:21.946
  STEP: Saw pod success @ 11/12/24 13:54:45.98
  I1112 13:54:45.982237 22 output.go:196] Trying to get logs from node worker01 pod pod-subpath-test-configmap-lt2b container test-container-subpath-configmap-lt2b: <nil>
  STEP: delete the pod @ 11/12/24 13:54:45.984
  STEP: Deleting pod pod-subpath-test-configmap-lt2b @ 11/12/24 13:54:45.991
  I1112 13:54:45.991022 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-lt2b" in namespace "subpath-2065"
  I1112 13:54:45.992006 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2065" for this suite. @ 11/12/24 13:54:45.993
• [24.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 11/12/24 13:54:45.995
  I1112 13:54:45.995606 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 13:54:45.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:54:46.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:54:46.003
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/12/24 13:54:46.005
  STEP: Saw pod success @ 11/12/24 13:54:50.014
  I1112 13:54:50.015574 22 output.go:196] Trying to get logs from node worker01 pod pod-e1d5583e-61d8-4a99-8b9d-995ed9db2dea container test-container: <nil>
  STEP: delete the pod @ 11/12/24 13:54:50.018
  I1112 13:54:50.023234 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9752" for this suite. @ 11/12/24 13:54:50.024
• [4.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 11/12/24 13:54:50.027
  I1112 13:54:50.027134 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename init-container @ 11/12/24 13:54:50.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:54:50.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:54:50.035
  STEP: creating the pod @ 11/12/24 13:54:50.036
  I1112 13:54:50.036572 22 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I1112 13:55:28.413278 22 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-73a52fbb-d13d-49d5-ba77-5360b243504e", GenerateName:"", Namespace:"init-container-3637", SelfLink:"", UID:"b429604e-913f-4176-a6a5-e601a0289aa2", ResourceVersion:"10985", Generation:0, CreationTimestamp:time.Date(2024, time.November, 12, 13, 54, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"36565137"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 12, 13, 54, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bb37e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 12, 13, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bb3818), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-5rq6k", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004a08260), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5rq6k", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5rq6k", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5rq6k", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003717a18), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker01", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0042c7a00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003717aa0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003717ac0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003717ac8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003717acc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003ddbe10), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 12, 13, 54, 51, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 12, 13, 54, 50, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 12, 13, 54, 50, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 12, 13, 54, 50, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 12, 13, 54, 50, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.255.0.207", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.255.0.207"}}, PodIP:"172.20.5.40", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.20.5.40"}}, StartTime:time.Date(2024, time.November, 12, 13, 54, 50, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00041e620)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00041e690)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://9b20958d4e061c6613174473ea607e4dce54cb82489a60ef49324f42020863ff", Started:(*bool)(0xc003717b7a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-5rq6k", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003ddbe30)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004a082c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003717b8d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-5rq6k", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003ddbe40)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004a082a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc003717b4f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-5rq6k", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003ddbe20)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1112 13:55:28.413421 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3637" for this suite. @ 11/12/24 13:55:28.415
• [38.390 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 11/12/24 13:55:28.417
  I1112 13:55:28.417524 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubelet-test @ 11/12/24 13:55:28.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:55:28.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:55:28.426
  I1112 13:55:28.435326 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9977" for this suite. @ 11/12/24 13:55:28.516
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 11/12/24 13:55:28.518
  I1112 13:55:28.518994 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename subpath @ 11/12/24 13:55:28.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:55:28.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:55:28.527
  STEP: Setting up data @ 11/12/24 13:55:28.529
  STEP: Creating pod pod-subpath-test-projected-hzc7 @ 11/12/24 13:55:28.533
  STEP: Creating a pod to test atomic-volume-subpath @ 11/12/24 13:55:28.533
  STEP: Saw pod success @ 11/12/24 13:55:50.565
  I1112 13:55:50.566205 22 output.go:196] Trying to get logs from node worker01 pod pod-subpath-test-projected-hzc7 container test-container-subpath-projected-hzc7: <nil>
  STEP: delete the pod @ 11/12/24 13:55:50.569
  STEP: Deleting pod pod-subpath-test-projected-hzc7 @ 11/12/24 13:55:50.574
  I1112 13:55:50.574700 22 delete.go:62] Deleting pod "pod-subpath-test-projected-hzc7" in namespace "subpath-6945"
  I1112 13:55:50.575718 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6945" for this suite. @ 11/12/24 13:55:50.577
• [22.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 11/12/24 13:55:50.579
  I1112 13:55:50.579507 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename cronjob @ 11/12/24 13:55:50.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:55:50.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:55:50.586
  STEP: Creating a cronjob @ 11/12/24 13:55:50.588
  STEP: Ensuring more than one job is running at a time @ 11/12/24 13:55:50.59
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 11/12/24 13:57:00.592
  STEP: Removing cronjob @ 11/12/24 13:57:00.595
  I1112 13:57:00.597744 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1221" for this suite. @ 11/12/24 13:57:00.599
• [70.022 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 11/12/24 13:57:00.602
  I1112 13:57:00.602098 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 13:57:00.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:00.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:00.621
  STEP: Creating configMap with name projected-configmap-test-volume-3582b1f6-9d19-4442-ae68-9f27061615d1 @ 11/12/24 13:57:00.623
  STEP: Creating a pod to test consume configMaps @ 11/12/24 13:57:00.626
  STEP: Saw pod success @ 11/12/24 13:57:04.638
  I1112 13:57:04.639553 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-configmaps-b8044cf0-090a-4554-96f4-f73fbd94e010 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 13:57:04.641
  I1112 13:57:04.648261 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5649" for this suite. @ 11/12/24 13:57:04.649
• [4.050 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 11/12/24 13:57:04.651
  I1112 13:57:04.651753 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 13:57:04.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:04.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:04.66
  STEP: creating Agnhost RC @ 11/12/24 13:57:04.661
  I1112 13:57:04.661992 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5488 create -f -'
  I1112 13:57:04.737687 22 builder.go:146] stderr: ""
  I1112 13:57:04.737721 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/12/24 13:57:04.737
  I1112 13:57:05.760874 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1112 13:57:05.760902 22 framework.go:733] Found 1 / 1
  I1112 13:57:05.760918 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 11/12/24 13:57:05.76
  I1112 13:57:05.762206 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1112 13:57:05.762230 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1112 13:57:05.762270 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5488 patch pod agnhost-primary-xvp6w -p {"metadata":{"annotations":{"x":"y"}}}'
  I1112 13:57:05.806378 22 builder.go:146] stderr: ""
  I1112 13:57:05.806409 22 builder.go:147] stdout: "pod/agnhost-primary-xvp6w patched\n"
  STEP: checking annotations @ 11/12/24 13:57:05.806
  I1112 13:57:05.807764 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1112 13:57:05.807785 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1112 13:57:05.807873 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5488" for this suite. @ 11/12/24 13:57:05.809
• [1.160 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 11/12/24 13:57:05.811
  I1112 13:57:05.811925 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 13:57:05.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:05.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:05.819
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 13:57:05.82
  STEP: Saw pod success @ 11/12/24 13:57:07.827
  I1112 13:57:07.828723 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-4645a538-9773-4a40-a41b-98f9e231a737 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 13:57:07.831
  I1112 13:57:07.836980 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9171" for this suite. @ 11/12/24 13:57:07.838
• [2.028 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 11/12/24 13:57:07.84
  I1112 13:57:07.840482 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename disruption @ 11/12/24 13:57:07.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:07.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:07.848
  STEP: Creating a pdb that targets all three pods in a test replica set @ 11/12/24 13:57:07.85
  STEP: Waiting for the pdb to be processed @ 11/12/24 13:57:07.852
  STEP: First trying to evict a pod which shouldn't be evictable @ 11/12/24 13:57:09.855
  STEP: Waiting for all pods to be running @ 11/12/24 13:57:09.855
  I1112 13:57:09.871435 22 disruption.go:680] pods: 1 < 3
  STEP: locating a running pod @ 11/12/24 13:57:11.857
  STEP: Updating the pdb to allow a pod to be evicted @ 11/12/24 13:57:11.86
  STEP: Waiting for the pdb to be processed @ 11/12/24 13:57:11.863
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/12/24 13:57:13.866
  STEP: Waiting for all pods to be running @ 11/12/24 13:57:13.866
  STEP: Waiting for the pdb to observed all healthy pods @ 11/12/24 13:57:13.868
  STEP: Patching the pdb to disallow a pod to be evicted @ 11/12/24 13:57:13.878
  STEP: Waiting for the pdb to be processed @ 11/12/24 13:57:13.89
  STEP: Waiting for all pods to be running @ 11/12/24 13:57:15.892
  STEP: locating a running pod @ 11/12/24 13:57:15.894
  STEP: Deleting the pdb to allow a pod to be evicted @ 11/12/24 13:57:15.897
  STEP: Waiting for the pdb to be deleted @ 11/12/24 13:57:15.899
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/12/24 13:57:15.9
  STEP: Waiting for all pods to be running @ 11/12/24 13:57:15.9
  I1112 13:57:16.002170 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1371" for this suite. @ 11/12/24 13:57:16.004
• [8.167 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 11/12/24 13:57:16.008
  I1112 13:57:16.008197 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-pred @ 11/12/24 13:57:16.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:16.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:16.019
  I1112 13:57:16.020898 22 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1112 13:57:16.106202 22 util.go:393] Waiting for terminating namespaces to be deleted...
  I1112 13:57:16.107597 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node master01 before test
  I1112 13:57:16.109294 22 predicates.go:957] rs-x4p7k from disruption-1371 started at 2024-11-12 13:57:09 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.109311 22 predicates.go:959] 	Container donothing ready: true, restart count 0
  I1112 13:57:16.109317 22 predicates.go:957] calico-node-bvtmn from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.109323 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 13:57:16.109331 22 predicates.go:957] dashboard-metrics-scraper-58cf467b87-mmsz8 from kube-system started at 2024-11-12 13:37:25 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.109337 22 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1112 13:57:16.109345 22 predicates.go:957] metrics-server-7cfd7b768f-dtznx from kube-system started at 2024-11-12 13:37:23 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.109358 22 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1112 13:57:16.109366 22 predicates.go:957] node-local-dns-wthbq from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.109403 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 13:57:16.109412 22 predicates.go:957] sonobuoy-e2e-job-0ac2a22d6a0f487f from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 13:57:16.109421 22 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1112 13:57:16.109429 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 13:57:16.109437 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-zvth6 from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 13:57:16.109442 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 13:57:16.109449 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1112 13:57:16.109459 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I1112 13:57:16.110839 22 predicates.go:957] concurrent-28856996-n9trw from cronjob-1221 started at 2024-11-12 13:56:00 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.110853 22 predicates.go:959] 	Container c ready: true, restart count 0
  I1112 13:57:16.110860 22 predicates.go:957] concurrent-28856997-xt4fd from cronjob-1221 started at 2024-11-12 13:57:00 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.110866 22 predicates.go:959] 	Container c ready: true, restart count 0
  I1112 13:57:16.110875 22 predicates.go:957] rs-ldpn4 from disruption-1371 started at 2024-11-12 13:57:13 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.110888 22 predicates.go:959] 	Container donothing ready: true, restart count 0
  I1112 13:57:16.110898 22 predicates.go:957] calico-node-m54sf from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.110905 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 13:57:16.110913 22 predicates.go:957] node-local-dns-2b6xg from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.110920 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 13:57:16.110927 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-fbw97 from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 13:57:16.110934 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 13:57:16.110941 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1112 13:57:16.110966 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker02 before test
  I1112 13:57:16.112369 22 predicates.go:957] rs-zct56 from disruption-1371 started at 2024-11-12 13:57:09 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.112383 22 predicates.go:959] 	Container donothing ready: true, restart count 0
  I1112 13:57:16.112391 22 predicates.go:957] calico-kube-controllers-555d448d69-zrxx6 from kube-system started at 2024-11-12 13:50:16 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.112398 22 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I1112 13:57:16.112410 22 predicates.go:957] calico-node-k2sjz from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.112417 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 13:57:16.112425 22 predicates.go:957] coredns-66dfb88745-vr48k from kube-system started at 2024-11-12 13:37:21 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.112430 22 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1112 13:57:16.112434 22 predicates.go:957] kubernetes-dashboard-5945846449-wt8g7 from kube-system started at 2024-11-12 13:50:16 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.112438 22 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1112 13:57:16.112443 22 predicates.go:957] node-local-dns-s4fn4 from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.112446 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 13:57:16.112451 22 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-12 13:38:07 +0000 UTC (1 container statuses recorded)
  I1112 13:57:16.112456 22 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1112 13:57:16.112461 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-6z88b from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 13:57:16.112464 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 13:57:16.112471 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 11/12/24 13:57:16.112
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18073d2c47740ecc], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 11/12/24 13:57:22.135
  I1112 13:57:23.135856 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7211" for this suite. @ 11/12/24 13:57:23.137
• [7.132 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 11/12/24 13:57:23.139
  I1112 13:57:23.139846 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename field-validation @ 11/12/24 13:57:23.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:23.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:23.148
  STEP: apply creating a deployment @ 11/12/24 13:57:23.15
  I1112 13:57:23.154613 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2205" for this suite. @ 11/12/24 13:57:23.238
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 11/12/24 13:57:23.24
  I1112 13:57:23.240835 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 13:57:23.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:23.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:23.248
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4909 @ 11/12/24 13:57:23.25
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/12/24 13:57:23.256
  STEP: creating service externalsvc in namespace services-4909 @ 11/12/24 13:57:23.256
  STEP: creating replication controller externalsvc in namespace services-4909 @ 11/12/24 13:57:23.262
  I1112 13:57:23.266361      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4909, replica count: 2
  I1112 13:57:26.317635      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 11/12/24 13:57:26.319
  I1112 13:57:26.326404 22 resource.go:361] Creating new exec pod
  I1112 13:57:28.340438 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-4909 exec execpodx5gpz -- /bin/sh -x -c nslookup nodeport-service.services-4909.svc.cluster.local'
  I1112 13:57:28.429716 22 builder.go:146] stderr: "+ nslookup nodeport-service.services-4909.svc.cluster.local\n"
  I1112 13:57:28.429755 22 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-4909.svc.cluster.local\tcanonical name = externalsvc.services-4909.svc.cluster.local.\nName:\texternalsvc.services-4909.svc.cluster.local\nAddress: 10.68.57.49\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4909, will wait for the garbage collector to delete the pods @ 11/12/24 13:57:28.429
  I1112 13:57:28.484138 22 resources.go:139] Deleting ReplicationController externalsvc took: 2.436953ms
  I1112 13:57:28.584261 22 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.119328ms
  I1112 13:57:31.692704 22 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1112 13:57:31.699850 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4909" for this suite. @ 11/12/24 13:57:31.702
• [8.465 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 11/12/24 13:57:31.705
  I1112 13:57:31.705731 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 13:57:31.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:31.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:31.713
  STEP: Creating configMap with name projected-configmap-test-volume-map-d10dd07e-0e99-44ee-8f9e-5d1490e79f85 @ 11/12/24 13:57:31.718
  STEP: Creating a pod to test consume configMaps @ 11/12/24 13:57:31.72
  STEP: Saw pod success @ 11/12/24 13:57:35.731
  I1112 13:57:35.732725 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-configmaps-6ea573df-41cc-4364-8668-769e9c711207 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 13:57:35.735
  I1112 13:57:35.741228 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5760" for this suite. @ 11/12/24 13:57:35.742
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 11/12/24 13:57:35.745
  I1112 13:57:35.745541 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 13:57:35.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:35.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:35.753
  I1112 13:57:35.755974 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4624" for this suite. @ 11/12/24 13:57:35.843
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 11/12/24 13:57:35.846
  I1112 13:57:35.846930 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 13:57:35.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:35.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:35.854
  STEP: creating service in namespace services-8585 @ 11/12/24 13:57:35.855
  STEP: creating service affinity-clusterip in namespace services-8585 @ 11/12/24 13:57:35.855
  STEP: creating replication controller affinity-clusterip in namespace services-8585 @ 11/12/24 13:57:35.859
  I1112 13:57:35.862421      22 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-8585, replica count: 3
  I1112 13:57:38.913410      22 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 13:57:38.916200 22 resource.go:361] Creating new exec pod
  I1112 13:57:41.921671 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-8585 exec execpod-affinitychhjr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1112 13:57:41.991626 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1112 13:57:41.991659 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 13:57:41.991723 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-8585 exec execpod-affinitychhjr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.235.111 80'
  I1112 13:57:42.060636 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.235.111 80\nConnection to 10.68.235.111 80 port [tcp/http] succeeded!\n"
  I1112 13:57:42.060672 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 13:57:42.060721 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-8585 exec execpod-affinitychhjr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.235.111:80/ ; done'
  I1112 13:57:42.164394 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.235.111:80/\n"
  I1112 13:57:42.164436 22 builder.go:147] stdout: "\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s\naffinity-clusterip-4xl9s"
  I1112 13:57:42.164448 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164456 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164464 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164473 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164481 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164489 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164495 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164500 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164507 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164512 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164517 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164522 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164526 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164531 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164539 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164546 22 service.go:242] Received response from host: affinity-clusterip-4xl9s
  I1112 13:57:42.164603 22 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8585, will wait for the garbage collector to delete the pods @ 11/12/24 13:57:42.169
  I1112 13:57:42.224732 22 resources.go:139] Deleting ReplicationController affinity-clusterip took: 2.61984ms
  I1112 13:57:42.324867 22 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.125483ms
  I1112 13:57:45.533066 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8585" for this suite. @ 11/12/24 13:57:45.534
• [9.691 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 11/12/24 13:57:45.537
  I1112 13:57:45.537667 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pv @ 11/12/24 13:57:45.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:45.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:45.596
  STEP: Creating initial PV and PVC @ 11/12/24 13:57:45.597
  I1112 13:57:45.597902 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5384" @ 11/12/24 13:57:45.606
  STEP: Listing PVCs in namespace "pv-5384" @ 11/12/24 13:57:45.608
  STEP: Patching the PV "pv-5384-4pshm" @ 11/12/24 13:57:45.61
  STEP: Patching the PVC "pvc-p5knk" @ 11/12/24 13:57:45.617
  STEP: Getting PV "pv-5384-4pshm" @ 11/12/24 13:57:45.622
  STEP: Getting PVC "pvc-p5knk" @ 11/12/24 13:57:45.624
  STEP: Deleting PVC "pvc-p5knk" @ 11/12/24 13:57:45.625
  STEP: Confirm deletion of PVC "pvc-p5knk" @ 11/12/24 13:57:45.628
  STEP: Deleting PV "pv-5384-4pshm" @ 11/12/24 13:57:47.638
  STEP: Confirm deletion of PV "pv-5384-4pshm" @ 11/12/24 13:57:47.64
  STEP: Recreating another PV & PVC @ 11/12/24 13:57:49.645
  I1112 13:57:49.645075 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5384-mhppg" @ 11/12/24 13:57:49.65
  STEP: Updating the PVC "pvc-d6kxs" @ 11/12/24 13:57:49.654
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-d6kxs=updated" @ 11/12/24 13:57:49.657
  STEP: Deleting PVC "pvc-d6kxs" via DeleteCollection @ 11/12/24 13:57:49.658
  STEP: Confirm deletion of PVC "pvc-d6kxs" @ 11/12/24 13:57:49.661
  STEP: Deleting PV "pv-5384-mhppg" via DeleteCollection @ 11/12/24 13:57:49.666
  STEP: Confirm deletion of PV "pv-5384-mhppg" @ 11/12/24 13:57:49.747
  I1112 13:57:51.750650 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1112 13:57:51.750672 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-d6kxs"
  I1112 13:57:51.751883 22 pv.go:193] Deleting PersistentVolume "pv-5384-mhppg"
  I1112 13:57:51.752927 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5384" for this suite. @ 11/12/24 13:57:51.754
• [6.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 11/12/24 13:57:51.756
  I1112 13:57:51.756880 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 13:57:51.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:51.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:51.765
  STEP: Creating a pod to test emptydir volume type on node default medium @ 11/12/24 13:57:51.766
  STEP: Saw pod success @ 11/12/24 13:57:53.774
  I1112 13:57:53.775153 22 output.go:196] Trying to get logs from node worker01 pod pod-4131cf24-25ba-4fa8-877c-edffd9ac1302 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 13:57:53.777
  I1112 13:57:53.783185 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5608" for this suite. @ 11/12/24 13:57:53.784
• [2.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 11/12/24 13:57:53.787
  I1112 13:57:53.787120 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename endpointslice @ 11/12/24 13:57:53.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:53.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:53.795
  STEP: getting /apis @ 11/12/24 13:57:53.797
  STEP: getting /apis/discovery.k8s.io @ 11/12/24 13:57:53.798
  STEP: getting /apis/discovery.k8s.iov1 @ 11/12/24 13:57:53.799
  STEP: creating @ 11/12/24 13:57:53.799
  STEP: getting @ 11/12/24 13:57:53.804
  STEP: listing @ 11/12/24 13:57:53.805
  STEP: watching @ 11/12/24 13:57:53.806
  I1112 13:57:53.806833 22 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 11/12/24 13:57:53.807
  STEP: cluster-wide watching @ 11/12/24 13:57:53.808
  I1112 13:57:53.808293 22 endpointslice.go:459] starting watch
  STEP: patching @ 11/12/24 13:57:53.808
  STEP: updating @ 11/12/24 13:57:53.811
  I1112 13:57:53.813979 22 endpointslice.go:482] waiting for watch events with expected annotations
  I1112 13:57:53.814003 22 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 11/12/24 13:57:53.814
  STEP: deleting a collection @ 11/12/24 13:57:53.818
  I1112 13:57:53.823137 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5826" for this suite. @ 11/12/24 13:57:53.885
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 11/12/24 13:57:53.888
  I1112 13:57:53.888020 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 13:57:53.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:53.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:53.896
  STEP: Setting up server cert @ 11/12/24 13:57:53.996
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 13:57:54.198
  STEP: Deploying the webhook pod @ 11/12/24 13:57:54.201
  STEP: Wait for the deployment to be ready @ 11/12/24 13:57:54.206
  I1112 13:57:54.208835 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/12/24 13:57:56.213
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 13:57:56.218
  I1112 13:57:57.218684 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/12/24 13:57:57.223
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/12/24 13:57:57.234
  STEP: Creating a dummy validating-webhook-configuration object @ 11/12/24 13:57:57.242
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 11/12/24 13:57:57.247
  STEP: Creating a dummy mutating-webhook-configuration object @ 11/12/24 13:57:57.249
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 11/12/24 13:57:57.252
  I1112 13:57:57.276413 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2059" for this suite. @ 11/12/24 13:57:57.278
  STEP: Destroying namespace "webhook-markers-2058" for this suite. @ 11/12/24 13:57:57.283
• [3.398 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 11/12/24 13:57:57.286
  I1112 13:57:57.286184 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename runtimeclass @ 11/12/24 13:57:57.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:57.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:57.297
  I1112 13:57:57.302072 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7994" for this suite. @ 11/12/24 13:57:57.379
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 11/12/24 13:57:57.382
  I1112 13:57:57.382443 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename controllerrevisions @ 11/12/24 13:57:57.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:57:57.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:57:57.395
  STEP: Creating DaemonSet "e2e-69ghf-daemon-set" @ 11/12/24 13:57:57.482
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/12/24 13:57:57.485
  I1112 13:57:57.581069 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-69ghf-daemon-set: 0
  I1112 13:57:57.581100 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:57:58.489895 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-69ghf-daemon-set: 1
  I1112 13:57:58.489917 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 13:57:59.490032 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-69ghf-daemon-set: 3
  I1112 13:57:59.490058 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-69ghf-daemon-set
  STEP: Confirm DaemonSet "e2e-69ghf-daemon-set" successfully created with "daemonset-name=e2e-69ghf-daemon-set" label @ 11/12/24 13:57:59.491
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-69ghf-daemon-set" @ 11/12/24 13:57:59.493
  I1112 13:57:59.494519 22 controller_revision.go:162] Located ControllerRevision: "e2e-69ghf-daemon-set-68998c64d4"
  STEP: Patching ControllerRevision "e2e-69ghf-daemon-set-68998c64d4" @ 11/12/24 13:57:59.495
  I1112 13:57:59.498999 22 controller_revision.go:173] e2e-69ghf-daemon-set-68998c64d4 has been patched
  STEP: Create a new ControllerRevision @ 11/12/24 13:57:59.499
  I1112 13:57:59.500962 22 controller_revision.go:191] Created ControllerRevision: e2e-69ghf-daemon-set-79bc87dddb
  STEP: Confirm that there are two ControllerRevisions @ 11/12/24 13:57:59.5
  I1112 13:57:59.501010 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1112 13:57:59.502014 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-69ghf-daemon-set-68998c64d4" @ 11/12/24 13:57:59.502
  STEP: Confirm that there is only one ControllerRevision @ 11/12/24 13:57:59.503
  I1112 13:57:59.503948 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1112 13:57:59.504906 22 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-69ghf-daemon-set-79bc87dddb" @ 11/12/24 13:57:59.505
  I1112 13:57:59.509553 22 controller_revision.go:220] e2e-69ghf-daemon-set-79bc87dddb has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 11/12/24 13:57:59.509
  W1112 13:57:59.517486      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 11/12/24 13:57:59.517
  I1112 13:57:59.517574 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1112 13:57:59.529146 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-69ghf-daemon-set-79bc87dddb=updated" @ 11/12/24 13:57:59.529
  STEP: Confirm that there is only one ControllerRevision @ 11/12/24 13:57:59.534
  I1112 13:57:59.534414 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1112 13:57:59.594877 22 controller_revision.go:265] Found 1 ControllerRevisions
  I1112 13:57:59.595929 22 controller_revision.go:246] ControllerRevision "e2e-69ghf-daemon-set-58d95b7459" has revision 3
  STEP: Deleting DaemonSet "e2e-69ghf-daemon-set" @ 11/12/24 13:57:59.597
  STEP: deleting DaemonSet.extensions e2e-69ghf-daemon-set in namespace controllerrevisions-8133, will wait for the garbage collector to delete the pods @ 11/12/24 13:57:59.597
  I1112 13:57:59.651021 22 resources.go:139] Deleting DaemonSet.extensions e2e-69ghf-daemon-set took: 2.443202ms
  I1112 13:57:59.751361 22 resources.go:163] Terminating DaemonSet.extensions e2e-69ghf-daemon-set pods took: 100.339386ms
  I1112 13:58:00.853888 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-69ghf-daemon-set: 0
  I1112 13:58:00.853915 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-69ghf-daemon-set
  I1112 13:58:00.855292 22 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12229"},"items":null}

  I1112 13:58:00.856317 22 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12229"},"items":null}

  I1112 13:58:00.860761 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8133" for this suite. @ 11/12/24 13:58:00.861
• [3.482 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 11/12/24 13:58:00.865
  I1112 13:58:00.865137 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 13:58:00.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:00.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:00.872
  STEP: Counting existing ResourceQuota @ 11/12/24 13:58:00.874
  STEP: Creating a ResourceQuota @ 11/12/24 13:58:05.876
  STEP: Ensuring resource quota status is calculated @ 11/12/24 13:58:05.879
  STEP: Creating a Service @ 11/12/24 13:58:07.881
  STEP: Creating a NodePort Service @ 11/12/24 13:58:07.889
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 11/12/24 13:58:07.899
  STEP: Ensuring resource quota status captures service creation @ 11/12/24 13:58:07.907
  STEP: Deleting Services @ 11/12/24 13:58:09.909
  STEP: Ensuring resource quota status released usage @ 11/12/24 13:58:09.924
  I1112 13:58:11.926647 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5381" for this suite. @ 11/12/24 13:58:11.928
• [11.066 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 11/12/24 13:58:11.931
  I1112 13:58:11.931418 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 13:58:11.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:11.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:11.939
  STEP: creating service endpoint-test2 in namespace services-7352 @ 11/12/24 13:58:11.941
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7352 to expose endpoints map[] @ 11/12/24 13:58:11.945
  I1112 13:58:11.946860 22 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I1112 13:58:12.950931 22 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7352 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7352 @ 11/12/24 13:58:12.95
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7352 to expose endpoints map[pod1:[80]] @ 11/12/24 13:58:14.958
  I1112 13:58:14.962783 22 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7352 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 11/12/24 13:58:14.962
  I1112 13:58:14.962822 22 resource.go:361] Creating new exec pod
  I1112 13:58:17.969715 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7352 exec execpodg7rcd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1112 13:58:18.038809 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1112 13:58:18.038842 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 13:58:18.038914 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7352 exec execpodg7rcd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.100.142 80'
  I1112 13:58:18.105730 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.100.142 80\nConnection to 10.68.100.142 80 port [tcp/http] succeeded!\n"
  I1112 13:58:18.105765 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7352 @ 11/12/24 13:58:18.105
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7352 to expose endpoints map[pod1:[80] pod2:[80]] @ 11/12/24 13:58:20.114
  I1112 13:58:20.119477 22 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7352 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 11/12/24 13:58:20.119
  I1112 13:58:21.119786 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7352 exec execpodg7rcd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1112 13:58:21.186112 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1112 13:58:21.186145 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 13:58:21.186204 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7352 exec execpodg7rcd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.100.142 80'
  I1112 13:58:21.251816 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.100.142 80\nConnection to 10.68.100.142 80 port [tcp/http] succeeded!\n"
  I1112 13:58:21.251848 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7352 @ 11/12/24 13:58:21.251
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7352 to expose endpoints map[pod2:[80]] @ 11/12/24 13:58:21.258
  I1112 13:58:21.264637 22 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7352 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 11/12/24 13:58:21.264
  I1112 13:58:22.265144 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7352 exec execpodg7rcd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1112 13:58:22.337089 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1112 13:58:22.337121 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 13:58:22.337182 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7352 exec execpodg7rcd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.100.142 80'
  I1112 13:58:22.403739 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.100.142 80\nConnection to 10.68.100.142 80 port [tcp/http] succeeded!\n"
  I1112 13:58:22.403772 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7352 @ 11/12/24 13:58:22.403
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7352 to expose endpoints map[] @ 11/12/24 13:58:22.41
  I1112 13:58:22.419674 22 service.go:4299] successfully validated that service endpoint-test2 in namespace services-7352 exposes endpoints map[]
  I1112 13:58:22.431461 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7352" for this suite. @ 11/12/24 13:58:22.438
• [10.522 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 11/12/24 13:58:22.453
  I1112 13:58:22.453230 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-pred @ 11/12/24 13:58:22.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:22.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:22.476
  I1112 13:58:22.518235 22 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1112 13:58:22.536196 22 util.go:393] Waiting for terminating namespaces to be deleted...
  I1112 13:58:22.537536 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node master01 before test
  I1112 13:58:22.539554 22 predicates.go:957] calico-node-bvtmn from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.539630 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 13:58:22.539684 22 predicates.go:957] dashboard-metrics-scraper-58cf467b87-mmsz8 from kube-system started at 2024-11-12 13:37:25 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.539730 22 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1112 13:58:22.539741 22 predicates.go:957] metrics-server-7cfd7b768f-dtznx from kube-system started at 2024-11-12 13:37:23 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.539749 22 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1112 13:58:22.539758 22 predicates.go:957] node-local-dns-wthbq from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.539766 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 13:58:22.539785 22 predicates.go:957] sonobuoy-e2e-job-0ac2a22d6a0f487f from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 13:58:22.539799 22 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1112 13:58:22.539806 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 13:58:22.539819 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-zvth6 from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 13:58:22.539826 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 13:58:22.539833 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1112 13:58:22.539841 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I1112 13:58:22.541700 22 predicates.go:957] calico-node-m54sf from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.541727 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 13:58:22.541738 22 predicates.go:957] node-local-dns-2b6xg from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.541745 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 13:58:22.541754 22 predicates.go:957] execpodg7rcd from services-7352 started at 2024-11-12 13:58:14 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.541764 22 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I1112 13:58:22.541774 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-fbw97 from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 13:58:22.541781 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 13:58:22.541787 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1112 13:58:22.541795 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker02 before test
  I1112 13:58:22.543535 22 predicates.go:957] calico-kube-controllers-555d448d69-zrxx6 from kube-system started at 2024-11-12 13:50:16 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.543555 22 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I1112 13:58:22.543565 22 predicates.go:957] calico-node-k2sjz from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.543573 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 13:58:22.543581 22 predicates.go:957] coredns-66dfb88745-vr48k from kube-system started at 2024-11-12 13:37:21 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.543588 22 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1112 13:58:22.543596 22 predicates.go:957] kubernetes-dashboard-5945846449-wt8g7 from kube-system started at 2024-11-12 13:50:16 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.543603 22 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1112 13:58:22.543611 22 predicates.go:957] node-local-dns-s4fn4 from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.543617 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 13:58:22.543625 22 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-12 13:38:07 +0000 UTC (1 container statuses recorded)
  I1112 13:58:22.543631 22 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1112 13:58:22.543639 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-6z88b from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 13:58:22.543645 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 13:58:22.543651 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node master01 @ 11/12/24 13:58:22.553
  STEP: verifying the node has the label node worker01 @ 11/12/24 13:58:22.559
  STEP: verifying the node has the label node worker02 @ 11/12/24 13:58:22.566
  I1112 13:58:22.640985 22 predicates.go:372] Pod calico-kube-controllers-555d448d69-zrxx6 requesting resource cpu=0m on Node worker02
  I1112 13:58:22.641011 22 predicates.go:372] Pod calico-node-bvtmn requesting resource cpu=250m on Node master01
  I1112 13:58:22.641017 22 predicates.go:372] Pod calico-node-k2sjz requesting resource cpu=250m on Node worker02
  I1112 13:58:22.641022 22 predicates.go:372] Pod calico-node-m54sf requesting resource cpu=250m on Node worker01
  I1112 13:58:22.641026 22 predicates.go:372] Pod coredns-66dfb88745-vr48k requesting resource cpu=100m on Node worker02
  I1112 13:58:22.641032 22 predicates.go:372] Pod dashboard-metrics-scraper-58cf467b87-mmsz8 requesting resource cpu=0m on Node master01
  I1112 13:58:22.641036 22 predicates.go:372] Pod kubernetes-dashboard-5945846449-wt8g7 requesting resource cpu=0m on Node worker02
  I1112 13:58:22.641041 22 predicates.go:372] Pod metrics-server-7cfd7b768f-dtznx requesting resource cpu=100m on Node master01
  I1112 13:58:22.641045 22 predicates.go:372] Pod node-local-dns-2b6xg requesting resource cpu=25m on Node worker01
  I1112 13:58:22.641049 22 predicates.go:372] Pod node-local-dns-s4fn4 requesting resource cpu=25m on Node worker02
  I1112 13:58:22.641053 22 predicates.go:372] Pod node-local-dns-wthbq requesting resource cpu=25m on Node master01
  I1112 13:58:22.641057 22 predicates.go:372] Pod execpodg7rcd requesting resource cpu=0m on Node worker01
  I1112 13:58:22.641061 22 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node worker02
  I1112 13:58:22.641066 22 predicates.go:372] Pod sonobuoy-e2e-job-0ac2a22d6a0f487f requesting resource cpu=0m on Node master01
  I1112 13:58:22.641070 22 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-6206ccc493704952-6z88b requesting resource cpu=0m on Node worker02
  I1112 13:58:22.641081 22 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-6206ccc493704952-fbw97 requesting resource cpu=0m on Node worker01
  I1112 13:58:22.641086 22 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-6206ccc493704952-zvth6 requesting resource cpu=0m on Node master01
  STEP: Starting Pods to consume most of the cluster CPU. @ 11/12/24 13:58:22.641
  I1112 13:58:22.641109 22 predicates.go:382] Creating a pod which consumes cpu=2537m on Node master01
  I1112 13:58:22.645466 22 predicates.go:382] Creating a pod which consumes cpu=2607m on Node worker01
  I1112 13:58:22.649001 22 predicates.go:382] Creating a pod which consumes cpu=2537m on Node worker02
  STEP: Creating another pod that requires unavailable amount of CPU. @ 11/12/24 13:58:24.661
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3eb026ba-218a-42f1-953d-193f3516bfda.18073d3a5efb43b1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1028/filler-pod-3eb026ba-218a-42f1-953d-193f3516bfda to worker01] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3eb026ba-218a-42f1-953d-193f3516bfda.18073d3a79205ac0], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3eb026ba-218a-42f1-953d-193f3516bfda.18073d3a79b40b84], Reason = [Created], Message = [Created container filler-pod-3eb026ba-218a-42f1-953d-193f3516bfda] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3eb026ba-218a-42f1-953d-193f3516bfda.18073d3a7c348396], Reason = [Started], Message = [Started container filler-pod-3eb026ba-218a-42f1-953d-193f3516bfda] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-952bac71-0137-49ea-868e-9f8a4624b8c6.18073d3a5f3ab5db], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1028/filler-pod-952bac71-0137-49ea-868e-9f8a4624b8c6 to worker02] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-952bac71-0137-49ea-868e-9f8a4624b8c6.18073d3a79e8f3a8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-952bac71-0137-49ea-868e-9f8a4624b8c6.18073d3a7a7b3bae], Reason = [Created], Message = [Created container filler-pod-952bac71-0137-49ea-868e-9f8a4624b8c6] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-952bac71-0137-49ea-868e-9f8a4624b8c6.18073d3a7cf03ca9], Reason = [Started], Message = [Started container filler-pod-952bac71-0137-49ea-868e-9f8a4624b8c6] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b0a490d4-f72c-4624-b486-94618cd5e8f6.18073d3a5e8a895a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1028/filler-pod-b0a490d4-f72c-4624-b486-94618cd5e8f6 to master01] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b0a490d4-f72c-4624-b486-94618cd5e8f6.18073d3a790f79f6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 11/12/24 13:58:24.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b0a490d4-f72c-4624-b486-94618cd5e8f6.18073d3a79b445e9], Reason = [Created], Message = [Created container filler-pod-b0a490d4-f72c-4624-b486-94618cd5e8f6] @ 11/12/24 13:58:24.663
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b0a490d4-f72c-4624-b486-94618cd5e8f6.18073d3a7c6f6328], Reason = [Started], Message = [Started container filler-pod-b0a490d4-f72c-4624-b486-94618cd5e8f6] @ 11/12/24 13:58:24.663
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18073d3ad6ae50c5], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 11/12/24 13:58:24.668
  STEP: removing the label node off the node master01 @ 11/12/24 13:58:25.668
  STEP: verifying the node doesn't have the label node @ 11/12/24 13:58:25.673
  STEP: removing the label node off the node worker01 @ 11/12/24 13:58:25.68
  STEP: verifying the node doesn't have the label node @ 11/12/24 13:58:25.687
  STEP: removing the label node off the node worker02 @ 11/12/24 13:58:25.689
  STEP: verifying the node doesn't have the label node @ 11/12/24 13:58:25.696
  I1112 13:58:25.698283 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1028" for this suite. @ 11/12/24 13:58:25.7
• [3.251 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 11/12/24 13:58:25.703
  I1112 13:58:25.703941 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 13:58:25.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:25.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:25.714
  STEP: creating service nodeport-test with type=NodePort in namespace services-1117 @ 11/12/24 13:58:25.716
  STEP: creating replication controller nodeport-test in namespace services-1117 @ 11/12/24 13:58:25.723
  I1112 13:58:25.727764      22 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1117, replica count: 2
  I1112 13:58:28.778868      22 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 13:58:28.778964 22 resource.go:361] Creating new exec pod
  I1112 13:58:31.789922 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-1117 exec execpodbqqbx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1112 13:58:31.868191 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1112 13:58:31.868222 22 builder.go:147] stdout: "nodeport-test-hpk66"
  I1112 13:58:31.868289 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-1117 exec execpodbqqbx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.137.131 80'
  I1112 13:58:31.935807 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.137.131 80\nConnection to 10.68.137.131 80 port [tcp/http] succeeded!\n"
  I1112 13:58:31.935838 22 builder.go:147] stdout: "nodeport-test-2mbv9"
  I1112 13:58:31.935900 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-1117 exec execpodbqqbx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 32026'
  I1112 13:58:32.003128 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 32026\nConnection to 10.255.0.208 32026 port [tcp/*] succeeded!\n"
  I1112 13:58:32.003166 22 builder.go:147] stdout: "nodeport-test-hpk66"
  I1112 13:58:32.003232 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-1117 exec execpodbqqbx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.206 32026'
  I1112 13:58:32.072610 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.206 32026\nConnection to 10.255.0.206 32026 port [tcp/*] succeeded!\n"
  I1112 13:58:32.072647 22 builder.go:147] stdout: "nodeport-test-hpk66"
  I1112 13:58:32.072751 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1117" for this suite. @ 11/12/24 13:58:32.074
• [6.373 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 11/12/24 13:58:32.077
  I1112 13:58:32.077132 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 13:58:32.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:32.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:32.085
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 13:58:32.086
  STEP: Saw pod success @ 11/12/24 13:58:34.096
  I1112 13:58:34.097567 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-c9c98b82-5a7a-48ee-bf1b-49be231c8540 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 13:58:34.1
  I1112 13:58:34.106150 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3952" for this suite. @ 11/12/24 13:58:34.107
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 11/12/24 13:58:34.109
  I1112 13:58:34.109732 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename conformance-tests @ 11/12/24 13:58:34.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:34.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:34.117
  STEP: Getting node addresses @ 11/12/24 13:58:34.119
  I1112 13:58:34.119361 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1112 13:58:34.208772 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-102" for this suite. @ 11/12/24 13:58:34.209
• [0.103 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 11/12/24 13:58:34.213
  I1112 13:58:34.213061 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 13:58:34.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:34.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:34.22
  STEP: Creating configMap with name projected-configmap-test-volume-fc34ad5e-5d5b-485e-a0db-391e61bd63aa @ 11/12/24 13:58:34.221
  STEP: Creating a pod to test consume configMaps @ 11/12/24 13:58:34.223
  STEP: Saw pod success @ 11/12/24 13:58:38.234
  I1112 13:58:38.235137 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-configmaps-0f50b5fd-7ac8-4a06-b18c-fe9c297c3103 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 13:58:38.237
  I1112 13:58:38.242515 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1822" for this suite. @ 11/12/24 13:58:38.243
• [4.033 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 11/12/24 13:58:38.245
  I1112 13:58:38.245844 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/12/24 13:58:38.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:38.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:38.254
  I1112 13:58:38.255647 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:58:39.264349 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8624" for this suite. @ 11/12/24 13:58:39.265
• [1.022 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 11/12/24 13:58:39.268
  I1112 13:58:39.268060 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/12/24 13:58:39.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:39.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:39.279
  STEP: create the container to handle the HTTPGet hook request. @ 11/12/24 13:58:39.366
  STEP: create the pod with lifecycle hook @ 11/12/24 13:58:41.378
  STEP: check poststart hook @ 11/12/24 13:58:43.385
  STEP: delete the pod with lifecycle hook @ 11/12/24 13:58:43.392
  I1112 13:58:47.400957 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3857" for this suite. @ 11/12/24 13:58:47.402
• [8.137 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 11/12/24 13:58:47.404
  I1112 13:58:47.404812 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 13:58:47.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:47.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:47.414
  STEP: Creating projection with secret that has name secret-emptykey-test-13094bd9-ffae-4673-9100-6d48d5ee0710 @ 11/12/24 13:58:47.415
  I1112 13:58:47.416778 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8047" for this suite. @ 11/12/24 13:58:47.503
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 11/12/24 13:58:47.506
  I1112 13:58:47.506338 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename runtimeclass @ 11/12/24 13:58:47.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:47.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:47.513
  STEP: Deleting RuntimeClass runtimeclass-1620-delete-me @ 11/12/24 13:58:47.516
  STEP: Waiting for the RuntimeClass to disappear @ 11/12/24 13:58:47.518
  I1112 13:58:47.521678 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1620" for this suite. @ 11/12/24 13:58:47.604
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 11/12/24 13:58:47.607
  I1112 13:58:47.607451 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename namespaces @ 11/12/24 13:58:47.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:47.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:47.615
  STEP: Creating a test namespace @ 11/12/24 13:58:47.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:47.715
  STEP: Creating a service in the namespace @ 11/12/24 13:58:47.717
  STEP: Deleting the namespace @ 11/12/24 13:58:47.721
  STEP: Waiting for the namespace to be removed. @ 11/12/24 13:58:47.725
  STEP: Recreating the namespace @ 11/12/24 13:58:53.728
  STEP: Verifying there is no service in the namespace @ 11/12/24 13:58:53.734
  I1112 13:58:53.736269 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4388" for this suite. @ 11/12/24 13:58:53.737
  STEP: Destroying namespace "nsdeletetest-3929" for this suite. @ 11/12/24 13:58:53.74
  I1112 13:58:53.741057 22 framework.go:370] Namespace nsdeletetest-3929 was already deleted
  STEP: Destroying namespace "nsdeletetest-6857" for this suite. @ 11/12/24 13:58:53.741
• [6.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 11/12/24 13:58:53.743
  I1112 13:58:53.743959 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 13:58:53.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:53.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:53.836
  STEP: Setting up server cert @ 11/12/24 13:58:53.935
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 13:58:54.396
  STEP: Deploying the webhook pod @ 11/12/24 13:58:54.4
  STEP: Wait for the deployment to be ready @ 11/12/24 13:58:54.405
  I1112 13:58:54.409501 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/12/24 13:58:56.414
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 13:58:56.418
  I1112 13:58:57.419856 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/12/24 13:58:57.422
  I1112 13:58:57.439278 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8113" for this suite. @ 11/12/24 13:58:57.44
  STEP: Destroying namespace "webhook-markers-5643" for this suite. @ 11/12/24 13:58:57.445
• [3.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 11/12/24 13:58:57.448
  I1112 13:58:57.448696 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename svcaccounts @ 11/12/24 13:58:57.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:58:57.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:58:57.456
  I1112 13:58:57.464808 22 service_accounts.go:618] created pod
  STEP: Saw pod success @ 11/12/24 13:59:01.471
  I1112 13:59:31.471755 22 service_accounts.go:624] polling logs
  I1112 13:59:31.484849 22 service_accounts.go:634] Pod logs: 
  I1112 13:58:57.950767       1 log.go:245] OK: Got token
  I1112 13:58:57.950816       1 log.go:245] validating with in-cluster discovery
  I1112 13:58:57.950986       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1112 13:58:57.951145       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7368:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000eb168), NotBefore:(*jwt.NumericDate)(0xc0000eb250), IssuedAt:(*jwt.NumericDate)(0xc0000eb178), ID:"a68ff291-c39f-4e19-961e-5dc63e8cd2ab"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7368", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"39003acf-af49-42bd-baaa-120b111c8287"}}}
  I1112 13:58:57.957145       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1112 13:58:57.960435       1 log.go:245] OK: Validated signature on JWT
  I1112 13:58:57.960495       1 log.go:245] OK: Got valid claims from token!
  I1112 13:58:57.960511       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7368:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004cca88), NotBefore:(*jwt.NumericDate)(0xc0004ccab0), IssuedAt:(*jwt.NumericDate)(0xc0004cca90), ID:"a68ff291-c39f-4e19-961e-5dc63e8cd2ab"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7368", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"39003acf-af49-42bd-baaa-120b111c8287"}}}

  I1112 13:59:31.484887 22 service_accounts.go:638] completed pod
  I1112 13:59:31.487349 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7368" for this suite. @ 11/12/24 13:59:31.488
• [34.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 11/12/24 13:59:31.495
  I1112 13:59:31.495388 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/12/24 13:59:31.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:59:31.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:59:31.504
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 11/12/24 13:59:31.506
  I1112 13:59:31.506360 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:59:32.664434 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 13:59:37.333833 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5387" for this suite. @ 11/12/24 13:59:37.337
• [5.844 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 11/12/24 13:59:37.339
  I1112 13:59:37.339891 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 13:59:37.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:59:37.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:59:37.348
  I1112 13:59:59.381350 22 container_probe.go:92] Container started at 2024-11-12 13:59:37 +0000 UTC, pod became ready at 2024-11-12 13:59:57 +0000 UTC
  I1112 13:59:59.381462 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4407" for this suite. @ 11/12/24 13:59:59.383
• [22.045 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 11/12/24 13:59:59.385
  I1112 13:59:59.385331 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 13:59:59.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 13:59:59.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 13:59:59.394
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/12/24 13:59:59.395
  STEP: Saw pod success @ 11/12/24 14:00:03.405
  I1112 14:00:03.406647 22 output.go:196] Trying to get logs from node worker01 pod pod-257ecd38-082f-4ed4-9284-98944b91750b container test-container: <nil>
  STEP: delete the pod @ 11/12/24 14:00:03.409
  I1112 14:00:03.415283 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4715" for this suite. @ 11/12/24 14:00:03.416
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 11/12/24 14:00:03.419
  I1112 14:00:03.419352 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename svc-latency @ 11/12/24 14:00:03.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:03.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:03.427
  I1112 14:00:03.428976 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3154 @ 11/12/24 14:00:03.429
  I1112 14:00:03.432932      22 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3154, replica count: 1
  I1112 14:00:04.483158      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 14:00:05.483826      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 14:00:05.590301 22 service_latency.go:356] Created: latency-svc-vkpgz
  I1112 14:00:05.593996 22 service_latency.go:363] Got endpoints: latency-svc-vkpgz [9.156328ms]
  I1112 14:00:05.600437 22 service_latency.go:356] Created: latency-svc-mqdbz
  I1112 14:00:05.602701 22 service_latency.go:363] Got endpoints: latency-svc-mqdbz [8.30402ms]
  I1112 14:00:05.635768 22 service_latency.go:356] Created: latency-svc-8skz2
  I1112 14:00:05.641222 22 service_latency.go:356] Created: latency-svc-nscgx
  I1112 14:00:05.641352 22 service_latency.go:356] Created: latency-svc-j7jx5
  I1112 14:00:05.641412 22 service_latency.go:356] Created: latency-svc-x6jf9
  I1112 14:00:05.641504 22 service_latency.go:356] Created: latency-svc-wq9ks
  I1112 14:00:05.641554 22 service_latency.go:356] Created: latency-svc-5jkq9
  I1112 14:00:05.641612 22 service_latency.go:356] Created: latency-svc-c5db8
  I1112 14:00:05.641710 22 service_latency.go:356] Created: latency-svc-2vtb7
  I1112 14:00:05.641222 22 service_latency.go:356] Created: latency-svc-rxhgg
  I1112 14:00:05.641710 22 service_latency.go:356] Created: latency-svc-cjjx2
  I1112 14:00:05.641821 22 service_latency.go:356] Created: latency-svc-bnx9b
  I1112 14:00:05.641922 22 service_latency.go:356] Created: latency-svc-qfdg4
  I1112 14:00:05.641977 22 service_latency.go:356] Created: latency-svc-lcdvm
  I1112 14:00:05.641838 22 service_latency.go:356] Created: latency-svc-9m4xb
  I1112 14:00:05.642035 22 service_latency.go:356] Created: latency-svc-zw8qd
  I1112 14:00:05.644168 22 service_latency.go:363] Got endpoints: latency-svc-8skz2 [49.006418ms]
  I1112 14:00:05.647990 22 service_latency.go:363] Got endpoints: latency-svc-nscgx [53.49548ms]
  I1112 14:00:05.652906 22 service_latency.go:363] Got endpoints: latency-svc-lcdvm [50.179168ms]
  I1112 14:00:05.653252 22 service_latency.go:363] Got endpoints: latency-svc-j7jx5 [59.057716ms]
  I1112 14:00:05.653544 22 service_latency.go:363] Got endpoints: latency-svc-c5db8 [58.972199ms]
  I1112 14:00:05.653824 22 service_latency.go:363] Got endpoints: latency-svc-qfdg4 [59.093347ms]
  I1112 14:00:05.654042 22 service_latency.go:363] Got endpoints: latency-svc-zw8qd [59.3827ms]
  I1112 14:00:05.655550 22 service_latency.go:356] Created: latency-svc-pk6ms
  I1112 14:00:05.658031 22 service_latency.go:363] Got endpoints: latency-svc-2vtb7 [63.198336ms]
  I1112 14:00:05.659133 22 service_latency.go:356] Created: latency-svc-cmxww
  I1112 14:00:05.660862 22 service_latency.go:363] Got endpoints: latency-svc-wq9ks [65.623499ms]
  I1112 14:00:05.661078 22 service_latency.go:363] Got endpoints: latency-svc-rxhgg [65.994046ms]
  I1112 14:00:05.665320 22 service_latency.go:363] Got endpoints: latency-svc-9m4xb [69.913228ms]
  I1112 14:00:05.665547 22 service_latency.go:363] Got endpoints: latency-svc-cjjx2 [70.621072ms]
  I1112 14:00:05.665724 22 service_latency.go:363] Got endpoints: latency-svc-5jkq9 [70.715955ms]
  I1112 14:00:05.666069 22 service_latency.go:363] Got endpoints: latency-svc-bnx9b [70.754067ms]
  I1112 14:00:05.669198 22 service_latency.go:356] Created: latency-svc-hv7lt
  I1112 14:00:05.669881 22 service_latency.go:363] Got endpoints: latency-svc-x6jf9 [74.390678ms]
  I1112 14:00:05.671217 22 service_latency.go:363] Got endpoints: latency-svc-cmxww [23.199979ms]
  I1112 14:00:05.673101 22 service_latency.go:356] Created: latency-svc-jn7pc
  I1112 14:00:05.674210 22 service_latency.go:363] Got endpoints: latency-svc-pk6ms [30.013025ms]
  I1112 14:00:05.675712 22 service_latency.go:363] Got endpoints: latency-svc-hv7lt [22.771113ms]
  I1112 14:00:05.677692 22 service_latency.go:363] Got endpoints: latency-svc-jn7pc [24.412271ms]
  I1112 14:00:05.678871 22 service_latency.go:356] Created: latency-svc-9qtzk
  I1112 14:00:05.681330 22 service_latency.go:356] Created: latency-svc-5rnjc
  I1112 14:00:05.683228 22 service_latency.go:363] Got endpoints: latency-svc-9qtzk [29.658153ms]
  I1112 14:00:05.686321 22 service_latency.go:363] Got endpoints: latency-svc-5rnjc [32.472212ms]
  I1112 14:00:05.687897 22 service_latency.go:356] Created: latency-svc-zqs4n
  I1112 14:00:05.688449 22 service_latency.go:363] Got endpoints: latency-svc-zqs4n [34.382153ms]
  I1112 14:00:05.693254 22 service_latency.go:356] Created: latency-svc-ssc6g
  I1112 14:00:05.693875 22 service_latency.go:363] Got endpoints: latency-svc-ssc6g [35.812806ms]
  I1112 14:00:05.695221 22 service_latency.go:356] Created: latency-svc-28kd7
  I1112 14:00:05.697523 22 service_latency.go:356] Created: latency-svc-qdsqh
  I1112 14:00:05.697751 22 service_latency.go:363] Got endpoints: latency-svc-28kd7 [36.805538ms]
  I1112 14:00:05.704628 22 service_latency.go:363] Got endpoints: latency-svc-qdsqh [43.487293ms]
  I1112 14:00:05.706087 22 service_latency.go:356] Created: latency-svc-s2t88
  I1112 14:00:05.709756 22 service_latency.go:363] Got endpoints: latency-svc-s2t88 [43.942251ms]
  I1112 14:00:05.740286 22 service_latency.go:356] Created: latency-svc-km44b
  I1112 14:00:05.745807 22 service_latency.go:356] Created: latency-svc-5gvs6
  I1112 14:00:05.745815 22 service_latency.go:356] Created: latency-svc-rxccg
  I1112 14:00:05.747360 22 service_latency.go:356] Created: latency-svc-dn5nz
  I1112 14:00:05.747364 22 service_latency.go:356] Created: latency-svc-7mg6g
  I1112 14:00:05.748979 22 service_latency.go:356] Created: latency-svc-hhjqs
  I1112 14:00:05.749091 22 service_latency.go:356] Created: latency-svc-pjqp4
  I1112 14:00:05.749183 22 service_latency.go:356] Created: latency-svc-48tl6
  I1112 14:00:05.749271 22 service_latency.go:356] Created: latency-svc-jgqxs
  I1112 14:00:05.749356 22 service_latency.go:356] Created: latency-svc-ksbcl
  I1112 14:00:05.749494 22 service_latency.go:356] Created: latency-svc-phk88
  I1112 14:00:05.749579 22 service_latency.go:356] Created: latency-svc-cqhq4
  I1112 14:00:05.749693 22 service_latency.go:356] Created: latency-svc-b5zf8
  I1112 14:00:05.749776 22 service_latency.go:356] Created: latency-svc-96vvl
  I1112 14:00:05.749882 22 service_latency.go:356] Created: latency-svc-5pxwh
  I1112 14:00:05.752851 22 service_latency.go:363] Got endpoints: latency-svc-km44b [87.435458ms]
  I1112 14:00:05.756843 22 service_latency.go:363] Got endpoints: latency-svc-5pxwh [82.602591ms]
  I1112 14:00:05.757097 22 service_latency.go:363] Got endpoints: latency-svc-ksbcl [70.747989ms]
  I1112 14:00:05.760455 22 service_latency.go:363] Got endpoints: latency-svc-96vvl [77.196751ms]
  I1112 14:00:05.760684 22 service_latency.go:363] Got endpoints: latency-svc-rxccg [84.949967ms]
  I1112 14:00:05.762103 22 service_latency.go:356] Created: latency-svc-2nppf
  I1112 14:00:05.765249 22 service_latency.go:356] Created: latency-svc-h7xdk
  I1112 14:00:05.766979 22 service_latency.go:356] Created: latency-svc-5tmnz
  I1112 14:00:05.769762 22 service_latency.go:356] Created: latency-svc-ngtg6
  I1112 14:00:05.772213 22 service_latency.go:356] Created: latency-svc-f5zsp
  I1112 14:00:05.795136 22 service_latency.go:363] Got endpoints: latency-svc-jgqxs [85.296331ms]
  I1112 14:00:05.800160 22 service_latency.go:356] Created: latency-svc-bz6dc
  I1112 14:00:05.845141 22 service_latency.go:363] Got endpoints: latency-svc-phk88 [151.242806ms]
  I1112 14:00:05.850792 22 service_latency.go:356] Created: latency-svc-7n2zq
  I1112 14:00:05.894798 22 service_latency.go:363] Got endpoints: latency-svc-pjqp4 [217.052783ms]
  I1112 14:00:05.900604 22 service_latency.go:356] Created: latency-svc-z7tkj
  I1112 14:00:05.942790 22 service_latency.go:363] Got endpoints: latency-svc-48tl6 [271.531167ms]
  I1112 14:00:05.947249 22 service_latency.go:356] Created: latency-svc-d8gjl
  I1112 14:00:05.993162 22 service_latency.go:363] Got endpoints: latency-svc-cqhq4 [295.342934ms]
  I1112 14:00:05.998128 22 service_latency.go:356] Created: latency-svc-xk4pf
  I1112 14:00:06.044175 22 service_latency.go:363] Got endpoints: latency-svc-7mg6g [374.221275ms]
  I1112 14:00:06.049962 22 service_latency.go:356] Created: latency-svc-55gpq
  I1112 14:00:06.094964 22 service_latency.go:363] Got endpoints: latency-svc-dn5nz [428.803872ms]
  I1112 14:00:06.099863 22 service_latency.go:356] Created: latency-svc-ngmcf
  I1112 14:00:06.143693 22 service_latency.go:363] Got endpoints: latency-svc-5gvs6 [478.079169ms]
  I1112 14:00:06.148207 22 service_latency.go:356] Created: latency-svc-ncg2t
  I1112 14:00:06.194956 22 service_latency.go:363] Got endpoints: latency-svc-b5zf8 [506.474531ms]
  I1112 14:00:06.199183 22 service_latency.go:356] Created: latency-svc-p5kpq
  I1112 14:00:06.245052 22 service_latency.go:363] Got endpoints: latency-svc-hhjqs [540.308483ms]
  I1112 14:00:06.250579 22 service_latency.go:356] Created: latency-svc-kstl9
  I1112 14:00:06.294224 22 service_latency.go:363] Got endpoints: latency-svc-2nppf [541.34302ms]
  I1112 14:00:06.299291 22 service_latency.go:356] Created: latency-svc-l5474
  I1112 14:00:06.345372 22 service_latency.go:363] Got endpoints: latency-svc-h7xdk [588.439918ms]
  I1112 14:00:06.350318 22 service_latency.go:356] Created: latency-svc-6xf2z
  I1112 14:00:06.393304 22 service_latency.go:363] Got endpoints: latency-svc-5tmnz [636.132792ms]
  I1112 14:00:06.398396 22 service_latency.go:356] Created: latency-svc-dgxrn
  I1112 14:00:06.443115 22 service_latency.go:363] Got endpoints: latency-svc-ngtg6 [682.361365ms]
  I1112 14:00:06.449337 22 service_latency.go:356] Created: latency-svc-vmq7b
  I1112 14:00:06.494062 22 service_latency.go:363] Got endpoints: latency-svc-f5zsp [733.509076ms]
  I1112 14:00:06.499116 22 service_latency.go:356] Created: latency-svc-js25r
  I1112 14:00:06.545052 22 service_latency.go:363] Got endpoints: latency-svc-bz6dc [749.825714ms]
  I1112 14:00:06.550084 22 service_latency.go:356] Created: latency-svc-trpgb
  I1112 14:00:06.595502 22 service_latency.go:363] Got endpoints: latency-svc-7n2zq [750.326548ms]
  I1112 14:00:06.600332 22 service_latency.go:356] Created: latency-svc-lw88w
  I1112 14:00:06.645439 22 service_latency.go:363] Got endpoints: latency-svc-z7tkj [750.509226ms]
  I1112 14:00:06.650586 22 service_latency.go:356] Created: latency-svc-lvvgv
  I1112 14:00:06.695856 22 service_latency.go:363] Got endpoints: latency-svc-d8gjl [753.025459ms]
  I1112 14:00:06.701000 22 service_latency.go:356] Created: latency-svc-gwz88
  I1112 14:00:06.743345 22 service_latency.go:363] Got endpoints: latency-svc-xk4pf [750.136896ms]
  I1112 14:00:06.748121 22 service_latency.go:356] Created: latency-svc-vzk6d
  I1112 14:00:06.793448 22 service_latency.go:363] Got endpoints: latency-svc-55gpq [749.226916ms]
  I1112 14:00:06.799263 22 service_latency.go:356] Created: latency-svc-tlhzc
  I1112 14:00:06.844357 22 service_latency.go:363] Got endpoints: latency-svc-ngmcf [749.351514ms]
  I1112 14:00:06.849349 22 service_latency.go:356] Created: latency-svc-lqcs2
  I1112 14:00:06.893786 22 service_latency.go:363] Got endpoints: latency-svc-ncg2t [749.976838ms]
  I1112 14:00:06.898727 22 service_latency.go:356] Created: latency-svc-ck6h5
  I1112 14:00:06.944592 22 service_latency.go:363] Got endpoints: latency-svc-p5kpq [749.594261ms]
  I1112 14:00:06.949064 22 service_latency.go:356] Created: latency-svc-8n97r
  I1112 14:00:06.993156 22 service_latency.go:363] Got endpoints: latency-svc-kstl9 [748.05887ms]
  I1112 14:00:06.998270 22 service_latency.go:356] Created: latency-svc-nj7vg
  I1112 14:00:07.044619 22 service_latency.go:363] Got endpoints: latency-svc-l5474 [750.271533ms]
  I1112 14:00:07.049305 22 service_latency.go:356] Created: latency-svc-c68cw
  I1112 14:00:07.095709 22 service_latency.go:363] Got endpoints: latency-svc-6xf2z [750.297862ms]
  I1112 14:00:07.100634 22 service_latency.go:356] Created: latency-svc-b88cm
  I1112 14:00:07.142797 22 service_latency.go:363] Got endpoints: latency-svc-dgxrn [749.439452ms]
  I1112 14:00:07.148021 22 service_latency.go:356] Created: latency-svc-sldtw
  I1112 14:00:07.196896 22 service_latency.go:363] Got endpoints: latency-svc-vmq7b [753.740512ms]
  I1112 14:00:07.202681 22 service_latency.go:356] Created: latency-svc-9frhl
  I1112 14:00:07.244078 22 service_latency.go:363] Got endpoints: latency-svc-js25r [749.973522ms]
  I1112 14:00:07.249230 22 service_latency.go:356] Created: latency-svc-cndzj
  I1112 14:00:07.292834 22 service_latency.go:363] Got endpoints: latency-svc-trpgb [747.684436ms]
  I1112 14:00:07.297689 22 service_latency.go:356] Created: latency-svc-z5jhq
  I1112 14:00:07.344596 22 service_latency.go:363] Got endpoints: latency-svc-lw88w [749.046421ms]
  I1112 14:00:07.349219 22 service_latency.go:356] Created: latency-svc-2s4v2
  I1112 14:00:07.394137 22 service_latency.go:363] Got endpoints: latency-svc-lvvgv [748.659196ms]
  I1112 14:00:07.399009 22 service_latency.go:356] Created: latency-svc-nlwpx
  I1112 14:00:07.444064 22 service_latency.go:363] Got endpoints: latency-svc-gwz88 [748.170275ms]
  I1112 14:00:07.449737 22 service_latency.go:356] Created: latency-svc-pxmkp
  I1112 14:00:07.493006 22 service_latency.go:363] Got endpoints: latency-svc-vzk6d [749.624454ms]
  I1112 14:00:07.498512 22 service_latency.go:356] Created: latency-svc-24hqh
  I1112 14:00:07.543151 22 service_latency.go:363] Got endpoints: latency-svc-tlhzc [749.662833ms]
  I1112 14:00:07.547934 22 service_latency.go:356] Created: latency-svc-ljb68
  I1112 14:00:07.593232 22 service_latency.go:363] Got endpoints: latency-svc-lqcs2 [748.825661ms]
  I1112 14:00:07.598660 22 service_latency.go:356] Created: latency-svc-7gghh
  I1112 14:00:07.643591 22 service_latency.go:363] Got endpoints: latency-svc-ck6h5 [749.76303ms]
  I1112 14:00:07.648611 22 service_latency.go:356] Created: latency-svc-68p4c
  I1112 14:00:07.694792 22 service_latency.go:363] Got endpoints: latency-svc-8n97r [750.135319ms]
  I1112 14:00:07.699434 22 service_latency.go:356] Created: latency-svc-rjmgl
  I1112 14:00:07.745109 22 service_latency.go:363] Got endpoints: latency-svc-nj7vg [751.911251ms]
  I1112 14:00:07.750501 22 service_latency.go:356] Created: latency-svc-jp7vb
  I1112 14:00:07.793241 22 service_latency.go:363] Got endpoints: latency-svc-c68cw [748.582563ms]
  I1112 14:00:07.798419 22 service_latency.go:356] Created: latency-svc-xlwzf
  I1112 14:00:07.843731 22 service_latency.go:363] Got endpoints: latency-svc-b88cm [747.895433ms]
  I1112 14:00:07.848575 22 service_latency.go:356] Created: latency-svc-fgzwz
  I1112 14:00:07.894572 22 service_latency.go:363] Got endpoints: latency-svc-sldtw [751.742207ms]
  I1112 14:00:07.899374 22 service_latency.go:356] Created: latency-svc-d7ttz
  I1112 14:00:07.945008 22 service_latency.go:363] Got endpoints: latency-svc-9frhl [747.98232ms]
  I1112 14:00:07.949878 22 service_latency.go:356] Created: latency-svc-4ggm6
  I1112 14:00:07.993140 22 service_latency.go:363] Got endpoints: latency-svc-cndzj [749.014937ms]
  I1112 14:00:07.997639 22 service_latency.go:356] Created: latency-svc-gk5mz
  I1112 14:00:08.045054 22 service_latency.go:363] Got endpoints: latency-svc-z5jhq [752.186804ms]
  I1112 14:00:08.050992 22 service_latency.go:356] Created: latency-svc-27grj
  I1112 14:00:08.093025 22 service_latency.go:363] Got endpoints: latency-svc-2s4v2 [748.381385ms]
  I1112 14:00:08.098182 22 service_latency.go:356] Created: latency-svc-9c7rt
  I1112 14:00:08.143626 22 service_latency.go:363] Got endpoints: latency-svc-nlwpx [749.451868ms]
  I1112 14:00:08.148824 22 service_latency.go:356] Created: latency-svc-vscp5
  I1112 14:00:08.194522 22 service_latency.go:363] Got endpoints: latency-svc-pxmkp [750.416532ms]
  I1112 14:00:08.198947 22 service_latency.go:356] Created: latency-svc-klp74
  I1112 14:00:08.242867 22 service_latency.go:363] Got endpoints: latency-svc-24hqh [749.827077ms]
  I1112 14:00:08.248627 22 service_latency.go:356] Created: latency-svc-hs9lg
  I1112 14:00:08.294282 22 service_latency.go:363] Got endpoints: latency-svc-ljb68 [751.089164ms]
  I1112 14:00:08.299232 22 service_latency.go:356] Created: latency-svc-rwndc
  I1112 14:00:08.343372 22 service_latency.go:363] Got endpoints: latency-svc-7gghh [750.100875ms]
  I1112 14:00:08.349093 22 service_latency.go:356] Created: latency-svc-mvgvp
  I1112 14:00:08.393224 22 service_latency.go:363] Got endpoints: latency-svc-68p4c [749.600115ms]
  I1112 14:00:08.398200 22 service_latency.go:356] Created: latency-svc-n6ldb
  I1112 14:00:08.442921 22 service_latency.go:363] Got endpoints: latency-svc-rjmgl [748.085911ms]
  I1112 14:00:08.449785 22 service_latency.go:356] Created: latency-svc-p7hjv
  I1112 14:00:08.493556 22 service_latency.go:363] Got endpoints: latency-svc-jp7vb [748.412647ms]
  I1112 14:00:08.498942 22 service_latency.go:356] Created: latency-svc-68cwq
  I1112 14:00:08.544368 22 service_latency.go:363] Got endpoints: latency-svc-xlwzf [751.095042ms]
  I1112 14:00:08.552764 22 service_latency.go:356] Created: latency-svc-gb7st
  I1112 14:00:08.594716 22 service_latency.go:363] Got endpoints: latency-svc-fgzwz [750.943086ms]
  I1112 14:00:08.599507 22 service_latency.go:356] Created: latency-svc-dklrl
  I1112 14:00:08.644165 22 service_latency.go:363] Got endpoints: latency-svc-d7ttz [749.55454ms]
  I1112 14:00:08.649011 22 service_latency.go:356] Created: latency-svc-grpxb
  I1112 14:00:08.693734 22 service_latency.go:363] Got endpoints: latency-svc-4ggm6 [748.669251ms]
  I1112 14:00:08.698473 22 service_latency.go:356] Created: latency-svc-mdgds
  I1112 14:00:08.744022 22 service_latency.go:363] Got endpoints: latency-svc-gk5mz [750.844157ms]
  I1112 14:00:08.749777 22 service_latency.go:356] Created: latency-svc-njhcd
  I1112 14:00:08.794181 22 service_latency.go:363] Got endpoints: latency-svc-27grj [748.998531ms]
  I1112 14:00:08.799989 22 service_latency.go:356] Created: latency-svc-994cs
  I1112 14:00:08.842434 22 service_latency.go:363] Got endpoints: latency-svc-9c7rt [749.375321ms]
  I1112 14:00:08.847733 22 service_latency.go:356] Created: latency-svc-7qlgx
  I1112 14:00:08.893616 22 service_latency.go:363] Got endpoints: latency-svc-vscp5 [749.960456ms]
  I1112 14:00:08.898513 22 service_latency.go:356] Created: latency-svc-x9zf4
  I1112 14:00:08.944363 22 service_latency.go:363] Got endpoints: latency-svc-klp74 [749.805894ms]
  I1112 14:00:08.949132 22 service_latency.go:356] Created: latency-svc-rzkvv
  I1112 14:00:08.993872 22 service_latency.go:363] Got endpoints: latency-svc-hs9lg [750.973464ms]
  I1112 14:00:08.999134 22 service_latency.go:356] Created: latency-svc-ssbfk
  I1112 14:00:09.043189 22 service_latency.go:363] Got endpoints: latency-svc-rwndc [748.849092ms]
  I1112 14:00:09.047985 22 service_latency.go:356] Created: latency-svc-jrgxq
  I1112 14:00:09.093488 22 service_latency.go:363] Got endpoints: latency-svc-mvgvp [749.987273ms]
  I1112 14:00:09.099602 22 service_latency.go:356] Created: latency-svc-g5wjc
  I1112 14:00:09.143498 22 service_latency.go:363] Got endpoints: latency-svc-n6ldb [750.241526ms]
  I1112 14:00:09.149206 22 service_latency.go:356] Created: latency-svc-rkwst
  I1112 14:00:09.193661 22 service_latency.go:363] Got endpoints: latency-svc-p7hjv [750.700349ms]
  I1112 14:00:09.198843 22 service_latency.go:356] Created: latency-svc-fgf25
  I1112 14:00:09.244426 22 service_latency.go:363] Got endpoints: latency-svc-68cwq [750.834104ms]
  I1112 14:00:09.248867 22 service_latency.go:356] Created: latency-svc-wzgsx
  I1112 14:00:09.293916 22 service_latency.go:363] Got endpoints: latency-svc-gb7st [749.513058ms]
  I1112 14:00:09.299656 22 service_latency.go:356] Created: latency-svc-6ncbx
  I1112 14:00:09.344535 22 service_latency.go:363] Got endpoints: latency-svc-dklrl [749.777632ms]
  I1112 14:00:09.349285 22 service_latency.go:356] Created: latency-svc-8dvs7
  I1112 14:00:09.395051 22 service_latency.go:363] Got endpoints: latency-svc-grpxb [750.844327ms]
  I1112 14:00:09.400483 22 service_latency.go:356] Created: latency-svc-gdgd9
  I1112 14:00:09.443636 22 service_latency.go:363] Got endpoints: latency-svc-mdgds [749.858916ms]
  I1112 14:00:09.448411 22 service_latency.go:356] Created: latency-svc-mnxqk
  I1112 14:00:09.493844 22 service_latency.go:363] Got endpoints: latency-svc-njhcd [749.779428ms]
  I1112 14:00:09.499713 22 service_latency.go:356] Created: latency-svc-fh5hz
  I1112 14:00:09.542932 22 service_latency.go:363] Got endpoints: latency-svc-994cs [748.713852ms]
  I1112 14:00:09.547693 22 service_latency.go:356] Created: latency-svc-bdk6p
  I1112 14:00:09.593238 22 service_latency.go:363] Got endpoints: latency-svc-7qlgx [750.706384ms]
  I1112 14:00:09.597943 22 service_latency.go:356] Created: latency-svc-l5g8x
  I1112 14:00:09.644022 22 service_latency.go:363] Got endpoints: latency-svc-x9zf4 [750.350988ms]
  I1112 14:00:09.649881 22 service_latency.go:356] Created: latency-svc-kzm5h
  I1112 14:00:09.693364 22 service_latency.go:363] Got endpoints: latency-svc-rzkvv [748.962806ms]
  I1112 14:00:09.698892 22 service_latency.go:356] Created: latency-svc-cd6nw
  I1112 14:00:09.744988 22 service_latency.go:363] Got endpoints: latency-svc-ssbfk [750.984533ms]
  I1112 14:00:09.749705 22 service_latency.go:356] Created: latency-svc-w9v5z
  I1112 14:00:09.795268 22 service_latency.go:363] Got endpoints: latency-svc-jrgxq [752.037989ms]
  I1112 14:00:09.800912 22 service_latency.go:356] Created: latency-svc-w6dlc
  I1112 14:00:09.843260 22 service_latency.go:363] Got endpoints: latency-svc-g5wjc [749.719971ms]
  I1112 14:00:09.848825 22 service_latency.go:356] Created: latency-svc-2r9s2
  I1112 14:00:09.893679 22 service_latency.go:363] Got endpoints: latency-svc-rkwst [750.07175ms]
  I1112 14:00:09.898836 22 service_latency.go:356] Created: latency-svc-bm59n
  I1112 14:00:09.945188 22 service_latency.go:363] Got endpoints: latency-svc-fgf25 [751.482243ms]
  I1112 14:00:09.951448 22 service_latency.go:356] Created: latency-svc-d8bt2
  I1112 14:00:09.993370 22 service_latency.go:363] Got endpoints: latency-svc-wzgsx [748.89412ms]
  I1112 14:00:09.999455 22 service_latency.go:356] Created: latency-svc-5gl8v
  I1112 14:00:10.043587 22 service_latency.go:363] Got endpoints: latency-svc-6ncbx [749.623581ms]
  I1112 14:00:10.048111 22 service_latency.go:356] Created: latency-svc-lrkkc
  I1112 14:00:10.095302 22 service_latency.go:363] Got endpoints: latency-svc-8dvs7 [750.671899ms]
  I1112 14:00:10.100988 22 service_latency.go:356] Created: latency-svc-rdtsq
  I1112 14:00:10.143745 22 service_latency.go:363] Got endpoints: latency-svc-gdgd9 [748.554347ms]
  I1112 14:00:10.149358 22 service_latency.go:356] Created: latency-svc-7g7kt
  I1112 14:00:10.193136 22 service_latency.go:363] Got endpoints: latency-svc-mnxqk [749.432108ms]
  I1112 14:00:10.197941 22 service_latency.go:356] Created: latency-svc-fj9ff
  I1112 14:00:10.243703 22 service_latency.go:363] Got endpoints: latency-svc-fh5hz [749.814792ms]
  I1112 14:00:10.248934 22 service_latency.go:356] Created: latency-svc-qhdmp
  I1112 14:00:10.293346 22 service_latency.go:363] Got endpoints: latency-svc-bdk6p [750.371824ms]
  I1112 14:00:10.298634 22 service_latency.go:356] Created: latency-svc-hrll6
  I1112 14:00:10.343789 22 service_latency.go:363] Got endpoints: latency-svc-l5g8x [750.496213ms]
  I1112 14:00:10.349131 22 service_latency.go:356] Created: latency-svc-bxc5k
  I1112 14:00:10.393436 22 service_latency.go:363] Got endpoints: latency-svc-kzm5h [749.371402ms]
  I1112 14:00:10.398316 22 service_latency.go:356] Created: latency-svc-xqdjq
  I1112 14:00:10.445162 22 service_latency.go:363] Got endpoints: latency-svc-cd6nw [751.760745ms]
  I1112 14:00:10.450476 22 service_latency.go:356] Created: latency-svc-5kpp5
  I1112 14:00:10.495371 22 service_latency.go:363] Got endpoints: latency-svc-w9v5z [750.347521ms]
  I1112 14:00:10.500416 22 service_latency.go:356] Created: latency-svc-dsjl5
  I1112 14:00:10.543617 22 service_latency.go:363] Got endpoints: latency-svc-w6dlc [748.306827ms]
  I1112 14:00:10.548978 22 service_latency.go:356] Created: latency-svc-scmgv
  I1112 14:00:10.594997 22 service_latency.go:363] Got endpoints: latency-svc-2r9s2 [751.604682ms]
  I1112 14:00:10.599780 22 service_latency.go:356] Created: latency-svc-6vz5x
  I1112 14:00:10.644757 22 service_latency.go:363] Got endpoints: latency-svc-bm59n [751.043484ms]
  I1112 14:00:10.650141 22 service_latency.go:356] Created: latency-svc-6s99q
  I1112 14:00:10.693587 22 service_latency.go:363] Got endpoints: latency-svc-d8bt2 [748.342145ms]
  I1112 14:00:10.699024 22 service_latency.go:356] Created: latency-svc-xm9qg
  I1112 14:00:10.744312 22 service_latency.go:363] Got endpoints: latency-svc-5gl8v [750.803184ms]
  I1112 14:00:10.749539 22 service_latency.go:356] Created: latency-svc-c7hl2
  I1112 14:00:10.795245 22 service_latency.go:363] Got endpoints: latency-svc-lrkkc [751.612296ms]
  I1112 14:00:10.800553 22 service_latency.go:356] Created: latency-svc-v4l6f
  I1112 14:00:10.843460 22 service_latency.go:363] Got endpoints: latency-svc-rdtsq [748.036038ms]
  I1112 14:00:10.848321 22 service_latency.go:356] Created: latency-svc-zxs7k
  I1112 14:00:10.893133 22 service_latency.go:363] Got endpoints: latency-svc-7g7kt [749.346993ms]
  I1112 14:00:10.898936 22 service_latency.go:356] Created: latency-svc-xgjgr
  I1112 14:00:10.944115 22 service_latency.go:363] Got endpoints: latency-svc-fj9ff [750.933246ms]
  I1112 14:00:10.949091 22 service_latency.go:356] Created: latency-svc-lmbsv
  I1112 14:00:10.997525 22 service_latency.go:363] Got endpoints: latency-svc-qhdmp [753.780676ms]
  I1112 14:00:11.002330 22 service_latency.go:356] Created: latency-svc-jdlc5
  I1112 14:00:11.044238 22 service_latency.go:363] Got endpoints: latency-svc-hrll6 [750.850359ms]
  I1112 14:00:11.049735 22 service_latency.go:356] Created: latency-svc-wg728
  I1112 14:00:11.094272 22 service_latency.go:363] Got endpoints: latency-svc-bxc5k [750.439495ms]
  I1112 14:00:11.099057 22 service_latency.go:356] Created: latency-svc-7tv4n
  I1112 14:00:11.145327 22 service_latency.go:363] Got endpoints: latency-svc-xqdjq [751.849736ms]
  I1112 14:00:11.150162 22 service_latency.go:356] Created: latency-svc-j48tc
  I1112 14:00:11.194134 22 service_latency.go:363] Got endpoints: latency-svc-5kpp5 [748.925393ms]
  I1112 14:00:11.198690 22 service_latency.go:356] Created: latency-svc-tpn2f
  I1112 14:00:11.243693 22 service_latency.go:363] Got endpoints: latency-svc-dsjl5 [748.287971ms]
  I1112 14:00:11.249955 22 service_latency.go:356] Created: latency-svc-brr4d
  I1112 14:00:11.294086 22 service_latency.go:363] Got endpoints: latency-svc-scmgv [750.435339ms]
  I1112 14:00:11.299279 22 service_latency.go:356] Created: latency-svc-7x977
  I1112 14:00:11.345962 22 service_latency.go:363] Got endpoints: latency-svc-6vz5x [750.852198ms]
  I1112 14:00:11.350878 22 service_latency.go:356] Created: latency-svc-mhcn2
  I1112 14:00:11.393414 22 service_latency.go:363] Got endpoints: latency-svc-6s99q [748.617135ms]
  I1112 14:00:11.398906 22 service_latency.go:356] Created: latency-svc-kd4fk
  I1112 14:00:11.443312 22 service_latency.go:363] Got endpoints: latency-svc-xm9qg [749.675453ms]
  I1112 14:00:11.448755 22 service_latency.go:356] Created: latency-svc-6l9v8
  I1112 14:00:11.494979 22 service_latency.go:363] Got endpoints: latency-svc-c7hl2 [750.541233ms]
  I1112 14:00:11.499770 22 service_latency.go:356] Created: latency-svc-6gtth
  I1112 14:00:11.543072 22 service_latency.go:363] Got endpoints: latency-svc-v4l6f [747.785693ms]
  I1112 14:00:11.547901 22 service_latency.go:356] Created: latency-svc-rf4cn
  I1112 14:00:11.593004 22 service_latency.go:363] Got endpoints: latency-svc-zxs7k [749.502478ms]
  I1112 14:00:11.599672 22 service_latency.go:356] Created: latency-svc-c5str
  I1112 14:00:11.644230 22 service_latency.go:363] Got endpoints: latency-svc-xgjgr [751.051868ms]
  I1112 14:00:11.649033 22 service_latency.go:356] Created: latency-svc-qthvm
  I1112 14:00:11.695488 22 service_latency.go:363] Got endpoints: latency-svc-lmbsv [751.329694ms]
  I1112 14:00:11.701103 22 service_latency.go:356] Created: latency-svc-gwgjx
  I1112 14:00:11.742911 22 service_latency.go:363] Got endpoints: latency-svc-jdlc5 [745.331366ms]
  I1112 14:00:11.749036 22 service_latency.go:356] Created: latency-svc-5n6gn
  I1112 14:00:11.793846 22 service_latency.go:363] Got endpoints: latency-svc-wg728 [749.487397ms]
  I1112 14:00:11.799281 22 service_latency.go:356] Created: latency-svc-7wgk9
  I1112 14:00:11.845937 22 service_latency.go:363] Got endpoints: latency-svc-7tv4n [751.621843ms]
  I1112 14:00:11.851078 22 service_latency.go:356] Created: latency-svc-mp4vr
  I1112 14:00:11.893730 22 service_latency.go:363] Got endpoints: latency-svc-j48tc [748.364721ms]
  I1112 14:00:11.898872 22 service_latency.go:356] Created: latency-svc-vgm88
  I1112 14:00:11.942908 22 service_latency.go:363] Got endpoints: latency-svc-tpn2f [748.733022ms]
  I1112 14:00:11.947712 22 service_latency.go:356] Created: latency-svc-v7kmr
  I1112 14:00:11.995066 22 service_latency.go:363] Got endpoints: latency-svc-brr4d [751.325934ms]
  I1112 14:00:12.000192 22 service_latency.go:356] Created: latency-svc-d8r7b
  I1112 14:00:12.044559 22 service_latency.go:363] Got endpoints: latency-svc-7x977 [750.420377ms]
  I1112 14:00:12.049809 22 service_latency.go:356] Created: latency-svc-dfkn8
  I1112 14:00:12.093642 22 service_latency.go:363] Got endpoints: latency-svc-mhcn2 [747.635971ms]
  I1112 14:00:12.098394 22 service_latency.go:356] Created: latency-svc-ngbtd
  I1112 14:00:12.143298 22 service_latency.go:363] Got endpoints: latency-svc-kd4fk [749.850506ms]
  I1112 14:00:12.149281 22 service_latency.go:356] Created: latency-svc-r2nfg
  I1112 14:00:12.194954 22 service_latency.go:363] Got endpoints: latency-svc-6l9v8 [751.495034ms]
  I1112 14:00:12.199607 22 service_latency.go:356] Created: latency-svc-zdtb5
  I1112 14:00:12.244947 22 service_latency.go:363] Got endpoints: latency-svc-6gtth [749.925815ms]
  I1112 14:00:12.249723 22 service_latency.go:356] Created: latency-svc-q29km
  I1112 14:00:12.293939 22 service_latency.go:363] Got endpoints: latency-svc-rf4cn [750.827138ms]
  I1112 14:00:12.299308 22 service_latency.go:356] Created: latency-svc-55b62
  I1112 14:00:12.344737 22 service_latency.go:363] Got endpoints: latency-svc-c5str [751.694273ms]
  I1112 14:00:12.351107 22 service_latency.go:356] Created: latency-svc-r8r7j
  I1112 14:00:12.393684 22 service_latency.go:363] Got endpoints: latency-svc-qthvm [749.423197ms]
  I1112 14:00:12.398524 22 service_latency.go:356] Created: latency-svc-qbzqz
  I1112 14:00:12.445314 22 service_latency.go:363] Got endpoints: latency-svc-gwgjx [749.787012ms]
  I1112 14:00:12.449998 22 service_latency.go:356] Created: latency-svc-jwg6j
  I1112 14:00:12.493624 22 service_latency.go:363] Got endpoints: latency-svc-5n6gn [750.673511ms]
  I1112 14:00:12.498744 22 service_latency.go:356] Created: latency-svc-9n2mc
  I1112 14:00:12.544705 22 service_latency.go:363] Got endpoints: latency-svc-7wgk9 [750.815164ms]
  I1112 14:00:12.550272 22 service_latency.go:356] Created: latency-svc-rrlc9
  I1112 14:00:12.594735 22 service_latency.go:363] Got endpoints: latency-svc-mp4vr [748.701061ms]
  I1112 14:00:12.600558 22 service_latency.go:356] Created: latency-svc-lwpsr
  I1112 14:00:12.643748 22 service_latency.go:363] Got endpoints: latency-svc-vgm88 [749.977138ms]
  I1112 14:00:12.648759 22 service_latency.go:356] Created: latency-svc-c8p76
  I1112 14:00:12.693565 22 service_latency.go:363] Got endpoints: latency-svc-v7kmr [750.614341ms]
  I1112 14:00:12.698628 22 service_latency.go:356] Created: latency-svc-bwp7h
  I1112 14:00:12.743774 22 service_latency.go:363] Got endpoints: latency-svc-d8r7b [748.657495ms]
  I1112 14:00:12.748679 22 service_latency.go:356] Created: latency-svc-p6ncb
  I1112 14:00:12.794327 22 service_latency.go:363] Got endpoints: latency-svc-dfkn8 [749.648844ms]
  I1112 14:00:12.798817 22 service_latency.go:356] Created: latency-svc-m9wgj
  I1112 14:00:12.845592 22 service_latency.go:363] Got endpoints: latency-svc-ngbtd [751.918101ms]
  I1112 14:00:12.850287 22 service_latency.go:356] Created: latency-svc-x44cp
  I1112 14:00:12.893563 22 service_latency.go:363] Got endpoints: latency-svc-r2nfg [750.151467ms]
  I1112 14:00:12.899594 22 service_latency.go:356] Created: latency-svc-w2kxd
  I1112 14:00:12.943895 22 service_latency.go:363] Got endpoints: latency-svc-zdtb5 [748.903733ms]
  I1112 14:00:12.948425 22 service_latency.go:356] Created: latency-svc-brwwh
  I1112 14:00:12.994678 22 service_latency.go:363] Got endpoints: latency-svc-q29km [749.631216ms]
  I1112 14:00:12.999353 22 service_latency.go:356] Created: latency-svc-f7m96
  I1112 14:00:13.043701 22 service_latency.go:363] Got endpoints: latency-svc-55b62 [749.627901ms]
  I1112 14:00:13.048615 22 service_latency.go:356] Created: latency-svc-vhtjr
  I1112 14:00:13.093908 22 service_latency.go:363] Got endpoints: latency-svc-r8r7j [749.13152ms]
  I1112 14:00:13.108937 22 service_latency.go:356] Created: latency-svc-ncjgj
  I1112 14:00:13.143776 22 service_latency.go:363] Got endpoints: latency-svc-qbzqz [750.055089ms]
  I1112 14:00:13.149520 22 service_latency.go:356] Created: latency-svc-6qj6d
  I1112 14:00:13.193267 22 service_latency.go:363] Got endpoints: latency-svc-jwg6j [747.917621ms]
  I1112 14:00:13.198132 22 service_latency.go:356] Created: latency-svc-8w9xm
  I1112 14:00:13.243694 22 service_latency.go:363] Got endpoints: latency-svc-9n2mc [750.035183ms]
  I1112 14:00:13.248926 22 service_latency.go:356] Created: latency-svc-pn774
  I1112 14:00:13.293653 22 service_latency.go:363] Got endpoints: latency-svc-rrlc9 [748.908086ms]
  I1112 14:00:13.298849 22 service_latency.go:356] Created: latency-svc-cvrcb
  I1112 14:00:13.345331 22 service_latency.go:363] Got endpoints: latency-svc-lwpsr [750.461546ms]
  I1112 14:00:13.349940 22 service_latency.go:356] Created: latency-svc-55sgn
  I1112 14:00:13.393165 22 service_latency.go:363] Got endpoints: latency-svc-c8p76 [749.374497ms]
  I1112 14:00:13.398208 22 service_latency.go:356] Created: latency-svc-85q6h
  I1112 14:00:13.443692 22 service_latency.go:363] Got endpoints: latency-svc-bwp7h [750.092689ms]
  I1112 14:00:13.494547 22 service_latency.go:363] Got endpoints: latency-svc-p6ncb [750.727768ms]
  I1112 14:00:13.543498 22 service_latency.go:363] Got endpoints: latency-svc-m9wgj [749.133924ms]
  I1112 14:00:13.594519 22 service_latency.go:363] Got endpoints: latency-svc-x44cp [748.886858ms]
  I1112 14:00:13.643946 22 service_latency.go:363] Got endpoints: latency-svc-w2kxd [750.347142ms]
  I1112 14:00:13.694511 22 service_latency.go:363] Got endpoints: latency-svc-brwwh [750.575113ms]
  I1112 14:00:13.744448 22 service_latency.go:363] Got endpoints: latency-svc-f7m96 [749.738447ms]
  I1112 14:00:13.795017 22 service_latency.go:363] Got endpoints: latency-svc-vhtjr [751.277401ms]
  I1112 14:00:13.843739 22 service_latency.go:363] Got endpoints: latency-svc-ncjgj [749.55977ms]
  I1112 14:00:13.894308 22 service_latency.go:363] Got endpoints: latency-svc-6qj6d [750.498092ms]
  I1112 14:00:13.943700 22 service_latency.go:363] Got endpoints: latency-svc-8w9xm [750.38243ms]
  I1112 14:00:13.994593 22 service_latency.go:363] Got endpoints: latency-svc-pn774 [750.859694ms]
  I1112 14:00:14.043504 22 service_latency.go:363] Got endpoints: latency-svc-cvrcb [749.731909ms]
  I1112 14:00:14.096100 22 service_latency.go:363] Got endpoints: latency-svc-55sgn [750.642527ms]
  I1112 14:00:14.145040 22 service_latency.go:363] Got endpoints: latency-svc-85q6h [751.831954ms]
  I1112 14:00:14.145210 22 service_latency.go:114] Latencies: [8.30402ms 22.771113ms 23.199979ms 24.412271ms 29.658153ms 30.013025ms 32.472212ms 34.382153ms 35.812806ms 36.805538ms 43.487293ms 43.942251ms 49.006418ms 50.179168ms 53.49548ms 58.972199ms 59.057716ms 59.093347ms 59.3827ms 63.198336ms 65.623499ms 65.994046ms 69.913228ms 70.621072ms 70.715955ms 70.747989ms 70.754067ms 74.390678ms 77.196751ms 82.602591ms 84.949967ms 85.296331ms 87.435458ms 151.242806ms 217.052783ms 271.531167ms 295.342934ms 374.221275ms 428.803872ms 478.079169ms 506.474531ms 540.308483ms 541.34302ms 588.439918ms 636.132792ms 682.361365ms 733.509076ms 745.331366ms 747.635971ms 747.684436ms 747.785693ms 747.895433ms 747.917621ms 747.98232ms 748.036038ms 748.05887ms 748.085911ms 748.170275ms 748.287971ms 748.306827ms 748.342145ms 748.364721ms 748.381385ms 748.412647ms 748.554347ms 748.582563ms 748.617135ms 748.657495ms 748.659196ms 748.669251ms 748.701061ms 748.713852ms 748.733022ms 748.825661ms 748.849092ms 748.886858ms 748.89412ms 748.903733ms 748.908086ms 748.925393ms 748.962806ms 748.998531ms 749.014937ms 749.046421ms 749.13152ms 749.133924ms 749.226916ms 749.346993ms 749.351514ms 749.371402ms 749.374497ms 749.375321ms 749.423197ms 749.432108ms 749.439452ms 749.451868ms 749.487397ms 749.502478ms 749.513058ms 749.55454ms 749.55977ms 749.594261ms 749.600115ms 749.623581ms 749.624454ms 749.627901ms 749.631216ms 749.648844ms 749.662833ms 749.675453ms 749.719971ms 749.731909ms 749.738447ms 749.76303ms 749.777632ms 749.779428ms 749.787012ms 749.805894ms 749.814792ms 749.825714ms 749.827077ms 749.850506ms 749.858916ms 749.925815ms 749.960456ms 749.973522ms 749.976838ms 749.977138ms 749.987273ms 750.035183ms 750.055089ms 750.07175ms 750.092689ms 750.100875ms 750.135319ms 750.136896ms 750.151467ms 750.241526ms 750.271533ms 750.297862ms 750.326548ms 750.347142ms 750.347521ms 750.350988ms 750.371824ms 750.38243ms 750.416532ms 750.420377ms 750.435339ms 750.439495ms 750.461546ms 750.496213ms 750.498092ms 750.509226ms 750.541233ms 750.575113ms 750.614341ms 750.642527ms 750.671899ms 750.673511ms 750.700349ms 750.706384ms 750.727768ms 750.803184ms 750.815164ms 750.827138ms 750.834104ms 750.844157ms 750.844327ms 750.850359ms 750.852198ms 750.859694ms 750.933246ms 750.943086ms 750.973464ms 750.984533ms 751.043484ms 751.051868ms 751.089164ms 751.095042ms 751.277401ms 751.325934ms 751.329694ms 751.482243ms 751.495034ms 751.604682ms 751.612296ms 751.621843ms 751.694273ms 751.742207ms 751.760745ms 751.831954ms 751.849736ms 751.911251ms 751.918101ms 752.037989ms 752.186804ms 753.025459ms 753.740512ms 753.780676ms]
  I1112 14:00:14.145227 22 service_latency.go:118] 50 %ile: 749.55977ms
  I1112 14:00:14.145235 22 service_latency.go:119] 90 %ile: 751.277401ms
  I1112 14:00:14.145245 22 service_latency.go:120] 99 %ile: 753.740512ms
  I1112 14:00:14.145252 22 service_latency.go:121] Total sample count: 200
  I1112 14:00:14.145334 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3154" for this suite. @ 11/12/24 14:00:14.147
• [10.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 11/12/24 14:00:14.151
  I1112 14:00:14.151069 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename proxy @ 11/12/24 14:00:14.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:14.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:14.16
  I1112 14:00:14.161858 22 proxy.go:293] Creating pod...
  I1112 14:00:16.168564 22 proxy.go:317] Creating service...
  I1112 14:00:16.174356 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/pods/agnhost/proxy/some/path/with/DELETE
  I1112 14:00:16.176636 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1112 14:00:16.176713 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/pods/agnhost/proxy/some/path/with/GET
  I1112 14:00:16.178375 22 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1112 14:00:16.178396 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/pods/agnhost/proxy/some/path/with/HEAD
  I1112 14:00:16.179548 22 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1112 14:00:16.179572 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/pods/agnhost/proxy/some/path/with/OPTIONS
  I1112 14:00:16.180792 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1112 14:00:16.180817 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/pods/agnhost/proxy/some/path/with/PATCH
  I1112 14:00:16.182048 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1112 14:00:16.182071 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/pods/agnhost/proxy/some/path/with/POST
  I1112 14:00:16.183167 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1112 14:00:16.183187 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/pods/agnhost/proxy/some/path/with/PUT
  I1112 14:00:16.184267 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1112 14:00:16.184286 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/services/test-service/proxy/some/path/with/DELETE
  I1112 14:00:16.185880 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1112 14:00:16.185901 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/services/test-service/proxy/some/path/with/GET
  I1112 14:00:16.187458 22 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1112 14:00:16.187477 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/services/test-service/proxy/some/path/with/HEAD
  I1112 14:00:16.188986 22 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1112 14:00:16.189005 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/services/test-service/proxy/some/path/with/OPTIONS
  I1112 14:00:16.190718 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1112 14:00:16.190739 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/services/test-service/proxy/some/path/with/PATCH
  I1112 14:00:16.192255 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1112 14:00:16.192280 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/services/test-service/proxy/some/path/with/POST
  I1112 14:00:16.193812 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1112 14:00:16.193831 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-728/services/test-service/proxy/some/path/with/PUT
  I1112 14:00:16.195266 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1112 14:00:16.195372 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-728" for this suite. @ 11/12/24 14:00:16.197
• [2.048 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 11/12/24 14:00:16.199
  I1112 14:00:16.199751 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename subpath @ 11/12/24 14:00:16.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:16.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:16.209
  STEP: Setting up data @ 11/12/24 14:00:16.21
  STEP: Creating pod pod-subpath-test-configmap-dxfw @ 11/12/24 14:00:16.216
  STEP: Creating a pod to test atomic-volume-subpath @ 11/12/24 14:00:16.216
  STEP: Saw pod success @ 11/12/24 14:00:38.247
  I1112 14:00:38.248898 22 output.go:196] Trying to get logs from node worker01 pod pod-subpath-test-configmap-dxfw container test-container-subpath-configmap-dxfw: <nil>
  STEP: delete the pod @ 11/12/24 14:00:38.251
  STEP: Deleting pod pod-subpath-test-configmap-dxfw @ 11/12/24 14:00:38.257
  I1112 14:00:38.257354 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-dxfw" in namespace "subpath-1979"
  I1112 14:00:38.258373 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1979" for this suite. @ 11/12/24 14:00:38.259
• [22.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 11/12/24 14:00:38.262
  I1112 14:00:38.262812 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:00:38.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:38.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:38.27
  STEP: Setting up server cert @ 11/12/24 14:00:38.37
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:00:38.53
  STEP: Deploying the webhook pod @ 11/12/24 14:00:38.534
  STEP: Wait for the deployment to be ready @ 11/12/24 14:00:38.539
  I1112 14:00:38.541877 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/12/24 14:00:40.546
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:00:40.551
  I1112 14:00:41.551825 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/12/24 14:00:41.581
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/12/24 14:00:41.603
  STEP: Deleting the collection of validation webhooks @ 11/12/24 14:00:41.625
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/12/24 14:00:41.64
  I1112 14:00:41.659300 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7265" for this suite. @ 11/12/24 14:00:41.662
  STEP: Destroying namespace "webhook-markers-4753" for this suite. @ 11/12/24 14:00:41.666
• [3.407 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 11/12/24 14:00:41.67
  I1112 14:00:41.670256 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:00:41.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:41.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:41.679
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/12/24 14:00:41.68
  I1112 14:00:41.680718 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-3615 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1112 14:00:41.727228 22 builder.go:146] stderr: ""
  I1112 14:00:41.727263 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 11/12/24 14:00:41.727
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/12/24 14:00:46.779
  I1112 14:00:46.779868 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-3615 get pod e2e-test-httpd-pod -o json'
  I1112 14:00:46.827562 22 builder.go:146] stderr: ""
  I1112 14:00:46.827662 22 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-11-12T14:00:41Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3615\",\n        \"resourceVersion\": \"15199\",\n        \"uid\": \"d9544ba7-29cc-4980-9e21-cc945495581a\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-hx6h8\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker01\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-hx6h8\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-12T14:00:42Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-12T14:00:41Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-12T14:00:42Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-12T14:00:42Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-12T14:00:41Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://34ba5ded2262fe988693ecca3d9889ea03aca366bbc07e2ba089e4b67f9de1c8\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-11-12T14:00:42Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-hx6h8\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.255.0.207\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.255.0.207\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"172.20.5.5\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.20.5.5\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-11-12T14:00:41Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 11/12/24 14:00:46.827
  I1112 14:00:46.827755 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-3615 replace -f -'
  I1112 14:00:46.904286 22 builder.go:146] stderr: ""
  I1112 14:00:46.904325 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 11/12/24 14:00:46.904
  I1112 14:00:46.905991 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-3615 delete pods e2e-test-httpd-pod'
  I1112 14:00:48.947948 22 builder.go:146] stderr: ""
  I1112 14:00:48.947983 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1112 14:00:48.948078 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3615" for this suite. @ 11/12/24 14:00:48.949
• [7.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 11/12/24 14:00:48.952
  I1112 14:00:48.952376 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sysctl @ 11/12/24 14:00:48.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:48.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:48.959
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 11/12/24 14:00:48.961
  STEP: Watching for error events or started pod @ 11/12/24 14:00:48.965
  STEP: Waiting for pod completion @ 11/12/24 14:00:50.967
  STEP: Checking that the pod succeeded @ 11/12/24 14:00:52.971
  STEP: Getting logs from the pod @ 11/12/24 14:00:52.971
  STEP: Checking that the sysctl is actually updated @ 11/12/24 14:00:52.975
  I1112 14:00:52.975219 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6772" for this suite. @ 11/12/24 14:00:52.976
• [4.028 seconds]
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 11/12/24 14:00:52.98
  I1112 14:00:52.980538 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename events @ 11/12/24 14:00:52.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:52.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:52.988
  STEP: creating a test event @ 11/12/24 14:00:52.989
  STEP: listing all events in all namespaces @ 11/12/24 14:00:52.991
  STEP: patching the test event @ 11/12/24 14:00:52.994
  STEP: fetching the test event @ 11/12/24 14:00:52.996
  STEP: updating the test event @ 11/12/24 14:00:52.997
  STEP: getting the test event @ 11/12/24 14:00:53
  STEP: deleting the test event @ 11/12/24 14:00:53.001
  STEP: listing all events in all namespaces @ 11/12/24 14:00:53.003
  I1112 14:00:53.005647 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5549" for this suite. @ 11/12/24 14:00:53.077
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 11/12/24 14:00:53.08
  I1112 14:00:53.080985 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename ingress @ 11/12/24 14:00:53.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:53.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:53.089
  STEP: getting /apis @ 11/12/24 14:00:53.09
  STEP: getting /apis/networking.k8s.io @ 11/12/24 14:00:53.092
  STEP: getting /apis/networking.k8s.iov1 @ 11/12/24 14:00:53.092
  STEP: creating @ 11/12/24 14:00:53.093
  STEP: getting @ 11/12/24 14:00:53.098
  STEP: listing @ 11/12/24 14:00:53.099
  STEP: watching @ 11/12/24 14:00:53.1
  I1112 14:00:53.100446 22 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 11/12/24 14:00:53.1
  STEP: cluster-wide watching @ 11/12/24 14:00:53.101
  I1112 14:00:53.101816 22 ingress.go:198] starting watch
  STEP: patching @ 11/12/24 14:00:53.102
  STEP: updating @ 11/12/24 14:00:53.105
  I1112 14:00:53.108019 22 ingress.go:221] waiting for watch events with expected annotations
  I1112 14:00:53.108047 22 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 11/12/24 14:00:53.108
  STEP: updating /status @ 11/12/24 14:00:53.11
  STEP: get /status @ 11/12/24 14:00:53.113
  STEP: deleting @ 11/12/24 14:00:53.114
  STEP: deleting a collection @ 11/12/24 14:00:53.117
  I1112 14:00:53.125462 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2584" for this suite. @ 11/12/24 14:00:53.178
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 11/12/24 14:00:53.181
  I1112 14:00:53.181693 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:00:53.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:53.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:53.189
  STEP: Creating configMap with name configmap-test-volume-map-fd00661f-67e1-45f6-82a9-283cbd1abf92 @ 11/12/24 14:00:53.19
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:00:53.192
  STEP: Saw pod success @ 11/12/24 14:00:55.199
  I1112 14:00:55.200860 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-95837cde-66cf-4a47-9c7a-93eb7c55e53d container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:00:55.203
  I1112 14:00:55.208383 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4201" for this suite. @ 11/12/24 14:00:55.209
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 11/12/24 14:00:55.212
  I1112 14:00:55.212838 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename statefulset @ 11/12/24 14:00:55.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:00:55.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:00:55.22
  STEP: Creating service test in namespace statefulset-4159 @ 11/12/24 14:00:55.222
  STEP: Creating stateful set ss in namespace statefulset-4159 @ 11/12/24 14:00:55.225
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4159 @ 11/12/24 14:00:55.228
  I1112 14:00:55.230145 22 wait.go:40] Found 0 stateful pods, waiting for 1
  I1112 14:01:05.231288 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 11/12/24 14:01:05.231
  I1112 14:01:05.232477 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-4159 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:01:05.305717 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:01:05.305758 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:01:05.305769 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1112 14:01:05.307156 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1112 14:01:15.308357 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1112 14:01:15.308389 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1112 14:01:15.316341 22 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I1112 14:01:15.316391 22 resource.go:175] ss-0  worker01  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:00:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:00:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:00:55 +0000 UTC  }]
  I1112 14:01:15.316400 22 resource.go:178] 
  I1112 14:01:15.316407 22 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I1112 14:01:16.318478 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.997420938s
  I1112 14:01:17.320842 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.995092238s
  I1112 14:01:18.322974 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.992967591s
  I1112 14:01:19.325916 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.990026456s
  I1112 14:01:20.328006 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.987805148s
  I1112 14:01:21.330607 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.985270169s
  I1112 14:01:22.333682 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.982238505s
  I1112 14:01:23.336439 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.97944587s
  I1112 14:01:24.339612 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 976.451575ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4159 @ 11/12/24 14:01:25.339
  I1112 14:01:25.341763 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-4159 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1112 14:01:25.408624 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1112 14:01:25.408656 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1112 14:01:25.408664 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1112 14:01:25.408697 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-4159 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1112 14:01:25.480047 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1112 14:01:25.480082 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1112 14:01:25.480094 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1112 14:01:25.480136 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-4159 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1112 14:01:25.548537 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1112 14:01:25.548574 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1112 14:01:25.548584 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1112 14:01:25.550140 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I1112 14:01:35.551364 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:01:35.551393 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:01:35.551401 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 11/12/24 14:01:35.551
  I1112 14:01:35.552826 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-4159 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:01:35.619947 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:01:35.619978 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:01:35.619989 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1112 14:01:35.620105 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-4159 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:01:35.690901 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:01:35.690933 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:01:35.690944 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1112 14:01:35.690983 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-4159 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:01:35.758504 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:01:35.758546 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:01:35.758554 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1112 14:01:35.758562 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1112 14:01:35.759982 22 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1112 14:01:45.762145 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1112 14:01:45.762167 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1112 14:01:45.762174 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1112 14:01:45.769772 22 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I1112 14:01:45.769828 22 resource.go:175] ss-0  worker01  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:00:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:00:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:00:55 +0000 UTC  }]
  I1112 14:01:45.769853 22 resource.go:175] ss-1  master01  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:16 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:15 +0000 UTC  }]
  I1112 14:01:45.769881 22 resource.go:175] ss-2  worker02  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:16 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:15 +0000 UTC  }]
  I1112 14:01:45.769892 22 resource.go:178] 
  I1112 14:01:45.769901 22 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I1112 14:01:46.772085 22 resource.go:168] POD   NODE      PHASE      GRACE  CONDITIONS
  I1112 14:01:46.772140 22 resource.go:175] ss-2  worker02  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:15 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:36 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:36 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:01:15 +0000 UTC  }]
  I1112 14:01:46.772148 22 resource.go:178] 
  I1112 14:01:46.772155 22 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 1
  I1112 14:01:47.774049 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.994303631s
  I1112 14:01:48.776070 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.99230269s
  I1112 14:01:49.777726 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.990376304s
  I1112 14:01:50.779598 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.988712388s
  I1112 14:01:51.781483 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.986655483s
  I1112 14:01:52.783415 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.984953811s
  I1112 14:01:53.785472 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.982656309s
  I1112 14:01:54.787879 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 980.490499ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4159 @ 11/12/24 14:01:55.787
  I1112 14:01:55.789720 22 rest.go:150] Scaling statefulset ss to 0
  I1112 14:01:55.791916 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1112 14:01:55.792892 22 statefulset.go:138] Deleting all statefulset in ns statefulset-4159
  I1112 14:01:55.794087 22 rest.go:150] Scaling statefulset ss to 0
  I1112 14:01:55.795901 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1112 14:01:55.796813 22 rest.go:88] Deleting statefulset ss
  I1112 14:01:55.801518 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4159" for this suite. @ 11/12/24 14:01:55.802
• [60.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 11/12/24 14:01:55.805
  I1112 14:01:55.805926 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-webhook @ 11/12/24 14:01:55.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:01:55.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:01:55.814
  STEP: Setting up server cert @ 11/12/24 14:01:55.815
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/12/24 14:01:56.212
  STEP: Deploying the custom resource conversion webhook pod @ 11/12/24 14:01:56.216
  STEP: Wait for the deployment to be ready @ 11/12/24 14:01:56.221
  I1112 14:01:56.223491 22 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/12/24 14:01:58.227
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:01:58.233
  I1112 14:01:59.234750 22 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1112 14:01:59.237853 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Creating a v1 custom resource @ 11/12/24 14:02:01.767
  STEP: Create a v2 custom resource @ 11/12/24 14:02:01.774
  STEP: List CRs in v1 @ 11/12/24 14:02:01.79
  STEP: List CRs in v2 @ 11/12/24 14:02:01.791
  I1112 14:02:02.316871 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5553" for this suite. @ 11/12/24 14:02:02.318
• [6.516 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 11/12/24 14:02:02.322
  I1112 14:02:02.322497 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename dns @ 11/12/24 14:02:02.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:02.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:02.333
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4421.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4421.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 11/12/24 14:02:02.335
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4421.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4421.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 11/12/24 14:02:02.335
  STEP: creating a pod to probe /etc/hosts @ 11/12/24 14:02:02.335
  STEP: submitting the pod to kubernetes @ 11/12/24 14:02:02.335
  STEP: retrieving the pod @ 11/12/24 14:02:18.366
  STEP: looking for the results for each expected name from probers @ 11/12/24 14:02:18.367
  I1112 14:02:18.372897 22 dns_common.go:527] DNS probes using dns-4421/dns-test-38d4ce39-8c70-437e-8217-bbcbb4833a27 succeeded

  STEP: deleting the pod @ 11/12/24 14:02:18.372
  I1112 14:02:18.378585 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4421" for this suite. @ 11/12/24 14:02:18.38
• [16.060 seconds]
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 11/12/24 14:02:18.382
  I1112 14:02:18.382217 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename endpointslice @ 11/12/24 14:02:18.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:18.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:18.39
  STEP: referencing a single matching pod @ 11/12/24 14:02:20.424
  STEP: referencing matching pods with named port @ 11/12/24 14:02:20.427
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 11/12/24 14:02:20.428
  STEP: recreating EndpointSlices after they've been deleted @ 11/12/24 14:02:20.43
  I1112 14:02:20.437098 22 endpointslice.go:938] EndpointSlice for Service endpointslice-4402/example-named-port not found
  I1112 14:02:22.440162 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4402" for this suite. @ 11/12/24 14:02:22.441
• [4.062 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 11/12/24 14:02:22.443
  I1112 14:02:22.443905 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-pred @ 11/12/24 14:02:22.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:22.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:22.452
  I1112 14:02:22.453640 22 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1112 14:02:22.543602 22 util.go:393] Waiting for terminating namespaces to be deleted...
  I1112 14:02:22.545017 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node master01 before test
  I1112 14:02:22.546722 22 predicates.go:957] calico-node-bvtmn from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.546736 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 14:02:22.546745 22 predicates.go:957] dashboard-metrics-scraper-58cf467b87-mmsz8 from kube-system started at 2024-11-12 13:37:25 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.546752 22 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1112 14:02:22.546772 22 predicates.go:957] metrics-server-7cfd7b768f-dtznx from kube-system started at 2024-11-12 13:37:23 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.546779 22 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1112 14:02:22.546787 22 predicates.go:957] node-local-dns-wthbq from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.546794 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 14:02:22.546802 22 predicates.go:957] sonobuoy-e2e-job-0ac2a22d6a0f487f from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 14:02:22.546808 22 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1112 14:02:22.546815 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 14:02:22.546824 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-zvth6 from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 14:02:22.546830 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 14:02:22.546845 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1112 14:02:22.546852 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I1112 14:02:22.548189 22 predicates.go:957] pod1 from endpointslice-4402 started at 2024-11-12 14:02:18 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.548205 22 predicates.go:959] 	Container container1 ready: true, restart count 0
  I1112 14:02:22.548214 22 predicates.go:957] pod2 from endpointslice-4402 started at 2024-11-12 14:02:18 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.548221 22 predicates.go:959] 	Container container1 ready: true, restart count 0
  I1112 14:02:22.548229 22 predicates.go:957] calico-node-m54sf from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.548239 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 14:02:22.548247 22 predicates.go:957] node-local-dns-2b6xg from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.548254 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 14:02:22.548262 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-fbw97 from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 14:02:22.548270 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 14:02:22.548276 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1112 14:02:22.548284 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker02 before test
  I1112 14:02:22.549628 22 predicates.go:957] calico-kube-controllers-555d448d69-zrxx6 from kube-system started at 2024-11-12 13:50:16 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.549641 22 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I1112 14:02:22.549650 22 predicates.go:957] calico-node-k2sjz from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.549657 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 14:02:22.549665 22 predicates.go:957] coredns-66dfb88745-vr48k from kube-system started at 2024-11-12 13:37:21 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.549672 22 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1112 14:02:22.549677 22 predicates.go:957] kubernetes-dashboard-5945846449-wt8g7 from kube-system started at 2024-11-12 13:50:16 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.549682 22 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1112 14:02:22.549687 22 predicates.go:957] node-local-dns-s4fn4 from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.549691 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 14:02:22.549696 22 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-12 13:38:07 +0000 UTC (1 container statuses recorded)
  I1112 14:02:22.549700 22 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1112 14:02:22.549704 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-6z88b from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 14:02:22.549708 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 14:02:22.549711 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/12/24 14:02:22.549
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/12/24 14:02:24.558
  STEP: Trying to apply a random label on the found node. @ 11/12/24 14:02:24.565
  STEP: verifying the node has the label kubernetes.io/e2e-c8743757-8a2d-4d03-8725-16221c00c5b0 42 @ 11/12/24 14:02:24.569
  STEP: Trying to relaunch the pod, now with labels. @ 11/12/24 14:02:24.579
  STEP: removing the label kubernetes.io/e2e-c8743757-8a2d-4d03-8725-16221c00c5b0 off the node worker01 @ 11/12/24 14:02:26.587
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c8743757-8a2d-4d03-8725-16221c00c5b0 @ 11/12/24 14:02:26.592
  I1112 14:02:26.595426 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7383" for this suite. @ 11/12/24 14:02:26.596
• [4.155 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 11/12/24 14:02:26.599
  I1112 14:02:26.599082 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:02:26.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:26.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:26.607
  STEP: Creating configMap with name projected-configmap-test-volume-map-0e72e8fb-0e33-4606-9d8a-71a5c1c06fe4 @ 11/12/24 14:02:26.609
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:02:26.61
  STEP: Saw pod success @ 11/12/24 14:02:30.619
  I1112 14:02:30.620905 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-configmaps-1953b1af-3fbf-4e55-afa6-6c084c0bfbdd container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:02:30.627
  I1112 14:02:30.633593 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1483" for this suite. @ 11/12/24 14:02:30.635
• [4.038 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 11/12/24 14:02:30.637
  I1112 14:02:30.637168 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:02:30.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:30.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:30.645
  STEP: Setting up server cert @ 11/12/24 14:02:30.746
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:02:31.145
  STEP: Deploying the webhook pod @ 11/12/24 14:02:31.149
  STEP: Wait for the deployment to be ready @ 11/12/24 14:02:31.154
  I1112 14:02:31.157522 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/12/24 14:02:33.162
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:02:33.167
  I1112 14:02:34.167750 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 11/12/24 14:02:34.17
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 11/12/24 14:02:34.171
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 11/12/24 14:02:34.171
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 11/12/24 14:02:34.171
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 11/12/24 14:02:34.171
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/12/24 14:02:34.171
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/12/24 14:02:34.172
  I1112 14:02:34.187535 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4800" for this suite. @ 11/12/24 14:02:34.189
  STEP: Destroying namespace "webhook-markers-9926" for this suite. @ 11/12/24 14:02:34.194
• [3.560 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 11/12/24 14:02:34.197
  I1112 14:02:34.197313 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename daemonsets @ 11/12/24 14:02:34.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:34.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:34.206
  I1112 14:02:34.295724 22 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1112 14:02:34.298864 22 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1112 14:02:34.392798 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 14:02:34.392825 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 14:02:35.336281 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1112 14:02:35.336308 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1112 14:02:35.336322 22 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1112 14:02:35.341230 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I1112 14:02:37.346596 22 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1112 14:02:37.350717 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I1112 14:02:37.350743 22 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1112 14:02:37.352143 22 daemon_set.go:1193] Wrong image for pod: daemon-set-jlcbw. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1112 14:02:37.352163 22 daemon_set.go:1198] Pod daemon-set-jlcbw is not available
  I1112 14:02:40.352501 22 daemon_set.go:1198] Pod daemon-set-lf5gf is not available
  STEP: Deleting DaemonSet "daemon-set" @ 11/12/24 14:02:40.356
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-374, will wait for the garbage collector to delete the pods @ 11/12/24 14:02:40.356
  I1112 14:02:40.411137 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.289163ms
  I1112 14:02:40.512008 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.867073ms
  I1112 14:02:42.213518 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 14:02:42.213546 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1112 14:02:42.214800 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16259"},"items":null}

  I1112 14:02:42.215713 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16259"},"items":null}

  I1112 14:02:42.219913 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-374" for this suite. @ 11/12/24 14:02:42.221
• [8.027 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 11/12/24 14:02:42.224
  I1112 14:02:42.224491 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename job @ 11/12/24 14:02:42.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:42.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:42.232
  STEP: Creating a job @ 11/12/24 14:02:42.234
  STEP: Ensuring active pods == parallelism @ 11/12/24 14:02:42.237
  STEP: delete a job @ 11/12/24 14:02:44.239
  STEP: deleting Job.batch foo in namespace job-9380, will wait for the garbage collector to delete the pods @ 11/12/24 14:02:44.239
  I1112 14:02:44.293373 22 resources.go:139] Deleting Job.batch foo took: 2.455391ms
  I1112 14:02:44.394494 22 resources.go:163] Terminating Job.batch foo pods took: 101.11771ms
  STEP: Ensuring job was deleted @ 11/12/24 14:02:45.195
  I1112 14:02:45.196529 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9380" for this suite. @ 11/12/24 14:02:45.198
• [2.976 seconds]
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 11/12/24 14:02:45.2
  I1112 14:02:45.200461 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename endpointslice @ 11/12/24 14:02:45.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:45.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:45.208
  I1112 14:02:45.212417 22 endpointslice.go:1045] Endpoints addresses: [10.255.0.206] , ports: [6443]
  I1112 14:02:45.212437 22 endpointslice.go:1075] EndpointSlices addresses: [10.255.0.206] , ports: [6443]
  I1112 14:02:45.212511 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6071" for this suite. @ 11/12/24 14:02:45.298
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 11/12/24 14:02:45.301
  I1112 14:02:45.301560 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 14:02:45.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:45.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:45.318
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/12/24 14:02:45.319
  STEP: Saw pod success @ 11/12/24 14:02:47.326
  I1112 14:02:47.327878 22 output.go:196] Trying to get logs from node worker01 pod pod-d33f48a7-d804-4c3e-85e9-ae3ac866d234 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 14:02:47.33
  I1112 14:02:47.336237 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2554" for this suite. @ 11/12/24 14:02:47.337
• [2.039 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 11/12/24 14:02:47.34
  I1112 14:02:47.340685 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename statefulset @ 11/12/24 14:02:47.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:02:47.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:02:47.349
  STEP: Creating service test in namespace statefulset-6998 @ 11/12/24 14:02:47.351
  STEP: Creating statefulset ss in namespace statefulset-6998 @ 11/12/24 14:02:47.355
  I1112 14:02:47.359867 22 wait.go:40] Found 0 stateful pods, waiting for 1
  I1112 14:02:57.360928 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 11/12/24 14:02:57.363
  STEP: Getting /status @ 11/12/24 14:02:57.37
  I1112 14:02:57.372109 22 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 11/12/24 14:02:57.372
  I1112 14:02:57.375455 22 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 11/12/24 14:02:57.375
  I1112 14:02:57.376399 22 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1112 14:02:57.376422 22 statefulset.go:1111] Found Statefulset ss in namespace statefulset-6998 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1112 14:02:57.376433 22 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 11/12/24 14:02:57.376
  I1112 14:02:57.376460 22 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1112 14:02:57.380056 22 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 11/12/24 14:02:57.38
  I1112 14:02:57.380920 22 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1112 14:02:57.380973 22 statefulset.go:138] Deleting all statefulset in ns statefulset-6998
  I1112 14:02:57.382013 22 rest.go:150] Scaling statefulset ss to 0
  I1112 14:03:07.389657 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1112 14:03:07.390854 22 rest.go:88] Deleting statefulset ss
  I1112 14:03:07.397274 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6998" for this suite. @ 11/12/24 14:03:07.398
• [20.060 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 11/12/24 14:03:07.401
  I1112 14:03:07.401348 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:03:07.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:07.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:07.409
  STEP: Creating the pod @ 11/12/24 14:03:07.411
  I1112 14:03:09.929082 22 pod_client.go:173] Successfully updated pod "annotationupdatec4d42b2e-c36b-4dd2-8a53-06e6e0b2438e"
  I1112 14:03:13.939074 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-966" for this suite. @ 11/12/24 14:03:13.94
• [6.543 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 11/12/24 14:03:13.943
  I1112 14:03:13.943997 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename security-context @ 11/12/24 14:03:13.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:13.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:13.951
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/12/24 14:03:13.952
  STEP: Saw pod success @ 11/12/24 14:03:17.961
  I1112 14:03:17.963061 22 output.go:196] Trying to get logs from node worker01 pod security-context-de09c141-a915-485a-aae5-732d0fc84165 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 14:03:17.965
  I1112 14:03:17.971373 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8944" for this suite. @ 11/12/24 14:03:17.972
• [4.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 11/12/24 14:03:17.975
  I1112 14:03:17.975056 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename watch @ 11/12/24 14:03:17.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:17.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:17.983
  STEP: creating a watch on configmaps with a certain label @ 11/12/24 14:03:17.984
  STEP: creating a new configmap @ 11/12/24 14:03:17.985
  STEP: modifying the configmap once @ 11/12/24 14:03:17.986
  STEP: changing the label value of the configmap @ 11/12/24 14:03:17.989
  STEP: Expecting to observe a delete notification for the watched object @ 11/12/24 14:03:17.991
  I1112 14:03:17.992058 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6090  5bb32928-20c7-4e98-8c9b-ef48d8e6cd1b 16575 0 2024-11-12 14:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-12 14:03:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:03:17.992164 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6090  5bb32928-20c7-4e98-8c9b-ef48d8e6cd1b 16576 0 2024-11-12 14:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-12 14:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:03:17.992263 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6090  5bb32928-20c7-4e98-8c9b-ef48d8e6cd1b 16577 0 2024-11-12 14:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-12 14:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 11/12/24 14:03:17.992
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 11/12/24 14:03:17.994
  STEP: changing the label value of the configmap back @ 11/12/24 14:03:27.995
  STEP: modifying the configmap a third time @ 11/12/24 14:03:27.999
  STEP: deleting the configmap @ 11/12/24 14:03:28.006
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 11/12/24 14:03:28.008
  I1112 14:03:28.008788 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6090  5bb32928-20c7-4e98-8c9b-ef48d8e6cd1b 16622 0 2024-11-12 14:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-12 14:03:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:03:28.008912 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6090  5bb32928-20c7-4e98-8c9b-ef48d8e6cd1b 16623 0 2024-11-12 14:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-12 14:03:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:03:28.008987 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6090  5bb32928-20c7-4e98-8c9b-ef48d8e6cd1b 16624 0 2024-11-12 14:03:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-12 14:03:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:03:28.009056 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6090" for this suite. @ 11/12/24 14:03:28.01
• [10.037 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 11/12/24 14:03:28.012
  I1112 14:03:28.012638 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 14:03:28.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:28.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:28.02
  I1112 14:03:28.035793 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2108" for this suite. @ 11/12/24 14:03:28.111
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 11/12/24 14:03:28.114
  I1112 14:03:28.114468 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename security-context @ 11/12/24 14:03:28.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:28.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:28.122
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/12/24 14:03:28.124
  STEP: Saw pod success @ 11/12/24 14:03:32.133
  I1112 14:03:32.134429 22 output.go:196] Trying to get logs from node worker01 pod security-context-92532259-d7ef-4480-817d-50e216cc0743 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 14:03:32.136
  I1112 14:03:32.142884 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4729" for this suite. @ 11/12/24 14:03:32.144
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 11/12/24 14:03:32.146
  I1112 14:03:32.146946 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:03:32.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:32.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:32.155
  STEP: Creating configMap with name configmap-test-volume-map-23da1403-b3a5-4996-bcd3-fcaf9cbfe411 @ 11/12/24 14:03:32.157
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:03:32.159
  STEP: Saw pod success @ 11/12/24 14:03:36.168
  I1112 14:03:36.169473 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-a41092a1-af74-430f-b0d5-56351d4e77b6 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:03:36.172
  I1112 14:03:36.178588 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7328" for this suite. @ 11/12/24 14:03:36.179
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 11/12/24 14:03:36.182
  I1112 14:03:36.182413 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename daemonsets @ 11/12/24 14:03:36.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:36.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:36.19
  I1112 14:03:36.283761 22 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/12/24 14:03:36.286
  I1112 14:03:36.382040 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 14:03:36.382070 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 14:03:37.289627 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1112 14:03:37.289648 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 11/12/24 14:03:37.293
  STEP: Check that daemon pods images are updated. @ 11/12/24 14:03:37.389
  I1112 14:03:37.390616 22 daemon_set.go:1193] Wrong image for pod: daemon-set-6df78. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1112 14:03:37.390643 22 daemon_set.go:1193] Wrong image for pod: daemon-set-7fnrg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1112 14:03:38.393039 22 daemon_set.go:1193] Wrong image for pod: daemon-set-6df78. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1112 14:03:38.393068 22 daemon_set.go:1193] Wrong image for pod: daemon-set-7fnrg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1112 14:03:39.391887 22 daemon_set.go:1193] Wrong image for pod: daemon-set-6df78. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1112 14:03:41.392123 22 daemon_set.go:1198] Pod daemon-set-pkrlp is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 11/12/24 14:03:41.393
  I1112 14:03:41.395714 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1112 14:03:41.395735 22 fixtures.go:130] Node worker02 is running 0 daemon pod, expected 1
  I1112 14:03:42.396820 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1112 14:03:42.396840 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/12/24 14:03:42.402
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6645, will wait for the garbage collector to delete the pods @ 11/12/24 14:03:42.402
  I1112 14:03:42.456475 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.687278ms
  I1112 14:03:42.556689 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.21183ms
  I1112 14:03:45.058595 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 14:03:45.058621 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1112 14:03:45.059942 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16894"},"items":null}

  I1112 14:03:45.060897 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16894"},"items":null}

  I1112 14:03:45.073814 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6645" for this suite. @ 11/12/24 14:03:45.075
• [8.895 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 11/12/24 14:03:45.077
  I1112 14:03:45.077207 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:03:45.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:45.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:45.085
  STEP: creating all guestbook components @ 11/12/24 14:03:45.086
  I1112 14:03:45.086732 22 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1112 14:03:45.086843 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 create -f -'
  I1112 14:03:45.167632 22 builder.go:146] stderr: ""
  I1112 14:03:45.167672 22 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1112 14:03:45.167717 22 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1112 14:03:45.167788 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 create -f -'
  I1112 14:03:45.253412 22 builder.go:146] stderr: ""
  I1112 14:03:45.253448 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1112 14:03:45.253491 22 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1112 14:03:45.253557 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 create -f -'
  I1112 14:03:45.339994 22 builder.go:146] stderr: ""
  I1112 14:03:45.340030 22 builder.go:147] stdout: "service/frontend created\n"
  I1112 14:03:45.340087 22 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1112 14:03:45.340166 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 create -f -'
  I1112 14:03:45.403193 22 builder.go:146] stderr: ""
  I1112 14:03:45.403221 22 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1112 14:03:45.403283 22 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1112 14:03:45.403394 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 create -f -'
  I1112 14:03:45.488582 22 builder.go:146] stderr: ""
  I1112 14:03:45.488616 22 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1112 14:03:45.488676 22 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1112 14:03:45.488756 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 create -f -'
  I1112 14:03:45.561138 22 builder.go:146] stderr: ""
  I1112 14:03:45.561168 22 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 11/12/24 14:03:45.561
  I1112 14:03:45.561202 22 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I1112 14:03:50.612282 22 kubectl.go:2276] Waiting for frontend to serve content.
  I1112 14:03:50.616629 22 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1112 14:03:50.620340 22 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 11/12/24 14:03:50.623
  I1112 14:03:50.623818 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 delete --grace-period=0 --force -f -'
  I1112 14:03:50.670242 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1112 14:03:50.670278 22 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 11/12/24 14:03:50.67
  I1112 14:03:50.670372 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 delete --grace-period=0 --force -f -'
  I1112 14:03:50.718556 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1112 14:03:50.718587 22 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/12/24 14:03:50.718
  I1112 14:03:50.718678 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 delete --grace-period=0 --force -f -'
  I1112 14:03:50.768148 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1112 14:03:50.768179 22 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/12/24 14:03:50.768
  I1112 14:03:50.768283 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 delete --grace-period=0 --force -f -'
  I1112 14:03:50.813174 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1112 14:03:50.813213 22 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/12/24 14:03:50.813
  I1112 14:03:50.813331 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 delete --grace-period=0 --force -f -'
  I1112 14:03:50.875332 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1112 14:03:50.875367 22 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/12/24 14:03:50.875
  I1112 14:03:50.875452 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-5139 delete --grace-period=0 --force -f -'
  I1112 14:03:50.926782 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1112 14:03:50.926822 22 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1112 14:03:50.926933 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5139" for this suite. @ 11/12/24 14:03:50.933
• [5.861 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 11/12/24 14:03:50.938
  I1112 14:03:50.938834 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replicaset @ 11/12/24 14:03:50.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:50.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:50.949
  STEP: Create a ReplicaSet @ 11/12/24 14:03:50.951
  STEP: Verify that the required pods have come up @ 11/12/24 14:03:50.954
  I1112 14:03:50.955694 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1112 14:03:55.957987 22 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 11/12/24 14:03:55.958
  I1112 14:03:55.959171 22 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 11/12/24 14:03:55.959
  STEP: DeleteCollection of the ReplicaSets @ 11/12/24 14:03:55.96
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 11/12/24 14:03:55.962
  I1112 14:03:55.964389 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7985" for this suite. @ 11/12/24 14:03:55.966
• [5.034 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 11/12/24 14:03:55.972
  I1112 14:03:55.972670 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/12/24 14:03:55.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:55.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:55.988
  STEP: Creating two CSIDrivers @ 11/12/24 14:03:55.989
  STEP: Getting "inline-driver-7ffb5edd-8486-484f-a5c9-0d448709e5d1" & "inline-driver-263b5e28-d269-4de4-95b3-729bf2b9abc8" @ 11/12/24 14:03:55.995
  STEP: Patching the CSIDriver "inline-driver-263b5e28-d269-4de4-95b3-729bf2b9abc8" @ 11/12/24 14:03:55.996
  STEP: Updating the CSIDriver "inline-driver-263b5e28-d269-4de4-95b3-729bf2b9abc8" @ 11/12/24 14:03:56.001
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3161" @ 11/12/24 14:03:56.006
  STEP: Deleting CSIDriver "inline-driver-7ffb5edd-8486-484f-a5c9-0d448709e5d1" @ 11/12/24 14:03:56.007
  STEP: Confirm deletion of CSIDriver "inline-driver-7ffb5edd-8486-484f-a5c9-0d448709e5d1" @ 11/12/24 14:03:56.009
  STEP: Deleting CSIDriver "inline-driver-263b5e28-d269-4de4-95b3-729bf2b9abc8" via DeleteCollection @ 11/12/24 14:03:56.01
  STEP: Confirm deletion of CSIDriver "inline-driver-263b5e28-d269-4de4-95b3-729bf2b9abc8" @ 11/12/24 14:03:56.013
  I1112 14:03:56.014440 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3161" for this suite. @ 11/12/24 14:03:56.067
• [0.097 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 11/12/24 14:03:56.07
  I1112 14:03:56.070248 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename podtemplate @ 11/12/24 14:03:56.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:56.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:56.085
  STEP: Create a pod template @ 11/12/24 14:03:56.087
  STEP: Replace a pod template @ 11/12/24 14:03:56.092
  I1112 14:03:56.096674 22 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1112 14:03:56.096752 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7493" for this suite. @ 11/12/24 14:03:56.167
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 11/12/24 14:03:56.17
  I1112 14:03:56.170082 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/12/24 14:03:56.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:56.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:56.192
  I1112 14:03:56.194399 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:03:59.220575 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-295" for this suite. @ 11/12/24 14:03:59.222
• [3.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 11/12/24 14:03:59.224
  I1112 14:03:59.224812 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 14:03:59.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:03:59.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:03:59.233
  STEP: Create set of pods @ 11/12/24 14:03:59.234
  I1112 14:03:59.238185 22 pods.go:871] created test-pod-1
  I1112 14:03:59.240972 22 pods.go:871] created test-pod-2
  I1112 14:03:59.246217 22 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 11/12/24 14:03:59.246
  STEP: waiting for all pods to be deleted @ 11/12/24 14:04:01.258
  I1112 14:04:01.259698 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1112 14:04:02.260532 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1112 14:04:03.261173 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4557" for this suite. @ 11/12/24 14:04:03.262
• [4.040 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 11/12/24 14:04:03.265
  I1112 14:04:03.265057 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 14:04:03.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:04:03.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:04:03.273
  STEP: creating secret secrets-6247/secret-test-e72ee721-12d3-4282-9c85-e2c6c01973ad @ 11/12/24 14:04:03.275
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:04:03.276
  STEP: Saw pod success @ 11/12/24 14:04:07.285
  I1112 14:04:07.286563 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-81409f1c-255e-4d89-95e8-ccd2453e37be container env-test: <nil>
  STEP: delete the pod @ 11/12/24 14:04:07.289
  I1112 14:04:07.295101 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6247" for this suite. @ 11/12/24 14:04:07.296
• [4.033 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 11/12/24 14:04:07.298
  I1112 14:04:07.298555 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:04:07.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:04:07.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:04:07.306
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/12/24 14:04:07.308
  I1112 14:04:07.308373 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8195 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1112 14:04:07.353425 22 builder.go:146] stderr: ""
  I1112 14:04:07.353459 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/12/24 14:04:07.353
  I1112 14:04:07.355577 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8195 delete pods e2e-test-httpd-pod'
  I1112 14:04:09.321311 22 builder.go:146] stderr: ""
  I1112 14:04:09.321341 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1112 14:04:09.321439 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8195" for this suite. @ 11/12/24 14:04:09.322
• [2.026 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 11/12/24 14:04:09.325
  I1112 14:04:09.325101 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:04:09.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:04:09.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:04:09.332
  STEP: Creating a pod to test downward api env vars @ 11/12/24 14:04:09.334
  STEP: Saw pod success @ 11/12/24 14:04:13.344
  I1112 14:04:13.345861 22 output.go:196] Trying to get logs from node worker01 pod downward-api-c5b10405-4753-4539-81f1-41bcd2e8154b container dapi-container: <nil>
  STEP: delete the pod @ 11/12/24 14:04:13.348
  I1112 14:04:13.358475 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1334" for this suite. @ 11/12/24 14:04:13.359
• [4.037 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 11/12/24 14:04:13.362
  I1112 14:04:13.362170 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:04:13.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:04:13.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:04:13.369
  STEP: Creating configMap with name projected-configmap-test-volume-325daf27-a3a2-46aa-aea8-00b547e60e73 @ 11/12/24 14:04:13.371
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:04:13.373
  STEP: Saw pod success @ 11/12/24 14:04:17.382
  I1112 14:04:17.383583 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-configmaps-a447b216-53c3-4088-b37d-2a27c3570b08 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:04:17.385
  I1112 14:04:17.392836 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7813" for this suite. @ 11/12/24 14:04:17.394
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 11/12/24 14:04:17.397
  I1112 14:04:17.397450 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replicaset @ 11/12/24 14:04:17.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:04:17.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:04:17.405
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 11/12/24 14:04:17.406
  I1112 14:04:17.410465 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1112 14:04:22.414654 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/12/24 14:04:22.414
  STEP: getting scale subresource @ 11/12/24 14:04:22.414
  STEP: updating a scale subresource @ 11/12/24 14:04:22.416
  STEP: verifying the replicaset Spec.Replicas was modified @ 11/12/24 14:04:22.418
  STEP: Patch a scale subresource @ 11/12/24 14:04:22.419
  I1112 14:04:22.426376 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4059" for this suite. @ 11/12/24 14:04:22.431
• [5.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 11/12/24 14:04:22.435
  I1112 14:04:22.435672 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename statefulset @ 11/12/24 14:04:22.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:04:22.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:04:22.443
  STEP: Creating service test in namespace statefulset-7846 @ 11/12/24 14:04:22.445
  STEP: Creating a new StatefulSet @ 11/12/24 14:04:22.447
  I1112 14:04:22.515660 22 wait.go:40] Found 0 stateful pods, waiting for 3
  I1112 14:04:32.453287 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:04:32.453316 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:04:32.453323 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/12/24 14:04:32.456
  I1112 14:04:32.461147 22 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 11/12/24 14:04:32.461
  STEP: Not applying an update when the partition is greater than the number of replicas @ 11/12/24 14:04:42.466
  STEP: Performing a canary update @ 11/12/24 14:04:42.466
  I1112 14:04:42.470875 22 statefulset.go:2507] Updating stateful set ss2
  I1112 14:04:42.476529 22 wait.go:74] Waiting for Pod statefulset-7846/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 11/12/24 14:04:52.474
  I1112 14:04:52.495579 22 wait.go:40] Found 1 stateful pods, waiting for 3
  I1112 14:05:02.496562 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:05:02.496589 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:05:02.496598 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 11/12/24 14:05:02.498
  I1112 14:05:02.503355 22 statefulset.go:2507] Updating stateful set ss2
  I1112 14:05:02.507369 22 wait.go:74] Waiting for Pod statefulset-7846/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1112 14:05:12.512384 22 statefulset.go:2507] Updating stateful set ss2
  I1112 14:05:12.517125 22 wait.go:56] Waiting for StatefulSet statefulset-7846/ss2 to complete update
  I1112 14:05:12.517166 22 wait.go:63] Waiting for Pod statefulset-7846/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1112 14:05:22.518069 22 statefulset.go:138] Deleting all statefulset in ns statefulset-7846
  I1112 14:05:22.519212 22 rest.go:150] Scaling statefulset ss2 to 0
  I1112 14:05:32.526945 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1112 14:05:32.528163 22 rest.go:88] Deleting statefulset ss2
  I1112 14:05:32.533043 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7846" for this suite. @ 11/12/24 14:05:32.534
• [70.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 11/12/24 14:05:32.537
  I1112 14:05:32.537579 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename subjectreview @ 11/12/24 14:05:32.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:05:32.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:05:32.545
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1744" @ 11/12/24 14:05:32.547
  I1112 14:05:32.548867 22 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1744:e2e"
  I1112 14:05:32.548910 22 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1744"}
  I1112 14:05:32.548920 22 subjectreviews.go:71] saUID: "add01ad7-b78c-4806-b492-4922cb7d62bf"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1744:e2e" @ 11/12/24 14:05:32.548
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1744:e2e" @ 11/12/24 14:05:32.549
  I1112 14:05:32.549958 22 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1744:e2e" api 'list' configmaps in "subjectreview-1744" namespace @ 11/12/24 14:05:32.549
  I1112 14:05:32.550874 22 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1744:e2e" @ 11/12/24 14:05:32.55
  I1112 14:05:32.551830 22 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1112 14:05:32.551844 22 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1112 14:05:32.551910 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1744" for this suite. @ 11/12/24 14:05:32.635
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 11/12/24 14:05:32.639
  I1112 14:05:32.639484 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename deployment @ 11/12/24 14:05:32.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:05:32.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:05:32.648
  STEP: creating a Deployment @ 11/12/24 14:05:32.65
  STEP: waiting for Deployment to be created @ 11/12/24 14:05:32.653
  STEP: waiting for all Replicas to be Ready @ 11/12/24 14:05:32.654
  I1112 14:05:32.655347 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1112 14:05:32.655367 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1112 14:05:32.660075 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1112 14:05:32.660099 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1112 14:05:32.666654 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1112 14:05:32.666679 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1112 14:05:32.680869 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1112 14:05:32.680899 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1112 14:05:33.455166 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1112 14:05:33.455192 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1112 14:05:33.457861 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 11/12/24 14:05:33.457
  I1112 14:05:33.463264 22 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 11/12/24 14:05:33.463
  I1112 14:05:33.464150 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0
  I1112 14:05:33.464191 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0
  I1112 14:05:33.464208 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0
  I1112 14:05:33.464217 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0
  I1112 14:05:33.464228 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0
  I1112 14:05:33.464236 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0
  I1112 14:05:33.464286 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0
  I1112 14:05:33.464331 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 0
  I1112 14:05:33.464355 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:33.464368 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:33.464379 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:33.464388 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:33.464465 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:33.464473 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:33.469640 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:33.469733 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:33.477495 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:33.477517 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:33.481355 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:33.481433 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:33.487766 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:33.487785 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:34.461766 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:34.461796 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:34.475677 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  STEP: listing Deployments @ 11/12/24 14:05:34.475
  I1112 14:05:34.477231 22 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 11/12/24 14:05:34.477
  I1112 14:05:34.482753 22 deployment.go:360] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 11/12/24 14:05:34.482
  I1112 14:05:34.486688 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1112 14:05:34.507664 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1112 14:05:34.518596 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1112 14:05:34.528560 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1112 14:05:34.532315 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1112 14:05:35.118124 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1112 14:05:35.465295 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I1112 14:05:35.475302 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1112 14:05:35.486057 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1112 14:05:36.467608 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 11/12/24 14:05:36.475
  STEP: fetching the DeploymentStatus @ 11/12/24 14:05:36.479
  I1112 14:05:36.481369 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:36.481432 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:36.481448 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:36.481533 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:36.481542 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 1
  I1112 14:05:36.481747 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:36.481818 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 3
  I1112 14:05:36.481864 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:36.481986 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 2
  I1112 14:05:36.482001 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-552 with ReadyReplicas 3
  STEP: deleting the Deployment @ 11/12/24 14:05:36.482
  I1112 14:05:36.485327 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485555 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485599 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485730 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485743 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485753 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485841 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485850 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485859 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485939 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485947 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.485956 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.486018 22 deployment.go:475] observed event type MODIFIED
  I1112 14:05:36.487124 22 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1112 14:05:36.488679 22 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e34438c-7e34-4cad-867e-f9bedd4242a3",
      ResourceVersion: (string) (len=5) "18225",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0aa22798-ac74-4a58-8814-7267d0404ff4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 61 61 32  32 37 39 38 2d 61 63 37  |":\"0aa22798-ac7|
              00000130  34 2d 34 61 35 38 2d 38  38 31 34 2d 37 32 36 37  |4-4a58-8814-7267|
              00000140  64 30 34 30 34 66 66 34  5c 22 7d 22 3a 7b 7d 7d  |d0404ff4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1112 14:05:36.491475 22 deployment.go:669] pod: "test-deployment-6c86c7f765-5wncx":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-5wncx",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=14) "deployment-552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b114dbe8-e287-4e7c-be3e-e88a4366971e",
      ResourceVersion: (string) (len=5) "18223",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017135,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "7e34438c-7e34-4cad-867e-f9bedd4242a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 65 33 34 34 33 38 63  |uid\":\"7e34438c|
              000000a0  2d 37 65 33 34 2d 34 63  61 64 2d 38 36 37 65 2d  |-7e34-4cad-867e-|
              000000b0  66 39 62 65 64 64 34 32  34 32 61 33 5c 22 7d 22  |f9bedd4242a3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 34 31  2e 31 31 31 5c 22 7d 22  |2.20.241.111\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-48z62",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-48z62",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=14) "172.20.241.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.241.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017135,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867017135,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://14865f0473c7375ed297bb76e1f074a8b6404eb35085e4b88fc34a5343d3773e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-48z62",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1112 14:05:36.492927 22 deployment.go:669] pod: "test-deployment-6c86c7f765-7ffc5":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-7ffc5",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=14) "deployment-552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06642ecd-3cd7-4771-a3f6-b7d597210bc3",
      ResourceVersion: (string) (len=5) "18186",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "7e34438c-7e34-4cad-867e-f9bedd4242a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 65 33 34 34 33 38 63  |uid\":\"7e34438c|
              000000a0  2d 37 65 33 34 2d 34 63  61 64 2d 38 36 37 65 2d  |-7e34-4cad-867e-|
              000000b0  66 39 62 65 64 64 34 32  34 32 61 33 5c 22 7d 22  |f9bedd4242a3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 35  37 5c 22 7d 22 3a 7b 22  |2.20.5.57\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ltl8v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ltl8v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867017135,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e12ccb4f3965fc47e7f2429b5d7c4a4479da03d83e31a78d6c2c45db5f9a9006",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ltl8v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1112 14:05:36.494257 22 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "904a479b-dcbb-4a9f-ad1b-f9dffab95f5f",
      ResourceVersion: (string) (len=5) "18234",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017133,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0aa22798-ac74-4a58-8814-7267d0404ff4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 61 61 32  32 37 39 38 2d 61 63 37  |":\"0aa22798-ac7|
              00000130  34 2d 34 61 35 38 2d 38  38 31 34 2d 37 32 36 37  |4-4a58-8814-7267|
              00000140  64 30 34 30 34 66 66 34  5c 22 7d 22 3a 7b 7d 7d  |d0404ff4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1112 14:05:36.496535 22 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-fjm4k":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-fjm4k",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=14) "deployment-552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d13b960-12b3-4362-bcd8-850004eaa799",
      ResourceVersion: (string) (len=5) "18229",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "904a479b-dcbb-4a9f-ad1b-f9dffab95f5f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 30 34 61 34 37 39 62  |uid\":\"904a479b|
              000000a0  2d 64 63 62 62 2d 34 61  39 66 2d 61 64 31 62 2d  |-dcbb-4a9f-ad1b-|
              000000b0  66 39 64 66 66 61 62 39  35 66 35 66 5c 22 7d 22  |f9dffab95f5f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 33 30 2e  39 38 5c 22 7d 22 3a 7b  |2.20.30.98\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-99882",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-99882",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=12) "172.20.30.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.30.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867017134,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=40) "easzlab.io.local:5000/easzlab/pause:3.10",
          ImageID: (string) (len=107) "easzlab.io.local:5000/easzlab/pause@sha256:d8c8296a995aa91d1a888d405d98f3c4a317fe2b5790b996051f7ff1184a3694",
          ContainerID: (string) (len=77) "containerd://471e37e59402fcd92094029e239dd32b0657e619463782e3e52c1eb7bb222066",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-99882",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1112 14:05:36.497717 22 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a0802f4-1e40-4a48-95bb-8af8f741b026",
      ResourceVersion: (string) (len=5) "18135",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0aa22798-ac74-4a58-8814-7267d0404ff4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 61 61 32  32 37 39 38 2d 61 63 37  |":\"0aa22798-ac7|
              00000130  34 2d 34 61 35 38 2d 38  38 31 34 2d 37 32 36 37  |4-4a58-8814-7267|
              00000140  64 30 34 30 34 66 66 34  5c 22 7d 22 3a 7b 7d 7d  |d0404ff4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1112 14:05:36.502864 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-552" for this suite. @ 11/12/24 14:05:36.504
• [3.867 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 11/12/24 14:05:36.507
  I1112 14:05:36.507084 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 14:05:36.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:05:36.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:05:36.516
  STEP: Creating a ResourceQuota with best effort scope @ 11/12/24 14:05:36.517
  STEP: Ensuring ResourceQuota status is calculated @ 11/12/24 14:05:36.519
  STEP: Creating a ResourceQuota with not best effort scope @ 11/12/24 14:05:38.522
  STEP: Ensuring ResourceQuota status is calculated @ 11/12/24 14:05:38.524
  STEP: Creating a best-effort pod @ 11/12/24 14:05:40.526
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 11/12/24 14:05:40.531
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 11/12/24 14:05:42.534
  STEP: Deleting the pod @ 11/12/24 14:05:44.536
  STEP: Ensuring resource quota status released the pod usage @ 11/12/24 14:05:44.541
  STEP: Creating a not best-effort pod @ 11/12/24 14:05:46.543
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 11/12/24 14:05:46.548
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 11/12/24 14:05:48.551
  STEP: Deleting the pod @ 11/12/24 14:05:50.553
  STEP: Ensuring resource quota status released the pod usage @ 11/12/24 14:05:50.558
  I1112 14:05:52.560829 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-483" for this suite. @ 11/12/24 14:05:52.562
• [16.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 11/12/24 14:05:52.565
  I1112 14:05:52.565015 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/12/24 14:05:52.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:05:52.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:05:52.573
  I1112 14:05:52.574802 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:05:53.093606 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8478" for this suite. @ 11/12/24 14:05:53.095
• [0.532 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 11/12/24 14:05:53.097
  I1112 14:05:53.097609 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename prestop @ 11/12/24 14:05:53.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:05:53.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:05:53.106
  STEP: Creating server pod server in namespace prestop-8736 @ 11/12/24 14:05:53.108
  STEP: Waiting for pods to come up. @ 11/12/24 14:05:53.112
  STEP: Creating tester pod tester in namespace prestop-8736 @ 11/12/24 14:05:55.116
  STEP: Deleting pre-stop pod @ 11/12/24 14:05:57.122
  I1112 14:06:02.129081 22 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 11/12/24 14:06:02.129
  I1112 14:06:02.134831 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8736" for this suite. @ 11/12/24 14:06:02.136
• [9.041 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 11/12/24 14:06:02.138
  I1112 14:06:02.138583 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pod-network-test @ 11/12/24 14:06:02.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:06:02.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:06:02.146
  STEP: Performing setup for networking test in namespace pod-network-test-9984 @ 11/12/24 14:06:02.147
  STEP: creating a selector @ 11/12/24 14:06:02.147
  STEP: Creating the service pods in kubernetes @ 11/12/24 14:06:02.147
  I1112 14:06:02.147786 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/12/24 14:06:14.272
  I1112 14:06:16.284046 22 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1112 14:06:16.284074 22 utils.go:496] Going to poll 172.20.241.110 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1112 14:06:16.285018 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.241.110 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9984 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:06:16.285038 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:06:16.285424 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:06:16.285468 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9984/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.241.110+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1112 14:06:17.317573 22 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1112 14:06:17.317607 22 utils.go:496] Going to poll 172.20.5.56 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1112 14:06:17.319285 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.5.56 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9984 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:06:17.319310 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:06:17.319646 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:06:17.319689 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9984/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.5.56+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1112 14:06:18.348044 22 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1112 14:06:18.348080 22 utils.go:496] Going to poll 172.20.30.79 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1112 14:06:18.349767 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.30.79 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9984 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:06:18.349788 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:06:18.350146 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:06:18.350189 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9984/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.30.79+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1112 14:06:19.378560 22 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1112 14:06:19.378679 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9984" for this suite. @ 11/12/24 14:06:19.38
• [17.244 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 11/12/24 14:06:19.383
  I1112 14:06:19.383124 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:06:19.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:06:19.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:06:19.391
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:06:19.392
  STEP: Saw pod success @ 11/12/24 14:06:23.402
  I1112 14:06:23.404141 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-156cfa2a-0c10-4896-b85a-ff00c225e6d5 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:06:23.417
  I1112 14:06:23.422625 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5016" for this suite. @ 11/12/24 14:06:23.423
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 11/12/24 14:06:23.426
  I1112 14:06:23.426268 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:06:23.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:06:23.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:06:23.433
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:06:23.434
  STEP: Saw pod success @ 11/12/24 14:06:27.444
  I1112 14:06:27.445950 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-d6370fb2-72b9-47f4-aabe-0a915c7be4c5 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:06:27.448
  I1112 14:06:27.454834 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3961" for this suite. @ 11/12/24 14:06:27.456
• [4.032 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 11/12/24 14:06:27.458
  I1112 14:06:27.458365 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:06:27.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:06:27.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:06:27.466
  STEP: Setting up server cert @ 11/12/24 14:06:27.565
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:06:28.068
  STEP: Deploying the webhook pod @ 11/12/24 14:06:28.073
  STEP: Wait for the deployment to be ready @ 11/12/24 14:06:28.078
  I1112 14:06:28.081867 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/12/24 14:06:30.087
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:06:30.091
  I1112 14:06:31.092239 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 11/12/24 14:06:31.095
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 11/12/24 14:06:31.103
  STEP: Creating a configMap that should not be mutated @ 11/12/24 14:06:31.106
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 11/12/24 14:06:31.11
  STEP: Creating a configMap that should be mutated @ 11/12/24 14:06:31.113
  I1112 14:06:31.138788 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2441" for this suite. @ 11/12/24 14:06:31.14
  STEP: Destroying namespace "webhook-markers-9747" for this suite. @ 11/12/24 14:06:31.145
• [3.689 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 11/12/24 14:06:31.147
  I1112 14:06:31.147971 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename dns @ 11/12/24 14:06:31.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:06:31.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:06:31.157
  STEP: Creating a test headless service @ 11/12/24 14:06:31.159
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2833.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2833.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local;sleep 1; done
   @ 11/12/24 14:06:31.161
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2833.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2833.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local;sleep 1; done
   @ 11/12/24 14:06:31.161
  STEP: creating a pod to probe DNS @ 11/12/24 14:06:31.161
  STEP: submitting the pod to kubernetes @ 11/12/24 14:06:31.161
  STEP: retrieving the pod @ 11/12/24 14:06:33.172
  STEP: looking for the results for each expected name from probers @ 11/12/24 14:06:33.173
  I1112 14:06:33.175673 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:33.176918 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:33.178038 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:33.179103 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:33.180176 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:33.181223 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:33.182238 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:33.183331 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:33.183349 22 dns_common.go:489] Lookups using dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local]

  I1112 14:06:33.185546 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:06:33.187425 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:06:33.195608 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:06:38.177407 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:38.178802 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:38.179959 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:38.181053 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:38.182169 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:38.183214 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:38.184227 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:38.185309 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:38.185328 22 dns_common.go:489] Lookups using dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local]

  I1112 14:06:38.187429 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:06:38.189911 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:06:38.199938 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:06:43.176780 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:43.178160 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:43.179278 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:43.180379 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:43.181420 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:43.182456 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:43.183484 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:43.184543 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:43.184563 22 dns_common.go:489] Lookups using dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local]

  I1112 14:06:43.188089 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:06:43.189995 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:06:43.191759 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:06:48.176494 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:48.177829 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:48.178979 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:48.180172 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:48.181198 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:48.182211 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:48.183290 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:48.184357 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:48.184375 22 dns_common.go:489] Lookups using dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local]

  I1112 14:06:48.187768 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:06:48.189754 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:06:48.197764 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:06:53.177346 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:53.178809 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:53.179937 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:53.181031 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:53.182081 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:53.183159 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:53.184269 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:53.185333 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:53.185351 22 dns_common.go:489] Lookups using dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local]

  I1112 14:06:53.187619 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:06:53.197234 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:06:53.199018 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:06:58.177376 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:58.178681 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:58.179960 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:58.181029 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:58.182105 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:58.183185 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:58.184218 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:58.185193 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local from pod dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3: the server could not find the requested resource (get pods dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3)
  I1112 14:06:58.185211 22 dns_common.go:489] Lookups using dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2833.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2833.svc.cluster.local jessie_udp@dns-test-service-2.dns-2833.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2833.svc.cluster.local]

  I1112 14:06:58.187265 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:06:58.189923 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:06:58.199930 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:07:03.185569 22 dns_common.go:527] DNS probes using dns-2833/dns-test-e8c3f989-aa00-4a6b-990c-e84ea9c1e9d3 succeeded

  STEP: deleting the pod @ 11/12/24 14:07:03.185
  STEP: deleting the test headless service @ 11/12/24 14:07:03.199
  I1112 14:07:03.206813 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2833" for this suite. @ 11/12/24 14:07:03.209
• [32.065 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 11/12/24 14:07:03.213
  I1112 14:07:03.213307 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename events @ 11/12/24 14:07:03.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:07:03.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:07:03.225
  STEP: Create set of events @ 11/12/24 14:07:03.227
  STEP: get a list of Events with a label in the current namespace @ 11/12/24 14:07:03.234
  STEP: delete a list of events @ 11/12/24 14:07:03.235
  I1112 14:07:03.235914 22 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/12/24 14:07:03.243
  I1112 14:07:03.244899 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6657" for this suite. @ 11/12/24 14:07:03.309
• [0.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 11/12/24 14:07:03.311
  I1112 14:07:03.311876 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/12/24 14:07:03.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:07:03.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:07:03.323
  I1112 14:07:03.326964 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8646" for this suite. @ 11/12/24 14:07:03.409
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 11/12/24 14:07:03.412
  I1112 14:07:03.412549 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/12/24 14:07:03.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:07:03.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:07:03.424
  STEP: Creating 50 configmaps @ 11/12/24 14:07:03.426
  STEP: Creating RC which spawns configmap-volume pods @ 11/12/24 14:07:03.665
  I1112 14:07:03.770933 22 resource.go:87] Pod name wrapped-volume-race-c957fd9e-04b6-45ce-beba-c1e17273a470: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/12/24 14:07:03.77
  STEP: Creating RC which spawns configmap-volume pods @ 11/12/24 14:07:05.834
  I1112 14:07:05.841979 22 resource.go:87] Pod name wrapped-volume-race-4283a949-83bc-4b22-b5ad-07d1316c41a4: Found 0 pods out of 5
  I1112 14:07:10.845325 22 resource.go:87] Pod name wrapped-volume-race-4283a949-83bc-4b22-b5ad-07d1316c41a4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/12/24 14:07:10.845
  STEP: Creating RC which spawns configmap-volume pods @ 11/12/24 14:07:10.853
  I1112 14:07:10.863993 22 resource.go:87] Pod name wrapped-volume-race-34b161f5-8c68-4539-aaf5-50f7dea40363: Found 1 pods out of 5
  I1112 14:07:15.866738 22 resource.go:87] Pod name wrapped-volume-race-34b161f5-8c68-4539-aaf5-50f7dea40363: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/12/24 14:07:15.866
  STEP: deleting ReplicationController wrapped-volume-race-34b161f5-8c68-4539-aaf5-50f7dea40363 in namespace emptydir-wrapper-3138, will wait for the garbage collector to delete the pods @ 11/12/24 14:07:15.873
  I1112 14:07:15.928852 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-34b161f5-8c68-4539-aaf5-50f7dea40363 took: 2.961827ms
  I1112 14:07:16.029088 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-34b161f5-8c68-4539-aaf5-50f7dea40363 pods took: 100.234965ms
  STEP: deleting ReplicationController wrapped-volume-race-4283a949-83bc-4b22-b5ad-07d1316c41a4 in namespace emptydir-wrapper-3138, will wait for the garbage collector to delete the pods @ 11/12/24 14:07:17.43
  I1112 14:07:17.485265 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-4283a949-83bc-4b22-b5ad-07d1316c41a4 took: 3.102966ms
  I1112 14:07:17.585547 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-4283a949-83bc-4b22-b5ad-07d1316c41a4 pods took: 100.276872ms
  STEP: deleting ReplicationController wrapped-volume-race-c957fd9e-04b6-45ce-beba-c1e17273a470 in namespace emptydir-wrapper-3138, will wait for the garbage collector to delete the pods @ 11/12/24 14:07:18.786
  I1112 14:07:18.841017 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-c957fd9e-04b6-45ce-beba-c1e17273a470 took: 2.875394ms
  I1112 14:07:18.942025 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-c957fd9e-04b6-45ce-beba-c1e17273a470 pods took: 101.001609ms
  STEP: Cleaning up the configMaps @ 11/12/24 14:07:19.742
  I1112 14:07:19.835538 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3138" for this suite. @ 11/12/24 14:07:19.836
• [16.432 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 11/12/24 14:07:19.845
  I1112 14:07:19.845169 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-preemption @ 11/12/24 14:07:19.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:07:19.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:07:19.852
  I1112 14:07:19.858427 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1112 14:08:19.861479 22 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/12/24 14:08:19.862
  I1112 14:08:19.873127 22 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1112 14:08:19.881336 22 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1112 14:08:19.892881 22 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1112 14:08:19.896327 22 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1112 14:08:19.906168 22 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1112 14:08:19.910987 22 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/12/24 14:08:19.911
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 11/12/24 14:08:21.919
  I1112 14:08:25.951652 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3833" for this suite. @ 11/12/24 14:08:25.952
• [66.111 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 11/12/24 14:08:25.955
  I1112 14:08:25.955958 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename deployment @ 11/12/24 14:08:25.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:08:25.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:08:25.965
  I1112 14:08:25.966462 22 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1112 14:08:25.969837 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1112 14:08:30.972376 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/12/24 14:08:30.972
  I1112 14:08:30.972441 22 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1112 14:08:30.975209 22 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1112 14:08:30.978073 22 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1112 14:08:32.981916 22 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1112 14:08:32.982945 22 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1112 14:08:32.986311 22 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8997",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e3f6c0a-45d3-4663-9fb0-a05f91974d68",
      ResourceVersion: (string) (len=5) "19889",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1112 14:08:32.988525 22 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8997",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61eec1ed-a7b8-48a2-bb11-7a5d20c71c89",
      ResourceVersion: (string) (len=5) "19877",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9e3f6c0a-45d3-4663-9fb0-a05f91974d68",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 65 33 66 36 63  30 61 2d 34 35 64 33 2d  |\"9e3f6c0a-45d3-|
              00000120  34 36 36 33 2d 39 66 62  30 2d 61 30 35 66 39 31  |4663-9fb0-a05f91|
              00000130  39 37 34 64 36 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |974d68\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 14:08:32.989165 22 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1112 14:08:32.989311 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8997",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65a9db98-f669-4a2d-9330-d60a14424bb9",
      ResourceVersion: (string) (len=5) "19888",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9e3f6c0a-45d3-4663-9fb0-a05f91974d68",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 39 65 33 66 36 63 30  |"uid\":\"9e3f6c0|
              000000b0  61 2d 34 35 64 33 2d 34  36 36 33 2d 39 66 62 30  |a-45d3-4663-9fb0|
              000000c0  2d 61 30 35 66 39 31 39  37 34 64 36 38 5c 22 7d  |-a05f91974d68\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 14:08:32.991509 22 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-rzj2b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-rzj2b",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-8997",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14941b4a-f739-477a-892b-16551bd29af6",
      ResourceVersion: (string) (len=5) "19876",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "61eec1ed-a7b8-48a2-bb11-7a5d20c71c89",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 65 63 31 65 64 2d 61  |d\":\"61eec1ed-a|
              00000090  37 62 38 2d 34 38 61 32  2d 62 62 31 31 2d 37 61  |7b8-48a2-bb11-7a|
              000000a0  35 64 32 30 63 37 31 63  38 39 5c 22 7d 22 3a 7b  |5d20c71c89\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 36  5c 22 7d 22 3a 7b 22 2e  |2.20.5.6\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4zrtn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4zrtn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=10) "172.20.5.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "172.20.5.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867017311,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://1819432809105fe795fd2258c9288b9f9176fc6084fa5f3ba1148dae283338e4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4zrtn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:08:32.992811 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8997" for this suite. @ 11/12/24 14:08:32.994
• [7.040 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 11/12/24 14:08:32.996
  I1112 14:08:32.996451 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 14:08:32.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:08:33.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:08:33.004
  STEP: creating the pod @ 11/12/24 14:08:33.006
  STEP: setting up watch @ 11/12/24 14:08:33.006
  STEP: submitting the pod to kubernetes @ 11/12/24 14:08:33.192
  STEP: verifying the pod is in kubernetes @ 11/12/24 14:08:33.197
  STEP: verifying pod creation was observed @ 11/12/24 14:08:33.198
  STEP: deleting the pod gracefully @ 11/12/24 14:08:35.203
  STEP: verifying pod deletion was observed @ 11/12/24 14:08:35.206
  I1112 14:08:35.749748 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7743" for this suite. @ 11/12/24 14:08:35.751
• [2.757 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 11/12/24 14:08:35.753
  I1112 14:08:35.753403 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:08:35.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:08:35.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:08:35.762
  STEP: Setting up server cert @ 11/12/24 14:08:35.861
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:08:36.212
  STEP: Deploying the webhook pod @ 11/12/24 14:08:36.217
  STEP: Wait for the deployment to be ready @ 11/12/24 14:08:36.222
  I1112 14:08:36.226144 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/12/24 14:08:38.231
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:08:38.235
  I1112 14:08:39.235718 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/12/24 14:08:39.238
  STEP: verifying the mutating webhook match conditions @ 11/12/24 14:08:39.241
  STEP: updating the mutating webhook match conditions @ 11/12/24 14:08:39.242
  STEP: verifying the mutating webhook match conditions @ 11/12/24 14:08:39.246
  I1112 14:08:39.265499 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7011" for this suite. @ 11/12/24 14:08:39.267
  STEP: Destroying namespace "webhook-markers-4690" for this suite. @ 11/12/24 14:08:39.272
• [3.522 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 11/12/24 14:08:39.275
  I1112 14:08:39.275844 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename var-expansion @ 11/12/24 14:08:39.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:08:39.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:08:39.284
  STEP: Creating a pod to test substitution in container's args @ 11/12/24 14:08:39.286
  STEP: Saw pod success @ 11/12/24 14:08:43.296
  I1112 14:08:43.297803 22 output.go:196] Trying to get logs from node worker01 pod var-expansion-d63e387c-696b-4195-99ac-912dba1d70f8 container dapi-container: <nil>
  STEP: delete the pod @ 11/12/24 14:08:43.304
  I1112 14:08:43.310214 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2319" for this suite. @ 11/12/24 14:08:43.311
• [4.038 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 11/12/24 14:08:43.313
  I1112 14:08:43.313785 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename svcaccounts @ 11/12/24 14:08:43.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:08:43.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:08:43.321
  I1112 14:08:43.323853 22 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-1817"
  I1112 14:08:43.325633 22 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-1817"
  STEP: waiting for a new root ca configmap created @ 11/12/24 14:08:43.826
  I1112 14:08:43.827988 22 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-1817"
  I1112 14:08:43.830094 22 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-1817"
  STEP: waiting for the root ca configmap reconciled @ 11/12/24 14:08:44.33
  I1112 14:08:44.331983 22 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-1817"
  I1112 14:08:44.332077 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1817" for this suite. @ 11/12/24 14:08:44.333
• [1.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 11/12/24 14:08:44.336
  I1112 14:08:44.336779 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename deployment @ 11/12/24 14:08:44.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:08:44.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:08:44.418
  I1112 14:08:44.425240 22 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I1112 14:08:49.428085 22 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/12/24 14:08:49.428
  I1112 14:08:49.428143 22 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 11/12/24 14:08:49.44
  I1112 14:08:49.443884 22 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3104",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3a66c48-df8a-405d-8f7e-117a0e1f5375",
      ResourceVersion: (string) (len=5) "20139",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017329,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1112 14:08:49.445688 22 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I1112 14:08:49.445709 22 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1112 14:08:49.445910 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3104",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17698592-5929-47c9-b46d-4b8c0d30ad05",
      ResourceVersion: (string) (len=5) "20140",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "a3a66c48-df8a-405d-8f7e-117a0e1f5375",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 61 33 61 36 36 63 34  |"uid\":\"a3a66c4|
              00000040  38 2d 64 66 38 61 2d 34  30 35 64 2d 38 66 37 65  |8-df8a-405d-8f7e|
              00000050  2d 31 31 37 61 30 65 31  66 35 33 37 35 5c 22 7d  |-117a0e1f5375\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 14:08:49.457033 22 deployment.go:67] Pod "test-cleanup-controller-ltcfg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-ltcfg",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-3104",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5b9d811-abfe-4a25-b5d9-475ae3825ced",
      ResourceVersion: (string) (len=5) "20118",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "17698592-5929-47c9-b46d-4b8c0d30ad05",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  31 37 36 39 38 35 39 32  |uid\":\"17698592|
              00000080  2d 35 39 32 39 2d 34 37  63 39 2d 62 34 36 64 2d  |-5929-47c9-b46d-|
              00000090  34 62 38 63 30 64 33 30  61 64 30 35 5c 22 7d 22  |4b8c0d30ad05\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 35  30 5c 22 7d 22 3a 7b 22  |2.20.5.50\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gbhgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gbhgf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867017324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867017324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867017325,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://82b50b6a502987c7c8e4636624a7471d94ca4a14505a03263a1c7fb5177be117",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gbhgf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:08:49.458336 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3104" for this suite. @ 11/12/24 14:08:49.462
• [5.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 11/12/24 14:08:49.465
  I1112 14:08:49.465713 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:08:49.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:08:49.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:08:49.476
  I1112 14:08:49.491776 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5290" for this suite. @ 11/12/24 14:08:49.562
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 11/12/24 14:08:49.565
  I1112 14:08:49.565486 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-runtime @ 11/12/24 14:08:49.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:08:49.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:08:49.575
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 11/12/24 14:08:49.58
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 11/12/24 14:09:07.617
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 11/12/24 14:09:07.618
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 11/12/24 14:09:07.62
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 11/12/24 14:09:07.62
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 11/12/24 14:09:07.629
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 11/12/24 14:09:10.637
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 11/12/24 14:09:11.641
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 11/12/24 14:09:11.644
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 11/12/24 14:09:11.644
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 11/12/24 14:09:11.653
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 11/12/24 14:09:12.656
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 11/12/24 14:09:14.661
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 11/12/24 14:09:14.664
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 11/12/24 14:09:14.664
  I1112 14:09:14.674206 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9641" for this suite. @ 11/12/24 14:09:14.675
• [25.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 11/12/24 14:09:14.677
  I1112 14:09:14.677890 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename proxy @ 11/12/24 14:09:14.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:09:14.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:09:14.686
  STEP: starting an echo server on multiple ports @ 11/12/24 14:09:14.693
  STEP: creating replication controller proxy-service-b7jdb in namespace proxy-8591 @ 11/12/24 14:09:14.693
  I1112 14:09:14.696462      22 runners.go:193] Created replication controller with name: proxy-service-b7jdb, namespace: proxy-8591, replica count: 1
  I1112 14:09:15.747868      22 runners.go:193] proxy-service-b7jdb Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 14:09:16.747973      22 runners.go:193] proxy-service-b7jdb Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I1112 14:09:17.748500      22 runners.go:193] proxy-service-b7jdb Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 14:09:17.750254 22 proxy.go:230] setup took 3.061960518s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 11/12/24 14:09:17.75
  I1112 14:09:17.754121 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 3.145732ms)
  I1112 14:09:17.754916 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.407234ms)
  I1112 14:09:17.755055 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 4.59488ms)
  I1112 14:09:17.755055 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 4.124043ms)
  I1112 14:09:17.755084 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.291761ms)
  I1112 14:09:17.755080 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.016163ms)
  I1112 14:09:17.755137 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.73343ms)
  I1112 14:09:17.756091 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 5.079315ms)
  I1112 14:09:17.757465 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 6.622529ms)
  I1112 14:09:17.757466 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 6.821667ms)
  I1112 14:09:17.757511 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 6.819316ms)
  I1112 14:09:17.758323 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 7.730345ms)
  I1112 14:09:17.758396 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 7.662882ms)
  I1112 14:09:17.758412 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 7.868073ms)
  I1112 14:09:17.758499 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 7.612428ms)
  I1112 14:09:17.758518 22 proxy.go:558] (0) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 8.193957ms)
  I1112 14:09:17.762050 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 3.346515ms)
  I1112 14:09:17.762085 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 3.414317ms)
  I1112 14:09:17.762099 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 3.349372ms)
  I1112 14:09:17.762118 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 3.573233ms)
  I1112 14:09:17.762862 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 3.976019ms)
  I1112 14:09:17.762960 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 4.055981ms)
  I1112 14:09:17.763004 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.031951ms)
  I1112 14:09:17.763028 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.033935ms)
  I1112 14:09:17.763049 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.232347ms)
  I1112 14:09:17.763095 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 4.234011ms)
  I1112 14:09:17.763210 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.590335ms)
  I1112 14:09:17.763258 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 4.312911ms)
  I1112 14:09:17.763282 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.488952ms)
  I1112 14:09:17.763362 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.437829ms)
  I1112 14:09:17.763371 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 4.338671ms)
  I1112 14:09:17.764043 22 proxy.go:558] (1) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 5.204097ms)
  I1112 14:09:17.766667 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.420019ms)
  I1112 14:09:17.766752 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.522354ms)
  I1112 14:09:17.766854 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 2.652868ms)
  I1112 14:09:17.768572 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.418846ms)
  I1112 14:09:17.768597 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 4.418369ms)
  I1112 14:09:17.768597 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.442406ms)
  I1112 14:09:17.768734 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.510393ms)
  I1112 14:09:17.768745 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 4.666881ms)
  I1112 14:09:17.768764 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 4.674099ms)
  I1112 14:09:17.768782 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.651679ms)
  I1112 14:09:17.768833 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.583532ms)
  I1112 14:09:17.768840 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 4.663704ms)
  I1112 14:09:17.768856 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 4.655911ms)
  I1112 14:09:17.768860 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.771415ms)
  I1112 14:09:17.768844 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 4.767889ms)
  I1112 14:09:17.768929 22 proxy.go:558] (2) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 4.804499ms)
  I1112 14:09:17.771354 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 2.393963ms)
  I1112 14:09:17.771394 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.380382ms)
  I1112 14:09:17.771617 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 2.648683ms)
  I1112 14:09:17.773162 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.125111ms)
  I1112 14:09:17.773183 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 4.078572ms)
  I1112 14:09:17.773198 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.141706ms)
  I1112 14:09:17.773237 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.155514ms)
  I1112 14:09:17.773244 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.204131ms)
  I1112 14:09:17.773301 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 4.238971ms)
  I1112 14:09:17.773611 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 4.507288ms)
  I1112 14:09:17.773676 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 4.666785ms)
  I1112 14:09:17.773689 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.561762ms)
  I1112 14:09:17.773795 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.817879ms)
  I1112 14:09:17.774351 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 5.219195ms)
  I1112 14:09:17.774567 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 5.419346ms)
  I1112 14:09:17.774844 22 proxy.go:558] (3) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 5.762236ms)
  I1112 14:09:17.777019 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 2.136351ms)
  I1112 14:09:17.778490 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 3.518448ms)
  I1112 14:09:17.778610 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 3.559367ms)
  I1112 14:09:17.779100 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.226538ms)
  I1112 14:09:17.779100 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.042202ms)
  I1112 14:09:17.779118 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 4.235141ms)
  I1112 14:09:17.779123 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 4.191788ms)
  I1112 14:09:17.779142 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.175701ms)
  I1112 14:09:17.779168 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.177112ms)
  I1112 14:09:17.779534 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 4.540801ms)
  I1112 14:09:17.779816 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 4.7959ms)
  I1112 14:09:17.779816 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.903814ms)
  I1112 14:09:17.779840 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.835367ms)
  I1112 14:09:17.779835 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 4.802969ms)
  I1112 14:09:17.779884 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 4.944016ms)
  I1112 14:09:17.780181 22 proxy.go:558] (4) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 5.146783ms)
  I1112 14:09:17.782017 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 1.805608ms)
  I1112 14:09:17.782023 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 1.811329ms)
  I1112 14:09:17.784017 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 3.761759ms)
  I1112 14:09:17.784396 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 4.144045ms)
  I1112 14:09:17.784388 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.086843ms)
  I1112 14:09:17.784402 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 4.177932ms)
  I1112 14:09:17.784426 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.079164ms)
  I1112 14:09:17.784795 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 4.516247ms)
  I1112 14:09:17.784794 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 4.423671ms)
  I1112 14:09:17.784811 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 4.484977ms)
  I1112 14:09:17.785028 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 4.682371ms)
  I1112 14:09:17.785085 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 4.783557ms)
  I1112 14:09:17.785100 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.715112ms)
  I1112 14:09:17.785085 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 4.71927ms)
  I1112 14:09:17.785088 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.812226ms)
  I1112 14:09:17.785094 22 proxy.go:558] (5) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 4.772229ms)
  I1112 14:09:17.788057 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.87824ms)
  I1112 14:09:17.788119 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 2.9186ms)
  I1112 14:09:17.788950 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 3.655273ms)
  I1112 14:09:17.788958 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 3.710399ms)
  I1112 14:09:17.788977 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 3.781853ms)
  I1112 14:09:17.789302 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.041495ms)
  I1112 14:09:17.789302 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.059534ms)
  I1112 14:09:17.789465 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 4.227304ms)
  I1112 14:09:17.789486 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 4.33136ms)
  I1112 14:09:17.789471 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 4.244663ms)
  I1112 14:09:17.789546 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 4.273058ms)
  I1112 14:09:17.789585 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 4.301766ms)
  I1112 14:09:17.789616 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.400709ms)
  I1112 14:09:17.789631 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 4.370737ms)
  I1112 14:09:17.789634 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 4.469979ms)
  I1112 14:09:17.789854 22 proxy.go:558] (6) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.581024ms)
  I1112 14:09:17.792069 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 2.185894ms)
  I1112 14:09:17.792068 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.177684ms)
  I1112 14:09:17.792363 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 2.408418ms)
  I1112 14:09:17.793977 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.031738ms)
  I1112 14:09:17.794045 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.041783ms)
  I1112 14:09:17.794064 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 4.055287ms)
  I1112 14:09:17.794060 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 4.060617ms)
  I1112 14:09:17.794218 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.332264ms)
  I1112 14:09:17.794227 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 4.296332ms)
  I1112 14:09:17.794263 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.378256ms)
  I1112 14:09:17.794339 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 4.409705ms)
  I1112 14:09:17.794737 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 4.752654ms)
  I1112 14:09:17.794856 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.893615ms)
  I1112 14:09:17.795063 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 5.082988ms)
  I1112 14:09:17.795218 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 5.24414ms)
  I1112 14:09:17.795216 22 proxy.go:558] (7) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 5.297823ms)
  I1112 14:09:17.797998 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.750644ms)
  I1112 14:09:17.798156 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 2.826708ms)
  I1112 14:09:17.799404 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.005424ms)
  I1112 14:09:17.799825 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 4.543798ms)
  I1112 14:09:17.799864 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 4.491221ms)
  I1112 14:09:17.799873 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.586493ms)
  I1112 14:09:17.799885 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 4.498734ms)
  I1112 14:09:17.799900 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 4.51609ms)
  I1112 14:09:17.799901 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 4.555112ms)
  I1112 14:09:17.799917 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.644322ms)
  I1112 14:09:17.799922 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 4.591007ms)
  I1112 14:09:17.799931 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 4.579488ms)
  I1112 14:09:17.799935 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 4.581449ms)
  I1112 14:09:17.799952 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.541773ms)
  I1112 14:09:17.799957 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.634202ms)
  I1112 14:09:17.800123 22 proxy.go:558] (8) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 4.754101ms)
  I1112 14:09:17.802880 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.728985ms)
  I1112 14:09:17.803114 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 2.919769ms)
  I1112 14:09:17.803240 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 3.05522ms)
  I1112 14:09:17.803434 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 3.279514ms)
  I1112 14:09:17.803695 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 3.453319ms)
  I1112 14:09:17.803726 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 3.491651ms)
  I1112 14:09:17.804588 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 4.375048ms)
  I1112 14:09:17.804622 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.301342ms)
  I1112 14:09:17.804644 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.500607ms)
  I1112 14:09:17.804679 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.371683ms)
  I1112 14:09:17.805074 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 4.864034ms)
  I1112 14:09:17.805160 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 4.868851ms)
  I1112 14:09:17.805304 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 4.975673ms)
  I1112 14:09:17.805629 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 5.364776ms)
  I1112 14:09:17.805806 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 5.522883ms)
  I1112 14:09:17.805816 22 proxy.go:558] (9) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 5.555718ms)
  I1112 14:09:17.807822 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 1.905966ms)
  I1112 14:09:17.807832 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 1.872637ms)
  I1112 14:09:17.808080 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 2.229011ms)
  I1112 14:09:17.810870 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.600684ms)
  I1112 14:09:17.811266 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.775623ms)
  I1112 14:09:17.811286 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 5.263747ms)
  I1112 14:09:17.811301 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 5.237425ms)
  I1112 14:09:17.811321 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 5.216184ms)
  I1112 14:09:17.811455 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 5.468038ms)
  I1112 14:09:17.811492 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 5.127766ms)
  I1112 14:09:17.811516 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 5.288356ms)
  I1112 14:09:17.811514 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 5.069348ms)
  I1112 14:09:17.811521 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 5.210171ms)
  I1112 14:09:17.811530 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 5.345993ms)
  I1112 14:09:17.811535 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 5.140271ms)
  I1112 14:09:17.811538 22 proxy.go:558] (10) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 5.395531ms)
  I1112 14:09:17.814363 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.628093ms)
  I1112 14:09:17.815332 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 3.770767ms)
  I1112 14:09:17.815337 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 3.632143ms)
  I1112 14:09:17.815827 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.043708ms)
  I1112 14:09:17.815862 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 4.003145ms)
  I1112 14:09:17.815886 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 3.802002ms)
  I1112 14:09:17.815884 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 3.835471ms)
  I1112 14:09:17.815904 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 4.231012ms)
  I1112 14:09:17.815919 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 3.998367ms)
  I1112 14:09:17.815937 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 4.318487ms)
  I1112 14:09:17.815927 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.089527ms)
  I1112 14:09:17.816088 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 4.33177ms)
  I1112 14:09:17.816111 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 4.14836ms)
  I1112 14:09:17.816144 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.140371ms)
  I1112 14:09:17.816389 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.497978ms)
  I1112 14:09:17.816397 22 proxy.go:558] (11) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 4.585419ms)
  I1112 14:09:17.818180 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 1.673111ms)
  I1112 14:09:17.818859 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.425244ms)
  I1112 14:09:17.819018 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 2.542613ms)
  I1112 14:09:17.819621 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 3.065336ms)
  I1112 14:09:17.820693 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 3.971865ms)
  I1112 14:09:17.820693 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.116754ms)
  I1112 14:09:17.820712 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 4.112677ms)
  I1112 14:09:17.820731 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 4.195873ms)
  I1112 14:09:17.820697 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 3.948415ms)
  I1112 14:09:17.821737 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 5.058336ms)
  I1112 14:09:17.821737 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 5.118799ms)
  I1112 14:09:17.821755 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 5.328508ms)
  I1112 14:09:17.821756 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.989886ms)
  I1112 14:09:17.821772 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 5.123371ms)
  I1112 14:09:17.822029 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 5.329544ms)
  I1112 14:09:17.822170 22 proxy.go:558] (12) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 5.648501ms)
  I1112 14:09:17.824388 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 2.186446ms)
  I1112 14:09:17.825825 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 3.485283ms)
  I1112 14:09:17.825863 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 3.651203ms)
  I1112 14:09:17.825878 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 3.579091ms)
  I1112 14:09:17.825961 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 3.620067ms)
  I1112 14:09:17.825988 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 3.62578ms)
  I1112 14:09:17.826009 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 3.719186ms)
  I1112 14:09:17.826030 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 3.646404ms)
  I1112 14:09:17.826263 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 3.949871ms)
  I1112 14:09:17.826640 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 4.41854ms)
  I1112 14:09:17.827050 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 4.685276ms)
  I1112 14:09:17.827056 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 4.733547ms)
  I1112 14:09:17.827162 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 4.894237ms)
  I1112 14:09:17.827268 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 5.018029ms)
  I1112 14:09:17.827334 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 4.950636ms)
  I1112 14:09:17.827356 22 proxy.go:558] (13) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 5.083242ms)
  I1112 14:09:17.829344 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 1.963037ms)
  I1112 14:09:17.829898 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 2.482018ms)
  I1112 14:09:17.830264 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 2.814239ms)
  I1112 14:09:17.830585 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 2.991436ms)
  I1112 14:09:17.831487 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 3.954167ms)
  I1112 14:09:17.832354 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 4.78255ms)
  I1112 14:09:17.832481 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.833128ms)
  I1112 14:09:17.832778 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 5.305798ms)
  I1112 14:09:17.832819 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 5.148781ms)
  I1112 14:09:17.832851 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 5.478234ms)
  I1112 14:09:17.834989 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 7.497816ms)
  I1112 14:09:17.835015 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 7.38179ms)
  I1112 14:09:17.838962 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 11.406484ms)
  I1112 14:09:17.838960 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 11.263839ms)
  I1112 14:09:17.838962 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 11.446405ms)
  I1112 14:09:17.838976 22 proxy.go:558] (14) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 11.364732ms)
  I1112 14:09:17.843951 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.44781ms)
  I1112 14:09:17.844296 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 5.158656ms)
  I1112 14:09:17.844380 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.823152ms)
  I1112 14:09:17.844539 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 5.301771ms)
  I1112 14:09:17.844602 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 4.893916ms)
  I1112 14:09:17.844611 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 5.324821ms)
  I1112 14:09:17.844857 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 4.977905ms)
  I1112 14:09:17.844901 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 5.058012ms)
  I1112 14:09:17.845251 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 5.38242ms)
  I1112 14:09:17.845551 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 5.796825ms)
  I1112 14:09:17.845719 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 6.0632ms)
  I1112 14:09:17.846118 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 6.514386ms)
  I1112 14:09:17.846169 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 6.79546ms)
  I1112 14:09:17.846147 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 6.812662ms)
  I1112 14:09:17.846359 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 6.912977ms)
  I1112 14:09:17.846488 22 proxy.go:558] (15) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 6.683813ms)
  I1112 14:09:17.850326 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 3.760492ms)
  I1112 14:09:17.851286 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 4.450346ms)
  I1112 14:09:17.851751 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 4.790214ms)
  I1112 14:09:17.852270 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 5.402996ms)
  I1112 14:09:17.853195 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 6.419759ms)
  I1112 14:09:17.853203 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 6.304112ms)
  I1112 14:09:17.853446 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 6.803509ms)
  I1112 14:09:17.853462 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 6.733376ms)
  I1112 14:09:17.853653 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 6.63577ms)
  I1112 14:09:17.853728 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 6.7406ms)
  I1112 14:09:17.854265 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 7.214111ms)
  I1112 14:09:17.854506 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 7.396265ms)
  I1112 14:09:17.854688 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 7.76143ms)
  I1112 14:09:17.854778 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 7.698769ms)
  I1112 14:09:17.854837 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 8.146499ms)
  I1112 14:09:17.859334 22 proxy.go:558] (16) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 12.527304ms)
  I1112 14:09:17.862865 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 3.20258ms)
  I1112 14:09:17.866950 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 7.245767ms)
  I1112 14:09:17.867463 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 7.672854ms)
  I1112 14:09:17.867565 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 7.888241ms)
  I1112 14:09:17.867582 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 8.036499ms)
  I1112 14:09:17.867611 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 7.991387ms)
  I1112 14:09:17.867623 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 7.872726ms)
  I1112 14:09:17.867668 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 7.926255ms)
  I1112 14:09:17.867692 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 8.258815ms)
  I1112 14:09:17.867707 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 8.210807ms)
  I1112 14:09:17.868102 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 8.458723ms)
  I1112 14:09:17.868339 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 8.764205ms)
  I1112 14:09:17.868393 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 8.792649ms)
  I1112 14:09:17.868854 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 9.08589ms)
  I1112 14:09:17.868992 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 9.270107ms)
  I1112 14:09:17.869331 22 proxy.go:558] (17) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 9.88961ms)
  I1112 14:09:17.873131 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 3.719441ms)
  I1112 14:09:17.873195 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 3.6385ms)
  I1112 14:09:17.873210 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 3.614112ms)
  I1112 14:09:17.873979 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 4.165613ms)
  I1112 14:09:17.878986 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 9.307852ms)
  I1112 14:09:17.879076 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 9.012843ms)
  I1112 14:09:17.879125 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 9.106435ms)
  I1112 14:09:17.879196 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 9.676405ms)
  I1112 14:09:17.879246 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 9.529755ms)
  I1112 14:09:17.879308 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 9.20236ms)
  I1112 14:09:17.879362 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 9.602684ms)
  I1112 14:09:17.879409 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 9.555897ms)
  I1112 14:09:17.879465 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 9.565891ms)
  I1112 14:09:17.879511 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 9.574274ms)
  I1112 14:09:17.879563 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 9.583573ms)
  I1112 14:09:17.879613 22 proxy.go:558] (18) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 9.977607ms)
  I1112 14:09:17.882883 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 3.209429ms)
  I1112 14:09:17.882910 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:460/proxy/: tls baz (200; 2.956229ms)
  I1112 14:09:17.890991 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname2/proxy/: bar (200; 10.991788ms)
  I1112 14:09:17.891070 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:160/proxy/: foo (200; 10.856657ms)
  I1112 14:09:17.891108 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">... (200; 10.942701ms)
  I1112 14:09:17.891157 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:462/proxy/: tls qux (200; 11.034107ms)
  I1112 14:09:17.891194 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname2/proxy/: tls qux (200; 11.144177ms)
  I1112 14:09:17.891241 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:1080/proxy/rewriteme">test<... (200; 11.055493ms)
  I1112 14:09:17.891276 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn/proxy/rewriteme">test</a> (200; 11.178294ms)
  I1112 14:09:17.891319 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/services/proxy-service-b7jdb:portname1/proxy/: foo (200; 11.173233ms)
  I1112 14:09:17.891361 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/services/https:proxy-service-b7jdb:tlsportname1/proxy/: tls baz (200; 11.58262ms)
  I1112 14:09:17.891404 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/: <a href="/api/v1/namespaces/proxy-8591/pods/https:proxy-service-b7jdb-kxbsn:443/proxy/tlsrewritem... (200; 11.483046ms)
  I1112 14:09:17.891455 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname1/proxy/: foo (200; 11.21893ms)
  I1112 14:09:17.891499 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/services/http:proxy-service-b7jdb:portname2/proxy/: bar (200; 11.420657ms)
  I1112 14:09:17.891542 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 11.708668ms)
  I1112 14:09:17.891582 22 proxy.go:558] (19) /api/v1/namespaces/proxy-8591/pods/http:proxy-service-b7jdb-kxbsn:162/proxy/: bar (200; 11.706676ms)
  STEP: deleting ReplicationController proxy-service-b7jdb in namespace proxy-8591, will wait for the garbage collector to delete the pods @ 11/12/24 14:09:17.891
  I1112 14:09:17.946864 22 resources.go:139] Deleting ReplicationController proxy-service-b7jdb took: 2.878487ms
  I1112 14:09:18.047546 22 resources.go:163] Terminating ReplicationController proxy-service-b7jdb pods took: 100.678898ms
  I1112 14:09:19.848664 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8591" for this suite. @ 11/12/24 14:09:19.85
• [5.176 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 11/12/24 14:09:19.854
  I1112 14:09:19.854061 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 14:09:19.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:09:19.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:09:19.861
  STEP: Creating secret with name secret-test-d8a5adf6-58e1-4287-93f3-4d40ea64f902 @ 11/12/24 14:09:19.862
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:09:19.864
  STEP: Saw pod success @ 11/12/24 14:09:23.873
  I1112 14:09:23.875231 22 output.go:196] Trying to get logs from node worker01 pod pod-secrets-8367e007-28e8-443a-9cf0-968be42f14ef container secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:09:23.877
  I1112 14:09:23.882686 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8939" for this suite. @ 11/12/24 14:09:23.884
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 11/12/24 14:09:23.887
  I1112 14:09:23.887229 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename taint-single-pod @ 11/12/24 14:09:23.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:09:23.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:09:23.895
  I1112 14:09:23.897179 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1112 14:10:23.898874 22 util.go:393] Waiting for terminating namespaces to be deleted...
  I1112 14:10:23.900818 22 taints.go:144] Starting informer...
  STEP: Starting pod... @ 11/12/24 14:10:23.9
  I1112 14:10:24.108394 22 taints.go:294] Pod is running on worker01. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/12/24 14:10:24.108
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/12/24 14:10:24.114
  STEP: Waiting short time to make sure Pod is queued for deletion @ 11/12/24 14:10:24.115
  I1112 14:10:24.115910 22 taints.go:313] Pod wasn't evicted. Proceeding
  I1112 14:10:24.115923 22 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/12/24 14:10:24.121
  STEP: Waiting some time to make sure that toleration time passed. @ 11/12/24 14:10:24.122
  I1112 14:11:39.126788 22 taints.go:329] Pod wasn't evicted. Test successful
  I1112 14:11:39.126931 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9991" for this suite. @ 11/12/24 14:11:39.129
• [135.245 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 11/12/24 14:11:39.132
  I1112 14:11:39.132062 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename security-context-test @ 11/12/24 14:11:39.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:11:39.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:11:39.141
  I1112 14:11:41.149203 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4227" for this suite. @ 11/12/24 14:11:41.15
• [2.021 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 11/12/24 14:11:41.153
  I1112 14:11:41.153120 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:11:41.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:11:41.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:11:41.16
  STEP: Setting up server cert @ 11/12/24 14:11:41.26
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:11:41.631
  STEP: Deploying the webhook pod @ 11/12/24 14:11:41.634
  STEP: Wait for the deployment to be ready @ 11/12/24 14:11:41.64
  I1112 14:11:41.643154 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/12/24 14:11:43.647
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:11:43.651
  I1112 14:11:44.652583 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1112 14:11:44.655756 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 11/12/24 14:11:45.161
  STEP: Creating a custom resource that should be denied by the webhook @ 11/12/24 14:11:45.169
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 11/12/24 14:11:47.181
  STEP: Updating the custom resource with disallowed data should be denied @ 11/12/24 14:11:47.185
  STEP: Deleting the custom resource should be denied @ 11/12/24 14:11:47.19
  STEP: Remove the offending key and value from the custom resource data @ 11/12/24 14:11:47.193
  STEP: Deleting the updated custom resource should be successful @ 11/12/24 14:11:47.197
  I1112 14:11:47.751036 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8765" for this suite. @ 11/12/24 14:11:47.752
  STEP: Destroying namespace "webhook-markers-1291" for this suite. @ 11/12/24 14:11:47.755
• [6.605 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 11/12/24 14:11:47.758
  I1112 14:11:47.758522 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename endpointslicemirroring @ 11/12/24 14:11:47.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:11:47.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:11:47.765
  STEP: mirroring a new custom Endpoint @ 11/12/24 14:11:47.771
  I1112 14:11:47.776158 22 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 11/12/24 14:11:49.778
  STEP: mirroring deletion of a custom Endpoint @ 11/12/24 14:11:49.783
  I1112 14:11:49.789893 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1878" for this suite. @ 11/12/24 14:11:49.791
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 11/12/24 14:11:49.794
  I1112 14:11:49.794441 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:11:49.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:11:49.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:11:49.803
  STEP: Creating a pod to test downward api env vars @ 11/12/24 14:11:49.805
  STEP: Saw pod success @ 11/12/24 14:11:53.815
  I1112 14:11:53.816775 22 output.go:196] Trying to get logs from node worker01 pod downward-api-bdaf180e-6f60-4751-81d1-8f39dfb2e2aa container dapi-container: <nil>
  STEP: delete the pod @ 11/12/24 14:11:53.832
  I1112 14:11:53.838108 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2782" for this suite. @ 11/12/24 14:11:53.839
• [4.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 11/12/24 14:11:53.842
  I1112 14:11:53.842513 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 14:11:53.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:11:53.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:11:53.85
  STEP: Creating secret with name secret-test-2e12cc27-940f-4d3c-b096-9aa3f14c76a7 @ 11/12/24 14:11:53.852
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:11:53.854
  STEP: Saw pod success @ 11/12/24 14:11:57.862
  I1112 14:11:57.863965 22 output.go:196] Trying to get logs from node worker01 pod pod-secrets-64ab9c1c-3bb6-4d12-8b63-bb4ca20c05e4 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:11:57.866
  I1112 14:11:57.872473 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2330" for this suite. @ 11/12/24 14:11:57.873
• [4.034 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 11/12/24 14:11:57.877
  I1112 14:11:57.877149 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:11:57.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:11:57.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:11:57.884
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2680 @ 11/12/24 14:11:57.886
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/12/24 14:11:57.891
  STEP: creating service externalsvc in namespace services-2680 @ 11/12/24 14:11:57.891
  STEP: creating replication controller externalsvc in namespace services-2680 @ 11/12/24 14:11:57.896
  I1112 14:11:57.900178      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2680, replica count: 2
  I1112 14:12:00.950805      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 11/12/24 14:12:00.952
  I1112 14:12:00.958750 22 resource.go:361] Creating new exec pod
  I1112 14:12:02.965299 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-2680 exec execpod27wbt -- /bin/sh -x -c nslookup clusterip-service.services-2680.svc.cluster.local'
  I1112 14:12:03.051252 22 builder.go:146] stderr: "+ nslookup clusterip-service.services-2680.svc.cluster.local\n"
  I1112 14:12:03.051284 22 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-2680.svc.cluster.local\tcanonical name = externalsvc.services-2680.svc.cluster.local.\nName:\texternalsvc.services-2680.svc.cluster.local\nAddress: 10.68.105.114\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2680, will wait for the garbage collector to delete the pods @ 11/12/24 14:12:03.051
  I1112 14:12:03.105632 22 resources.go:139] Deleting ReplicationController externalsvc took: 2.562739ms
  I1112 14:12:03.206451 22 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.820452ms
  I1112 14:12:06.116069 22 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1112 14:12:06.120395 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2680" for this suite. @ 11/12/24 14:12:06.122
• [8.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 11/12/24 14:12:06.126
  I1112 14:12:06.126107 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename field-validation @ 11/12/24 14:12:06.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:12:06.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:12:06.135
  I1112 14:12:06.136836 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  W1112 14:12:08.659017      22 warnings.go:70] unknown field "alpha"
  W1112 14:12:08.659044      22 warnings.go:70] unknown field "beta"
  W1112 14:12:08.659050      22 warnings.go:70] unknown field "delta"
  W1112 14:12:08.659055      22 warnings.go:70] unknown field "epsilon"
  W1112 14:12:08.659059      22 warnings.go:70] unknown field "gamma"
  I1112 14:12:09.175034 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2685" for this suite. @ 11/12/24 14:12:09.176
• [3.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 11/12/24 14:12:09.179
  I1112 14:12:09.179256 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:12:09.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:12:09.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:12:09.187
  STEP: Setting up server cert @ 11/12/24 14:12:09.286
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:12:09.482
  STEP: Deploying the webhook pod @ 11/12/24 14:12:09.484
  STEP: Wait for the deployment to be ready @ 11/12/24 14:12:09.49
  I1112 14:12:09.493048 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/12/24 14:12:11.497
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:12:11.502
  I1112 14:12:12.502790 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 11/12/24 14:12:12.505
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/12/24 14:12:12.513
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 11/12/24 14:12:12.517
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/12/24 14:12:12.522
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 11/12/24 14:12:12.525
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/12/24 14:12:12.529
  I1112 14:12:12.548585 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5523" for this suite. @ 11/12/24 14:12:12.55
  STEP: Destroying namespace "webhook-markers-6825" for this suite. @ 11/12/24 14:12:12.553
• [3.377 seconds]
------------------------------
S
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 11/12/24 14:12:12.556
  I1112 14:12:12.556772 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:12:12.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:12:12.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:12:12.566
  STEP: creating a Service @ 11/12/24 14:12:12.569
  STEP: watching for the Service to be added @ 11/12/24 14:12:12.574
  I1112 14:12:12.575443 22 service.go:3445] Found Service test-service-kkxl9 in namespace services-7552 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32277}]
  I1112 14:12:12.575466 22 service.go:3452] Service test-service-kkxl9 created
  STEP: Getting /status @ 11/12/24 14:12:12.575
  I1112 14:12:12.576889 22 service.go:3463] Service test-service-kkxl9 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 11/12/24 14:12:12.576
  STEP: watching for the Service to be patched @ 11/12/24 14:12:12.579
  I1112 14:12:12.580525 22 service.go:3486] observed Service test-service-kkxl9 in namespace services-7552 with annotations: map[] & LoadBalancer: {[]}
  I1112 14:12:12.580552 22 service.go:3489] Found Service test-service-kkxl9 in namespace services-7552 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000aee030 []}]}
  I1112 14:12:12.580563 22 service.go:3496] Service test-service-kkxl9 has service status patched
  STEP: updating the ServiceStatus @ 11/12/24 14:12:12.58
  I1112 14:12:12.585104 22 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 11/12/24 14:12:12.585
  I1112 14:12:12.585960 22 service.go:3527] Observed Service test-service-kkxl9 in namespace services-7552 with annotations: map[] & Conditions: []
  I1112 14:12:12.586023 22 service.go:3538] Observed Service test-service-kkxl9 in namespace services-7552 with annotations: map[patchedstatus:true] & Conditions: []
  I1112 14:12:12.586053 22 service.go:3534] Found Service test-service-kkxl9 in namespace services-7552 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1112 14:12:12.586067 22 service.go:3545] Service test-service-kkxl9 has service status updated
  STEP: patching the service @ 11/12/24 14:12:12.586
  STEP: watching for the Service to be patched @ 11/12/24 14:12:12.595
  I1112 14:12:12.596278 22 service.go:3568] observed Service test-service-kkxl9 in namespace services-7552 with labels: map[test-service-static:true]
  I1112 14:12:12.596343 22 service.go:3568] observed Service test-service-kkxl9 in namespace services-7552 with labels: map[test-service-static:true]
  I1112 14:12:12.596356 22 service.go:3568] observed Service test-service-kkxl9 in namespace services-7552 with labels: map[test-service-static:true]
  I1112 14:12:12.596378 22 service.go:3571] Found Service test-service-kkxl9 in namespace services-7552 with labels: map[test-service:patched test-service-static:true]
  I1112 14:12:12.596387 22 service.go:3578] Service test-service-kkxl9 patched
  STEP: deleting the service @ 11/12/24 14:12:12.596
  STEP: watching for the Service to be deleted @ 11/12/24 14:12:12.602
  I1112 14:12:12.603159 22 service.go:3602] Observed event: ADDED
  I1112 14:12:12.603177 22 service.go:3602] Observed event: MODIFIED
  I1112 14:12:12.603189 22 service.go:3602] Observed event: MODIFIED
  I1112 14:12:12.603243 22 service.go:3602] Observed event: MODIFIED
  I1112 14:12:12.603281 22 service.go:3598] Found Service test-service-kkxl9 in namespace services-7552 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1112 14:12:12.603292 22 service.go:3607] Service test-service-kkxl9 deleted
  I1112 14:12:12.603382 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7552" for this suite. @ 11/12/24 14:12:12.651
• [0.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 11/12/24 14:12:12.654
  I1112 14:12:12.654952 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 14:12:12.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:12:12.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:12:12.664
  STEP: Creating secret with name secret-test-f9fa65a1-52da-458b-9da3-929f128b36cc @ 11/12/24 14:12:12.666
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:12:12.668
  STEP: Saw pod success @ 11/12/24 14:12:16.676
  I1112 14:12:16.677907 22 output.go:196] Trying to get logs from node worker01 pod pod-secrets-4f3c1de6-369a-4fc1-a13b-52b520d7b843 container secret-env-test: <nil>
  STEP: delete the pod @ 11/12/24 14:12:16.68
  I1112 14:12:16.686515 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3885" for this suite. @ 11/12/24 14:12:16.687
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 11/12/24 14:12:16.691
  I1112 14:12:16.691132 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename proxy @ 11/12/24 14:12:16.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:12:16.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:12:16.699
  I1112 14:12:16.700492 22 proxy.go:387] Creating pod...
  I1112 14:12:18.707429 22 proxy.go:411] Creating service...
  I1112 14:12:18.712436 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/pods/agnhost/proxy?method=DELETE
  I1112 14:12:18.714910 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1112 14:12:18.714940 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/pods/agnhost/proxy?method=OPTIONS
  I1112 14:12:18.717350 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1112 14:12:18.717370 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/pods/agnhost/proxy?method=PATCH
  I1112 14:12:18.718506 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1112 14:12:18.718525 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/pods/agnhost/proxy?method=POST
  I1112 14:12:18.719675 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1112 14:12:18.719698 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/pods/agnhost/proxy?method=PUT
  I1112 14:12:18.720797 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1112 14:12:18.720821 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/services/e2e-proxy-test-service/proxy?method=DELETE
  I1112 14:12:18.722374 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1112 14:12:18.722395 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1112 14:12:18.723858 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1112 14:12:18.723881 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/services/e2e-proxy-test-service/proxy?method=PATCH
  I1112 14:12:18.725463 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1112 14:12:18.725484 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/services/e2e-proxy-test-service/proxy?method=POST
  I1112 14:12:18.726996 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1112 14:12:18.727017 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/services/e2e-proxy-test-service/proxy?method=PUT
  I1112 14:12:18.728526 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1112 14:12:18.728543 22 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/pods/agnhost/proxy?method=GET
  I1112 14:12:18.729504 22 proxy.go:487] http.Client request:GET StatusCode:301
  I1112 14:12:18.729525 22 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/services/e2e-proxy-test-service/proxy?method=GET
  I1112 14:12:18.730809 22 proxy.go:487] http.Client request:GET StatusCode:301
  I1112 14:12:18.730824 22 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/pods/agnhost/proxy?method=HEAD
  I1112 14:12:18.731707 22 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1112 14:12:18.731728 22 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6605/services/e2e-proxy-test-service/proxy?method=HEAD
  I1112 14:12:18.733037 22 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1112 14:12:18.733136 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6605" for this suite. @ 11/12/24 14:12:18.734
• [2.047 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 11/12/24 14:12:18.738
  I1112 14:12:18.738083 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:12:18.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:12:18.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:12:18.745
  STEP: creating service multi-endpoint-test in namespace services-7471 @ 11/12/24 14:12:18.747
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7471 to expose endpoints map[] @ 11/12/24 14:12:18.752
  I1112 14:12:18.754350 22 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I1112 14:12:19.758807 22 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7471 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7471 @ 11/12/24 14:12:19.758
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7471 to expose endpoints map[pod1:[100]] @ 11/12/24 14:12:21.767
  I1112 14:12:21.833500 22 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7471 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7471 @ 11/12/24 14:12:21.833
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7471 to expose endpoints map[pod1:[100] pod2:[101]] @ 11/12/24 14:12:23.841
  I1112 14:12:23.846104 22 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7471 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 11/12/24 14:12:23.846
  I1112 14:12:23.846152 22 resource.go:361] Creating new exec pod
  I1112 14:12:26.853399 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7471 exec execpod22mck -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1112 14:12:26.921791 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1112 14:12:26.921824 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:12:26.921883 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7471 exec execpod22mck -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.120.171 80'
  I1112 14:12:26.988497 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.120.171 80\nConnection to 10.68.120.171 80 port [tcp/http] succeeded!\n"
  I1112 14:12:26.988532 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:12:26.988594 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7471 exec execpod22mck -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1112 14:12:27.055894 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1112 14:12:27.055930 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:12:27.055993 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-7471 exec execpod22mck -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.120.171 81'
  I1112 14:12:27.123846 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.120.171 81\nConnection to 10.68.120.171 81 port [tcp/*] succeeded!\n"
  I1112 14:12:27.123880 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7471 @ 11/12/24 14:12:27.123
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7471 to expose endpoints map[pod2:[101]] @ 11/12/24 14:12:27.129
  I1112 14:12:27.136300 22 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7471 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7471 @ 11/12/24 14:12:27.136
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7471 to expose endpoints map[] @ 11/12/24 14:12:27.146
  I1112 14:12:27.151326 22 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7471 exposes endpoints map[]
  I1112 14:12:27.160456 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7471" for this suite. @ 11/12/24 14:12:27.162
• [8.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 11/12/24 14:12:27.166
  I1112 14:12:27.166246 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 14:12:27.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:12:27.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:12:27.192
  STEP: Creating pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989 @ 11/12/24 14:12:27.194
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/12/24 14:12:29.213
  I1112 14:12:29.214532 22 container_probe.go:1749] Initial restart count of pod test-webserver-2136256c-8950-49e4-864f-372a747e003a is 0
  I1112 14:12:29.215593 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:31.217624 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:33.220466 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:35.222886 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:37.225562 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:39.227738 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:41.230566 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:43.233419 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:45.235421 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:47.238180 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:49.240652 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:51.243470 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:53.245429 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:55.247255 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:57.249518 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:12:59.251833 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:01.254672 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:03.256647 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:05.259460 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:07.261306 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:09.263642 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:11.266253 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:13.268622 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:15.271043 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:17.273649 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:19.275634 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:21.278137 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:23.280615 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:25.283045 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:27.284875 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:29.287570 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:31.289827 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:33.292294 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:35.294498 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:37.296547 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:39.298802 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:41.300933 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:43.303748 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:45.306432 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:47.308443 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:49.310701 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:51.312713 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:53.314693 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:55.316911 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:57.319620 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:13:59.321723 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:01.323724 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:03.326551 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:05.328165 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:07.330940 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:09.332829 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:11.335179 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:13.337649 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:15.339540 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:17.341503 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:19.343683 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:21.346190 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:23.348554 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:25.350619 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:27.352430 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:29.354919 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:31.357232 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:33.359867 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:35.362397 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:37.364983 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:39.367149 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:41.369474 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:43.371641 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:45.373870 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:47.376549 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:49.378833 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:51.380407 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:53.383117 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:55.385576 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:57.388182 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:14:59.390840 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:01.393243 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:03.395937 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:05.398436 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:07.400474 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:09.402707 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:11.404403 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:13.407233 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:15.409470 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:17.412100 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:19.414689 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:21.416262 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:23.418682 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:25.420455 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:27.423213 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:29.425794 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:31.428527 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:33.431351 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:35.433296 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:37.435867 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:39.438348 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:41.440261 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:43.443005 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:45.445469 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:47.447281 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:49.450098 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:51.452369 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:53.454457 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:55.456366 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:57.458980 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:15:59.461233 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:01.463157 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:03.465577 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:05.468116 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:07.470009 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:09.472116 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:11.474790 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:13.476807 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:15.479306 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:17.481759 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:19.484428 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:21.486941 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:23.488929 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:25.490737 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  I1112 14:16:27.492639 22 container_probe.go:1759] Get pod test-webserver-2136256c-8950-49e4-864f-372a747e003a in namespace container-probe-5989
  STEP: deleting the pod @ 11/12/24 14:16:29.493
  I1112 14:16:29.498853 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5989" for this suite. @ 11/12/24 14:16:29.5
• [242.337 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 11/12/24 14:16:29.505
  I1112 14:16:29.505154 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/12/24 14:16:29.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:16:29.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:16:29.513
  I1112 14:16:29.514665 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/12/24 14:16:30.678
  I1112 14:16:30.678297 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3445 --namespace=crd-publish-openapi-3445 create -f -'
  I1112 14:16:32.733702 22 builder.go:146] stderr: ""
  I1112 14:16:32.733735 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3453-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1112 14:16:32.733773 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3445 --namespace=crd-publish-openapi-3445 delete e2e-test-crd-publish-openapi-3453-crds test-cr'
  I1112 14:16:32.774435 22 builder.go:146] stderr: ""
  I1112 14:16:32.774468 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3453-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1112 14:16:32.774504 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3445 --namespace=crd-publish-openapi-3445 apply -f -'
  I1112 14:16:32.818704 22 builder.go:146] stderr: ""
  I1112 14:16:32.818739 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3453-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1112 14:16:32.818788 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3445 --namespace=crd-publish-openapi-3445 delete e2e-test-crd-publish-openapi-3453-crds test-cr'
  I1112 14:16:32.859013 22 builder.go:146] stderr: ""
  I1112 14:16:32.859048 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3453-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/12/24 14:16:32.859
  I1112 14:16:32.859113 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3445 explain e2e-test-crd-publish-openapi-3453-crds'
  I1112 14:16:32.897332 22 builder.go:146] stderr: ""
  I1112 14:16:32.897379 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3453-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1112 14:16:34.077396 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3445" for this suite. @ 11/12/24 14:16:34.081
• [4.579 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 11/12/24 14:16:34.083
  I1112 14:16:34.083834 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/12/24 14:16:34.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:16:34.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:16:34.092
  I1112 14:16:34.093761 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/12/24 14:16:35.248
  I1112 14:16:35.248803 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-5511 --namespace=crd-publish-openapi-5511 create -f -'
  I1112 14:16:37.299252 22 builder.go:146] stderr: ""
  I1112 14:16:37.299295 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3498-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1112 14:16:37.299342 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-5511 --namespace=crd-publish-openapi-5511 delete e2e-test-crd-publish-openapi-3498-crds test-cr'
  I1112 14:16:37.341302 22 builder.go:146] stderr: ""
  I1112 14:16:37.341333 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3498-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1112 14:16:37.341373 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-5511 --namespace=crd-publish-openapi-5511 apply -f -'
  I1112 14:16:37.384568 22 builder.go:146] stderr: ""
  I1112 14:16:37.384603 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3498-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1112 14:16:37.384642 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-5511 --namespace=crd-publish-openapi-5511 delete e2e-test-crd-publish-openapi-3498-crds test-cr'
  I1112 14:16:37.424560 22 builder.go:146] stderr: ""
  I1112 14:16:37.424592 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3498-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 11/12/24 14:16:37.424
  I1112 14:16:37.424683 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-5511 explain e2e-test-crd-publish-openapi-3498-crds'
  I1112 14:16:37.464272 22 builder.go:146] stderr: ""
  I1112 14:16:37.464326 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3498-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I1112 14:16:38.642896 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5511" for this suite. @ 11/12/24 14:16:38.646
• [4.566 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 11/12/24 14:16:38.649
  I1112 14:16:38.649665 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/12/24 14:16:38.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:16:38.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:16:38.658
  STEP: getting /apis @ 11/12/24 14:16:38.661
  STEP: getting /apis/admissionregistration.k8s.io @ 11/12/24 14:16:38.664
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 11/12/24 14:16:38.664
  STEP: creating @ 11/12/24 14:16:38.665
  STEP: getting @ 11/12/24 14:16:38.67
  STEP: listing @ 11/12/24 14:16:38.671
  STEP: watching @ 11/12/24 14:16:38.672
  I1112 14:16:38.672058 22 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 11/12/24 14:16:38.672
  STEP: updating @ 11/12/24 14:16:38.674
  I1112 14:16:38.677830 22 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 11/12/24 14:16:38.677
  STEP: deleting a collection @ 11/12/24 14:16:38.681
  I1112 14:16:38.686440 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4535" for this suite. @ 11/12/24 14:16:38.747
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 11/12/24 14:16:38.75
  I1112 14:16:38.750100 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename events @ 11/12/24 14:16:38.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:16:38.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:16:38.758
  STEP: creating a test event @ 11/12/24 14:16:38.759
  STEP: listing events in all namespaces @ 11/12/24 14:16:38.761
  STEP: listing events in test namespace @ 11/12/24 14:16:38.764
  STEP: listing events with field selection filtering on source @ 11/12/24 14:16:38.765
  STEP: listing events with field selection filtering on reportingController @ 11/12/24 14:16:38.766
  STEP: getting the test event @ 11/12/24 14:16:38.767
  STEP: patching the test event @ 11/12/24 14:16:38.768
  STEP: getting the test event @ 11/12/24 14:16:38.774
  STEP: updating the test event @ 11/12/24 14:16:38.775
  STEP: getting the test event @ 11/12/24 14:16:38.777
  STEP: deleting the test event @ 11/12/24 14:16:38.778
  STEP: listing events in all namespaces @ 11/12/24 14:16:38.78
  STEP: listing events in test namespace @ 11/12/24 14:16:38.782
  I1112 14:16:38.783455 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2021" for this suite. @ 11/12/24 14:16:38.848
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 11/12/24 14:16:38.85
  I1112 14:16:38.850806 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename job @ 11/12/24 14:16:38.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:16:38.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:16:38.859
  STEP: Creating a job @ 11/12/24 14:16:38.86
  STEP: Ensure pods equal to parallelism count is attached to the job @ 11/12/24 14:16:38.863
  STEP: patching /status @ 11/12/24 14:16:40.866
  STEP: updating /status @ 11/12/24 14:16:40.87
  STEP: get /status @ 11/12/24 14:16:40.873
  I1112 14:16:40.875252 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-257" for this suite. @ 11/12/24 14:16:40.876
• [2.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 11/12/24 14:16:40.879
  I1112 14:16:40.879045 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 14:16:40.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:16:40.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:16:40.887
  STEP: Counting existing ResourceQuota @ 11/12/24 14:16:40.889
  STEP: Creating a ResourceQuota @ 11/12/24 14:16:45.89
  STEP: Ensuring resource quota status is calculated @ 11/12/24 14:16:45.894
  STEP: Creating a ReplicaSet @ 11/12/24 14:16:47.896
  STEP: Ensuring resource quota status captures replicaset creation @ 11/12/24 14:16:47.902
  STEP: Deleting a ReplicaSet @ 11/12/24 14:16:49.904
  STEP: Ensuring resource quota status released usage @ 11/12/24 14:16:49.907
  I1112 14:16:51.909594 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1524" for this suite. @ 11/12/24 14:16:51.911
• [11.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 11/12/24 14:16:51.913
  I1112 14:16:51.913852 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 14:16:51.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:16:51.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:16:51.922
  STEP: Counting existing ResourceQuota @ 11/12/24 14:16:51.923
  STEP: Creating a ResourceQuota @ 11/12/24 14:16:56.925
  STEP: Ensuring resource quota status is calculated @ 11/12/24 14:16:56.928
  STEP: Creating a ReplicationController @ 11/12/24 14:16:58.931
  STEP: Ensuring resource quota status captures replication controller creation @ 11/12/24 14:16:58.936
  STEP: Deleting a ReplicationController @ 11/12/24 14:17:00.938
  STEP: Ensuring resource quota status released usage @ 11/12/24 14:17:00.94
  I1112 14:17:02.942779 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7042" for this suite. @ 11/12/24 14:17:02.944
• [11.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 11/12/24 14:17:02.948
  I1112 14:17:02.948069 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/12/24 14:17:02.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:17:02.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:17:02.956
  I1112 14:17:02.957828 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 11/12/24 14:17:04.143
  I1112 14:17:04.143219 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 --namespace=crd-publish-openapi-6700 create -f -'
  I1112 14:17:04.198874 22 builder.go:146] stderr: ""
  I1112 14:17:04.198910 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8750-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1112 14:17:04.198950 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 --namespace=crd-publish-openapi-6700 delete e2e-test-crd-publish-openapi-8750-crds test-foo'
  I1112 14:17:04.240150 22 builder.go:146] stderr: ""
  I1112 14:17:04.240180 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8750-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1112 14:17:04.240215 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 --namespace=crd-publish-openapi-6700 apply -f -'
  I1112 14:17:04.294705 22 builder.go:146] stderr: ""
  I1112 14:17:04.294742 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8750-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1112 14:17:04.294799 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 --namespace=crd-publish-openapi-6700 delete e2e-test-crd-publish-openapi-8750-crds test-foo'
  I1112 14:17:04.337867 22 builder.go:146] stderr: ""
  I1112 14:17:04.337898 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8750-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 11/12/24 14:17:04.337
  I1112 14:17:04.337956 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 --namespace=crd-publish-openapi-6700 create -f -'
  I1112 14:17:04.379118 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 11/12/24 14:17:04.379
  I1112 14:17:04.379213 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 --namespace=crd-publish-openapi-6700 create -f -'
  I1112 14:17:04.420613 22 builder.go:135] rc: 1
  I1112 14:17:04.420681 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 --namespace=crd-publish-openapi-6700 apply -f -'
  I1112 14:17:04.464634 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 11/12/24 14:17:04.464
  I1112 14:17:04.464739 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 --namespace=crd-publish-openapi-6700 create -f -'
  I1112 14:17:04.505628 22 builder.go:135] rc: 1
  I1112 14:17:04.505703 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 --namespace=crd-publish-openapi-6700 apply -f -'
  I1112 14:17:04.550169 22 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 11/12/24 14:17:04.55
  I1112 14:17:04.550274 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 explain e2e-test-crd-publish-openapi-8750-crds'
  I1112 14:17:04.591019 22 builder.go:146] stderr: ""
  I1112 14:17:04.591066 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8750-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 11/12/24 14:17:04.591
  I1112 14:17:04.591264 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 explain e2e-test-crd-publish-openapi-8750-crds.metadata'
  I1112 14:17:04.630038 22 builder.go:146] stderr: ""
  I1112 14:17:04.630142 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8750-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1112 14:17:04.630299 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 explain e2e-test-crd-publish-openapi-8750-crds.spec'
  I1112 14:17:04.668975 22 builder.go:146] stderr: ""
  I1112 14:17:04.669011 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8750-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1112 14:17:04.669092 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 explain e2e-test-crd-publish-openapi-8750-crds.spec.bars'
  I1112 14:17:04.707750 22 builder.go:146] stderr: ""
  I1112 14:17:04.707789 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8750-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 11/12/24 14:17:04.707
  I1112 14:17:04.707941 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-6700 explain e2e-test-crd-publish-openapi-8750-crds.spec.bars2'
  I1112 14:17:04.747007 22 builder.go:135] rc: 1
  I1112 14:17:05.891330 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6700" for this suite. @ 11/12/24 14:17:05.894
• [2.950 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 11/12/24 14:17:05.898
  I1112 14:17:05.898275 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename cronjob @ 11/12/24 14:17:05.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:17:05.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:17:05.905
  STEP: Creating a ForbidConcurrent cronjob @ 11/12/24 14:17:05.907
  STEP: Ensuring a job is scheduled @ 11/12/24 14:17:05.909
  STEP: Ensuring exactly one is scheduled @ 11/12/24 14:18:01.912
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/12/24 14:18:01.914
  STEP: Ensuring no more jobs are scheduled @ 11/12/24 14:18:01.915
  STEP: Removing cronjob @ 11/12/24 14:18:01.916
  I1112 14:18:01.918353 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3295" for this suite. @ 11/12/24 14:18:01.92
• [56.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 11/12/24 14:18:01.922
  I1112 14:18:01.922575 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replication-controller @ 11/12/24 14:18:01.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:01.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:01.931
  I1112 14:18:01.933416 22 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 11/12/24 14:18:01.938
  STEP: Checking rc "condition-test" has the desired failure condition set @ 11/12/24 14:18:01.94
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 11/12/24 14:18:02.943
  I1112 14:18:02.947935 22 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 11/12/24 14:18:02.947
  I1112 14:18:03.952008 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4132" for this suite. @ 11/12/24 14:18:03.953
• [2.034 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 11/12/24 14:18:03.956
  I1112 14:18:03.956624 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:18:03.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:03.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:03.964
  STEP: Setting up server cert @ 11/12/24 14:18:04.066
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:18:04.418
  STEP: Deploying the webhook pod @ 11/12/24 14:18:04.422
  STEP: Wait for the deployment to be ready @ 11/12/24 14:18:04.427
  I1112 14:18:04.429919 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/12/24 14:18:06.435
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:18:06.439
  I1112 14:18:07.439852 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/12/24 14:18:07.443
  STEP: create a pod that should be denied by the webhook @ 11/12/24 14:18:07.451
  STEP: create a pod that causes the webhook to hang @ 11/12/24 14:18:07.457
  STEP: create a configmap that should be denied by the webhook @ 11/12/24 14:18:17.46
  STEP: create a configmap that should be admitted by the webhook @ 11/12/24 14:18:17.466
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/12/24 14:18:17.471
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/12/24 14:18:17.474
  STEP: create a namespace that bypass the webhook @ 11/12/24 14:18:17.477
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 11/12/24 14:18:17.483
  I1112 14:18:17.525121 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6113" for this suite. @ 11/12/24 14:18:17.526
  STEP: Destroying namespace "webhook-markers-8979" for this suite. @ 11/12/24 14:18:17.529
  STEP: Destroying namespace "exempted-namespace-4141" for this suite. @ 11/12/24 14:18:17.532
• [13.579 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 11/12/24 14:18:17.535
  I1112 14:18:17.535262 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl-logs @ 11/12/24 14:18:17.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:17.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:17.586
  STEP: creating a pod @ 11/12/24 14:18:17.588
  I1112 14:18:17.588327 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-logs-6304 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1112 14:18:17.636026 22 builder.go:146] stderr: ""
  I1112 14:18:17.636073 22 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 11/12/24 14:18:17.636
  I1112 14:18:17.636157 22 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1112 14:18:19.640233 22 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 11/12/24 14:18:19.64
  I1112 14:18:19.640310 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-logs-6304 logs logs-generator logs-generator'
  I1112 14:18:19.687731 22 builder.go:146] stderr: ""
  I1112 14:18:19.687784 22 builder.go:147] stdout: "I1112 14:18:18.130487       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/q72s 489\nI1112 14:18:18.330838       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/z92 490\nI1112 14:18:18.531125       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/6bj 576\nI1112 14:18:18.731326       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/z6dg 203\nI1112 14:18:18.930565       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/84h 208\nI1112 14:18:19.130858       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/bvn 280\nI1112 14:18:19.331161       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/7zh 234\nI1112 14:18:19.531447       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/jknh 394\n"
  STEP: limiting log lines @ 11/12/24 14:18:19.687
  I1112 14:18:19.687860 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-logs-6304 logs logs-generator logs-generator --tail=1'
  I1112 14:18:19.730245 22 builder.go:146] stderr: ""
  I1112 14:18:19.730281 22 builder.go:147] stdout: "I1112 14:18:19.531447       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/jknh 394\n"
  I1112 14:18:19.730293 22 logs.go:180] got output "I1112 14:18:19.531447       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/jknh 394\n"
  STEP: limiting log bytes @ 11/12/24 14:18:19.73
  I1112 14:18:19.730361 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-logs-6304 logs logs-generator logs-generator --limit-bytes=1'
  I1112 14:18:19.772070 22 builder.go:146] stderr: ""
  I1112 14:18:19.772102 22 builder.go:147] stdout: "I"
  I1112 14:18:19.772111 22 logs.go:186] got output "I"
  STEP: exposing timestamps @ 11/12/24 14:18:19.772
  I1112 14:18:19.772182 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-logs-6304 logs logs-generator logs-generator --tail=1 --timestamps'
  I1112 14:18:19.813193 22 builder.go:146] stderr: ""
  I1112 14:18:19.813231 22 builder.go:147] stdout: "2024-11-12T22:18:19.730735752+08:00 I1112 14:18:19.730682       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/zq9 237\n"
  I1112 14:18:19.813243 22 logs.go:192] got output "2024-11-12T22:18:19.730735752+08:00 I1112 14:18:19.730682       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/zq9 237\n"
  STEP: restricting to a time range @ 11/12/24 14:18:19.813
  I1112 14:18:22.314824 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-logs-6304 logs logs-generator logs-generator --since=1s'
  I1112 14:18:22.356937 22 builder.go:146] stderr: ""
  I1112 14:18:22.356975 22 builder.go:147] stdout: "I1112 14:18:21.531154       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/jcrh 452\nI1112 14:18:21.731441       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/pj2 419\nI1112 14:18:21.930574       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/gw5 567\nI1112 14:18:22.130857       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/mpsq 587\nI1112 14:18:22.331151       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/62f 435\n"
  I1112 14:18:22.357015 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-logs-6304 logs logs-generator logs-generator --since=24h'
  I1112 14:18:22.398102 22 builder.go:146] stderr: ""
  I1112 14:18:22.398156 22 builder.go:147] stdout: "I1112 14:18:18.130487       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/q72s 489\nI1112 14:18:18.330838       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/z92 490\nI1112 14:18:18.531125       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/6bj 576\nI1112 14:18:18.731326       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/z6dg 203\nI1112 14:18:18.930565       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/84h 208\nI1112 14:18:19.130858       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/bvn 280\nI1112 14:18:19.331161       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/7zh 234\nI1112 14:18:19.531447       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/jknh 394\nI1112 14:18:19.730682       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/zq9 237\nI1112 14:18:19.930978       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/v4pw 242\nI1112 14:18:20.131270       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/gxn 415\nI1112 14:18:20.330511       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/qd2w 442\nI1112 14:18:20.530810       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/zz2 512\nI1112 14:18:20.731095       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/jns 518\nI1112 14:18:20.931366       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/6jrr 382\nI1112 14:18:21.130597       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/jh6b 309\nI1112 14:18:21.330860       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/dwg 494\nI1112 14:18:21.531154       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/jcrh 452\nI1112 14:18:21.731441       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/pj2 419\nI1112 14:18:21.930574       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/gw5 567\nI1112 14:18:22.130857       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/mpsq 587\nI1112 14:18:22.331151       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/62f 435\n"
  I1112 14:18:22.398232 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-logs-6304 delete pod logs-generator'
  I1112 14:18:23.601430 22 builder.go:146] stderr: ""
  I1112 14:18:23.601457 22 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1112 14:18:23.601573 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6304" for this suite. @ 11/12/24 14:18:23.603
• [6.071 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 11/12/24 14:18:23.606
  I1112 14:18:23.606668 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 14:18:23.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:23.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:23.616
  STEP: Counting existing ResourceQuota @ 11/12/24 14:18:23.617
  STEP: Creating a ResourceQuota @ 11/12/24 14:18:28.618
  STEP: Ensuring resource quota status is calculated @ 11/12/24 14:18:28.621
  I1112 14:18:30.624021 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-159" for this suite. @ 11/12/24 14:18:30.625
• [7.022 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 11/12/24 14:18:30.628
  I1112 14:18:30.628303 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename apf @ 11/12/24 14:18:30.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:30.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:30.637
  STEP: getting /apis @ 11/12/24 14:18:30.639
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 11/12/24 14:18:30.64
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 11/12/24 14:18:30.641
  STEP: creating @ 11/12/24 14:18:30.641
  STEP: getting @ 11/12/24 14:18:30.649
  STEP: listing @ 11/12/24 14:18:30.651
  STEP: watching @ 11/12/24 14:18:30.652
  I1112 14:18:30.652351 22 flowcontrol.go:394] starting watch
  STEP: patching @ 11/12/24 14:18:30.652
  STEP: updating @ 11/12/24 14:18:30.656
  I1112 14:18:30.660551 22 flowcontrol.go:422] waiting for watch events with expected annotations
  I1112 14:18:30.660579 22 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 11/12/24 14:18:30.66
  STEP: patching /status @ 11/12/24 14:18:30.661
  STEP: updating /status @ 11/12/24 14:18:30.664
  STEP: deleting @ 11/12/24 14:18:30.683
  STEP: deleting a collection @ 11/12/24 14:18:30.686
  I1112 14:18:30.692330 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2040" for this suite. @ 11/12/24 14:18:30.726
• [0.100 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 11/12/24 14:18:30.728
  I1112 14:18:30.728682 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubelet-test @ 11/12/24 14:18:30.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:30.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:30.736
  I1112 14:18:34.793536 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9095" for this suite. @ 11/12/24 14:18:34.795
• [4.069 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 11/12/24 14:18:34.797
  I1112 14:18:34.797652 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 14:18:34.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:34.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:34.805
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/12/24 14:18:34.807
  STEP: Saw pod success @ 11/12/24 14:18:36.814
  I1112 14:18:36.816099 22 output.go:196] Trying to get logs from node worker01 pod pod-73b6205e-2f31-4842-9134-a985c743e3a5 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 14:18:36.818
  I1112 14:18:36.823230 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4684" for this suite. @ 11/12/24 14:18:36.824
• [2.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 11/12/24 14:18:36.827
  I1112 14:18:36.827822 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename var-expansion @ 11/12/24 14:18:36.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:36.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:36.835
  STEP: Creating a pod to test env composition @ 11/12/24 14:18:36.837
  STEP: Saw pod success @ 11/12/24 14:18:38.845
  I1112 14:18:38.846401 22 output.go:196] Trying to get logs from node worker01 pod var-expansion-8d22b95d-189b-43d4-88f4-f4f29966be0c container dapi-container: <nil>
  STEP: delete the pod @ 11/12/24 14:18:38.848
  I1112 14:18:38.855093 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3306" for this suite. @ 11/12/24 14:18:38.856
• [2.031 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 11/12/24 14:18:38.858
  I1112 14:18:38.858780 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename dns @ 11/12/24 14:18:38.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:38.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:38.868
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 11/12/24 14:18:38.869
  I1112 14:18:38.873602 22 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4076  6d1b6da1-24f2-4ec5-b107-eaffcf210023 22592 0 2024-11-12 14:18:38 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-11-12 14:18:38 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xscg2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xscg2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 11/12/24 14:18:40.877
  I1112 14:18:40.877469 22 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4076 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:18:40.877485 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:18:40.877855 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:18:40.877902 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-4076/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 11/12/24 14:18:40.918
  I1112 14:18:40.918937 22 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4076 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:18:40.918952 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:18:40.919318 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:18:40.919358 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-4076/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1112 14:18:40.956613 22 dns.go:423] Deleting pod test-dns-nameservers...
  I1112 14:18:40.962900 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4076" for this suite. @ 11/12/24 14:18:40.964
• [2.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 11/12/24 14:18:40.968
  I1112 14:18:40.968311 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:18:40.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:40.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:40.978
  STEP: Creating configMap with name cm-test-opt-del-f939fbaa-3405-494a-8f9f-2f09bfeecc43 @ 11/12/24 14:18:41.064
  STEP: Creating configMap with name cm-test-opt-upd-02a1a9e6-51fc-465e-b282-299e879b811b @ 11/12/24 14:18:41.067
  STEP: Creating the pod @ 11/12/24 14:18:41.069
  STEP: Deleting configmap cm-test-opt-del-f939fbaa-3405-494a-8f9f-2f09bfeecc43 @ 11/12/24 14:18:43.084
  STEP: Updating configmap cm-test-opt-upd-02a1a9e6-51fc-465e-b282-299e879b811b @ 11/12/24 14:18:43.086
  STEP: Creating configMap with name cm-test-opt-create-088bd445-46a8-4367-a4b5-af7262512920 @ 11/12/24 14:18:43.09
  STEP: waiting to observe update in volume @ 11/12/24 14:18:43.092
  I1112 14:18:47.106053 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7587" for this suite. @ 11/12/24 14:18:47.107
• [6.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 11/12/24 14:18:47.109
  I1112 14:18:47.109784 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename dns @ 11/12/24 14:18:47.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:47.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:47.117
  STEP: Creating a test headless service @ 11/12/24 14:18:47.119
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9696.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9696.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 11/12/24 14:18:47.121
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9696.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9696.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 11/12/24 14:18:47.121
  STEP: creating a pod to probe DNS @ 11/12/24 14:18:47.121
  STEP: submitting the pod to kubernetes @ 11/12/24 14:18:47.121
  STEP: retrieving the pod @ 11/12/24 14:18:49.129
  STEP: looking for the results for each expected name from probers @ 11/12/24 14:18:49.13
  I1112 14:18:49.135943 22 dns_common.go:527] DNS probes using dns-9696/dns-test-c86d1f54-33ba-48d9-9370-800966c38a68 succeeded

  STEP: deleting the pod @ 11/12/24 14:18:49.136
  STEP: deleting the test headless service @ 11/12/24 14:18:49.141
  I1112 14:18:49.149873 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9696" for this suite. @ 11/12/24 14:18:49.151
• [2.045 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 11/12/24 14:18:49.154
  I1112 14:18:49.154754 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename volumeattachment @ 11/12/24 14:18:49.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:49.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:49.161
  STEP: Create VolumeAttachment "va-e2e-wqqsj" on node "master01" @ 11/12/24 14:18:49.251
  STEP: Get VolumeAttachment "va-e2e-wqqsj" on node "master01" @ 11/12/24 14:18:49.254
  STEP: Patch VolumeAttachment "va-e2e-wqqsj" on node "master01" @ 11/12/24 14:18:49.255
  STEP: List VolumeAttachments with "va-e2e-wqqsj=patched" label @ 11/12/24 14:18:49.257
  STEP: Delete VolumeAttachment "va-e2e-wqqsj" on node "master01" @ 11/12/24 14:18:49.258
  STEP: Confirm deletion of VolumeAttachment "va-e2e-wqqsj" on node "master01" @ 11/12/24 14:18:49.26
  STEP: Create VolumeAttachment "va-e2e-lq4qn" on node "worker02" @ 11/12/24 14:18:49.352
  STEP: Update the VolumeAttachment "va-e2e-lq4qn" on node "worker02" with label "va-e2e=updated" @ 11/12/24 14:18:49.354
  STEP: Create VolumeAttachment "va-e2e-cx9jn" on node "worker01" @ 11/12/24 14:18:49.452
  STEP: Update the VolumeAttachment "va-e2e-cx9jn" on node "worker01" with label "va-e2e=updated" @ 11/12/24 14:18:49.455
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 11/12/24 14:18:49.458
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 11/12/24 14:18:49.462
  I1112 14:18:49.463233 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9964" for this suite. @ 11/12/24 14:18:49.553
• [0.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 11/12/24 14:18:49.556
  I1112 14:18:49.556401 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:18:49.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:49.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:49.564
  STEP: Creating projection with secret that has name projected-secret-test-map-aaa79a33-9eec-48e9-9d24-9a2adee1b934 @ 11/12/24 14:18:49.565
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:18:49.567
  STEP: Saw pod success @ 11/12/24 14:18:53.577
  I1112 14:18:53.578862 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-secrets-403644eb-c021-4ae5-a5ab-2240a93a4b37 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:18:53.581
  I1112 14:18:53.587263 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2034" for this suite. @ 11/12/24 14:18:53.588
• [4.035 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 11/12/24 14:18:53.591
  I1112 14:18:53.591849 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename gc @ 11/12/24 14:18:53.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:53.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:53.6
  I1112 14:18:53.615199 22 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"6fbc2968-74a6-4d18-80e9-140c697fe7b1", Controller:(*bool)(0xc0039d21f6), BlockOwnerDeletion:(*bool)(0xc0039d21f7)}}
  I1112 14:18:53.617934 22 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b394efce-949f-4293-9fe9-92b49680a042", Controller:(*bool)(0xc0039ed696), BlockOwnerDeletion:(*bool)(0xc0039ed697)}}
  I1112 14:18:53.620828 22 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"0832ca42-597c-4e1c-9c2e-d6d6b86c0100", Controller:(*bool)(0xc0039ed8ce), BlockOwnerDeletion:(*bool)(0xc0039ed8cf)}}
  I1112 14:18:58.628105 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9478" for this suite. @ 11/12/24 14:18:58.63
• [5.041 seconds]
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 11/12/24 14:18:58.632
  I1112 14:18:58.632681 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replicaset @ 11/12/24 14:18:58.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:18:58.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:18:58.713
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 11/12/24 14:18:58.715
  STEP: When a replicaset with a matching selector is created @ 11/12/24 14:19:00.822
  STEP: Then the orphan pod is adopted @ 11/12/24 14:19:00.824
  STEP: When the matched label of one of its pods change @ 11/12/24 14:19:01.828
  I1112 14:19:01.829652 22 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/12/24 14:19:01.834
  I1112 14:19:01.839559 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1686" for this suite. @ 11/12/24 14:19:01.841
• [3.212 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 11/12/24 14:19:01.844
  I1112 14:19:01.844435 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename cronjob @ 11/12/24 14:19:01.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:19:01.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:19:01.854
  STEP: Creating a cronjob @ 11/12/24 14:19:01.855
  STEP: creating @ 11/12/24 14:19:01.855
  STEP: getting @ 11/12/24 14:19:01.858
  STEP: listing @ 11/12/24 14:19:01.859
  STEP: watching @ 11/12/24 14:19:01.86
  I1112 14:19:01.860068 22 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 11/12/24 14:19:01.86
  STEP: cluster-wide watching @ 11/12/24 14:19:01.861
  I1112 14:19:01.861494 22 cronjob.go:382] starting watch
  STEP: patching @ 11/12/24 14:19:01.861
  STEP: updating @ 11/12/24 14:19:01.864
  I1112 14:19:01.868546 22 cronjob.go:406] waiting for watch events with expected annotations
  I1112 14:19:01.868603 22 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 11/12/24 14:19:01.868
  STEP: updating /status @ 11/12/24 14:19:01.871
  STEP: get /status @ 11/12/24 14:19:01.873
  STEP: deleting @ 11/12/24 14:19:01.874
  STEP: deleting a collection @ 11/12/24 14:19:01.88
  I1112 14:19:01.884147 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7562" for this suite. @ 11/12/24 14:19:01.942
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 11/12/24 14:19:01.944
  I1112 14:19:01.944863 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 14:19:01.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:19:01.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:19:01.955
  STEP: Creating a ResourceQuota @ 11/12/24 14:19:01.956
  STEP: Getting a ResourceQuota @ 11/12/24 14:19:01.958
  STEP: Updating a ResourceQuota @ 11/12/24 14:19:01.959
  STEP: Verifying a ResourceQuota was modified @ 11/12/24 14:19:01.963
  STEP: Deleting a ResourceQuota @ 11/12/24 14:19:01.964
  STEP: Verifying the deleted ResourceQuota @ 11/12/24 14:19:01.966
  I1112 14:19:01.967352 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1904" for this suite. @ 11/12/24 14:19:02.042
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 11/12/24 14:19:02.045
  I1112 14:19:02.045453 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:19:02.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:19:02.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:19:02.055
  STEP: Setting up server cert @ 11/12/24 14:19:02.155
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:19:02.279
  STEP: Deploying the webhook pod @ 11/12/24 14:19:02.283
  STEP: Wait for the deployment to be ready @ 11/12/24 14:19:02.289
  I1112 14:19:02.292555 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/12/24 14:19:04.297
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:19:04.301
  I1112 14:19:05.301856 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 11/12/24 14:19:05.304
  STEP: verifying the validating webhook match conditions @ 11/12/24 14:19:05.308
  STEP: updating the validating webhook match conditions @ 11/12/24 14:19:05.309
  STEP: verifying the validating webhook match conditions @ 11/12/24 14:19:05.312
  I1112 14:19:05.335478 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9223" for this suite. @ 11/12/24 14:19:05.337
  STEP: Destroying namespace "webhook-markers-5337" for this suite. @ 11/12/24 14:19:05.342
• [3.299 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 11/12/24 14:19:05.344
  I1112 14:19:05.344726 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:19:05.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:19:05.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:19:05.353
  STEP: Setting up server cert @ 11/12/24 14:19:05.453
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:19:05.73
  STEP: Deploying the webhook pod @ 11/12/24 14:19:05.732
  STEP: Wait for the deployment to be ready @ 11/12/24 14:19:05.738
  I1112 14:19:05.741664 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/12/24 14:19:07.745
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:19:07.749
  I1112 14:19:08.750055 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/12/24 14:19:08.778
  STEP: Creating a configMap that should be mutated @ 11/12/24 14:19:08.784
  STEP: Deleting the collection of validation webhooks @ 11/12/24 14:19:08.796
  STEP: Creating a configMap that should not be mutated @ 11/12/24 14:19:08.81
  I1112 14:19:08.830715 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-208" for this suite. @ 11/12/24 14:19:08.832
  STEP: Destroying namespace "webhook-markers-197" for this suite. @ 11/12/24 14:19:08.837
• [3.495 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 11/12/24 14:19:08.84
  I1112 14:19:08.840228 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 14:19:08.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:19:08.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:19:08.849
  STEP: Counting existing ResourceQuota @ 11/12/24 14:19:08.85
  STEP: Creating a ResourceQuota @ 11/12/24 14:19:13.852
  STEP: Ensuring resource quota status is calculated @ 11/12/24 14:19:13.854
  STEP: Creating a Pod that fits quota @ 11/12/24 14:19:15.856
  STEP: Ensuring ResourceQuota status captures the pod usage @ 11/12/24 14:19:15.864
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 11/12/24 14:19:17.867
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 11/12/24 14:19:17.868
  STEP: Ensuring a pod cannot update its resource requirements @ 11/12/24 14:19:17.87
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 11/12/24 14:19:17.871
  STEP: Deleting the pod @ 11/12/24 14:19:19.874
  STEP: Ensuring resource quota status released the pod usage @ 11/12/24 14:19:19.88
  I1112 14:19:21.882772 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8136" for this suite. @ 11/12/24 14:19:21.884
• [13.046 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 11/12/24 14:19:21.886
  I1112 14:19:21.886719 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 14:19:21.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:19:21.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:19:21.895
  STEP: Counting existing ResourceQuota @ 11/12/24 14:19:38.898
  STEP: Creating a ResourceQuota @ 11/12/24 14:19:43.901
  STEP: Ensuring resource quota status is calculated @ 11/12/24 14:19:43.904
  STEP: Creating a ConfigMap @ 11/12/24 14:19:45.907
  STEP: Ensuring resource quota status captures configMap creation @ 11/12/24 14:19:45.912
  STEP: Deleting a ConfigMap @ 11/12/24 14:19:47.915
  STEP: Ensuring resource quota status released usage @ 11/12/24 14:19:47.917
  I1112 14:19:49.919675 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6691" for this suite. @ 11/12/24 14:19:49.921
• [28.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 11/12/24 14:19:49.923
  I1112 14:19:49.923780 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename watch @ 11/12/24 14:19:49.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:19:49.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:19:49.932
  STEP: creating a watch on configmaps with label A @ 11/12/24 14:19:49.934
  STEP: creating a watch on configmaps with label B @ 11/12/24 14:19:49.934
  STEP: creating a watch on configmaps with label A or B @ 11/12/24 14:19:49.935
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 11/12/24 14:19:49.935
  I1112 14:19:49.937153 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8769  e88de128-7a51-4dca-ab1b-3881da4007da 23274 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:19:49.937245 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8769  e88de128-7a51-4dca-ab1b-3881da4007da 23274 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 11/12/24 14:19:49.937
  I1112 14:19:49.939913 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8769  e88de128-7a51-4dca-ab1b-3881da4007da 23275 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:19:49.939991 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8769  e88de128-7a51-4dca-ab1b-3881da4007da 23275 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 11/12/24 14:19:49.94
  I1112 14:19:49.943349 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8769  e88de128-7a51-4dca-ab1b-3881da4007da 23276 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:19:49.943422 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8769  e88de128-7a51-4dca-ab1b-3881da4007da 23276 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 11/12/24 14:19:49.943
  I1112 14:19:49.945374 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8769  e88de128-7a51-4dca-ab1b-3881da4007da 23277 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:19:49.945404 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8769  e88de128-7a51-4dca-ab1b-3881da4007da 23277 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 11/12/24 14:19:49.945
  I1112 14:19:49.947044 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8769  7d8ebd23-8d37-47fb-ab96-ea81c4d7922c 23278 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:19:49.947095 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8769  7d8ebd23-8d37-47fb-ab96-ea81c4d7922c 23278 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 11/12/24 14:19:59.947
  I1112 14:19:59.950506 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8769  7d8ebd23-8d37-47fb-ab96-ea81c4d7922c 23302 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:19:59.950586 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8769  7d8ebd23-8d37-47fb-ab96-ea81c4d7922c 23302 0 2024-11-12 14:19:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-12 14:19:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:20:09.950769 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8769" for this suite. @ 11/12/24 14:20:09.952
• [20.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 11/12/24 14:20:09.955
  I1112 14:20:09.955814 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename gc @ 11/12/24 14:20:09.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:20:09.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:20:09.964
  STEP: create the deployment @ 11/12/24 14:20:09.965
  W1112 14:20:09.967541      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/12/24 14:20:09.967
  STEP: delete the deployment @ 11/12/24 14:20:10.47
  STEP: wait for all rs to be garbage collected @ 11/12/24 14:20:10.473
  STEP: expected 0 pods, got 2 pods @ 11/12/24 14:20:10.484
  STEP: Gathering metrics @ 11/12/24 14:20:10.978
  W1112 14:20:10.980338      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1112 14:20:10.980369 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1112 14:20:10.980509 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-584" for this suite. @ 11/12/24 14:20:10.982
• [1.029 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 11/12/24 14:20:10.984
  I1112 14:20:10.984662 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename namespaces @ 11/12/24 14:20:10.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:20:10.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:20:10.992
  STEP: Creating a test namespace @ 11/12/24 14:20:10.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:20:11.091
  STEP: Creating a pod in the namespace @ 11/12/24 14:20:11.093
  STEP: Waiting for the pod to have running status @ 11/12/24 14:20:11.096
  STEP: Deleting the namespace @ 11/12/24 14:20:13.1
  STEP: Waiting for the namespace to be removed. @ 11/12/24 14:20:13.103
  STEP: Recreating the namespace @ 11/12/24 14:20:24.105
  STEP: Verifying there are no pods in the namespace @ 11/12/24 14:20:24.112
  I1112 14:20:24.114241 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9591" for this suite. @ 11/12/24 14:20:24.115
  STEP: Destroying namespace "nsdeletetest-3940" for this suite. @ 11/12/24 14:20:24.117
  I1112 14:20:24.118554 22 framework.go:370] Namespace nsdeletetest-3940 was already deleted
  STEP: Destroying namespace "nsdeletetest-3513" for this suite. @ 11/12/24 14:20:24.118
• [13.137 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 11/12/24 14:20:24.121
  I1112 14:20:24.121438 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-runtime @ 11/12/24 14:20:24.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:20:24.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:20:24.214
  STEP: create the container @ 11/12/24 14:20:24.216
  W1112 14:20:24.219563      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 11/12/24 14:20:24.219
  STEP: get the container status @ 11/12/24 14:20:26.224
  STEP: the container should be terminated @ 11/12/24 14:20:26.226
  STEP: the termination message should be set @ 11/12/24 14:20:26.226
  I1112 14:20:26.226142 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/12/24 14:20:26.226
  I1112 14:20:26.232193 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7761" for this suite. @ 11/12/24 14:20:26.233
• [2.114 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 11/12/24 14:20:26.235
  I1112 14:20:26.235852 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:20:26.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:20:26.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:20:26.243
  STEP: create deployment with httpd image @ 11/12/24 14:20:26.245
  I1112 14:20:26.245168 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-2690 create -f -'
  I1112 14:20:26.301343 22 builder.go:146] stderr: ""
  I1112 14:20:26.301375 22 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 11/12/24 14:20:26.301
  I1112 14:20:26.301437 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-2690 diff -f -'
  I1112 14:20:26.387249 22 builder.go:135] rc: 1
  I1112 14:20:26.387331 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-2690 delete -f -'
  I1112 14:20:26.427191 22 builder.go:146] stderr: ""
  I1112 14:20:26.427222 22 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1112 14:20:26.427320 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2690" for this suite. @ 11/12/24 14:20:26.429
• [0.196 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 11/12/24 14:20:26.431
  I1112 14:20:26.431894 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename daemonsets @ 11/12/24 14:20:26.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:20:26.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:20:26.44
  STEP: Creating a simple DaemonSet "daemon-set" @ 11/12/24 14:20:26.533
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/12/24 14:20:26.536
  I1112 14:20:26.633156 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 14:20:26.633181 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 14:20:27.540760 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1112 14:20:27.540785 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 14:20:28.540494 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1112 14:20:28.540519 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 11/12/24 14:20:28.541
  I1112 14:20:28.641446 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1112 14:20:28.641473 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 14:20:29.550299 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1112 14:20:29.550328 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  I1112 14:20:30.550364 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1112 14:20:30.550394 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 11/12/24 14:20:30.55
  STEP: Deleting DaemonSet "daemon-set" @ 11/12/24 14:20:30.552
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5279, will wait for the garbage collector to delete the pods @ 11/12/24 14:20:30.552
  I1112 14:20:30.608010 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.881525ms
  I1112 14:20:30.708823 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.810125ms
  I1112 14:20:31.911230 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 14:20:31.911262 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1112 14:20:31.912742 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23650"},"items":null}

  I1112 14:20:31.915102 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23650"},"items":null}

  I1112 14:20:31.920014 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5279" for this suite. @ 11/12/24 14:20:31.921
• [5.492 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 11/12/24 14:20:31.924
  I1112 14:20:31.924248 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:20:31.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:20:31.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:20:31.933
  STEP: creating a ConfigMap @ 11/12/24 14:20:31.935
  STEP: fetching the ConfigMap @ 11/12/24 14:20:31.937
  STEP: patching the ConfigMap @ 11/12/24 14:20:31.938
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 11/12/24 14:20:31.94
  STEP: deleting the ConfigMap by collection with a label selector @ 11/12/24 14:20:31.941
  STEP: listing all ConfigMaps in test namespace @ 11/12/24 14:20:31.944
  I1112 14:20:31.945060 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1572" for this suite. @ 11/12/24 14:20:32.017
• [0.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 11/12/24 14:20:32.022
  I1112 14:20:32.022067 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename chunking @ 11/12/24 14:20:32.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:20:32.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:20:32.033
  STEP: creating a large number of resources @ 11/12/24 14:20:32.034
  STEP: retrieving the first page @ 11/12/24 14:20:49.725
  I1112 14:20:49.774915 22 chunking.go:163] Retrieved 40/40 results with rv 24131 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 11/12/24 14:20:49.774
  I1112 14:21:09.778103 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:21:29.777822 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:21:49.777962 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:22:09.778164 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:22:29.777484 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:22:49.777758 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:23:09.777883 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:23:29.778163 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:23:49.777678 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:24:09.777429 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:24:29.778394 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:24:49.777110 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:25:09.778088 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:25:29.777631 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:25:49.777636 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMzEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I1112 14:26:09.777130 22 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1112 14:26:09.777156 22 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 11/12/24 14:26:09.777
  STEP: retrieving all remaining pages @ 11/12/24 14:26:09.779
  I1112 14:26:09.780806 22 chunking.go:221] Retrieved 40/40 results with rv 24626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1112 14:26:09.782332 22 chunking.go:221] Retrieved 40/40 results with rv 24626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1112 14:26:09.783915 22 chunking.go:221] Retrieved 40/40 results with rv 24626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1112 14:26:09.785436 22 chunking.go:221] Retrieved 40/40 results with rv 24626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1112 14:26:09.787016 22 chunking.go:221] Retrieved 40/40 results with rv 24626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1112 14:26:09.788692 22 chunking.go:221] Retrieved 40/40 results with rv 24626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1112 14:26:09.790240 22 chunking.go:221] Retrieved 40/40 results with rv 24626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1112 14:26:09.791758 22 chunking.go:221] Retrieved 40/40 results with rv 24626 and continue 
  I1112 14:26:09.791876 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8543" for this suite. @ 11/12/24 14:26:09.793
• [337.773 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 11/12/24 14:26:09.796
  I1112 14:26:09.796054 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename gc @ 11/12/24 14:26:09.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:26:09.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:26:09.809
  STEP: create the deployment @ 11/12/24 14:26:09.81
  W1112 14:26:09.813243      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/12/24 14:26:09.813
  STEP: delete the deployment @ 11/12/24 14:26:10.316
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 11/12/24 14:26:10.321
  STEP: Gathering metrics @ 11/12/24 14:26:10.827
  W1112 14:26:10.829541      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1112 14:26:10.829573 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1112 14:26:10.829714 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-954" for this suite. @ 11/12/24 14:26:10.831
• [1.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 11/12/24 14:26:10.833
  I1112 14:26:10.833620 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:26:10.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:26:10.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:26:10.841
  STEP: Setting up server cert @ 11/12/24 14:26:10.941
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:26:11.204
  STEP: Deploying the webhook pod @ 11/12/24 14:26:11.207
  STEP: Wait for the deployment to be ready @ 11/12/24 14:26:11.214
  I1112 14:26:11.216940 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/12/24 14:26:13.222
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:26:13.226
  I1112 14:26:14.226786 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/12/24 14:26:14.229
  STEP: create the configmap with a random name @ 11/12/24 14:26:14.238
  STEP: verify the configmap is mutated @ 11/12/24 14:26:14.244
  STEP: create the configmap with 'skip-me' name @ 11/12/24 14:26:14.244
  I1112 14:26:14.263086 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6720" for this suite. @ 11/12/24 14:26:14.264
  STEP: Destroying namespace "webhook-markers-8501" for this suite. @ 11/12/24 14:26:14.267
• [3.437 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 11/12/24 14:26:14.27
  I1112 14:26:14.270415 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename var-expansion @ 11/12/24 14:26:14.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:26:14.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:26:14.28
  I1112 14:26:16.289764 22 delete.go:62] Deleting pod "var-expansion-50b4aac3-c45b-41fe-af3a-d89ab515a212" in namespace "var-expansion-5930"
  I1112 14:26:16.293202 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-50b4aac3-c45b-41fe-af3a-d89ab515a212" to be fully deleted
  I1112 14:26:18.296490 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5930" for this suite. @ 11/12/24 14:26:18.297
• [4.030 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 11/12/24 14:26:18.3
  I1112 14:26:18.300247 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/12/24 14:26:18.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:26:18.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:26:18.308
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 11/12/24 14:26:18.309
  I1112 14:26:18.309811 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 11/12/24 14:26:23.073
  I1112 14:26:23.073772 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:26:24.223274 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:26:28.905357 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6309" for this suite. @ 11/12/24 14:26:28.908
• [10.611 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 11/12/24 14:26:28.911
  I1112 14:26:28.911951 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename job @ 11/12/24 14:26:28.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:26:28.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:26:28.92
  STEP: Creating a job @ 11/12/24 14:26:28.921
  STEP: Ensuring job reaches completions @ 11/12/24 14:26:28.924
  I1112 14:26:40.928702 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7686" for this suite. @ 11/12/24 14:26:40.93
• [12.022 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 11/12/24 14:26:40.933
  I1112 14:26:40.933572 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 14:26:40.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:26:40.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:26:40.94
  STEP: Creating secret with name secret-test-1a2fc9ad-c336-4943-9208-3d5f47edd09c @ 11/12/24 14:26:40.942
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:26:40.945
  STEP: Saw pod success @ 11/12/24 14:26:44.953
  I1112 14:26:44.954847 22 output.go:196] Trying to get logs from node worker01 pod pod-secrets-efac69e6-6cee-41b4-8f34-74e0d9caea6b container secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:26:44.962
  I1112 14:26:44.968163 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9824" for this suite. @ 11/12/24 14:26:44.969
• [4.039 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 11/12/24 14:26:44.972
  I1112 14:26:44.972710 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename hostport @ 11/12/24 14:26:44.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:26:44.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:26:44.979
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 11/12/24 14:26:45.07
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.255.0.208 on the node which pod1 resides and expect scheduled @ 11/12/24 14:26:47.077
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.255.0.208 but use UDP protocol on the node which pod2 resides @ 11/12/24 14:26:49.085
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 11/12/24 14:26:53.098
  I1112 14:26:53.098780 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.255.0.208 http://127.0.0.1:54323/hostname] Namespace:hostport-4175 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:26:53.098798 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:26:53.099155 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:26:53.099209 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-4175/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.255.0.208+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.208, port: 54323 @ 11/12/24 14:26:53.13
  I1112 14:26:53.130124 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.255.0.208:54323/hostname] Namespace:hostport-4175 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:26:53.130141 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:26:53.130580 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:26:53.130628 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-4175/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.255.0.208%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.208, port: 54323 UDP @ 11/12/24 14:26:53.158
  I1112 14:26:53.158035 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.255.0.208 54323] Namespace:hostport-4175 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:26:53.158049 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:26:53.158372 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:26:53.158409 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-4175/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.255.0.208+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I1112 14:26:58.189587 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4175" for this suite. @ 11/12/24 14:26:58.191
• [13.221 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 11/12/24 14:26:58.194
  I1112 14:26:58.194166 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:26:58.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:26:58.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:26:58.202
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6771 @ 11/12/24 14:26:58.204
  STEP: changing the ExternalName service to type=ClusterIP @ 11/12/24 14:26:58.206
  STEP: creating replication controller externalname-service in namespace services-6771 @ 11/12/24 14:26:58.211
  I1112 14:26:58.214844      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6771, replica count: 2
  I1112 14:27:01.266169      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 14:27:01.266203 22 resource.go:361] Creating new exec pod
  I1112 14:27:04.272484 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-6771 exec execpodxgjt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1112 14:27:04.342916 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1112 14:27:04.342960 22 builder.go:147] stdout: ""
  I1112 14:27:05.272983 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-6771 exec execpodxgjt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1112 14:27:05.341951 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1112 14:27:05.341994 22 builder.go:147] stdout: "externalname-service-zf4v4"
  I1112 14:27:05.342058 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-6771 exec execpodxgjt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.185.17 80'
  I1112 14:27:05.407808 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.185.17 80\nConnection to 10.68.185.17 80 port [tcp/http] succeeded!\n"
  I1112 14:27:05.407845 22 builder.go:147] stdout: ""
  I1112 14:27:06.342697 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-6771 exec execpodxgjt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.185.17 80'
  I1112 14:27:06.409349 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.185.17 80\nConnection to 10.68.185.17 80 port [tcp/http] succeeded!\n"
  I1112 14:27:06.409383 22 builder.go:147] stdout: "externalname-service-zf4v4"
  I1112 14:27:06.409448 22 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1112 14:27:06.418496 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6771" for this suite. @ 11/12/24 14:27:06.421
• [8.230 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 11/12/24 14:27:06.423
  I1112 14:27:06.423819 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename dns @ 11/12/24 14:27:06.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:27:06.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:27:06.483
  STEP: Creating a test headless service @ 11/12/24 14:27:06.485
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3193.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3193.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3193.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3193.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3193.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3193.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3193.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3193.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3193.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 208.246.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.246.208_udp@PTR;check="$$(dig +tcp +noall +answer +search 208.246.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.246.208_tcp@PTR;sleep 1; done
   @ 11/12/24 14:27:06.494
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3193.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3193.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3193.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3193.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3193.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3193.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3193.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3193.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3193.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3193.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 208.246.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.246.208_udp@PTR;check="$$(dig +tcp +noall +answer +search 208.246.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.246.208_tcp@PTR;sleep 1; done
   @ 11/12/24 14:27:06.494
  STEP: creating a pod to probe DNS @ 11/12/24 14:27:06.494
  STEP: submitting the pod to kubernetes @ 11/12/24 14:27:06.494
  STEP: retrieving the pod @ 11/12/24 14:27:08.504
  STEP: looking for the results for each expected name from probers @ 11/12/24 14:27:08.505
  I1112 14:27:08.507285 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:08.508470 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:08.509595 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:08.510681 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:08.516228 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:08.517266 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:08.518302 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:08.519353 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:08.523577 22 dns_common.go:489] Lookups using dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885 failed for: [wheezy_udp@dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_udp@dns-test-service.dns-3193.svc.cluster.local jessie_tcp@dns-test-service.dns-3193.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local]

  I1112 14:27:08.525909 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:27:08.529797 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:27:08.539810 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:27:13.508971 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:13.510395 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:13.511580 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:13.512705 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:13.518672 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:13.519815 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:13.521003 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:13.522239 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:13.527035 22 dns_common.go:489] Lookups using dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885 failed for: [wheezy_udp@dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_udp@dns-test-service.dns-3193.svc.cluster.local jessie_tcp@dns-test-service.dns-3193.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local]

  I1112 14:27:13.530378 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:27:13.540375 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:27:13.550420 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:27:18.508441 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:18.509734 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:18.510932 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:18.512054 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:18.519389 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:18.520444 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:18.521507 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:18.522582 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:18.526861 22 dns_common.go:489] Lookups using dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885 failed for: [wheezy_udp@dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_udp@dns-test-service.dns-3193.svc.cluster.local jessie_tcp@dns-test-service.dns-3193.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local]

  I1112 14:27:18.529055 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:27:18.535251 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:27:18.545257 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:27:23.507906 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:23.509491 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:23.510684 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:23.511833 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:23.517135 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:23.518190 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:23.519203 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:23.520217 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:23.524358 22 dns_common.go:489] Lookups using dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885 failed for: [wheezy_udp@dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_udp@dns-test-service.dns-3193.svc.cluster.local jessie_tcp@dns-test-service.dns-3193.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local]

  I1112 14:27:23.526490 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:27:23.536049 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:27:23.546048 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:27:28.508356 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:28.509554 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:28.510656 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:28.511715 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:28.517075 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:28.518149 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:28.519245 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:28.520274 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:28.525103 22 dns_common.go:489] Lookups using dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885 failed for: [wheezy_udp@dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_udp@dns-test-service.dns-3193.svc.cluster.local jessie_tcp@dns-test-service.dns-3193.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local]

  I1112 14:27:28.528252 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:27:28.538265 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:27:28.548254 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:27:33.510301 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:33.511692 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:33.512892 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:33.514033 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:33.519222 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:33.520233 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:33.521247 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:33.522276 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local from pod dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885: the server could not find the requested resource (get pods dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885)
  I1112 14:27:33.526434 22 dns_common.go:489] Lookups using dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885 failed for: [wheezy_udp@dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@dns-test-service.dns-3193.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_udp@dns-test-service.dns-3193.svc.cluster.local jessie_tcp@dns-test-service.dns-3193.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3193.svc.cluster.local]

  I1112 14:27:33.528570 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:27:33.538127 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:27:33.548127 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1112 14:27:38.524011 22 dns_common.go:527] DNS probes using dns-3193/dns-test-9de90d9e-89b9-4ecf-8f3c-69f4780fa885 succeeded

  STEP: deleting the pod @ 11/12/24 14:27:38.524
  STEP: deleting the test service @ 11/12/24 14:27:38.529
  STEP: deleting the test headless service @ 11/12/24 14:27:38.541
  I1112 14:27:38.546934 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3193" for this suite. @ 11/12/24 14:27:38.548
• [32.129 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 11/12/24 14:27:38.552
  I1112 14:27:38.552542 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename statefulset @ 11/12/24 14:27:38.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:27:38.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:27:38.561
  STEP: Creating service test in namespace statefulset-3184 @ 11/12/24 14:27:38.562
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 11/12/24 14:27:38.565
  STEP: Creating stateful set ss in namespace statefulset-3184 @ 11/12/24 14:27:38.566
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3184 @ 11/12/24 14:27:38.57
  I1112 14:27:38.578297 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I1112 14:27:48.575466 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 11/12/24 14:27:48.575
  I1112 14:27:48.576783 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-3184 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:27:48.647601 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:27:48.647636 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:27:48.647649 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1112 14:27:48.676502 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1112 14:27:58.653100 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1112 14:27:58.653130 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1112 14:27:58.754332 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999837s
  I1112 14:27:59.757227 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.902196379s
  I1112 14:28:00.759258 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.90024315s
  I1112 14:28:01.761749 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.897685529s
  I1112 14:28:02.763974 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.895535361s
  I1112 14:28:03.767034 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.892463332s
  I1112 14:28:04.769885 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.889681742s
  I1112 14:28:05.771576 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.887580827s
  I1112 14:28:06.774484 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.885010093s
  I1112 14:28:07.776390 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 882.849787ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3184 @ 11/12/24 14:28:08.777
  I1112 14:28:08.779248 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-3184 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1112 14:28:08.846512 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1112 14:28:08.846548 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1112 14:28:08.846558 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1112 14:28:08.848053 22 wait.go:40] Found 1 stateful pods, waiting for 3
  I1112 14:28:18.852563 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:28:18.852589 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:28:18.852596 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 11/12/24 14:28:18.852
  STEP: Scale down will halt with unhealthy stateful pod @ 11/12/24 14:28:18.852
  I1112 14:28:18.854928 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-3184 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:28:18.925397 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:28:18.925440 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:28:18.925449 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1112 14:28:18.925484 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-3184 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:28:18.995943 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:28:18.995978 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:28:18.995992 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1112 14:28:18.996028 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-3184 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:28:19.064450 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:28:19.064481 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:28:19.064492 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1112 14:28:19.064504 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1112 14:28:19.065768 22 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1112 14:28:29.068634 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1112 14:28:29.068665 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1112 14:28:29.068674 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1112 14:28:29.169256 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999843s
  I1112 14:28:30.171398 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.903570262s
  I1112 14:28:31.174278 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.900783192s
  I1112 14:28:32.176750 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.898319604s
  I1112 14:28:33.178996 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.896012714s
  I1112 14:28:34.182031 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.892908428s
  I1112 14:28:35.184218 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.890794328s
  I1112 14:28:36.187062 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.887818838s
  I1112 14:28:37.191024 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.88502269s
  I1112 14:28:38.193897 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 881.051638ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3184 @ 11/12/24 14:28:39.194
  I1112 14:28:39.196240 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-3184 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1112 14:28:39.262953 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1112 14:28:39.262994 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1112 14:28:39.263006 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1112 14:28:39.263047 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-3184 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1112 14:28:39.329197 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1112 14:28:39.329228 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1112 14:28:39.329238 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1112 14:28:39.329276 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-3184 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1112 14:28:39.395477 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1112 14:28:39.395510 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1112 14:28:39.395518 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1112 14:28:39.395530 22 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 11/12/24 14:28:49.399
  I1112 14:28:49.399833 22 statefulset.go:138] Deleting all statefulset in ns statefulset-3184
  I1112 14:28:49.401233 22 rest.go:150] Scaling statefulset ss to 0
  I1112 14:28:49.403327 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1112 14:28:49.404286 22 rest.go:88] Deleting statefulset ss
  I1112 14:28:49.410222 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3184" for this suite. @ 11/12/24 14:28:49.411
• [70.863 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 11/12/24 14:28:49.415
  I1112 14:28:49.415230 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename watch @ 11/12/24 14:28:49.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:28:49.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:28:49.43
  STEP: creating a new configmap @ 11/12/24 14:28:49.431
  STEP: modifying the configmap once @ 11/12/24 14:28:49.433
  STEP: modifying the configmap a second time @ 11/12/24 14:28:49.437
  STEP: deleting the configmap @ 11/12/24 14:28:49.439
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 11/12/24 14:28:49.441
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 11/12/24 14:28:49.442
  I1112 14:28:49.442281 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2749  6bd35689-d882-4b95-9e6b-52054895c434 26161 0 2024-11-12 14:28:49 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-11-12 14:28:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:28:49.442367 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2749  6bd35689-d882-4b95-9e6b-52054895c434 26162 0 2024-11-12 14:28:49 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-11-12 14:28:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 14:28:49.442445 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2749" for this suite. @ 11/12/24 14:28:49.512
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 11/12/24 14:28:49.518
  I1112 14:28:49.518966 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 14:28:49.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:28:49.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:28:49.528
  STEP: creating the pod @ 11/12/24 14:28:49.529
  STEP: submitting the pod to kubernetes @ 11/12/24 14:28:49.529
  W1112 14:28:49.533419      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 11/12/24 14:28:51.537
  STEP: updating the pod @ 11/12/24 14:28:51.538
  I1112 14:28:52.045373 22 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-95f21e0d-065f-4f16-bfec-eb7f91dbedc0"
  I1112 14:28:56.051506 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9675" for this suite. @ 11/12/24 14:28:56.053
• [6.536 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 11/12/24 14:28:56.055
  I1112 14:28:56.055340 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename resourcequota @ 11/12/24 14:28:56.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:28:56.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:28:56.063
  STEP: Creating resourceQuota "e2e-rq-status-mczx2" @ 11/12/24 14:28:56.158
  I1112 14:28:56.161388 22 resource_quota.go:1102] Resource quota "e2e-rq-status-mczx2" reports spec: hard cpu limit of 500m
  I1112 14:28:56.161415 22 resource_quota.go:1104] Resource quota "e2e-rq-status-mczx2" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-mczx2" /status @ 11/12/24 14:28:56.161
  STEP: Confirm /status for "e2e-rq-status-mczx2" resourceQuota via watch @ 11/12/24 14:28:56.164
  I1112 14:28:56.165305 22 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-mczx2" in namespace "resourcequota-3785" with hard status: v1.ResourceList(nil)
  I1112 14:28:56.165343 22 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-mczx2" in namespace "resourcequota-3785" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1112 14:28:56.165362 22 resource_quota.go:1141] ResourceQuota "e2e-rq-status-mczx2" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 11/12/24 14:28:56.166
  I1112 14:28:56.168146 22 resource_quota.go:1152] Resource quota "e2e-rq-status-mczx2" reports spec: hard cpu limit of 1
  I1112 14:28:56.168162 22 resource_quota.go:1153] Resource quota "e2e-rq-status-mczx2" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-mczx2" /status @ 11/12/24 14:28:56.168
  STEP: Confirm /status for "e2e-rq-status-mczx2" resourceQuota via watch @ 11/12/24 14:28:56.171
  I1112 14:28:56.172525 22 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-mczx2" in namespace "resourcequota-3785" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1112 14:28:56.172553 22 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-mczx2" in namespace "resourcequota-3785" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1112 14:28:56.172563 22 resource_quota.go:1185] ResourceQuota "e2e-rq-status-mczx2" /status was patched
  STEP: Get "e2e-rq-status-mczx2" /status @ 11/12/24 14:28:56.172
  I1112 14:28:56.174394 22 resource_quota.go:1196] Resourcequota "e2e-rq-status-mczx2" reports status: hard cpu of 1
  I1112 14:28:56.174418 22 resource_quota.go:1198] Resourcequota "e2e-rq-status-mczx2" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-mczx2" /status before checking Spec is unchanged @ 11/12/24 14:28:56.175
  I1112 14:28:56.177551 22 resource_quota.go:1218] Resourcequota "e2e-rq-status-mczx2" reports status: hard cpu of 2
  I1112 14:28:56.177578 22 resource_quota.go:1220] Resourcequota "e2e-rq-status-mczx2" reports status: hard memory of 2Gi
  I1112 14:28:56.178184 22 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-mczx2" in namespace "resourcequota-3785" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1112 14:28:56.179154 22 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mczx2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mczx2", GenerateName:"", Namespace:"resourcequota-3785", SelfLink:"", UID:"d7148b8a-55dc-4564-a22b-3865de755b48", ResourceVersion:"26251", Generation:0, CreationTimestamp:time.Date(2024, time.November, 12, 14, 28, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mczx2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 12, 14, 28, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047741c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 12, 14, 28, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004774210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 12, 14, 28, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004774258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  I1112 14:29:01.180463 22 resource_quota.go:1260] ResourceQuota "e2e-rq-status-mczx2" Spec was unchanged and /status reset
  I1112 14:29:01.180581 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3785" for this suite. @ 11/12/24 14:29:01.182
• [5.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 11/12/24 14:29:01.185
  I1112 14:29:01.185886 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename podtemplate @ 11/12/24 14:29:01.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:01.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:01.194
  STEP: Create set of pod templates @ 11/12/24 14:29:01.196
  I1112 14:29:01.198175 22 podtemplates.go:143] created test-podtemplate-1
  I1112 14:29:01.199961 22 podtemplates.go:143] created test-podtemplate-2
  I1112 14:29:01.201701 22 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 11/12/24 14:29:01.201
  STEP: delete collection of pod templates @ 11/12/24 14:29:01.202
  I1112 14:29:01.202840 22 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 11/12/24 14:29:01.208
  I1112 14:29:01.208431 22 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1112 14:29:01.209489 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8707" for this suite. @ 11/12/24 14:29:01.283
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 11/12/24 14:29:01.286
  I1112 14:29:01.286093 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename security-context-test @ 11/12/24 14:29:01.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:01.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:01.295
  I1112 14:29:05.321665 22 security_context.go:538] Got logs for pod "busybox-privileged-false-738b36ed-28ac-46d0-bce6-6628c7aaeefe": "ip: RTNETLINK answers: Operation not permitted\n"
  I1112 14:29:05.321765 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3482" for this suite. @ 11/12/24 14:29:05.323
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 11/12/24 14:29:05.325
  I1112 14:29:05.325889 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:29:05.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:05.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:05.333
  STEP: Creating projection with secret that has name projected-secret-test-ed576054-e168-4ea9-90f9-e6f47dfc8c32 @ 11/12/24 14:29:05.334
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:29:05.336
  STEP: Saw pod success @ 11/12/24 14:29:09.346
  I1112 14:29:09.348004 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-secrets-b90a2deb-e091-4e8b-b8ab-63ab23462ea7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:29:09.35
  I1112 14:29:09.356398 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8073" for this suite. @ 11/12/24 14:29:09.357
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 11/12/24 14:29:09.36
  I1112 14:29:09.360273 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename lease-test @ 11/12/24 14:29:09.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:09.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:09.369
  I1112 14:29:09.389416 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7442" for this suite. @ 11/12/24 14:29:09.458
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 11/12/24 14:29:09.46
  I1112 14:29:09.460782 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename var-expansion @ 11/12/24 14:29:09.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:09.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:09.468
  I1112 14:29:11.477814 22 delete.go:62] Deleting pod "var-expansion-a7460060-9fc5-4b1f-baf5-59eee5a9a8d7" in namespace "var-expansion-9340"
  I1112 14:29:11.480130 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-a7460060-9fc5-4b1f-baf5-59eee5a9a8d7" to be fully deleted
  I1112 14:29:13.482910 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9340" for this suite. @ 11/12/24 14:29:13.484
• [4.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 11/12/24 14:29:13.488
  I1112 14:29:13.488250 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/12/24 14:29:13.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:13.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:13.496
  I1112 14:29:13.497853 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:29:19.583357 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3384" for this suite. @ 11/12/24 14:29:19.585
• [6.099 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 11/12/24 14:29:19.587
  I1112 14:29:19.587799 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename containers @ 11/12/24 14:29:19.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:19.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:19.601
  I1112 14:29:21.611118 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1680" for this suite. @ 11/12/24 14:29:21.612
• [2.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 11/12/24 14:29:21.615
  I1112 14:29:21.615194 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename var-expansion @ 11/12/24 14:29:21.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:21.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:21.623
  STEP: Creating a pod to test substitution in container's command @ 11/12/24 14:29:21.624
  STEP: Saw pod success @ 11/12/24 14:29:25.633
  I1112 14:29:25.635138 22 output.go:196] Trying to get logs from node worker01 pod var-expansion-2a397542-7954-43c2-9564-3049c0c39a2c container dapi-container: <nil>
  STEP: delete the pod @ 11/12/24 14:29:25.637
  I1112 14:29:25.642694 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3943" for this suite. @ 11/12/24 14:29:25.644
• [4.031 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 11/12/24 14:29:25.646
  I1112 14:29:25.646361 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:29:25.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:25.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:25.654
  STEP: Starting the proxy @ 11/12/24 14:29:25.655
  I1112 14:29:25.656104 22 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9702 proxy --unix-socket=/tmp/kubectl-proxy-unix2570080066/test'
  STEP: retrieving proxy /api/ output @ 11/12/24 14:29:25.686
  I1112 14:29:25.686833 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9702" for this suite. @ 11/12/24 14:29:25.745
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 11/12/24 14:29:25.747
  I1112 14:29:25.747776 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:29:25.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:25.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:25.756
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:29:25.757
  STEP: Saw pod success @ 11/12/24 14:29:27.764
  I1112 14:29:27.765313 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-faa9db63-7434-4799-b710-4bd95b04c2dc container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:29:27.767
  I1112 14:29:27.774754 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6994" for this suite. @ 11/12/24 14:29:27.776
• [2.031 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 11/12/24 14:29:27.778
  I1112 14:29:27.778621 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename dns @ 11/12/24 14:29:27.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:27.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:27.787
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/12/24 14:29:27.788
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/12/24 14:29:27.788
  STEP: creating a pod to probe DNS @ 11/12/24 14:29:27.788
  STEP: submitting the pod to kubernetes @ 11/12/24 14:29:27.788
  STEP: retrieving the pod @ 11/12/24 14:29:29.796
  STEP: looking for the results for each expected name from probers @ 11/12/24 14:29:29.797
  I1112 14:29:29.802954 22 dns_common.go:527] DNS probes using dns-8920/dns-test-7a83ec76-021c-43a2-8eff-66ffb889e0e1 succeeded

  STEP: deleting the pod @ 11/12/24 14:29:29.803
  I1112 14:29:29.808364 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8920" for this suite. @ 11/12/24 14:29:29.81
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 11/12/24 14:29:29.813
  I1112 14:29:29.813381 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 14:29:29.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:29.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:29.821
  STEP: Creating Pod @ 11/12/24 14:29:29.823
  STEP: Reading file content from the nginx-container @ 11/12/24 14:29:31.829
  I1112 14:29:31.829871 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7176 PodName:pod-sharedvolume-a0217014-a380-4f72-aa3a-11413f5dd6ed ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:29:31.829889 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:29:31.830255 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:29:31.830297 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/emptydir-7176/pods/pod-sharedvolume-a0217014-a380-4f72-aa3a-11413f5dd6ed/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1112 14:29:31.868139 22 exec_util.go:111] Exec stderr: ""
  I1112 14:29:31.868258 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7176" for this suite. @ 11/12/24 14:29:31.87
• [2.059 seconds]
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 11/12/24 14:29:31.872
  I1112 14:29:31.872717 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename endpointslice @ 11/12/24 14:29:31.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:31.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:31.881
  I1112 14:29:33.903958 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5539" for this suite. @ 11/12/24 14:29:33.905
• [2.035 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 11/12/24 14:29:33.908
  I1112 14:29:33.908230 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replication-controller @ 11/12/24 14:29:33.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:33.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:33.916
  STEP: creating a ReplicationController @ 11/12/24 14:29:33.919
  STEP: waiting for RC to be added @ 11/12/24 14:29:33.922
  STEP: waiting for available Replicas @ 11/12/24 14:29:33.923
  STEP: patching ReplicationController @ 11/12/24 14:29:35.606
  STEP: waiting for RC to be modified @ 11/12/24 14:29:35.611
  STEP: patching ReplicationController status @ 11/12/24 14:29:35.611
  STEP: waiting for RC to be modified @ 11/12/24 14:29:35.613
  STEP: waiting for available Replicas @ 11/12/24 14:29:35.613
  STEP: fetching ReplicationController status @ 11/12/24 14:29:35.617
  STEP: patching ReplicationController scale @ 11/12/24 14:29:35.618
  STEP: waiting for RC to be modified @ 11/12/24 14:29:35.62
  STEP: waiting for ReplicationController's scale to be the max amount @ 11/12/24 14:29:35.62
  STEP: fetching ReplicationController; ensuring that it's patched @ 11/12/24 14:29:36.525
  STEP: updating ReplicationController status @ 11/12/24 14:29:36.527
  STEP: waiting for RC to be modified @ 11/12/24 14:29:36.529
  STEP: listing all ReplicationControllers @ 11/12/24 14:29:36.529
  STEP: checking that ReplicationController has expected values @ 11/12/24 14:29:36.53
  STEP: deleting ReplicationControllers by collection @ 11/12/24 14:29:36.53
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 11/12/24 14:29:36.534
  I1112 14:29:36.561196 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1112 14:29:36.561345      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9574" for this suite. @ 11/12/24 14:29:36.562
• [2.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 11/12/24 14:29:36.565
  I1112 14:29:36.565161 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 14:29:36.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:36.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:36.572
  STEP: Create a pod @ 11/12/24 14:29:36.574
  E1112 14:29:37.562097      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:38.562202      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/12/24 14:29:38.582
  I1112 14:29:38.587252 22 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1112 14:29:38.587344 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6337" for this suite. @ 11/12/24 14:29:38.588
• [2.026 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 11/12/24 14:29:38.591
  I1112 14:29:38.591343 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:29:38.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:38.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:38.599
  STEP: creating a replication controller @ 11/12/24 14:29:38.601
  I1112 14:29:38.601199 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 create -f -'
  I1112 14:29:38.674807 22 builder.go:146] stderr: ""
  I1112 14:29:38.674855 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/12/24 14:29:38.674
  I1112 14:29:38.674917 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1112 14:29:38.723599 22 builder.go:146] stderr: ""
  I1112 14:29:38.723639 22 builder.go:147] stdout: "update-demo-nautilus-5w6s7 update-demo-nautilus-c9n8m "
  I1112 14:29:38.723674 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods update-demo-nautilus-5w6s7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:29:38.761075 22 builder.go:146] stderr: ""
  I1112 14:29:38.761112 22 builder.go:147] stdout: ""
  I1112 14:29:38.761120 22 kubectl.go:2502] update-demo-nautilus-5w6s7 is created but not running
  E1112 14:29:39.563085      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:40.563924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:41.564043      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:42.564173      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:43.564292      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:29:43.761660 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1112 14:29:43.806987 22 builder.go:146] stderr: ""
  I1112 14:29:43.807020 22 builder.go:147] stdout: "update-demo-nautilus-5w6s7 update-demo-nautilus-c9n8m "
  I1112 14:29:43.807059 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods update-demo-nautilus-5w6s7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:29:43.849924 22 builder.go:146] stderr: ""
  I1112 14:29:43.849955 22 builder.go:147] stdout: ""
  I1112 14:29:43.849965 22 kubectl.go:2502] update-demo-nautilus-5w6s7 is created but not running
  E1112 14:29:44.564474      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:45.564574      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:46.564707      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:47.564852      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:48.564998      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:29:48.850445 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1112 14:29:48.891683 22 builder.go:146] stderr: ""
  I1112 14:29:48.891713 22 builder.go:147] stdout: "update-demo-nautilus-5w6s7 update-demo-nautilus-c9n8m "
  I1112 14:29:48.891749 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods update-demo-nautilus-5w6s7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:29:48.930536 22 builder.go:146] stderr: ""
  I1112 14:29:48.930566 22 builder.go:147] stdout: "true"
  I1112 14:29:48.930605 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods update-demo-nautilus-5w6s7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1112 14:29:48.969718 22 builder.go:146] stderr: ""
  I1112 14:29:48.969750 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1112 14:29:48.969764 22 kubectl.go:2393] validating pod update-demo-nautilus-5w6s7
  I1112 14:29:48.971850 22 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1112 14:29:48.971897 22 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1112 14:29:48.971911 22 kubectl.go:2520] update-demo-nautilus-5w6s7 is verified up and running
  I1112 14:29:48.971959 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods update-demo-nautilus-c9n8m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:29:49.010277 22 builder.go:146] stderr: ""
  I1112 14:29:49.010306 22 builder.go:147] stdout: "true"
  I1112 14:29:49.010343 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods update-demo-nautilus-c9n8m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1112 14:29:49.048689 22 builder.go:146] stderr: ""
  I1112 14:29:49.048728 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1112 14:29:49.048739 22 kubectl.go:2393] validating pod update-demo-nautilus-c9n8m
  I1112 14:29:49.050817 22 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1112 14:29:49.050852 22 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1112 14:29:49.050865 22 kubectl.go:2520] update-demo-nautilus-c9n8m is verified up and running
  STEP: using delete to clean up resources @ 11/12/24 14:29:49.05
  I1112 14:29:49.050925 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 delete --grace-period=0 --force -f -'
  I1112 14:29:49.092013 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1112 14:29:49.092046 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1112 14:29:49.092098 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get rc,svc -l name=update-demo --no-headers'
  I1112 14:29:49.135869 22 builder.go:146] stderr: "No resources found in kubectl-9567 namespace.\n"
  I1112 14:29:49.135901 22 builder.go:147] stdout: ""
  I1112 14:29:49.135938 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-9567 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1112 14:29:49.177096 22 builder.go:146] stderr: ""
  I1112 14:29:49.177135 22 builder.go:147] stdout: ""
  I1112 14:29:49.177250 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9567" for this suite. @ 11/12/24 14:29:49.179
• [10.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 11/12/24 14:29:49.181
  I1112 14:29:49.181576 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/12/24 14:29:49.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:49.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:49.189
  STEP: create the container to handle the HTTPGet hook request. @ 11/12/24 14:29:49.28
  E1112 14:29:49.565956      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:50.566169      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/12/24 14:29:51.29
  E1112 14:29:51.566613      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:52.566750      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 11/12/24 14:29:53.298
  E1112 14:29:53.567492      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:54.567662      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 11/12/24 14:29:55.303
  I1112 14:29:55.310954 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8052" for this suite. @ 11/12/24 14:29:55.312
• [6.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 11/12/24 14:29:55.314
  I1112 14:29:55.314805 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/12/24 14:29:55.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:55.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:55.323
  I1112 14:29:55.326527 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6189" for this suite. @ 11/12/24 14:29:55.412
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 11/12/24 14:29:55.415
  I1112 14:29:55.415789 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubelet-test @ 11/12/24 14:29:55.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:55.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:55.423
  STEP: Waiting for pod completion @ 11/12/24 14:29:55.427
  E1112 14:29:55.568526      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:56.568549      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:57.569363      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:29:58.569490      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:29:59.435947 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4028" for this suite. @ 11/12/24 14:29:59.437
• [4.024 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 11/12/24 14:29:59.439
  I1112 14:29:59.439772 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:29:59.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:29:59.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:29:59.448
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:29:59.45
  E1112 14:29:59.570252      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:00.571190      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:01.571767      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:02.572055      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:30:03.461
  I1112 14:30:03.463394 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-a6494b3f-fce1-4ded-860f-6b42f3bf09d1 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:30:03.466
  I1112 14:30:03.472242 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3377" for this suite. @ 11/12/24 14:30:03.473
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 11/12/24 14:30:03.475
  I1112 14:30:03.475925 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:30:03.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:30:03.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:30:03.484
  E1112 14:30:03.572075      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 11/12/24 14:30:03.583
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:30:03.926
  STEP: Deploying the webhook pod @ 11/12/24 14:30:03.93
  STEP: Wait for the deployment to be ready @ 11/12/24 14:30:03.936
  I1112 14:30:03.938916 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1112 14:30:04.572953      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:05.573158      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/12/24 14:30:05.943
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:30:05.948
  E1112 14:30:06.573247      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:06.949735 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 11/12/24 14:30:06.952
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/12/24 14:30:06.952
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 11/12/24 14:30:06.96
  E1112 14:30:07.574009      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 11/12/24 14:30:07.964
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/12/24 14:30:07.964
  E1112 14:30:08.574234      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 11/12/24 14:30:08.977
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/12/24 14:30:08.977
  E1112 14:30:09.574361      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:10.574441      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:11.574647      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:12.574794      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:13.574884      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 11/12/24 14:30:13.99
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/12/24 14:30:13.99
  E1112 14:30:14.575706      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:15.575935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:16.576126      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:17.576264      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:18.576339      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:19.029416 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3256" for this suite. @ 11/12/24 14:30:19.031
  STEP: Destroying namespace "webhook-markers-2010" for this suite. @ 11/12/24 14:30:19.033
• [15.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 11/12/24 14:30:19.037
  I1112 14:30:19.037704 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-runtime @ 11/12/24 14:30:19.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:30:19.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:30:19.046
  STEP: create the container @ 11/12/24 14:30:19.048
  W1112 14:30:19.051914      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/12/24 14:30:19.052
  E1112 14:30:19.577227      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:20.577774      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/12/24 14:30:21.057
  STEP: the container should be terminated @ 11/12/24 14:30:21.058
  STEP: the termination message should be set @ 11/12/24 14:30:21.058
  I1112 14:30:21.058336 22 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 11/12/24 14:30:21.058
  I1112 14:30:21.064372 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6821" for this suite. @ 11/12/24 14:30:21.065
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 11/12/24 14:30:21.069
  I1112 14:30:21.069040 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 14:30:21.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:30:21.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:30:21.077
  STEP: Creating pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051 @ 11/12/24 14:30:21.079
  E1112 14:30:21.577887      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:22.577956      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/12/24 14:30:23.086
  I1112 14:30:23.087560 22 container_probe.go:1749] Initial restart count of pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 is 0
  I1112 14:30:23.088850 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:23.578456      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:24.579240      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:25.091555 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:25.579932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:26.580231      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:27.093516 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:27.581108      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:28.581205      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:29.095489 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:29.582111      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:30.582257      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:31.097432 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:31.582994      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:32.583947      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:33.099744 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:33.584215      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:34.585189      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:35.102530 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:35.586088      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:36.586158      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:37.104329 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:37.586857      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:38.587932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:39.106293 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:39.588930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:40.589059      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:41.108154 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:41.589672      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:42.589819      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:43.110142 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:43.590632      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:44.590871      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:45.112089 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:45.591625      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:46.591712      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:47.114101 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:47.592712      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:48.593257      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:49.116747 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:49.593306      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:50.593448      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:51.118817 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:51.594392      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:52.594531      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:53.121554 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:53.595099      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:54.595931      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:55.124309 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:55.596820      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:56.596963      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:57.126353 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:57.597858      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:30:58.597995      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:30:59.128395 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:30:59.598050      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:00.598174      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:01.130249 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:01.598713      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:02.598874      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:03.133058 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:03.599536      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:04.599799      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:05.134922 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:05.600466      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:06.600536      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:07.137556 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:07.601008      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:08.601079      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:09.140402 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:09.602029      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:10.602736      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:11.143116 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:11.603645      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:12.603726      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:13.144948 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:13.604448      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:14.605222      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:15.147700 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:15.606127      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:16.606287      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:17.149476 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:17.606730      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:18.606879      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:19.152448 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:19.607931      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:20.608076      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:21.154344 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:21.608651      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:22.608677      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:23.157072 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:23.609572      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:24.609800      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:25.159164 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  E1112 14:31:25.610661      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:26.610805      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:27.161058 22 container_probe.go:1759] Get pod test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 in namespace container-probe-3051
  I1112 14:31:27.161086 22 container_probe.go:1763] Restart count of pod container-probe-3051/test-grpc-d84771bf-7775-4398-bfb3-ada9d41fe0e3 is now 1 (1m4.073505673s elapsed)
  STEP: deleting the pod @ 11/12/24 14:31:27.161
  I1112 14:31:27.167066 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3051" for this suite. @ 11/12/24 14:31:27.168
• [66.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 11/12/24 14:31:27.17
  I1112 14:31:27.170994 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:31:27.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:31:27.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:31:27.181
  STEP: Creating a pod to test downward api env vars @ 11/12/24 14:31:27.183
  E1112 14:31:27.610863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:28.611915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:31:29.194
  I1112 14:31:29.195902 22 output.go:196] Trying to get logs from node worker01 pod downward-api-bca6fd1a-5cc1-413d-b81e-452d2cbc917e container dapi-container: <nil>
  STEP: delete the pod @ 11/12/24 14:31:29.198
  I1112 14:31:29.204509 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5689" for this suite. @ 11/12/24 14:31:29.205
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 11/12/24 14:31:29.208
  I1112 14:31:29.208100 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename csistoragecapacity @ 11/12/24 14:31:29.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:31:29.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:31:29.216
  STEP: getting /apis @ 11/12/24 14:31:29.218
  STEP: getting /apis/storage.k8s.io @ 11/12/24 14:31:29.22
  STEP: getting /apis/storage.k8s.io/v1 @ 11/12/24 14:31:29.22
  STEP: creating @ 11/12/24 14:31:29.221
  STEP: watching @ 11/12/24 14:31:29.226
  I1112 14:31:29.226929 22 csistoragecapacity.go:143] starting watch
  STEP: getting @ 11/12/24 14:31:29.229
  STEP: listing in namespace @ 11/12/24 14:31:29.23
  STEP: listing across namespaces @ 11/12/24 14:31:29.231
  STEP: patching @ 11/12/24 14:31:29.232
  STEP: updating @ 11/12/24 14:31:29.234
  I1112 14:31:29.236746 22 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1112 14:31:29.236829 22 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 11/12/24 14:31:29.236
  STEP: deleting a collection @ 11/12/24 14:31:29.24
  I1112 14:31:29.244894 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-553" for this suite. @ 11/12/24 14:31:29.306
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 11/12/24 14:31:29.309
  I1112 14:31:29.309501 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename disruption @ 11/12/24 14:31:29.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:31:29.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:31:29.317
  STEP: Waiting for the pdb to be processed @ 11/12/24 14:31:29.321
  E1112 14:31:29.612513      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:30.612595      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/12/24 14:31:31.332
  I1112 14:31:31.336263 22 disruption.go:691] running pods: 0 < 3
  E1112 14:31:31.612696      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:32.612850      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:33.335572 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5596" for this suite. @ 11/12/24 14:31:33.337
• [4.030 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 11/12/24 14:31:33.34
  I1112 14:31:33.340064 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:31:33.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:31:33.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:31:33.348
  STEP: Creating configMap with name projected-configmap-test-volume-97f83eb6-2ddf-4809-a551-c2223b47be83 @ 11/12/24 14:31:33.349
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:31:33.351
  E1112 14:31:33.613890      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:34.614001      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:35.614838      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:36.614892      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:31:37.36
  I1112 14:31:37.361665 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-configmaps-8288492e-3a38-443b-86c4-6f6ca9e00121 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:31:37.364
  I1112 14:31:37.370241 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3644" for this suite. @ 11/12/24 14:31:37.371
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 11/12/24 14:31:37.374
  I1112 14:31:37.374115 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:31:37.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:31:37.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:31:37.382
  STEP: Creating configMap with name configmap-test-volume-map-a0d862f7-2dab-40b6-a34e-7ba1a068df36 @ 11/12/24 14:31:37.383
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:31:37.385
  E1112 14:31:37.615334      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:38.615922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:39.616167      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:40.616254      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:31:41.394
  I1112 14:31:41.396188 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-2803fe50-a693-4f34-a26b-b435d540693d container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:31:41.398
  I1112 14:31:41.404668 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9637" for this suite. @ 11/12/24 14:31:41.405
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 11/12/24 14:31:41.408
  I1112 14:31:41.408313 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename init-container @ 11/12/24 14:31:41.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:31:41.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:31:41.416
  STEP: creating the pod @ 11/12/24 14:31:41.417
  I1112 14:31:41.418027 22 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1112 14:31:41.616629      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:42.617585      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:43.618578      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:44.618873      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:31:44.954394 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4995" for this suite. @ 11/12/24 14:31:44.956
• [3.550 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 11/12/24 14:31:44.958
  I1112 14:31:44.958272 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename subpath @ 11/12/24 14:31:44.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:31:44.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:31:44.966
  STEP: Setting up data @ 11/12/24 14:31:44.968
  STEP: Creating pod pod-subpath-test-downwardapi-zr4d @ 11/12/24 14:31:44.972
  STEP: Creating a pod to test atomic-volume-subpath @ 11/12/24 14:31:44.972
  E1112 14:31:45.619940      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:46.620576      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:47.621424      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:48.621527      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:49.622272      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:50.622413      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:51.623003      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:52.623088      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:53.623936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:54.624013      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:55.624468      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:56.624608      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:57.625384      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:58.625454      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:31:59.626338      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:00.626420      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:01.627474      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:02.627929      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:03.628831      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:04.629107      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:05.629585      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:06.629723      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:32:06.999
  I1112 14:32:07.000481 22 output.go:196] Trying to get logs from node worker01 pod pod-subpath-test-downwardapi-zr4d container test-container-subpath-downwardapi-zr4d: <nil>
  STEP: delete the pod @ 11/12/24 14:32:07.004
  STEP: Deleting pod pod-subpath-test-downwardapi-zr4d @ 11/12/24 14:32:07.009
  I1112 14:32:07.009264 22 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-zr4d" in namespace "subpath-6354"
  I1112 14:32:07.010319 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6354" for this suite. @ 11/12/24 14:32:07.011
• [22.055 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 11/12/24 14:32:07.013
  I1112 14:32:07.013795 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 14:32:07.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:07.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:07.021
  STEP: Creating secret with name secret-test-map-1abdb2f5-93d1-46b8-85c5-b6dbeaf576b2 @ 11/12/24 14:32:07.023
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:32:07.025
  E1112 14:32:07.630559      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:08.631455      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:32:09.031
  I1112 14:32:09.032759 22 output.go:196] Trying to get logs from node worker01 pod pod-secrets-4dab9620-9a2a-4f8c-ba14-7b955ae93972 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:32:09.035
  I1112 14:32:09.040849 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7924" for this suite. @ 11/12/24 14:32:09.042
• [2.031 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 11/12/24 14:32:09.044
  I1112 14:32:09.044830 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:32:09.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:09.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:09.053
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:32:09.054
  E1112 14:32:09.632268      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:10.632359      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:32:11.061
  I1112 14:32:11.062497 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-e4820aae-6131-49e7-ba27-e0a4f4f6a635 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:32:11.064
  I1112 14:32:11.069767 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6790" for this suite. @ 11/12/24 14:32:11.071
• [2.028 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 11/12/24 14:32:11.073
  I1112 14:32:11.073348 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:32:11.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:11.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:11.08
  STEP: Setting up server cert @ 11/12/24 14:32:11.18
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:32:11.428
  STEP: Deploying the webhook pod @ 11/12/24 14:32:11.432
  STEP: Wait for the deployment to be ready @ 11/12/24 14:32:11.437
  I1112 14:32:11.439954 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1112 14:32:11.633229      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:12.633312      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/12/24 14:32:13.444
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:32:13.449
  E1112 14:32:13.633368      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:14.449291 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/12/24 14:32:14.452
  STEP: create a pod @ 11/12/24 14:32:14.459
  E1112 14:32:14.633456      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:15.634059      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 11/12/24 14:32:16.465
  I1112 14:32:16.465780 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=webhook-1242 attach --namespace=webhook-1242 to-be-attached-pod -i -c=container1'
  I1112 14:32:16.514367 22 builder.go:135] rc: 1
  I1112 14:32:16.533490 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1242" for this suite. @ 11/12/24 14:32:16.537
  STEP: Destroying namespace "webhook-markers-8046" for this suite. @ 11/12/24 14:32:16.541
• [5.470 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 11/12/24 14:32:16.543
  I1112 14:32:16.543893 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:32:16.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:16.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:16.554
  STEP: creating service multiprotocol-test in namespace services-5201 @ 11/12/24 14:32:16.556
  STEP: creating pod pod1 in namespace services-5201 @ 11/12/24 14:32:16.56
  STEP: Creating pod pod1 in namespace services-5201 @ 11/12/24 14:32:16.56
  E1112 14:32:16.634741      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:17.634980      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5201 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 11/12/24 14:32:18.57
  I1112 14:32:18.574413 22 service.go:4392] successfully validated that service multiprotocol-test in namespace services-5201 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 11/12/24 14:32:18.574
  I1112 14:32:18.574459 22 resource.go:361] Creating new exec pod
  E1112 14:32:18.635019      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:19.635932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:20.580686 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80'
  E1112 14:32:20.635984      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:20.655857 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.223.85 80\nConnection to 10.68.223.85 80 port [tcp/http] succeeded!\n"
  I1112 14:32:20.655891 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:32:20.655954 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80'
  E1112 14:32:21.636562      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:22.636620      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:23.637260      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:24.638304      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:24.730198 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.223.85 80\nConnection to 10.68.223.85 80 port [udp/*] succeeded!\n"
  I1112 14:32:24.730236 22 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 11/12/24 14:32:24.73
  I1112 14:32:24.735118 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80'
  I1112 14:32:24.810419 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.223.85 80\nConnection to 10.68.223.85 80 port [tcp/http] succeeded!\n"
  I1112 14:32:24.810467 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:32:24.810540 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80'
  I1112 14:32:24.881535 22 builder.go:135] rc: 1
  I1112 14:32:24.881583 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.223.85 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1112 14:32:25.638392      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:26.638651      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:26.810970 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80'
  I1112 14:32:26.878260 22 builder.go:135] rc: 1
  I1112 14:32:26.878303 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.223.85 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1112 14:32:27.638870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:28.639912      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:28.811186 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80'
  I1112 14:32:28.878160 22 builder.go:135] rc: 1
  I1112 14:32:28.878205 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.223.85 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1112 14:32:29.640083      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:30.640234      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:30.811562 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80'
  I1112 14:32:30.878477 22 builder.go:135] rc: 1
  I1112 14:32:30.878524 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.223.85 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  STEP: Checking if the Service forwards traffic to UDP only @ 11/12/24 14:32:30.878
  I1112 14:32:30.882784 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80'
  I1112 14:32:30.962426 22 builder.go:135] rc: 1
  I1112 14:32:30.962491 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80:
  Command stdout:

  stderr:
  + + echonc -v hostName
   -u -w 2 10.68.223.85 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1112 14:32:31.641269      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:32.641403      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:32.883795 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.223.85 80'
  E1112 14:32:33.641504      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:34.641724      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:35.642599      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:36.642738      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:36.953837 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.223.85 80\nConnection to 10.68.223.85 80 port [udp/*] succeeded!\n"
  I1112 14:32:36.953872 22 builder.go:147] stdout: "pod1"
  I1112 14:32:36.953957 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80'
  I1112 14:32:37.020304 22 builder.go:135] rc: 1
  I1112 14:32:37.020352 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.223.85 80
  nc: connect to 10.68.223.85 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1112 14:32:37.642875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:38.643922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:38.954369 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80'
  I1112 14:32:39.021702 22 builder.go:135] rc: 1
  I1112 14:32:39.021758 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.223.85 80
  nc: connect to 10.68.223.85 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1112 14:32:39.644556      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:40.644693      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:40.954106 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80'
  I1112 14:32:41.024397 22 builder.go:135] rc: 1
  I1112 14:32:41.024460 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.223.85 80
  nc: connect to 10.68.223.85 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1112 14:32:41.644786      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:42.644875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:42.954292 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80'
  I1112 14:32:43.020921 22 builder.go:135] rc: 1
  I1112 14:32:43.020969 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-5201 exec execpodjg9gz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.223.85 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.223.85 80
  nc: connect to 10.68.223.85 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1112 14:32:43.021094 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5201" for this suite. @ 11/12/24 14:32:43.022
• [26.481 seconds]
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 11/12/24 14:32:43.025
  I1112 14:32:43.025285 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename disruption @ 11/12/24 14:32:43.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:43.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:43.033
  STEP: Waiting for the pdb to be processed @ 11/12/24 14:32:43.037
  E1112 14:32:43.645036      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:44.645222      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 11/12/24 14:32:45.039
  STEP: Waiting for all pods to be running @ 11/12/24 14:32:45.043
  I1112 14:32:45.045751 22 disruption.go:691] running pods: 0 < 1
  E1112 14:32:45.645799      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:46.645930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 11/12/24 14:32:47.045
  STEP: Waiting for the pdb to be processed @ 11/12/24 14:32:47.05
  STEP: Patching PodDisruptionBudget status @ 11/12/24 14:32:47.053
  STEP: Waiting for the pdb to be processed @ 11/12/24 14:32:47.057
  I1112 14:32:47.058465 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7751" for this suite. @ 11/12/24 14:32:47.06
• [4.037 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 11/12/24 14:32:47.062
  I1112 14:32:47.062414 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/12/24 14:32:47.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:47.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:47.072
  STEP: getting /apis @ 11/12/24 14:32:47.076
  STEP: getting /apis/admissionregistration.k8s.io @ 11/12/24 14:32:47.079
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 11/12/24 14:32:47.079
  STEP: creating @ 11/12/24 14:32:47.08
  STEP: getting @ 11/12/24 14:32:47.086
  STEP: listing @ 11/12/24 14:32:47.087
  STEP: watching @ 11/12/24 14:32:47.098
  I1112 14:32:47.098631 22 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 11/12/24 14:32:47.099
  STEP: updating @ 11/12/24 14:32:47.103
  I1112 14:32:47.107736 22 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 11/12/24 14:32:47.107
  STEP: patching /status @ 11/12/24 14:32:47.109
  STEP: updating /status @ 11/12/24 14:32:47.113
  STEP: deleting @ 11/12/24 14:32:47.117
  STEP: deleting a collection @ 11/12/24 14:32:47.122
  I1112 14:32:47.127476 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2994" for this suite. @ 11/12/24 14:32:47.16
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 11/12/24 14:32:47.164
  I1112 14:32:47.164348 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename svcaccounts @ 11/12/24 14:32:47.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:47.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:47.175
  STEP: Creating a pod to test service account token:  @ 11/12/24 14:32:47.177
  E1112 14:32:47.646058      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:48.646126      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:32:49.186
  I1112 14:32:49.187222 22 output.go:196] Trying to get logs from node worker01 pod test-pod-d38babcf-ec96-4683-8168-ed810d514b50 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:32:49.189
  I1112 14:32:49.195445 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-463" for this suite. @ 11/12/24 14:32:49.196
• [2.034 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 11/12/24 14:32:49.198
  I1112 14:32:49.198822 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:32:49.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:49.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:49.208
  STEP: Creating a pod to test downward api env vars @ 11/12/24 14:32:49.211
  E1112 14:32:49.646987      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:50.647085      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:32:51.23
  I1112 14:32:51.231246 22 output.go:196] Trying to get logs from node worker01 pod downward-api-dafcd8fb-4cb0-4aa5-9642-e73a193dd2c1 container dapi-container: <nil>
  STEP: delete the pod @ 11/12/24 14:32:51.234
  I1112 14:32:51.240119 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1615" for this suite. @ 11/12/24 14:32:51.241
• [2.045 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 11/12/24 14:32:51.244
  I1112 14:32:51.244420 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename events @ 11/12/24 14:32:51.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:51.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:51.251
  STEP: Create set of events @ 11/12/24 14:32:51.253
  I1112 14:32:51.254870 22 core_events.go:198] created test-event-1
  I1112 14:32:51.256403 22 core_events.go:198] created test-event-2
  I1112 14:32:51.257924 22 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 11/12/24 14:32:51.257
  STEP: delete collection of events @ 11/12/24 14:32:51.258
  I1112 14:32:51.258924 22 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/12/24 14:32:51.264
  I1112 14:32:51.264069 22 core_events.go:230] requesting list of events to confirm quantity
  I1112 14:32:51.264997 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3787" for this suite. @ 11/12/24 14:32:51.342
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 11/12/24 14:32:51.346
  I1112 14:32:51.346221 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename apf @ 11/12/24 14:32:51.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:51.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:51.355
  STEP: getting /apis @ 11/12/24 14:32:51.357
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 11/12/24 14:32:51.358
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 11/12/24 14:32:51.359
  STEP: creating @ 11/12/24 14:32:51.359
  STEP: getting @ 11/12/24 14:32:51.364
  STEP: listing @ 11/12/24 14:32:51.365
  STEP: watching @ 11/12/24 14:32:51.366
  I1112 14:32:51.366983 22 flowcontrol.go:620] starting watch
  STEP: patching @ 11/12/24 14:32:51.367
  STEP: updating @ 11/12/24 14:32:51.369
  I1112 14:32:51.373239 22 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 11/12/24 14:32:51.373
  STEP: patching /status @ 11/12/24 14:32:51.374
  STEP: updating /status @ 11/12/24 14:32:51.376
  STEP: deleting @ 11/12/24 14:32:51.379
  STEP: deleting a collection @ 11/12/24 14:32:51.383
  I1112 14:32:51.389447 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6363" for this suite. @ 11/12/24 14:32:51.443
• [0.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 11/12/24 14:32:51.446
  I1112 14:32:51.446584 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename daemonsets @ 11/12/24 14:32:51.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:51.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:51.456
  STEP: Creating simple DaemonSet "daemon-set" @ 11/12/24 14:32:51.549
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/12/24 14:32:51.552
  I1112 14:32:51.645856 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 14:32:51.645885 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  E1112 14:32:51.647888      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:52.554980 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1112 14:32:52.555008 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  E1112 14:32:52.648113      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:53.556600 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1112 14:32:53.556624 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  E1112 14:32:53.648757      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:54.556206 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1112 14:32:54.556235 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 11/12/24 14:32:54.557
  I1112 14:32:54.558709 22 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 11/12/24 14:32:54.558
  I1112 14:32:54.562971 22 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 11/12/24 14:32:54.562
  I1112 14:32:54.563946 22 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1112 14:32:54.564013 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.564075 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.564256 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.564333 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.564412 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.564442 22 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-9051 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1112 14:32:54.564463 22 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 11/12/24 14:32:54.564
  STEP: watching for the daemon set status to be patched @ 11/12/24 14:32:54.567
  I1112 14:32:54.568097 22 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1112 14:32:54.568165 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.568239 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.568375 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.568444 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.568520 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.568593 22 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-9051 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1112 14:32:54.568672 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1112 14:32:54.568685 22 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-9051 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1112 14:32:54.568695 22 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 11/12/24 14:32:54.569
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9051, will wait for the garbage collector to delete the pods @ 11/12/24 14:32:54.569
  I1112 14:32:54.625183 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.686509ms
  E1112 14:32:54.649442      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:54.725667 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.482326ms
  E1112 14:32:55.650510      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:55.827667 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 14:32:55.827694 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1112 14:32:55.828986 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28319"},"items":null}

  I1112 14:32:55.830022 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28319"},"items":null}

  I1112 14:32:55.834599 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9051" for this suite. @ 11/12/24 14:32:55.835
• [4.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 11/12/24 14:32:55.838
  I1112 14:32:55.838276 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 14:32:55.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:32:55.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:32:55.846
  STEP: Creating pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457 @ 11/12/24 14:32:55.847
  E1112 14:32:56.651426      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:57.651946      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/12/24 14:32:57.856
  I1112 14:32:57.857368 22 container_probe.go:1749] Initial restart count of pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa is 0
  I1112 14:32:57.858391 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:32:58.652225      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:32:59.652417      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:32:59.860460 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:00.653243      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:01.653489      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:01.862627 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:02.654465      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:03.654563      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:03.864492 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:04.655073      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:05.655935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:05.866982 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:06.656190      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:07.656378      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:07.869614 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:08.656394      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:09.656567      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:09.871523 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:10.657352      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:11.657484      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:11.873391 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:12.658159      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:13.658283      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:13.875335 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:14.659289      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:15.659936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:15.877982 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:16.660870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:17.661549      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:17.880785 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:18.662608      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:19.662843      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:19.882728 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:20.662883      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:21.663926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:21.884805 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:22.664011      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:23.664153      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:23.887247 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:24.665203      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:25.665336      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:25.889192 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:26.665948      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:27.666067      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:27.891161 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:28.666999      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:29.667936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:29.892902 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:30.668664      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:31.669039      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:31.895113 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:32.669933      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:33.670060      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:33.896951 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:34.670855      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:35.670948      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:35.898733 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:36.671030      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:37.671930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:37.901157 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:38.672983      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:39.673063      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:39.903978 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:40.673141      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:41.673266      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:41.906300 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:42.674039      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:43.674716      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:43.908690 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:44.675588      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:45.675942      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:45.911005 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:46.676855      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:47.677085      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:47.913172 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:48.677993      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:49.678337      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:49.915199 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:50.678868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:51.679932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:51.917713 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:52.680117      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:53.680264      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:53.920337 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:54.681187      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:55.681322      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:55.921938 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:56.681679      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:57.681838      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:57.923931 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:33:58.682754      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:33:59.682878      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:33:59.925831 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:00.683656      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:01.683740      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:01.927678 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:02.684099      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:03.684248      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:03.930249 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:04.684448      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:05.685168      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:05.931943 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:06.685224      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:07.685369      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:07.934685 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:08.685414      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:09.685579      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:09.936330 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:10.686087      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:11.686258      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:11.938201 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:12.686861      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:13.687920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:13.940035 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:14.688875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:15.689599      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:15.942410 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:16.690160      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:17.690277      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:17.944267 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:18.690863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:19.691154      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:19.946031 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:20.691237      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:21.691510      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:21.948364 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:22.692456      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:23.692536      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:23.950375 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:24.693242      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:25.693367      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:25.952244 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:26.693964      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:27.694047      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:27.953955 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:28.694130      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:29.694364      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:29.956402 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:30.694863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:31.695919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:31.959028 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:32.696101      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:33.696225      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:33.961280 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:34.697135      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:35.697809      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:35.963804 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:36.698666      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:37.698702      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:37.965623 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:38.698857      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:39.699918      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:39.967717 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:40.700094      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:41.700235      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:41.970223 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:42.700919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:43.701035      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:43.971832 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:44.701612      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:45.701741      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:45.973670 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:46.702397      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:47.702468      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:47.976578 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:48.703338      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:49.704071      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:49.979066 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:50.704776      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:51.704991      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:51.980591 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:52.705308      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:53.705431      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:53.982242 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:54.706092      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:55.706219      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:55.983921 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:56.706628      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:57.706754      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:57.985623 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:34:58.706861      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:34:59.707106      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:34:59.988046 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:00.707718      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:01.707923      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:01.989762 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:02.708451      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:03.708572      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:03.991472 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:04.709279      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:05.709404      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:05.993190 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:06.709882      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:07.710101      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:07.995197 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:08.710937      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:09.711921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:09.996667 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:10.712383      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:11.712957      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:11.998685 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:12.713379      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:13.714150      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:14.000866 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:14.714641      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:15.715363      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:16.003200 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:16.715441      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:17.715529      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:18.005339 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:18.715610      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:19.715937      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:20.007794 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:20.716479      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:21.716606      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:22.009282 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:22.716999      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:23.717383      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:24.011288 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:24.718114      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:25.718241      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:26.013035 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:26.718708      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:27.718838      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:28.014648 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:28.719113      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:29.719230      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:30.017011 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:30.719697      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:31.719926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:32.018966 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:32.720660      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:33.721374      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:34.021169 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:34.721453      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:35.722199      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:36.023409 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:36.723132      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:37.723928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:38.026225 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:38.724949      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:39.725190      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:40.028201 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:40.725271      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:41.725400      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:42.030636 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:42.726378      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:43.726450      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:44.032365 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:44.727211      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:45.727921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:46.035101 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:46.728862      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:47.729848      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:48.037210 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:48.729868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:49.730111      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:50.039186 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:50.730902      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:51.731870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:52.040963 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:52.732720      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:53.732802      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:54.042804 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:54.733620      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:55.733747      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:56.044633 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:56.734163      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:57.734289      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:35:58.047277 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:35:58.734851      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:35:59.734930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:00.048968 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:00.735027      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:01.735113      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:02.051253 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:02.735922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:03.735990      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:04.053088 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:04.736228      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:05.736629      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:06.055753 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:06.737459      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:07.738365      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:08.058753 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:08.738401      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:09.738556      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:10.061592 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:10.739328      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:11.739917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:12.064109 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:12.740799      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:13.740923      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:14.065970 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:14.741791      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:15.741917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:16.067682 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:16.742000      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:17.742129      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:18.070371 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:18.743090      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:19.743915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:20.073097 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:20.744803      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:21.744938      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:22.075013 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:22.745738      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:23.745863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:24.077703 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:24.746424      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:25.746506      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:26.079542 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:26.747188      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:27.747917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:28.082283 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:28.747957      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:29.748176      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:30.084123 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:30.748779      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:31.748905      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:32.085851 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:32.749505      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:33.750405      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:34.087531 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:34.751327      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:35.751459      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:36.089573 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:36.751932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:37.752146      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:38.092530 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:38.752174      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:39.752328      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:40.094412 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:40.753125      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:41.753250      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:42.096358 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:42.754070      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:43.754193      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:44.097889 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:44.754615      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:45.754716      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:46.100638 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:46.754856      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:47.755927      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:48.103343 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:48.755969      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:49.756180      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:50.106039 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:50.756664      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:51.756748      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:52.107665 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:52.757305      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:53.757426      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:54.110307 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:54.758024      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:55.758096      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:36:56.112316 22 container_probe.go:1759] Get pod liveness-0af492dd-908e-49d1-a68d-8acdc717bdaa in namespace container-probe-4457
  E1112 14:36:56.758795      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:57.758863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/12/24 14:36:58.113
  I1112 14:36:58.119957 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4457" for this suite. @ 11/12/24 14:36:58.121
• [242.287 seconds]
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 11/12/24 14:36:58.124
  I1112 14:36:58.124903 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename tables @ 11/12/24 14:36:58.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:36:58.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:36:58.133
  I1112 14:36:58.135999 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2817" for this suite. @ 11/12/24 14:36:58.222
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 11/12/24 14:36:58.225
  I1112 14:36:58.225285 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 14:36:58.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:36:58.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:36:58.233
  STEP: Creating secret with name secret-test-map-5746c8f4-760a-4bdf-97fb-b63585e30c0c @ 11/12/24 14:36:58.235
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:36:58.237
  E1112 14:36:58.759169      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:36:59.759481      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:00.759934      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:01.760013      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:37:02.245
  I1112 14:37:02.246691 22 output.go:196] Trying to get logs from node worker01 pod pod-secrets-5f8427bc-2063-472b-8b82-ff58db53475d container secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:37:02.253
  I1112 14:37:02.258355 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2508" for this suite. @ 11/12/24 14:37:02.259
• [4.038 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 11/12/24 14:37:02.263
  I1112 14:37:02.263110 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 14:37:02.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:37:02.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:37:02.27
  STEP: Creating pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328 @ 11/12/24 14:37:02.271
  E1112 14:37:02.760987      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:03.761779      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/12/24 14:37:04.279
  I1112 14:37:04.280350 22 container_probe.go:1749] Initial restart count of pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 is 0
  I1112 14:37:04.281411 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:04.761909      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:05.762057      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:06.283130 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:06.762432      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:07.763073      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:08.285430 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:08.763929      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:09.764987      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:10.287148 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:10.765678      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:11.765749      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:12.289893 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:12.766408      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:13.766570      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:14.292046 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:14.766602      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:15.766774      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:16.294208 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:16.767787      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:17.768012      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:18.296461 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:18.768990      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:19.769224      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:20.298023 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:20.769305      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:21.769434      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:22.300698 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:22.770264      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:23.770340      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:24.302382 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:24.770866      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:25.771918      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:26.304073 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:26.772598      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:27.772742      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:28.306165 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:28.773679      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:29.774739      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:30.308184 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:30.775715      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:31.775928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:32.310971 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:32.776513      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:33.776640      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:34.313131 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:34.777651      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:35.777798      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:36.315141 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:36.778643      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:37.778781      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:38.317232 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:38.779829      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:39.780052      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:40.319055 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:40.780142      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:41.780299      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:42.321641 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:42.781226      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:43.781359      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:44.323721 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:44.782201      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:45.782329      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:46.325460 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:46.783044      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:47.783885      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:48.328823 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:48.784298      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:49.784324      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:50.330577 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:50.785065      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:51.785144      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:52.332368 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:52.785942      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:53.786091      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:54.334586 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:54.787077      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:55.787942      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:56.337264 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:56.788786      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:57.788928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:37:58.339354 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:37:58.789843      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:37:59.790062      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:00.341400 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:00.790973      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:01.791941      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:02.343244 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:02.792754      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:03.792888      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:04.345162 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:04.793143      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:05.793139      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:06.347371 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:06.793839      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:07.793969      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:08.349307 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:08.794810      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:09.794875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:10.350977 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:10.795438      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:11.795914      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:12.353357 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:12.796822      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:13.797674      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:14.356102 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:14.798595      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:15.798720      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:16.358098 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:16.799558      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:17.799913      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:18.360439 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:18.800909      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:19.801088      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:20.362340 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:20.801831      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:21.801951      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:22.363750 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:22.802172      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:23.802534      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:24.365987 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:24.803449      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:25.803921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:26.367940 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:26.804375      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:27.804494      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:28.369926 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:28.805388      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:29.805549      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:30.371850 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:30.806323      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:31.806442      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:32.374473 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:32.806974      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:33.807916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:34.377027 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:34.808495      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:35.808617      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:36.378942 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:36.809426      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:37.810221      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:38.381703 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:38.811192      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:39.812241      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:40.383409 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:40.812873      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:41.813874      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:42.385185 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:42.814648      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:43.814786      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:44.387143 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:44.815632      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:45.815990      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:46.389268 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:46.816722      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:47.816823      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:48.391317 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:48.817789      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:49.817875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:50.393135 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:50.818620      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:51.818753      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:52.395042 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:52.819518      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:53.819924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:54.397412 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:54.820877      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:55.821002      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:56.399051 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:56.821516      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:57.821641      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:38:58.400976 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:38:58.822184      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:38:59.822233      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:00.403704 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:00.823136      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:01.823928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:02.406131 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:02.824393      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:03.825006      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:04.408294 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:04.825742      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:05.825827      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:06.409992 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:06.826469      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:07.826991      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:08.412164 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:08.827641      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:09.827855      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:10.413844 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:10.828220      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:11.828311      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:12.416140 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:12.828529      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:13.828650      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:14.417830 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:14.829295      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:15.829417      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:16.419707 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:16.830143      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:17.830234      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:18.421495 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:18.830932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:19.831915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:20.422991 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:20.832450      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:21.833292      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:22.425313 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:22.833683      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:23.833812      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:24.427034 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:24.834476      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:25.834556      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:26.429278 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:26.834641      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:27.834779      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:28.431091 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:28.835524      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:29.835615      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:30.433479 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:30.835863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:31.835982      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:32.435189 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:32.836651      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:33.836774      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:34.436990 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:34.837429      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:35.837517      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:36.438781 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:36.838204      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:37.838338      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:38.441832 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:38.838939      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:39.838965      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:40.444076 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:40.839497      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:41.839538      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:42.445718 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:42.840020      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:43.840140      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:44.447175 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:44.840286      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:45.840409      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:46.449306 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:46.840448      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:47.840573      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:48.451926 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:48.841353      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:49.841418      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:50.453349 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:50.841733      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:51.841861      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:52.454939 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:52.842341      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:53.843286      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:54.457420 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:54.843858      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:55.843930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:56.459387 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:56.844814      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:57.844934      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:39:58.461421 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:39:58.845832      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:39:59.846046      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:00.463283 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:00.846722      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:01.846810      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:02.465329 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:02.847766      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:03.847898      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:04.467346 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:04.848135      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:05.848154      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:06.469524 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:06.848922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:07.849329      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:08.472313 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:08.849687      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:09.850551      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:10.474964 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:10.851386      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:11.851476      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:12.477526 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:12.851914      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:13.852337      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:14.479638 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:14.853075      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:15.853173      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:16.481608 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:16.854005      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:17.854136      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:18.483529 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:18.854929      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:19.855919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:20.485247 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:20.856670      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:21.856762      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:22.487222 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:22.857622      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:23.858152      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:24.489577 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:24.858998      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:25.859924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:26.492367 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:26.860798      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:27.860921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:28.494470 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:28.861880      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:29.862781      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:30.497527 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:30.862861      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:31.862947      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:32.499418 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:32.863842      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:33.863974      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:34.501202 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:34.864614      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:35.864737      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:36.503202 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:36.865244      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:37.865365      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:38.505754 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:38.866174      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:39.866394      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:40.507796 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:40.867188      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:41.867938      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:42.510389 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:42.868785      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:43.868906      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:44.512346 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:44.869756      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:45.869881      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:46.514159 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:46.870258      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:47.870348      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:48.516917 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:48.871305      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:49.871463      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:50.518648 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:50.871914      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:51.872045      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:52.520033 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:52.872371      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:53.872487      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:54.521995 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:54.873111      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:55.873241      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:56.524601 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:56.873921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:57.874051      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:40:58.526642 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:40:58.874768      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:40:59.874868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:41:00.529394 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:41:00.875796      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:01.875914      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:41:02.531328 22 container_probe.go:1759] Get pod busybox-1e36b84c-9c6d-401e-8a34-ecefe7833221 in namespace container-probe-2328
  E1112 14:41:02.876725      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:03.876857      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/12/24 14:41:04.531
  I1112 14:41:04.537984 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2328" for this suite. @ 11/12/24 14:41:04.539
• [242.279 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 11/12/24 14:41:04.542
  I1112 14:41:04.542694 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replicaset @ 11/12/24 14:41:04.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:04.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:04.551
  I1112 14:41:04.552621 22 replica_set.go:191] Creating ReplicaSet my-hostname-basic-19ac8272-4eca-443a-aed2-baadb5561993
  I1112 14:41:04.555988 22 resource.go:87] Pod name my-hostname-basic-19ac8272-4eca-443a-aed2-baadb5561993: Found 0 pods out of 1
  E1112 14:41:04.877439      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:05.877570      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:06.878132      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:07.878274      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:08.878358      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:41:09.558514 22 resource.go:87] Pod name my-hostname-basic-19ac8272-4eca-443a-aed2-baadb5561993: Found 1 pods out of 1
  I1112 14:41:09.558542 22 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-19ac8272-4eca-443a-aed2-baadb5561993" is running
  I1112 14:41:09.559801 22 replica_set.go:220] Pod "my-hostname-basic-19ac8272-4eca-443a-aed2-baadb5561993-wfj24" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:41:05 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:41:04 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:41:05 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:41:05 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:41:04 +0000 UTC Reason: Message:}])
  I1112 14:41:09.559827 22 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/12/24 14:41:09.559
  I1112 14:41:09.563842 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4110" for this suite. @ 11/12/24 14:41:09.565
• [5.025 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 11/12/24 14:41:09.567
  I1112 14:41:09.567629 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename watch @ 11/12/24 14:41:09.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:09.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:09.575
  STEP: getting a starting resourceVersion @ 11/12/24 14:41:09.577
  STEP: starting a background goroutine to produce watch events @ 11/12/24 14:41:09.649
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 11/12/24 14:41:09.649
  E1112 14:41:09.879251      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:10.879309      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:11.880173      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:41:12.370880 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9849" for this suite. @ 11/12/24 14:41:12.42
• [2.904 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 11/12/24 14:41:12.472
  I1112 14:41:12.472258 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:41:12.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:12.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:12.48
  STEP: Setting up server cert @ 11/12/24 14:41:12.58
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:41:12.822
  STEP: Deploying the webhook pod @ 11/12/24 14:41:12.826
  STEP: Wait for the deployment to be ready @ 11/12/24 14:41:12.832
  I1112 14:41:12.835504 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1112 14:41:12.880772      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:13.880907      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/12/24 14:41:14.841
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:41:14.845
  E1112 14:41:14.881943      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:41:15.845977 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 11/12/24 14:41:15.848
  STEP: Creating a custom resource definition that should be denied by the webhook @ 11/12/24 14:41:15.856
  I1112 14:41:15.856383 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:41:15.880340 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1112 14:41:15.881938      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1198" for this suite. @ 11/12/24 14:41:15.882
  STEP: Destroying namespace "webhook-markers-676" for this suite. @ 11/12/24 14:41:15.885
• [3.416 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 11/12/24 14:41:15.887
  I1112 14:41:15.887971 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:41:15.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:15.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:15.9
  STEP: Creating configMap with name configmap-test-upd-a06a2127-b012-4586-a705-6fd430cba8f4 @ 11/12/24 14:41:15.982
  STEP: Creating the pod @ 11/12/24 14:41:15.985
  E1112 14:41:16.882167      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:17.882312      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 11/12/24 14:41:17.993
  STEP: Waiting for pod with binary data @ 11/12/24 14:41:18
  I1112 14:41:18.002838 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2825" for this suite. @ 11/12/24 14:41:18.004
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 11/12/24 14:41:18.006
  I1112 14:41:18.006601 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename svcaccounts @ 11/12/24 14:41:18.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:18.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:18.014
  STEP: creating a ServiceAccount @ 11/12/24 14:41:18.016
  STEP: watching for the ServiceAccount to be added @ 11/12/24 14:41:18.018
  STEP: patching the ServiceAccount @ 11/12/24 14:41:18.019
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 11/12/24 14:41:18.022
  STEP: deleting the ServiceAccount @ 11/12/24 14:41:18.023
  I1112 14:41:18.027365 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-971" for this suite. @ 11/12/24 14:41:18.105
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 11/12/24 14:41:18.108
  I1112 14:41:18.108562 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename field-validation @ 11/12/24 14:41:18.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:18.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:18.117
  I1112 14:41:18.119190 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 14:41:18.882394      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:19.882479      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:20.883310      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:41:21.156795 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1404" for this suite. @ 11/12/24 14:41:21.158
• [3.052 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 11/12/24 14:41:21.16
  I1112 14:41:21.160630 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename namespaces @ 11/12/24 14:41:21.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:21.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:21.17
  STEP: Creating namespace "e2e-ns-zcntb" @ 11/12/24 14:41:21.171
  I1112 14:41:21.267724 22 namespace.go:411] Namespace "e2e-ns-zcntb-151" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-zcntb-151" @ 11/12/24 14:41:21.267
  I1112 14:41:21.271456 22 namespace.go:434] Namespace "e2e-ns-zcntb-151" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-zcntb-151" @ 11/12/24 14:41:21.271
  I1112 14:41:21.274196 22 namespace.go:463] Namespace "e2e-ns-zcntb-151" has []v1.FinalizerName{"kubernetes"}
  I1112 14:41:21.274281 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5162" for this suite. @ 11/12/24 14:41:21.275
  STEP: Destroying namespace "e2e-ns-zcntb-151" for this suite. @ 11/12/24 14:41:21.278
• [0.120 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 11/12/24 14:41:21.28
  I1112 14:41:21.280680 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename field-validation @ 11/12/24 14:41:21.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:21.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:21.37
  I1112 14:41:21.371807 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 14:41:21.883915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:22.884139      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:23.884272      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1112 14:41:23.906889      22 warnings.go:70] unknown field "alpha"
  W1112 14:41:23.906903      22 warnings.go:70] unknown field "beta"
  W1112 14:41:23.906907      22 warnings.go:70] unknown field "delta"
  W1112 14:41:23.906911      22 warnings.go:70] unknown field "epsilon"
  W1112 14:41:23.906914      22 warnings.go:70] unknown field "gamma"
  I1112 14:41:24.421522 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6050" for this suite. @ 11/12/24 14:41:24.423
• [3.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 11/12/24 14:41:24.426
  I1112 14:41:24.426386 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pod-network-test @ 11/12/24 14:41:24.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:24.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:24.434
  STEP: Performing setup for networking test in namespace pod-network-test-4109 @ 11/12/24 14:41:24.435
  STEP: creating a selector @ 11/12/24 14:41:24.435
  STEP: Creating the service pods in kubernetes @ 11/12/24 14:41:24.435
  I1112 14:41:24.435851 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1112 14:41:24.885171      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:25.886226      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:26.886720      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:27.886880      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:28.887482      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:29.887821      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:30.888720      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:31.888870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:32.889755      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:33.889878      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:34.890668      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:35.890846      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:36.891660      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:37.891769      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:38.892820      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:39.893049      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:40.893133      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:41.893796      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:42.893875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:43.894010      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:44.894836      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:45.894903      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/12/24 14:41:46.566
  E1112 14:41:46.895672      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:47.895688      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:41:48.573264 22 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1112 14:41:48.573294 22 networking.go:42] Breadth first check of 172.20.241.125 on host 10.255.0.206...
  I1112 14:41:48.574390 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.5.29:9080/dial?request=hostname&protocol=udp&host=172.20.241.125&port=8081&tries=1'] Namespace:pod-network-test-4109 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:41:48.574408 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:41:48.574786 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:41:48.574830 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4109/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.5.29%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.241.125%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1112 14:41:48.606190 22 utils.go:356] Waiting for responses: map[]
  I1112 14:41:48.606221 22 utils.go:360] reached 172.20.241.125 after 0/1 tries
  I1112 14:41:48.606233 22 networking.go:42] Breadth first check of 172.20.5.9 on host 10.255.0.207...
  I1112 14:41:48.607796 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.5.29:9080/dial?request=hostname&protocol=udp&host=172.20.5.9&port=8081&tries=1'] Namespace:pod-network-test-4109 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:41:48.607816 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:41:48.608176 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:41:48.608221 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4109/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.5.29%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.5.9%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1112 14:41:48.635998 22 utils.go:356] Waiting for responses: map[]
  I1112 14:41:48.636026 22 utils.go:360] reached 172.20.5.9 after 0/1 tries
  I1112 14:41:48.636035 22 networking.go:42] Breadth first check of 172.20.30.71 on host 10.255.0.208...
  I1112 14:41:48.637536 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.5.29:9080/dial?request=hostname&protocol=udp&host=172.20.30.71&port=8081&tries=1'] Namespace:pod-network-test-4109 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:41:48.637559 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:41:48.637911 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:41:48.637957 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4109/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.5.29%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.30.71%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1112 14:41:48.666842 22 utils.go:356] Waiting for responses: map[]
  I1112 14:41:48.666868 22 utils.go:360] reached 172.20.30.71 after 0/1 tries
  I1112 14:41:48.666877 22 networking.go:53] Going to retry 0 out of 3 pods....
  I1112 14:41:48.666984 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4109" for this suite. @ 11/12/24 14:41:48.669
• [24.245 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 11/12/24 14:41:48.671
  I1112 14:41:48.671918 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename var-expansion @ 11/12/24 14:41:48.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:41:48.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:41:48.68
  STEP: creating the pod with failed condition @ 11/12/24 14:41:48.682
  E1112 14:41:48.895910      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:49.896171      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:50.896931      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:51.897078      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:52.897819      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:53.897948      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:54.898298      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:55.898398      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:56.898878      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:57.898892      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:58.899701      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:41:59.899756      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:00.899858      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:01.899930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:02.900760      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:03.900847      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:04.901262      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:05.901143      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:06.902053      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:07.902997      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:08.903518      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:09.903743      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:10.904438      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:11.904557      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:12.904625      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:13.904752      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:14.905203      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:15.905325      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:16.905922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:17.906045      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:18.906245      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:19.906415      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:20.906928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:21.907012      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:22.907466      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:23.907914      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:24.908532      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:25.908656      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:26.909037      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:27.909158      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:28.909706      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:29.909917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:30.910850      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:31.911923      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:32.912462      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:33.912585      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:34.913638      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:35.913760      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:36.914488      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:37.914626      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:38.915067      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:39.915912      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:40.916599      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:41.917168      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:42.917929      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:43.918012      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:44.918479      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:45.918601      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:46.919121      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:47.919211      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:48.919648      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:49.919871      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:50.920661      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:51.920785      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:52.921508      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:53.921632      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:54.922310      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:55.922350      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:56.923282      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:57.923927      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:58.924895      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:42:59.925113      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:00.925851      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:01.925935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:02.926437      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:03.926512      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:04.926670      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:05.926816      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:06.927441      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:07.927927      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:08.928722      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:09.928800      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:10.929751      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:11.930805      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:12.931397      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:13.931477      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:14.932340      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:15.932658      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:16.933100      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:17.933584      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:18.933899      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:19.934122      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:20.934843      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:21.934868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:22.935540      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:23.935915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:24.936718      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:25.936845      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:26.937498      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:27.937619      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:28.937716      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:29.937936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:30.938893      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:31.939921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:32.940809      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:33.940953      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:34.941516      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:35.941608      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:36.942253      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:37.942396      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:38.943182      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:39.943924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:40.944166      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:41.944256      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:42.945028      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:43.945150      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:44.945711      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:45.945834      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:46.946635      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:47.946786      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 11/12/24 14:43:48.686
  E1112 14:43:48.947118      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:43:49.193451 22 pod_client.go:173] Successfully updated pod "var-expansion-bd33dea9-6857-4786-9203-057ca16ff256"
  STEP: waiting for pod running @ 11/12/24 14:43:49.193
  E1112 14:43:49.947206      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:50.947919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/12/24 14:43:51.197
  I1112 14:43:51.197239 22 delete.go:62] Deleting pod "var-expansion-bd33dea9-6857-4786-9203-057ca16ff256" in namespace "var-expansion-2113"
  I1112 14:43:51.200520 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-bd33dea9-6857-4786-9203-057ca16ff256" to be fully deleted
  E1112 14:43:51.948267      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:52.948414      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:53.949277      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:54.949356      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:55.949913      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:56.950041      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:57.951013      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:58.951927      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:43:59.952495      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:00.953542      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:01.954471      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:02.954599      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:03.955436      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:04.955687      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:05.955965      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:06.956098      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:07.956189      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:08.956279      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:09.957118      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:10.957162      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:11.958006      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:12.958138      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:13.958836      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:14.958868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:15.958908      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:16.959920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:17.960672      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:18.960795      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:19.961024      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:20.961104      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:21.961143      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:22.961267      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:23.236139 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2113" for this suite. @ 11/12/24 14:44:23.237
• [154.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 11/12/24 14:44:23.24
  I1112 14:44:23.240641 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename gc @ 11/12/24 14:44:23.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:44:23.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:44:23.248
  STEP: create the rc @ 11/12/24 14:44:23.339
  W1112 14:44:23.341713      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1112 14:44:23.962329      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:24.965444      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:25.965604      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:26.967905      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:27.969670      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:28.969791      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/12/24 14:44:29.343
  STEP: wait for the rc to be deleted @ 11/12/24 14:44:29.346
  E1112 14:44:29.969921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:30.363909 22 garbage_collector.go:670] 80 pods remaining
  I1112 14:44:30.363946 22 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1112 14:44:30.363951 22 garbage_collector.go:678] 
  E1112 14:44:30.970039      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:31.354316 22 garbage_collector.go:670] 71 pods remaining
  I1112 14:44:31.354340 22 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1112 14:44:31.354345 22 garbage_collector.go:678] 
  E1112 14:44:31.970722      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:32.352569 22 garbage_collector.go:670] 60 pods remaining
  I1112 14:44:32.352594 22 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1112 14:44:32.352599 22 garbage_collector.go:678] 
  E1112 14:44:32.971499      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:33.368607 22 garbage_collector.go:670] 40 pods remaining
  I1112 14:44:33.368636 22 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1112 14:44:33.368652 22 garbage_collector.go:678] 
  E1112 14:44:33.971615      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:34.352052 22 garbage_collector.go:670] 31 pods remaining
  I1112 14:44:34.352177 22 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1112 14:44:34.352240 22 garbage_collector.go:678] 
  E1112 14:44:34.971886      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:35.349948 22 garbage_collector.go:670] 20 pods remaining
  I1112 14:44:35.350056 22 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1112 14:44:35.350092 22 garbage_collector.go:678] 
  E1112 14:44:35.972490      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/12/24 14:44:36.349
  W1112 14:44:36.351653      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1112 14:44:36.351747 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1112 14:44:36.352451 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8605" for this suite. @ 11/12/24 14:44:36.354
• [13.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 11/12/24 14:44:36.363
  I1112 14:44:36.363665 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/12/24 14:44:36.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:44:36.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:44:36.385
  STEP: creating @ 11/12/24 14:44:36.391
  STEP: getting @ 11/12/24 14:44:36.405
  STEP: listing in namespace @ 11/12/24 14:44:36.407
  STEP: patching @ 11/12/24 14:44:36.451
  STEP: deleting @ 11/12/24 14:44:36.464
  I1112 14:44:36.473203 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7728" for this suite. @ 11/12/24 14:44:36.479
• [0.120 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 11/12/24 14:44:36.484
  I1112 14:44:36.484108 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename dns @ 11/12/24 14:44:36.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:44:36.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:44:36.501
  STEP: Creating a test externalName service @ 11/12/24 14:44:36.503
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9588.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local; sleep 1; done
   @ 11/12/24 14:44:36.506
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9588.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local; sleep 1; done
   @ 11/12/24 14:44:36.506
  STEP: creating a pod to probe DNS @ 11/12/24 14:44:36.506
  STEP: submitting the pod to kubernetes @ 11/12/24 14:44:36.506
  E1112 14:44:36.972684      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:37.973204      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/12/24 14:44:38.517
  STEP: looking for the results for each expected name from probers @ 11/12/24 14:44:38.518
  I1112 14:44:38.522237 22 dns_common.go:552] DNS probes using dns-test-1e8464a3-3345-48d8-9236-44122dfd2a12 succeeded

  STEP: changing the externalName to bar.example.com @ 11/12/24 14:44:38.522
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9588.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local; sleep 1; done
   @ 11/12/24 14:44:38.525
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9588.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local; sleep 1; done
   @ 11/12/24 14:44:38.525
  STEP: creating a second pod to probe DNS @ 11/12/24 14:44:38.525
  STEP: submitting the pod to kubernetes @ 11/12/24 14:44:38.525
  E1112 14:44:38.974217      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:39.974435      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/12/24 14:44:40.531
  STEP: looking for the results for each expected name from probers @ 11/12/24 14:44:40.533
  I1112 14:44:40.535013 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:44:40.536281 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:44:40.536301 22 dns_common.go:489] Lookups using dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 failed for: [wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local]

  I1112 14:44:40.542409 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:44:40.544478 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:44:40.554362 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E1112 14:44:40.974856      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:41.975930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:42.976032      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:43.976156      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:44.976384      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:45.536054 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:44:45.537529 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:44:45.537553 22 dns_common.go:489] Lookups using dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 failed for: [wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local]

  I1112 14:44:45.539891 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:44:45.547481 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:44:45.557519 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E1112 14:44:45.977058      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:46.977127      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:47.977262      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:48.977348      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:49.977507      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:50.536227 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:44:50.537614 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:44:50.537636 22 dns_common.go:489] Lookups using dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 failed for: [wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local]

  I1112 14:44:50.539930 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:44:50.550103 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:44:50.560092 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E1112 14:44:50.977599      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:51.977726      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:52.977853      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:53.978737      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:54.978878      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:44:55.536369 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:44:55.537775 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:44:55.537799 22 dns_common.go:489] Lookups using dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 failed for: [wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local]

  I1112 14:44:55.547758 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:44:55.557744 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:44:55.567790 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E1112 14:44:55.979260      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:56.979947      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:57.980468      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:58.980590      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:44:59.981507      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:00.536264 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:45:00.537656 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:45:00.537681 22 dns_common.go:489] Lookups using dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 failed for: [wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local]

  I1112 14:45:00.546181 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:45:00.556175 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:45:00.558361 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E1112 14:45:00.981868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:01.981955      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:02.982035      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:03.982182      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:04.983082      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:05.535208 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:45:05.536796 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local from pod  dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1112 14:45:05.536825 22 dns_common.go:489] Lookups using dns-9588/dns-test-f0533f28-4700-413a-94ac-18cb0440f142 failed for: [wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local]

  I1112 14:45:05.545093 22 dns_common.go:495] Pod client logs for webserver: 
  I1112 14:45:05.555097 22 dns_common.go:495] Pod client logs for querier: 
  I1112 14:45:05.565100 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E1112 14:45:05.983528      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:06.983627      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:07.983957      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:08.984015      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:09.984233      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:10.536980 22 dns_common.go:552] DNS probes using dns-test-f0533f28-4700-413a-94ac-18cb0440f142 succeeded

  STEP: changing the service to type=ClusterIP @ 11/12/24 14:45:10.537
  W1112 14:45:10.543425      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9588.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9588.svc.cluster.local; sleep 1; done
   @ 11/12/24 14:45:10.543
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9588.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9588.svc.cluster.local; sleep 1; done
   @ 11/12/24 14:45:10.543
  STEP: creating a third pod to probe DNS @ 11/12/24 14:45:10.543
  STEP: submitting the pod to kubernetes @ 11/12/24 14:45:10.545
  E1112 14:45:10.984823      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:11.984960      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/12/24 14:45:12.553
  STEP: looking for the results for each expected name from probers @ 11/12/24 14:45:12.554
  I1112 14:45:12.557714 22 dns_common.go:552] DNS probes using dns-test-40e8f233-e00e-4fa2-b732-f2f7dc50550f succeeded

  STEP: deleting the pod @ 11/12/24 14:45:12.557
  STEP: deleting the pod @ 11/12/24 14:45:12.562
  STEP: deleting the pod @ 11/12/24 14:45:12.568
  STEP: deleting the test externalName service @ 11/12/24 14:45:12.574
  I1112 14:45:12.580964 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9588" for this suite. @ 11/12/24 14:45:12.583
• [36.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 11/12/24 14:45:12.587
  I1112 14:45:12.587373 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:45:12.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:45:12.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:45:12.647
  STEP: Creating configMap with name configmap-test-volume-312570d5-8827-4f90-b8d7-0e5783615890 @ 11/12/24 14:45:12.648
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:45:12.651
  E1112 14:45:12.985488      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:13.985616      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:45:14.657
  I1112 14:45:14.658854 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-23a63aed-26c0-4477-9ad9-7d2229075fe1 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:45:14.661
  I1112 14:45:14.669322 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1614" for this suite. @ 11/12/24 14:45:14.67
• [2.086 seconds]
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 11/12/24 14:45:14.672
  I1112 14:45:14.672942 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 14:45:14.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:45:14.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:45:14.684
  STEP: creating a Pod with a static label @ 11/12/24 14:45:14.686
  STEP: watching for Pod to be ready @ 11/12/24 14:45:14.692
  I1112 14:45:14.693507 22 pods.go:945] observed Pod pod-test in namespace pods-4014 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1112 14:45:14.695514 22 pods.go:945] observed Pod pod-test in namespace pods-4014 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:14 +0000 UTC  }]
  I1112 14:45:14.701239 22 pods.go:945] observed Pod pod-test in namespace pods-4014 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:14 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:14 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:14 +0000 UTC  }]
  E1112 14:45:14.986582      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:15.250136 22 pods.go:948] Found Pod pod-test in namespace pods-4014 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:15 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:14 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:15 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:15 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-12 14:45:14 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 11/12/24 14:45:15.251
  STEP: getting the Pod and ensuring that it's patched @ 11/12/24 14:45:15.257
  STEP: replacing the Pod's status Ready condition to False @ 11/12/24 14:45:15.258
  STEP: check the Pod again to ensure its Ready conditions are False @ 11/12/24 14:45:15.263
  STEP: deleting the Pod via a Collection with a LabelSelector @ 11/12/24 14:45:15.263
  STEP: watching for the Pod to be deleted @ 11/12/24 14:45:15.267
  I1112 14:45:15.268278 22 pods.go:1058] observed event type MODIFIED
  E1112 14:45:15.987255      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:16.987923      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:17.256879 22 pods.go:1058] observed event type MODIFIED
  I1112 14:45:17.391110 22 pods.go:1058] observed event type MODIFIED
  E1112 14:45:17.988981      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:18.258915 22 pods.go:1058] observed event type MODIFIED
  I1112 14:45:18.263145 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4014" for this suite. @ 11/12/24 14:45:18.264
• [3.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 11/12/24 14:45:18.267
  I1112 14:45:18.267027 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 14:45:18.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:45:18.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:45:18.277
  STEP: Creating pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984 @ 11/12/24 14:45:18.278
  E1112 14:45:18.989950      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:19.990171      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/12/24 14:45:20.285
  I1112 14:45:20.286254 22 container_probe.go:1749] Initial restart count of pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d is 0
  I1112 14:45:20.287305 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:20.991077      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:21.991928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:22.289925 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:22.992620      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:23.993275      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:24.292308 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:24.994080      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:25.994231      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:26.294120 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:26.994812      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:27.994870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:28.296051 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:28.995799      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:29.996019      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:30.298013 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:30.996840      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:31.996926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:32.299762 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:32.997003      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:33.997528      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:34.301855 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:34.998564      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:35.999258      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:36.304407 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:36.999905      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:38.000003      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:38.307419 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:39.000075      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:40.000328      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:40.309230 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:41.000399      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:42.000495      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:42.311602 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:43.001349      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:44.001432      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:44.313297 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:45.001990      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:46.002144      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:46.315362 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:47.003172      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:48.003930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:48.318171 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:49.004924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:50.005216      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:50.320286 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:51.006051      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:52.006180      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:52.322236 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:53.006872      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:54.006993      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:54.324082 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:55.007903      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:56.008006      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:56.325937 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:57.008566      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:45:58.008668      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:45:58.327925 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:45:59.009661      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:00.009881      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:00.329872 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:46:01.009998      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:02.010149      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:02.332358 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:46:03.011065      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:04.011939      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:04.334098 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:46:05.012319      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:06.012135      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:06.336864 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:46:07.012523      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:08.013205      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:08.339510 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  E1112 14:46:09.013534      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:10.013616      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:10.341241 22 container_probe.go:1759] Get pod busybox-c3ca899a-80f6-4ad7-83df-27f78955321d in namespace container-probe-6984
  I1112 14:46:10.341271 22 container_probe.go:1763] Restart count of pod container-probe-6984/busybox-c3ca899a-80f6-4ad7-83df-27f78955321d is now 1 (50.054993569s elapsed)
  STEP: deleting the pod @ 11/12/24 14:46:10.341
  I1112 14:46:10.346628 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6984" for this suite. @ 11/12/24 14:46:10.348
• [52.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 11/12/24 14:46:10.35
  I1112 14:46:10.350426 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-runtime @ 11/12/24 14:46:10.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:10.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:10.358
  STEP: create the container @ 11/12/24 14:46:10.36
  W1112 14:46:10.363983      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/12/24 14:46:10.364
  E1112 14:46:11.013697      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:12.013800      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:13.013882      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/12/24 14:46:13.371
  STEP: the container should be terminated @ 11/12/24 14:46:13.373
  STEP: the termination message should be set @ 11/12/24 14:46:13.373
  I1112 14:46:13.373118 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/12/24 14:46:13.373
  I1112 14:46:13.379240 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4579" for this suite. @ 11/12/24 14:46:13.38
• [3.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 11/12/24 14:46:13.382
  I1112 14:46:13.382957 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pv @ 11/12/24 14:46:13.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:13.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:13.391
  STEP: Creating initial PV and PVC @ 11/12/24 14:46:13.392
  I1112 14:46:13.392487 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3459" @ 11/12/24 14:46:13.398
  STEP: Listing PVCs in namespace "pv-3459" @ 11/12/24 14:46:13.4
  STEP: Reading "pvc-qtx7q" Status @ 11/12/24 14:46:13.402
  STEP: Reading "pv-3459-xc9nk" Status @ 11/12/24 14:46:13.404
  STEP: Patching "pvc-qtx7q" Status @ 11/12/24 14:46:13.407
  STEP: Patching "pv-3459-xc9nk" Status @ 11/12/24 14:46:13.41
  STEP: Updating "pvc-qtx7q" Status @ 11/12/24 14:46:13.418
  STEP: Updating "pv-3459-xc9nk" Status @ 11/12/24 14:46:13.437
  I1112 14:46:13.440719 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1112 14:46:13.440735 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-qtx7q"
  I1112 14:46:13.443541 22 pv.go:193] Deleting PersistentVolume "pv-3459-xc9nk"
  I1112 14:46:13.445819 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3459" for this suite. @ 11/12/24 14:46:13.493
• [0.113 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 11/12/24 14:46:13.496
  I1112 14:46:13.496502 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename field-validation @ 11/12/24 14:46:13.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:13.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:13.506
  I1112 14:46:13.507552 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 14:46:14.014182      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:15.014538      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:16.014797      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1112 14:46:16.029122      22 warnings.go:70] unknown field "alpha"
  W1112 14:46:16.029137      22 warnings.go:70] unknown field "beta"
  W1112 14:46:16.029140      22 warnings.go:70] unknown field "delta"
  W1112 14:46:16.029143      22 warnings.go:70] unknown field "epsilon"
  W1112 14:46:16.029146      22 warnings.go:70] unknown field "gamma"
  I1112 14:46:16.545262 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4990" for this suite. @ 11/12/24 14:46:16.546
• [3.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 11/12/24 14:46:16.549
  I1112 14:46:16.549238 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/12/24 14:46:16.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:16.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:16.557
  STEP: creating a policy with variables @ 11/12/24 14:46:16.562
  STEP: waiting until the marker is denied @ 11/12/24 14:46:16.571
  E1112 14:46:17.014999      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 11/12/24 14:46:17.375
  STEP: testing a non-replicated ReplicaSet not to be denied @ 11/12/24 14:46:17.381
  I1112 14:46:17.401997 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5214" for this suite. @ 11/12/24 14:46:17.409
• [0.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 11/12/24 14:46:17.418
  I1112 14:46:17.418467 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubelet-test @ 11/12/24 14:46:17.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:17.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:17.426
  E1112 14:46:18.015913      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:19.015989      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:20.016662      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:21.016804      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:21.445152 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7855" for this suite. @ 11/12/24 14:46:21.446
• [4.031 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 11/12/24 14:46:21.449
  I1112 14:46:21.449207 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:46:21.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:21.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:21.458
  STEP: Creating configMap with name configmap-test-volume-a40eba5b-3bc1-4d87-894a-07e39bd05b84 @ 11/12/24 14:46:21.459
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:46:21.461
  E1112 14:46:22.017436      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:23.018344      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:24.018791      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:25.018871      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:46:25.471
  I1112 14:46:25.472272 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-bc193d1c-4ae3-445a-b45d-3a6612c7aa5b container configmap-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:46:25.478
  I1112 14:46:25.484254 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8766" for this suite. @ 11/12/24 14:46:25.485
• [4.039 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 11/12/24 14:46:25.487
  I1112 14:46:25.487980 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename security-context-test @ 11/12/24 14:46:25.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:25.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:25.494
  E1112 14:46:26.019784      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:27.019932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:27.503870 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3618" for this suite. @ 11/12/24 14:46:27.505
• [2.020 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 11/12/24 14:46:27.508
  I1112 14:46:27.508358 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replication-controller @ 11/12/24 14:46:27.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:27.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:27.516
  STEP: Given a ReplicationController is created @ 11/12/24 14:46:27.517
  STEP: When the matched label of one of its pods change @ 11/12/24 14:46:27.52
  I1112 14:46:27.521472 22 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1112 14:46:28.020008      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:29.021054      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:30.021288      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:31.021432      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:32.021511      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:32.523676 22 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/12/24 14:46:32.528
  E1112 14:46:33.022550      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:33.531832 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7606" for this suite. @ 11/12/24 14:46:33.533
• [6.027 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 11/12/24 14:46:33.535
  I1112 14:46:33.535995 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:46:33.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:33.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:33.544
  STEP: Creating configMap configmap-1040/configmap-test-0d196885-3b9d-4aa2-b7a2-49ac630c3a12 @ 11/12/24 14:46:33.545
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:46:33.547
  E1112 14:46:34.023400      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:35.023947      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:46:35.554
  I1112 14:46:35.556090 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-89410425-c5be-48c3-9098-56313671ced4 container env-test: <nil>
  STEP: delete the pod @ 11/12/24 14:46:35.558
  I1112 14:46:35.563414 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1040" for this suite. @ 11/12/24 14:46:35.564
• [2.031 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 11/12/24 14:46:35.567
  I1112 14:46:35.567228 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename ingressclass @ 11/12/24 14:46:35.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:35.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:35.575
  STEP: getting /apis @ 11/12/24 14:46:35.577
  STEP: getting /apis/networking.k8s.io @ 11/12/24 14:46:35.578
  STEP: getting /apis/networking.k8s.iov1 @ 11/12/24 14:46:35.579
  STEP: creating @ 11/12/24 14:46:35.579
  STEP: getting @ 11/12/24 14:46:35.584
  STEP: listing @ 11/12/24 14:46:35.585
  STEP: watching @ 11/12/24 14:46:35.586
  I1112 14:46:35.586877 22 ingressclass.go:348] starting watch
  STEP: patching @ 11/12/24 14:46:35.587
  STEP: updating @ 11/12/24 14:46:35.589
  I1112 14:46:35.590970 22 ingressclass.go:364] waiting for watch events with expected annotations
  I1112 14:46:35.590992 22 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 11/12/24 14:46:35.591
  STEP: deleting a collection @ 11/12/24 14:46:35.594
  I1112 14:46:35.599075 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6291" for this suite. @ 11/12/24 14:46:35.665
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 11/12/24 14:46:35.669
  I1112 14:46:35.669603 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 14:46:35.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:46:35.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:46:35.678
  STEP: Creating pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193 @ 11/12/24 14:46:35.679
  E1112 14:46:36.024480      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:37.025456      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/12/24 14:46:37.686
  I1112 14:46:37.687325 22 container_probe.go:1749] Initial restart count of pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b is 0
  I1112 14:46:37.688390 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:38.025778      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:39.026747      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:39.690179 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:40.027558      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:41.027927      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:41.692505 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:42.028881      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:43.029001      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:43.694412 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:44.029892      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:45.030123      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:45.696571 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:46.030938      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:47.031938      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:47.698348 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:48.032684      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:49.033449      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:49.700809 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:50.034180      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:51.034329      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:51.702923 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:52.035294      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:53.035941      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:53.705216 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:54.036586      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:55.036823      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:55.707113 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:46:56.037500      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:57.037588      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:57.709606 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  I1112 14:46:57.709630 22 container_probe.go:1763] Restart count of pod container-probe-7193/liveness-908814ce-2726-4508-a8b0-cf80fe93a99b is now 1 (20.022283853s elapsed)
  E1112 14:46:58.037864      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:46:59.037954      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:46:59.711482 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:00.038852      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:01.038886      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:01.713532 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:02.039928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:03.040082      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:03.715367 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:04.040730      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:05.040954      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:05.718013 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:06.041372      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:07.041510      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:07.719933 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:08.042313      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:09.042627      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:09.721446 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:10.042721      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:11.042802      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:11.723496 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:12.043835      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:13.043982      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:13.725262 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:14.044633      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:15.044865      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:15.727301 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:16.045668      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:17.045767      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:17.729225 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  I1112 14:47:17.729255 22 container_probe.go:1763] Restart count of pod container-probe-7193/liveness-908814ce-2726-4508-a8b0-cf80fe93a99b is now 2 (40.041907605s elapsed)
  E1112 14:47:18.046573      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:19.046698      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:19.731078 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:20.047457      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:21.047936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:21.733714 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:22.047997      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:23.048094      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:23.735507 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:24.048905      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:25.049875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:25.737315 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:26.050687      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:27.050832      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:27.739173 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:28.051533      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:29.052162      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:29.741484 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:30.052783      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:31.053437      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:31.743646 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:32.054043      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:33.054113      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:33.745543 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:34.054866      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:35.055921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:35.747400 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:36.056480      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:37.056629      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:37.749683 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  I1112 14:47:37.749723 22 container_probe.go:1763] Restart count of pod container-probe-7193/liveness-908814ce-2726-4508-a8b0-cf80fe93a99b is now 3 (1m0.062375432s elapsed)
  E1112 14:47:38.057063      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:39.057190      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:39.752380 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:40.057804      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:41.057897      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:41.754563 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:42.058920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:43.059931      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:43.756383 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:44.060732      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:45.060970      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:45.758283 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:46.061619      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:47.062482      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:47.761036 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:48.063179      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:49.063236      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:49.762625 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:50.063927      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:51.064014      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:51.764709 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:52.065020      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:53.065098      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:53.766525 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:54.065872      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:55.066115      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:55.768539 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:47:56.066798      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:57.066862      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:57.770319 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  I1112 14:47:57.770348 22 container_probe.go:1763] Restart count of pod container-probe-7193/liveness-908814ce-2726-4508-a8b0-cf80fe93a99b is now 4 (1m20.083000926s elapsed)
  E1112 14:47:58.067653      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:47:59.067673      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:47:59.772123 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:00.068463      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:01.069147      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:01.774932 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:02.069199      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:03.069349      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:03.777581 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:04.070002      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:05.070283      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:05.779367 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:06.070704      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:07.070790      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:07.781289 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:08.071641      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:09.071926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:09.783150 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:10.072244      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:11.072368      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:11.785701 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:12.073008      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:13.073134      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:13.787471 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:14.073807      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:15.074067      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:15.789322 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:16.074647      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:17.074794      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:17.791083 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:18.075306      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:19.075387      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:19.793461 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:20.075790      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:21.075911      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:21.795466 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:22.076752      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:23.077649      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:23.797532 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:24.077779      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:25.077862      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:25.799360 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:26.078544      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:27.078667      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:27.801467 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:28.078740      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:29.078868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:29.803327 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:30.079647      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:31.079757      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:31.805483 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:32.080733      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:33.080824      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:33.807421 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:34.081726      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:35.081925      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:35.809295 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:36.082605      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:37.082941      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:37.811508 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:38.083815      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:39.083941      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:39.813460 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:40.084770      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:41.084898      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:41.815578 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:42.085871      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:43.085952      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:43.817447 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:44.086774      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:45.086857      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:45.819319 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:46.087613      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:47.087920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:47.821454 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:48.088739      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:49.088864      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:49.823272 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:50.089564      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:51.089687      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:51.825524 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:52.089771      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:53.089897      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:53.827466 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:54.090748      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:55.090857      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:55.829375 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:56.091702      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:57.091757      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:57.831329 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:48:58.092606      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:48:59.092694      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:48:59.833100 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:49:00.093414      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:01.093546      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:01.835894 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:49:02.094183      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:03.094265      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:03.837808 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  E1112 14:49:04.095117      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:05.095198      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:05.839766 22 container_probe.go:1759] Get pod liveness-908814ce-2726-4508-a8b0-cf80fe93a99b in namespace container-probe-7193
  I1112 14:49:05.839796 22 container_probe.go:1763] Restart count of pod container-probe-7193/liveness-908814ce-2726-4508-a8b0-cf80fe93a99b is now 5 (2m28.152448139s elapsed)
  STEP: deleting the pod @ 11/12/24 14:49:05.839
  I1112 14:49:05.845366 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7193" for this suite. @ 11/12/24 14:49:05.846
• [150.179 seconds]
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 11/12/24 14:49:05.849
  I1112 14:49:05.849122 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:49:05.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:05.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:05.856
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:49:05.858
  E1112 14:49:06.095966      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:07.096033      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:49:07.865
  I1112 14:49:07.866593 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-ed2d08f7-e351-44d1-8d06-6f5f210c78ea container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:49:07.882
  I1112 14:49:07.888245 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9665" for this suite. @ 11/12/24 14:49:07.889
• [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 11/12/24 14:49:07.891
  I1112 14:49:07.891929 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename field-validation @ 11/12/24 14:49:07.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:07.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:07.899
  STEP: apply creating a deployment @ 11/12/24 14:49:07.901
  I1112 14:49:07.905580 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9828" for this suite. @ 11/12/24 14:49:07.99
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 11/12/24 14:49:07.992
  I1112 14:49:07.992500 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 14:49:07.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:08.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:08.003
  I1112 14:49:08.004382 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: creating the pod @ 11/12/24 14:49:08.004
  STEP: submitting the pod to kubernetes @ 11/12/24 14:49:08.004
  E1112 14:49:08.096861      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:09.097831      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:10.017451 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8273" for this suite. @ 11/12/24 14:49:10.018
• [2.029 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 11/12/24 14:49:10.021
  I1112 14:49:10.021680 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename discovery @ 11/12/24 14:49:10.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:10.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:10.03
  STEP: Setting up server cert @ 11/12/24 14:49:10.032
  E1112 14:49:10.098333      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:10.234903 22 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1112 14:49:10.235431 22 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1112 14:49:10.235450 22 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1112 14:49:10.235457 22 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1112 14:49:10.235465 22 discovery.go:139] Checking APIGroup: apps
  I1112 14:49:10.235896 22 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1112 14:49:10.235913 22 discovery.go:148] Versions found [{apps/v1 v1}]
  I1112 14:49:10.235919 22 discovery.go:154] apps/v1 matches apps/v1
  I1112 14:49:10.235928 22 discovery.go:139] Checking APIGroup: events.k8s.io
  I1112 14:49:10.236343 22 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1112 14:49:10.236357 22 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1112 14:49:10.236365 22 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1112 14:49:10.236373 22 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1112 14:49:10.236762 22 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1112 14:49:10.236781 22 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1112 14:49:10.236786 22 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1112 14:49:10.236794 22 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1112 14:49:10.237216 22 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1112 14:49:10.237231 22 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1112 14:49:10.237236 22 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1112 14:49:10.237243 22 discovery.go:139] Checking APIGroup: autoscaling
  I1112 14:49:10.237658 22 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1112 14:49:10.237675 22 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1112 14:49:10.237682 22 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1112 14:49:10.237689 22 discovery.go:139] Checking APIGroup: batch
  I1112 14:49:10.238079 22 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1112 14:49:10.238091 22 discovery.go:148] Versions found [{batch/v1 v1}]
  I1112 14:49:10.238099 22 discovery.go:154] batch/v1 matches batch/v1
  I1112 14:49:10.238114 22 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1112 14:49:10.238504 22 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1112 14:49:10.238518 22 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1112 14:49:10.238525 22 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1112 14:49:10.238533 22 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1112 14:49:10.238935 22 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1112 14:49:10.238951 22 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1112 14:49:10.238960 22 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1112 14:49:10.238967 22 discovery.go:139] Checking APIGroup: policy
  I1112 14:49:10.239348 22 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1112 14:49:10.239357 22 discovery.go:148] Versions found [{policy/v1 v1}]
  I1112 14:49:10.239362 22 discovery.go:154] policy/v1 matches policy/v1
  I1112 14:49:10.239370 22 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1112 14:49:10.239719 22 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1112 14:49:10.239729 22 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1112 14:49:10.239733 22 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1112 14:49:10.239744 22 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1112 14:49:10.240130 22 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1112 14:49:10.240144 22 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1112 14:49:10.240151 22 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1112 14:49:10.240158 22 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1112 14:49:10.240521 22 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1112 14:49:10.240532 22 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1112 14:49:10.240538 22 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1112 14:49:10.240546 22 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1112 14:49:10.240925 22 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1112 14:49:10.240936 22 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1112 14:49:10.240942 22 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1112 14:49:10.240949 22 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1112 14:49:10.241326 22 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1112 14:49:10.241341 22 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1112 14:49:10.241348 22 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1112 14:49:10.241356 22 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1112 14:49:10.241741 22 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1112 14:49:10.241752 22 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1112 14:49:10.241756 22 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1112 14:49:10.241762 22 discovery.go:139] Checking APIGroup: node.k8s.io
  I1112 14:49:10.242171 22 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1112 14:49:10.242183 22 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1112 14:49:10.242189 22 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1112 14:49:10.242196 22 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1112 14:49:10.242593 22 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1112 14:49:10.242617 22 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1112 14:49:10.242624 22 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1112 14:49:10.242632 22 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1112 14:49:10.243043 22 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1112 14:49:10.243057 22 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1112 14:49:10.243064 22 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1112 14:49:10.243071 22 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1112 14:49:10.243461 22 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1112 14:49:10.243474 22 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1112 14:49:10.243479 22 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1112 14:49:10.243553 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5311" for this suite. @ 11/12/24 14:49:10.245
• [0.226 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 11/12/24 14:49:10.247
  I1112 14:49:10.247478 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:49:10.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:10.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:10.255
  STEP: creating service in namespace services-9607 @ 11/12/24 14:49:10.257
  STEP: creating service affinity-nodeport-transition in namespace services-9607 @ 11/12/24 14:49:10.257
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9607 @ 11/12/24 14:49:10.263
  I1112 14:49:10.268053      22 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-9607, replica count: 3
  E1112 14:49:11.099198      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:12.100173      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:13.100468      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:13.319820      22 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 14:49:13.324180 22 resource.go:361] Creating new exec pod
  E1112 14:49:14.101210      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:15.101425      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:16.101519      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:16.332897 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-9607 exec execpod-affinitywbkq4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1112 14:49:16.404147 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1112 14:49:16.404178 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:49:16.404241 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-9607 exec execpod-affinitywbkq4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.243.61 80'
  I1112 14:49:16.470907 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.243.61 80\nConnection to 10.68.243.61 80 port [tcp/http] succeeded!\n"
  I1112 14:49:16.470941 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:49:16.471011 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-9607 exec execpod-affinitywbkq4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 31413'
  I1112 14:49:16.545730 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 31413\nConnection to 10.255.0.207 31413 port [tcp/*] succeeded!\n"
  I1112 14:49:16.545767 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:49:16.545842 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-9607 exec execpod-affinitywbkq4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31413'
  I1112 14:49:16.613795 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 31413\nConnection to 10.255.0.208 31413 port [tcp/*] succeeded!\n"
  I1112 14:49:16.613830 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:49:16.618096 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-9607 exec execpod-affinitywbkq4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.255.0.206:31413/ ; done'
  I1112 14:49:16.733604 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n"
  I1112 14:49:16.733644 22 builder.go:147] stdout: "\naffinity-nodeport-transition-9km5c\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-wbf9q\naffinity-nodeport-transition-9km5c\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-wbf9q\naffinity-nodeport-transition-9km5c\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-wbf9q\naffinity-nodeport-transition-9km5c\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-wbf9q\naffinity-nodeport-transition-9km5c\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-wbf9q\naffinity-nodeport-transition-9km5c"
  I1112 14:49:16.733658 22 service.go:242] Received response from host: affinity-nodeport-transition-9km5c
  I1112 14:49:16.733669 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.733678 22 service.go:242] Received response from host: affinity-nodeport-transition-wbf9q
  I1112 14:49:16.733744 22 service.go:242] Received response from host: affinity-nodeport-transition-9km5c
  I1112 14:49:16.733754 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.733767 22 service.go:242] Received response from host: affinity-nodeport-transition-wbf9q
  I1112 14:49:16.733775 22 service.go:242] Received response from host: affinity-nodeport-transition-9km5c
  I1112 14:49:16.733784 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.733794 22 service.go:242] Received response from host: affinity-nodeport-transition-wbf9q
  I1112 14:49:16.733802 22 service.go:242] Received response from host: affinity-nodeport-transition-9km5c
  I1112 14:49:16.733809 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.733818 22 service.go:242] Received response from host: affinity-nodeport-transition-wbf9q
  I1112 14:49:16.733827 22 service.go:242] Received response from host: affinity-nodeport-transition-9km5c
  I1112 14:49:16.733836 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.733844 22 service.go:242] Received response from host: affinity-nodeport-transition-wbf9q
  I1112 14:49:16.733851 22 service.go:242] Received response from host: affinity-nodeport-transition-9km5c
  I1112 14:49:16.737665 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-9607 exec execpod-affinitywbkq4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.255.0.206:31413/ ; done'
  I1112 14:49:16.850893 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31413/\n"
  I1112 14:49:16.850937 22 builder.go:147] stdout: "\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl\naffinity-nodeport-transition-25rcl"
  I1112 14:49:16.850951 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.850959 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.850965 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.850973 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.850978 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.850983 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.850987 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.850992 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.850997 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.851001 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.851006 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.851012 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.851016 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.851021 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.851025 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.851030 22 service.go:242] Received response from host: affinity-nodeport-transition-25rcl
  I1112 14:49:16.851079 22 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9607, will wait for the garbage collector to delete the pods @ 11/12/24 14:49:16.856
  I1112 14:49:16.911567 22 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 2.714527ms
  I1112 14:49:17.011813 22 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.244472ms
  E1112 14:49:17.102053      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:18.102080      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:19.102120      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:19.922525 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9607" for this suite. @ 11/12/24 14:49:19.924
• [9.680 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 11/12/24 14:49:19.927
  I1112 14:49:19.927465 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:49:19.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:19.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:19.941
  STEP: Creating projection with secret that has name projected-secret-test-map-2fca39c8-372d-4125-8250-e8cc32b86df5 @ 11/12/24 14:49:19.942
  STEP: Creating a pod to test consume secrets @ 11/12/24 14:49:19.944
  E1112 14:49:20.102315      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:21.102575      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:49:21.952
  I1112 14:49:21.953358 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-secrets-9ba99610-2093-466d-a0e9-40f5ffd9e0b6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:49:21.955
  I1112 14:49:21.962640 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3347" for this suite. @ 11/12/24 14:49:21.964
• [2.039 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 11/12/24 14:49:21.966
  I1112 14:49:21.966368 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:49:21.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:21.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:21.973
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:49:21.974
  E1112 14:49:22.103165      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:23.104169      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:49:23.982
  I1112 14:49:23.983277 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-239b82bd-f272-4712-ae86-b350a29a302f container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:49:23.985
  I1112 14:49:23.992426 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1847" for this suite. @ 11/12/24 14:49:23.993
• [2.029 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 11/12/24 14:49:23.995
  I1112 14:49:23.995798 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/12/24 14:49:23.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:24.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:24.003
  STEP: creating a target pod @ 11/12/24 14:49:24.004
  E1112 14:49:24.104988      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:25.105003      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/12/24 14:49:26.011
  E1112 14:49:26.105437      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:27.106165      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/12/24 14:49:28.022
  I1112 14:49:28.022604 22 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6029 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:49:28.022617 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:49:28.022997 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:49:28.023036 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-6029/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1112 14:49:28.050516 22 exec_util.go:111] Exec stderr: ""
  I1112 14:49:28.053202 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6029" for this suite. @ 11/12/24 14:49:28.054
• [4.062 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 11/12/24 14:49:28.058
  I1112 14:49:28.058017 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename containers @ 11/12/24 14:49:28.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:28.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:28.066
  STEP: Creating a pod to test override arguments @ 11/12/24 14:49:28.067
  E1112 14:49:28.106930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:29.107338      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:49:30.073
  I1112 14:49:30.074973 22 output.go:196] Trying to get logs from node worker01 pod client-containers-3cdb06c5-5cfc-41b9-b13d-ed794df43142 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:49:30.077
  I1112 14:49:30.083682 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8488" for this suite. @ 11/12/24 14:49:30.085
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 11/12/24 14:49:30.087
  I1112 14:49:30.087514 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:49:30.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:30.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:30.095
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:49:30.097
  E1112 14:49:30.107508      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:31.108254      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:49:32.104
  I1112 14:49:32.105854 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-c2effb5d-ca59-4e1c-bcc1-573632df1baf container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:49:32.108
  E1112 14:49:32.108386      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:32.114386 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1673" for this suite. @ 11/12/24 14:49:32.115
• [2.030 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 11/12/24 14:49:32.117
  I1112 14:49:32.117926 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename runtimeclass @ 11/12/24 14:49:32.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:32.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:32.127
  E1112 14:49:33.109130      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:34.109151      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:34.139701 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1156" for this suite. @ 11/12/24 14:49:34.141
• [2.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 11/12/24 14:49:34.144
  I1112 14:49:34.144658 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:49:34.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:34.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:34.153
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3402 @ 11/12/24 14:49:34.154
  STEP: changing the ExternalName service to type=NodePort @ 11/12/24 14:49:34.156
  STEP: creating replication controller externalname-service in namespace services-3402 @ 11/12/24 14:49:34.164
  I1112 14:49:34.167803      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3402, replica count: 2
  E1112 14:49:35.109807      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:36.110038      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:37.110123      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:37.219407      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 14:49:37.219435 22 resource.go:361] Creating new exec pod
  E1112 14:49:38.111046      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:39.111935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:40.112037      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:40.231308 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-3402 exec execpoddkkdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1112 14:49:40.300891 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1112 14:49:40.300922 22 builder.go:147] stdout: ""
  E1112 14:49:41.112803      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:41.232040 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-3402 exec execpoddkkdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1112 14:49:41.300285 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1112 14:49:41.300319 22 builder.go:147] stdout: "externalname-service-wg7dx"
  I1112 14:49:41.300377 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-3402 exec execpoddkkdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.154.211 80'
  I1112 14:49:41.366024 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.154.211 80\nConnection to 10.68.154.211 80 port [tcp/http] succeeded!\n"
  I1112 14:49:41.366058 22 builder.go:147] stdout: "externalname-service-psnrw"
  I1112 14:49:41.366124 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-3402 exec execpoddkkdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 31420'
  I1112 14:49:41.435403 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 31420\nConnection to 10.255.0.207 31420 port [tcp/*] succeeded!\n"
  I1112 14:49:41.435433 22 builder.go:147] stdout: "externalname-service-psnrw"
  I1112 14:49:41.435497 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-3402 exec execpoddkkdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31420'
  I1112 14:49:41.502683 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 31420\nConnection to 10.255.0.208 31420 port [tcp/*] succeeded!\n"
  I1112 14:49:41.502716 22 builder.go:147] stdout: ""
  E1112 14:49:42.112877      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:42.436425 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-3402 exec execpoddkkdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31420'
  I1112 14:49:42.504215 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 31420\nConnection to 10.255.0.208 31420 port [tcp/*] succeeded!\n"
  I1112 14:49:42.504249 22 builder.go:147] stdout: "externalname-service-wg7dx"
  I1112 14:49:42.504313 22 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1112 14:49:42.513852 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3402" for this suite. @ 11/12/24 14:49:42.515
• [8.374 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 11/12/24 14:49:42.518
  I1112 14:49:42.518971 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replication-controller @ 11/12/24 14:49:42.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:42.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:42.528
  STEP: Creating replication controller my-hostname-basic-e0a2a2e2-2a44-4efa-af29-084d19e23bb2 @ 11/12/24 14:49:42.53
  I1112 14:49:42.534313 22 resource.go:87] Pod name my-hostname-basic-e0a2a2e2-2a44-4efa-af29-084d19e23bb2: Found 0 pods out of 1
  E1112 14:49:43.112957      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:44.113908      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:45.114196      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:46.114301      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:47.114406      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:47.537793 22 resource.go:87] Pod name my-hostname-basic-e0a2a2e2-2a44-4efa-af29-084d19e23bb2: Found 1 pods out of 1
  I1112 14:49:47.537826 22 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-e0a2a2e2-2a44-4efa-af29-084d19e23bb2" are running
  I1112 14:49:47.540359 22 rc.go:523] Pod "my-hostname-basic-e0a2a2e2-2a44-4efa-af29-084d19e23bb2-xpx89" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:49:43 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:49:42 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:49:43 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:49:43 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-12 14:49:42 +0000 UTC Reason: Message:}])
  I1112 14:49:47.540385 22 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/12/24 14:49:47.54
  I1112 14:49:47.633921 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4943" for this suite. @ 11/12/24 14:49:47.635
• [5.119 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 11/12/24 14:49:47.638
  I1112 14:49:47.638054 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:49:47.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:47.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:47.646
  STEP: validating cluster-info @ 11/12/24 14:49:47.648
  I1112 14:49:47.648364 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8756 cluster-info'
  I1112 14:49:47.687369 22 builder.go:146] stderr: ""
  I1112 14:49:47.687397 22 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.68.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1112 14:49:47.687486 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8756" for this suite. @ 11/12/24 14:49:47.736
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 11/12/24 14:49:47.739
  I1112 14:49:47.739244 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:49:47.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:47.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:47.75
  STEP: validating api versions @ 11/12/24 14:49:47.751
  I1112 14:49:47.751897 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-7515 api-versions'
  I1112 14:49:47.790355 22 builder.go:146] stderr: ""
  I1112 14:49:47.790387 22 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1112 14:49:47.790478 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7515" for this suite. @ 11/12/24 14:49:47.837
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 11/12/24 14:49:47.839
  I1112 14:49:47.839719 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename var-expansion @ 11/12/24 14:49:47.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:49:47.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:49:47.848
  STEP: creating the pod @ 11/12/24 14:49:47.849
  STEP: waiting for pod running @ 11/12/24 14:49:47.854
  E1112 14:49:48.114770      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:49.114865      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 11/12/24 14:49:49.857
  I1112 14:49:49.858633 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8806 PodName:var-expansion-fd9bfd28-6cb4-4297-a27a-1ba866926863 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:49:49.858655 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:49:49.859040 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:49:49.859086 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-8806/pods/var-expansion-fd9bfd28-6cb4-4297-a27a-1ba866926863/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 11/12/24 14:49:49.886
  I1112 14:49:49.887556 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8806 PodName:var-expansion-fd9bfd28-6cb4-4297-a27a-1ba866926863 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 14:49:49.887576 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 14:49:49.887909 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 14:49:49.887944 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-8806/pods/var-expansion-fd9bfd28-6cb4-4297-a27a-1ba866926863/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 11/12/24 14:49:49.914
  E1112 14:49:50.115366      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:49:50.421266 22 pod_client.go:173] Successfully updated pod "var-expansion-fd9bfd28-6cb4-4297-a27a-1ba866926863"
  STEP: waiting for annotated pod running @ 11/12/24 14:49:50.421
  STEP: deleting the pod gracefully @ 11/12/24 14:49:50.422
  I1112 14:49:50.422552 22 delete.go:62] Deleting pod "var-expansion-fd9bfd28-6cb4-4297-a27a-1ba866926863" in namespace "var-expansion-8806"
  I1112 14:49:50.425539 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-fd9bfd28-6cb4-4297-a27a-1ba866926863" to be fully deleted
  E1112 14:49:51.115475      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:52.115932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:53.116340      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:54.116476      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:55.117133      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:56.117262      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:57.117309      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:58.117578      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:49:59.118600      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:00.119655      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:01.119936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:02.120039      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:03.120854      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:04.120990      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:05.121235      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:06.121253      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:07.121560      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:08.122253      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:09.122860      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:10.123920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:11.124210      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:12.124344      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:13.125261      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:14.125342      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:15.126330      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:16.126419      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:17.127377      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:18.127463      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:19.127911      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:20.128415      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:21.129070      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:22.129713      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:50:22.459796 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8806" for this suite. @ 11/12/24 14:50:22.461
• [34.624 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 11/12/24 14:50:22.463
  I1112 14:50:22.463795 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/12/24 14:50:22.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:50:22.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:50:22.472
  I1112 14:50:22.473764 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 14:50:23.130227      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:24.130423      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:25.130860      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:50:25.499077 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1254" for this suite. @ 11/12/24 14:50:25.5
• [3.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 11/12/24 14:50:25.503
  I1112 14:50:25.503591 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename deployment @ 11/12/24 14:50:25.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:50:25.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:50:25.511
  I1112 14:50:25.512804 22 deployment.go:1196] Creating deployment "webserver-deployment"
  I1112 14:50:25.514844 22 deployment.go:1200] Waiting for observed generation 1
  E1112 14:50:26.131760      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:27.131909      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:50:27.518357 22 deployment.go:1205] Waiting for all required pods to come up
  I1112 14:50:27.581313 22 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 11/12/24 14:50:27.581
  E1112 14:50:28.131993      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:29.133004      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:50:29.585255 22 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1112 14:50:29.587531 22 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1112 14:50:29.591918 22 deployment.go:313] Updating deployment webserver-deployment
  I1112 14:50:29.591943 22 deployment.go:1224] Waiting for observed generation 2
  E1112 14:50:30.133539      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:31.133676      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:50:31.594571 22 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1112 14:50:31.595974 22 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1112 14:50:31.597186 22 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1112 14:50:31.601150 22 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1112 14:50:31.601171 22 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1112 14:50:31.602083 22 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1112 14:50:31.603861 22 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1112 14:50:31.603880 22 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1112 14:50:31.608972 22 deployment.go:313] Updating deployment webserver-deployment
  I1112 14:50:31.608998 22 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1112 14:50:31.611171 22 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1112 14:50:31.612300 22 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  E1112 14:50:32.134036      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:33.134098      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:50:33.615978 22 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92a2a823-b85d-4f69-aeed-9176c365579f",
      ResourceVersion: (string) (len=5) "34676",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1112 14:50:33.618141 22 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
      ResourceVersion: (string) (len=5) "34490",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "92a2a823-b85d-4f69-aeed-9176c365579f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 61 32 61 38  32 33 2d 62 38 35 64 2d  |\"92a2a823-b85d-|
              00000120  34 66 36 39 2d 61 65 65  64 2d 39 31 37 36 63 33  |4f69-aeed-9176c3|
              00000130  36 35 35 37 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |65579f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 14:50:33.618750 22 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1112 14:50:33.618980 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
      ResourceVersion: (string) (len=5) "34675",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "92a2a823-b85d-4f69-aeed-9176c365579f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 61 32 61 38  32 33 2d 62 38 35 64 2d  |\"92a2a823-b85d-|
              00000120  34 66 36 39 2d 61 65 65  64 2d 39 31 37 36 63 33  |4f69-aeed-9176c3|
              00000130  36 35 35 37 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |65579f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 14:50:33.622948 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-2zkch" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-2zkch",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f471db9-c5e1-4192-b608-4feefdedefd0",
      ResourceVersion: (string) (len=5) "34319",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 34 31  2e 31 30 35 5c 22 7d 22  |2.20.241.105\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-phfcl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-phfcl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=14) "172.20.241.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.241.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019827,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2030c736124768dd7ced4cce03e327b133f127927d51b3fb82707a833965889a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-phfcl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.624399 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-44xz7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-44xz7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aef1b35a-59da-4462-b6d7-9b358ca7278b",
      ResourceVersion: (string) (len=5) "34636",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 34 31  2e 37 39 5c 22 7d 22 3a  |2.20.241.79\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5ftp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5ftp5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.241.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.241.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dba3ecd39ae2ec8313e19a81ab122aeca5feb0caf7e2bb249b2667824f551d99",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5ftp5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.625815 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8qlkl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8qlkl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "faccc9bb-9c6c-45fc-97c9-11c9233beb11",
      ResourceVersion: (string) (len=5) "34670",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 33 30 2e  31 30 34 5c 22 7d 22 3a  |2.20.30.104\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qfnkj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qfnkj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.30.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.30.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3c4212b19a2928e1bfef210f6f8fd6281b0681f13cc597eea250c6595d7171de",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qfnkj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.627233 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bbzb6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bbzb6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c275224-6790-4fa7-b0a2-d5567d5efe6f",
      ResourceVersion: (string) (len=5) "34638",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 34 31  2e 31 31 33 5c 22 7d 22  |2.20.241.113\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zf45k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zf45k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=14) "172.20.241.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.241.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f9e21a3ae54d7384fea964abf4fe26cd9ed828b6863cf7e9cad6dc320823c78a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zf45k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.628658 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cj4bt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cj4bt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5cdab3f7-3e96-4bc7-aaca-f68ccbbd1e7c",
      ResourceVersion: (string) (len=5) "34313",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 34 31  2e 31 31 34 5c 22 7d 22  |2.20.241.114\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tcdlj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tcdlj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=14) "172.20.241.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.241.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019827,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7a367f5a7a08736e5e272ea6b4a4784367fdeefd61e810f5e1eb3d7011e02aac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tcdlj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.630059 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-f8k5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-f8k5d",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab83430d-ab12-44ec-a7ed-870b14990ced",
      ResourceVersion: (string) (len=5) "34287",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 33 30 2e  37 32 5c 22 7d 22 3a 7b  |2.20.30.72\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-74x2z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-74x2z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=12) "172.20.30.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.30.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7cecb395efb07bbe4792a4c00d176744ff201603ff0111712d1c09c50a3afde9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-74x2z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.631457 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fjbx5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fjbx5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7386200a-5c5d-4097-b510-3757e40db545",
      ResourceVersion: (string) (len=5) "34642",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 34 31  2e 31 30 33 5c 22 7d 22  |2.20.241.103\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mrmj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mrmj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=14) "172.20.241.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.241.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0a5463e30f54173ab657f56dd848fb4e31827dc2b3bc4f022dfb73f082511133",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7mrmj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.632857 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hdxvd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hdxvd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ffbe593-7ca1-4838-b799-42592be507c8",
      ResourceVersion: (string) (len=5) "34315",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 34 31  2e 31 31 38 5c 22 7d 22  |2.20.241.118\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5wl57",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5wl57",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=14) "172.20.241.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.241.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019827,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://35e2b235b0205240b3aafacb2167cc749fbec770879e04a5e6b054744b1f65ae",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5wl57",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.634354 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hggs6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hggs6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91f3a441-6bff-4b07-8cdd-bc6291879bb0",
      ResourceVersion: (string) (len=5) "34650",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 31  31 5c 22 7d 22 3a 7b 22  |2.20.5.11\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jcjm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jcjm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fe1e5e3a05064c61fa1d88aed7d59715ce29b364aae0ed753c083f71a1953433",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7jcjm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.635762 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-jmk74" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jmk74",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f78e9d4-3a50-4c65-9bda-95b8cf2584c1",
      ResourceVersion: (string) (len=5) "34645",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 34 31  2e 39 31 5c 22 7d 22 3a  |2.20.241.91\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n9ldb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n9ldb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.241.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.241.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5a8e93be9c3b2218ac9fedd4e5d0f86c4f6d5ae0254041de098a5aa20f024181",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n9ldb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.637187 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-jt4pp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jt4pp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2765a9e1-6359-4bb2-8ef7-6c6aa18e2b1b",
      ResourceVersion: (string) (len=5) "34264",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 32  39 5c 22 7d 22 3a 7b 22  |2.20.5.29\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ccf8s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ccf8s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://00fedd2fec0359f869c7ae481f1f26a2856b2b56ce41e73d41f22723d1ec4600",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ccf8s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.638739 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kpfcr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kpfcr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cefba248-fb0e-4948-a566-b053231d85ed",
      ResourceVersion: (string) (len=5) "34658",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 34  38 5c 22 7d 22 3a 7b 22  |2.20.5.48\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jldph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jldph",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dfe756626a8418abf9c9563307d3ba080c9334b5263cc60e998740a0fce62ba6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jldph",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.640237 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-l464z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-l464z",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb06c795-f792-4ffe-9088-6ee4b74eff0a",
      ResourceVersion: (string) (len=5) "34661",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 35  32 5c 22 7d 22 3a 7b 22  |2.20.5.52\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ffl4z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ffl4z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://db2abdb4a6867ed069188e92308704fa0b0bf54f259ae8fbb99931c4dc95c09f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ffl4z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.641639 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-lrj2n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lrj2n",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbc24d80-4e6a-4a12-87cb-f449e167cd4f",
      ResourceVersion: (string) (len=5) "34284",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 33 30 2e  38 34 5c 22 7d 22 3a 7b  |2.20.30.84\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sr6jq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sr6jq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=12) "172.20.30.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.30.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1be027b7418ed895f4777c0bdf38bf57b9dce4d0a7b80161634bceea58ddb113",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sr6jq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.643007 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-plzcv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-plzcv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0e009f3-c08a-4002-a9ee-4705f31e057e",
      ResourceVersion: (string) (len=5) "34281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 33 30 2e  39 35 5c 22 7d 22 3a 7b  |2.20.30.95\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jsx7k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jsx7k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=12) "172.20.30.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.30.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ccae1319ff216132a3ee157ffde0d00d030bcfd0ed1c05b05d9beea784da1fdd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jsx7k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.644377 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rljpf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rljpf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "929a2e0e-f3f5-4ffe-8386-5b933610c1ed",
      ResourceVersion: (string) (len=5) "34673",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 33 30 2e  37 39 5c 22 7d 22 3a 7b  |2.20.30.79\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7f9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7f9c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=12) "172.20.30.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.30.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cb66b0c3807b96d578ad26b224b6217951d0725435a6f0d9da8da456ff73fb4d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k7f9c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.645727 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rwhvf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rwhvf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d724158c-bd3e-4a4d-bf40-74af3bcee8c5",
      ResourceVersion: (string) (len=5) "34648",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 34  5c 22 7d 22 3a 7b 22 2e  |2.20.5.4\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-69cls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-69cls",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=10) "172.20.5.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "172.20.5.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9d3c99ecaca8ca7364079d5820ecfec2907c4304fc1d4cb4d25d44e4379a08d7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-69cls",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.647077 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ssz79" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ssz79",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5aa8e57-ffe5-477b-962d-0d5dcb5590d4",
      ResourceVersion: (string) (len=5) "34654",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 34  35 5c 22 7d 22 3a 7b 22  |2.20.5.45\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nkkvw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nkkvw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0bb6344d5119a7074dd7247619db871f1f125378c17f137aede822d3b52044f4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nkkvw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.648690 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-tgb2r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-tgb2r",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a39ae1c-1cc1-4a70-9f58-423139a37d7c",
      ResourceVersion: (string) (len=5) "34668",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 33 30 2e  39 30 5c 22 7d 22 3a 7b  |2.20.30.90\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jrdcp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jrdcp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=12) "172.20.30.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.30.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019832,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fb539b201b47aa292296175b5caa1f08d20053dfb8cee4271b237dfa100bf907",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jrdcp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.650049 22 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zfsck" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zfsck",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3283aee8-5364-4e49-badc-8790a68795d1",
      ResourceVersion: (string) (len=5) "34259",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "4b029030-b60b-4d90-992e-aaa37735a63a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  30 32 39 30 33 30 2d 62  |d\":\"4b029030-b|
              00000090  36 30 62 2d 34 64 39 30  2d 39 39 32 65 2d 61 61  |60b-4d90-992e-aa|
              000000a0  61 33 37 37 33 35 61 36  33 61 5c 22 7d 22 3a 7b  |a37735a63a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 39  5c 22 7d 22 3a 7b 22 2e  |2.20.5.9\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lnsjv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lnsjv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=10) "172.20.5.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "172.20.5.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867019826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c7bdeb11c988e49edc835f7c7972c5dfabd08d7be7296399c1568bbbcb9c6b50",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lnsjv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.651590 22 deployment.go:67] Pod "webserver-deployment-786f49d774-2txbk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2txbk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ecd8f63d-7a33-4635-831a-cc249e859050",
      ResourceVersion: (string) (len=5) "34541",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 33 30 2e 39 38 5c  22 7d 22 3a 7b 22 2e 22  |0.30.98\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wp4gq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wp4gq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=12) "172.20.30.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.30.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wp4gq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.652983 22 deployment.go:67] Pod "webserver-deployment-786f49d774-4426v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-4426v",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "370f78c6-09f2-4199-acb5-41223e7aaee5",
      ResourceVersion: (string) (len=5) "34543",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 33 30 2e 37 34 5c  22 7d 22 3a 7b 22 2e 22  |0.30.74\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d67hp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d67hp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=12) "172.20.30.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.30.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d67hp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.654324 22 deployment.go:67] Pod "webserver-deployment-786f49d774-822cx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-822cx",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8442f10d-a64f-4c31-9a00-a81d544e970f",
      ResourceVersion: (string) (len=5) "34533",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 35 2e 32 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |0.5.20\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tsmnq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tsmnq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tsmnq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.655664 22 deployment.go:67] Pod "webserver-deployment-786f49d774-9p7rl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-9p7rl",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f0d0d96-a271-4f34-9d8e-d30ce620ed41",
      ResourceVersion: (string) (len=5) "34514",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mffvr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mffvr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mffvr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.656970 22 deployment.go:67] Pod "webserver-deployment-786f49d774-bclcn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-bclcn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b15874e6-0ba4-4c32-a946-6de5f8d3e424",
      ResourceVersion: (string) (len=5) "34521",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p8lj5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p8lj5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p8lj5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.658273 22 deployment.go:67] Pod "webserver-deployment-786f49d774-gkc2r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-gkc2r",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb9feb01-a8a9-40b8-81b4-5307da321aa7",
      ResourceVersion: (string) (len=5) "34451",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dndsc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dndsc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dndsc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.659590 22 deployment.go:67] Pod "webserver-deployment-786f49d774-n75mg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-n75mg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fcb0d65-dadd-4919-83b3-61888c61d056",
      ResourceVersion: (string) (len=5) "34491",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zg5sb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zg5sb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zg5sb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.660887 22 deployment.go:67] Pod "webserver-deployment-786f49d774-sqhch" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-sqhch",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d2978ab-a55c-4366-b7b1-8baa4143bd42",
      ResourceVersion: (string) (len=5) "34486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vs9j9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vs9j9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vs9j9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.662183 22 deployment.go:67] Pod "webserver-deployment-786f49d774-t8t2c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-t8t2c",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b7fc24b-6b03-4527-ac99-b8dae492c7ef",
      ResourceVersion: (string) (len=5) "34513",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k6pv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k6pv5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k6pv5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.663467 22 deployment.go:67] Pod "webserver-deployment-786f49d774-v9hp5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-v9hp5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98f51c71-6359-4f99-8b16-2e3e2ec7b759",
      ResourceVersion: (string) (len=5) "34501",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2zf9h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2zf9h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2zf9h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.664791 22 deployment.go:67] Pod "webserver-deployment-786f49d774-x2fzz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-x2fzz",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae68e7a6-0a53-408c-a58a-fb2264428b8b",
      ResourceVersion: (string) (len=5) "34530",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 35 2e 32 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |0.5.26\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nkq4x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nkq4x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nkq4x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.666137 22 deployment.go:67] Pod "webserver-deployment-786f49d774-xcbdk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xcbdk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c40cc11f-cbba-4f5f-be5c-c6100c561612",
      ResourceVersion: (string) (len=5) "34518",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 32 34 31 2e 31 31  35 5c 22 7d 22 3a 7b 22  |0.241.115\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4882g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4882g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=14) "172.20.241.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.241.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4882g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.667463 22 deployment.go:67] Pod "webserver-deployment-786f49d774-xg4n8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xg4n8",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=14) "deployment-931",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "832a58fb-5249-40b8-b5de-217f7fb9155d",
      ResourceVersion: (string) (len=5) "34489",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "6059596c-8936-4018-b80e-0021d4cd2471",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 39 35 39 36 63 2d 38  |d\":\"6059596c-8|
              00000090  39 33 36 2d 34 30 31 38  2d 62 38 30 65 2d 30 30  |936-4018-b80e-00|
              000000a0  32 31 64 34 63 64 32 34  37 31 5c 22 7d 22 3a 7b  |21d4cd2471\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5w8v8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5w8v8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867019831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867019831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5w8v8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:50:33.668592 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-931" for this suite. @ 11/12/24 14:50:33.671
• [8.170 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 11/12/24 14:50:33.674
  I1112 14:50:33.674081 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-preemption @ 11/12/24 14:50:33.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:50:33.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:50:33.684
  I1112 14:50:33.691513 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1112 14:50:34.134353      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:35.134405      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:36.134480      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:37.134743      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:38.134883      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:39.137055      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:40.137977      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:41.138041      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:42.138512      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:43.138638      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:44.138747      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:45.138863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:46.139699      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:47.139928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:48.140471      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:49.140553      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:50.140643      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:51.141630      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:52.141891      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:53.142021      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:54.142240      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:55.142507      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:56.143453      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:57.143920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:58.144652      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:50:59.144776      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:00.144860      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:01.144987      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:02.145581      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:03.145712      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:04.146306      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:05.146389      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:06.146733      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:07.146851      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:08.147547      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:09.147924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:10.148324      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:11.148411      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:12.148765      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:13.148891      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:14.149011      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:15.149208      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:16.149952      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:17.150083      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:18.150396      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:19.150774      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:20.151611      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:21.152244      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:22.152862      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:23.153178      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:24.153742      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:25.153823      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:26.154213      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:27.154343      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:28.154693      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:29.154959      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:30.155337      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:31.155925      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:32.156522      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:33.156643      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:51:33.693886 22 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/12/24 14:51:33.695
  I1112 14:51:33.695276 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/12/24 14:51:33.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:51:33.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:51:33.704
  STEP: Finding an available node @ 11/12/24 14:51:33.705
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/12/24 14:51:33.705
  E1112 14:51:34.157002      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:35.157156      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/12/24 14:51:35.713
  I1112 14:51:35.718634 22 preemption.go:585] found a healthy node: worker01
  E1112 14:51:36.158053      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:37.158580      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:38.158899      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:39.159540      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:40.160486      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:41.160846      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:51:41.744698 22 preemption.go:708] pods created so far: [1 1 1]
  I1112 14:51:41.744726 22 preemption.go:709] length of pods created so far: 3
  E1112 14:51:42.161738      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:43.162296      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:51:43.749574 22 preemption.go:726] pods created so far: [2 2 1]
  E1112 14:51:44.163360      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:45.163935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:46.164158      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:47.164781      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:48.165790      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:49.166059      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:50.166183      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:51:50.783019 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8037" for this suite. @ 11/12/24 14:51:50.784
  I1112 14:51:50.786319 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2065" for this suite. @ 11/12/24 14:51:50.787
• [77.115 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 11/12/24 14:51:50.789
  I1112 14:51:50.789708 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:51:50.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:51:50.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:51:50.797
  STEP: Setting up server cert @ 11/12/24 14:51:50.897
  E1112 14:51:51.166580      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:51:51.291
  STEP: Deploying the webhook pod @ 11/12/24 14:51:51.295
  STEP: Wait for the deployment to be ready @ 11/12/24 14:51:51.301
  I1112 14:51:51.303775 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1112 14:51:52.166716      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:53.166862      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/12/24 14:51:53.308
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:51:53.313
  E1112 14:51:54.167323      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:51:54.313586 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 11/12/24 14:51:54.316
  I1112 14:51:54.333151 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9584" for this suite. @ 11/12/24 14:51:54.335
  STEP: Destroying namespace "webhook-markers-5539" for this suite. @ 11/12/24 14:51:54.339
• [3.554 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 11/12/24 14:51:54.344
  I1112 14:51:54.344103 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 14:51:54.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:51:54.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:51:54.353
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/12/24 14:51:54.355
  E1112 14:51:55.167426      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:56.167933      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:51:56.363
  I1112 14:51:56.365584 22 output.go:196] Trying to get logs from node worker01 pod pod-153bd2f0-1f11-4e4e-8077-54d54b244be9 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 14:51:56.374
  I1112 14:51:56.379842 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9060" for this suite. @ 11/12/24 14:51:56.381
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 11/12/24 14:51:56.384
  I1112 14:51:56.384302 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:51:56.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:51:56.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:51:56.393
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:51:56.394
  E1112 14:51:57.168841      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:58.168964      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:51:59.169780      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:00.169906      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:52:00.438
  I1112 14:52:00.439457 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-57866b18-2d32-44cd-b6b6-506b56f7a472 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:52:00.441
  I1112 14:52:00.448154 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3278" for this suite. @ 11/12/24 14:52:00.449
• [4.067 seconds]
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 11/12/24 14:52:00.451
  I1112 14:52:00.451671 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:52:00.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:52:00.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:52:00.46
  STEP: creating service in namespace services-6649 @ 11/12/24 14:52:00.461
  STEP: creating service affinity-nodeport in namespace services-6649 @ 11/12/24 14:52:00.461
  STEP: creating replication controller affinity-nodeport in namespace services-6649 @ 11/12/24 14:52:00.467
  I1112 14:52:00.472493      22 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-6649, replica count: 3
  E1112 14:52:01.170869      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:02.171807      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:03.171896      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:52:03.523301      22 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1112 14:52:03.527522 22 resource.go:361] Creating new exec pod
  E1112 14:52:04.172726      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:05.172816      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:06.172844      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:52:06.535226 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-6649 exec execpod-affinitylk79d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1112 14:52:06.605392 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1112 14:52:06.605428 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:52:06.605488 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-6649 exec execpod-affinitylk79d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.5.153 80'
  I1112 14:52:06.672637 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.5.153 80\nConnection to 10.68.5.153 80 port [tcp/http] succeeded!\n"
  I1112 14:52:06.672668 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:52:06.672734 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-6649 exec execpod-affinitylk79d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 31070'
  I1112 14:52:06.739305 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 31070\nConnection to 10.255.0.207 31070 port [tcp/*] succeeded!\n"
  I1112 14:52:06.739339 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:52:06.739410 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-6649 exec execpod-affinitylk79d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31070'
  I1112 14:52:06.805695 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 31070\nConnection to 10.255.0.208 31070 port [tcp/*] succeeded!\n"
  I1112 14:52:06.805736 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1112 14:52:06.805790 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=services-6649 exec execpod-affinitylk79d -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.255.0.206:31070/ ; done'
  I1112 14:52:06.911993 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31070/\n"
  I1112 14:52:06.912044 22 builder.go:147] stdout: "\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm\naffinity-nodeport-z8hbm"
  I1112 14:52:06.912060 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912074 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912083 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912091 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912103 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912114 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912129 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912137 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912147 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912155 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912163 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912171 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912181 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912191 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912199 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912208 22 service.go:242] Received response from host: affinity-nodeport-z8hbm
  I1112 14:52:06.912267 22 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6649, will wait for the garbage collector to delete the pods @ 11/12/24 14:52:06.917
  I1112 14:52:06.971478 22 resources.go:139] Deleting ReplicationController affinity-nodeport took: 2.468196ms
  I1112 14:52:07.072231 22 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.751177ms
  E1112 14:52:07.173422      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:08.173461      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:09.173478      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:10.173504      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:52:10.284017 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6649" for this suite. @ 11/12/24 14:52:10.285
• [9.836 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 11/12/24 14:52:10.288
  I1112 14:52:10.288119 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 14:52:10.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:52:10.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:52:10.297
  STEP: creating the pod @ 11/12/24 14:52:10.299
  STEP: submitting the pod to kubernetes @ 11/12/24 14:52:10.299
  STEP: verifying QOS class is set on the pod @ 11/12/24 14:52:10.303
  I1112 14:52:10.304579 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1117" for this suite. @ 11/12/24 14:52:10.386
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 11/12/24 14:52:10.389
  I1112 14:52:10.389733 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/12/24 14:52:10.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:52:10.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:52:10.396
  I1112 14:52:10.398471 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 14:52:11.174383      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:12.174531      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:13.174600      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:52:13.438815 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8561" for this suite. @ 11/12/24 14:52:13.44
• [3.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 11/12/24 14:52:13.443
  I1112 14:52:13.443330 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:52:13.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:52:13.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:52:13.452
  STEP: creating a collection of services @ 11/12/24 14:52:13.453
  I1112 14:52:13.453577 22 service.go:3655] Creating e2e-svc-a-jzk4p
  I1112 14:52:13.458278 22 service.go:3655] Creating e2e-svc-b-vhdjk
  I1112 14:52:13.463006 22 service.go:3655] Creating e2e-svc-c-hnr6l
  STEP: deleting service collection @ 11/12/24 14:52:13.469
  I1112 14:52:13.479772 22 service.go:3690] Collection of services has been deleted
  I1112 14:52:13.479870 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6073" for this suite. @ 11/12/24 14:52:13.541
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 11/12/24 14:52:13.545
  I1112 14:52:13.545757 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename namespaces @ 11/12/24 14:52:13.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:52:13.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:52:13.555
  STEP: creating a Namespace @ 11/12/24 14:52:13.557
  STEP: patching the Namespace @ 11/12/24 14:52:13.653
  STEP: get the Namespace and ensuring it has the label @ 11/12/24 14:52:13.655
  I1112 14:52:13.656947 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6365" for this suite. @ 11/12/24 14:52:13.659
  STEP: Destroying namespace "nspatchtest-8316a1c3-3728-4e7a-ab22-cb0202c12d3f-9754" for this suite. @ 11/12/24 14:52:13.66
• [0.117 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 11/12/24 14:52:13.663
  I1112 14:52:13.663143 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 14:52:13.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:52:13.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:52:13.755
  I1112 14:52:13.757123 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: creating the pod @ 11/12/24 14:52:13.757
  STEP: submitting the pod to kubernetes @ 11/12/24 14:52:13.757
  E1112 14:52:14.175351      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:15.176315      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:52:15.803394 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1532" for this suite. @ 11/12/24 14:52:15.805
• [2.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 11/12/24 14:52:15.808
  I1112 14:52:15.808412 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-preemption @ 11/12/24 14:52:15.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:52:15.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:52:15.845
  I1112 14:52:15.852661 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1112 14:52:16.176995      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:17.177423      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:18.178451      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:19.179258      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:20.179870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:21.179943      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:22.180669      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:23.180803      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:24.181596      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:25.181701      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:26.182292      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:27.182380      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:28.182883      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:29.183136      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:30.183933      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:31.184012      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:32.184628      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:33.184703      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:34.185661      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:35.185798      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:36.186469      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:37.186914      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:38.187565      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:39.187808      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:40.187917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:41.188063      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:42.188226      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:43.189137      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:44.189363      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:45.189457      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:46.189955      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:47.190079      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:48.190622      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:49.190832      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:50.190865      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:51.191911      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:52.191975      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:53.192108      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:54.192624      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:55.192997      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:56.193311      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:57.193431      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:58.193426      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:52:59.193611      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:00.194523      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:01.194642      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:02.195637      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:03.195905      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:04.196467      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:05.197228      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:06.197305      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:07.197408      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:08.197725      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:09.197948      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:10.198399      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:11.198524      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:12.198849      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:13.198879      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:14.199792      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:15.199841      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:53:15.855082 22 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 11/12/24 14:53:15.856
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 11/12/24 14:53:15.86
  I1112 14:53:15.865893 22 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 11/12/24 14:53:15.865
  E1112 14:53:16.200421      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:17.200616      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 11/12/24 14:53:17.869
  I1112 14:53:17.872342 22 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 11/12/24 14:53:17.872
  E1112 14:53:18.201237      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:19.201273      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 11/12/24 14:53:19.875
  I1112 14:53:19.876882 22 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E1112 14:53:20.202233      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:53:20.383142 22 pod_client.go:173] Successfully updated pod "victim-pod"
  I1112 14:53:20.399989 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5048" for this suite. @ 11/12/24 14:53:20.401
• [64.595 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 11/12/24 14:53:20.403
  I1112 14:53:20.403495 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:53:20.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:53:20.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:53:20.411
  STEP: Creating the pod @ 11/12/24 14:53:20.413
  E1112 14:53:21.202853      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:22.203919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:53:22.933018 22 pod_client.go:173] Successfully updated pod "annotationupdate29b9361e-50c1-4511-b303-97678bb314f6"
  E1112 14:53:23.204531      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:24.204783      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:53:24.939658 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2589" for this suite. @ 11/12/24 14:53:24.941
• [4.540 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 11/12/24 14:53:24.943
  I1112 14:53:24.943802 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/12/24 14:53:24.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:53:24.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:53:24.952
  I1112 14:53:24.953650 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 14:53:25.204880      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/12/24 14:53:26.131
  I1112 14:53:26.131871 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3552 --namespace=crd-publish-openapi-3552 create -f -'
  I1112 14:53:26.191942 22 builder.go:146] stderr: ""
  I1112 14:53:26.191974 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9230-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1112 14:53:26.192009 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3552 --namespace=crd-publish-openapi-3552 delete e2e-test-crd-publish-openapi-9230-crds test-cr'
  E1112 14:53:26.205321      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:53:26.234388 22 builder.go:146] stderr: ""
  I1112 14:53:26.234417 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9230-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1112 14:53:26.234468 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3552 --namespace=crd-publish-openapi-3552 apply -f -'
  I1112 14:53:26.291629 22 builder.go:146] stderr: ""
  I1112 14:53:26.291666 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9230-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1112 14:53:26.291708 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3552 --namespace=crd-publish-openapi-3552 delete e2e-test-crd-publish-openapi-9230-crds test-cr'
  I1112 14:53:26.334238 22 builder.go:146] stderr: ""
  I1112 14:53:26.334282 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9230-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/12/24 14:53:26.334
  I1112 14:53:26.334354 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=crd-publish-openapi-3552 explain e2e-test-crd-publish-openapi-9230-crds'
  I1112 14:53:26.373095 22 builder.go:146] stderr: ""
  I1112 14:53:26.373135 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9230-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1112 14:53:27.207211      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:53:27.523066 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3552" for this suite. @ 11/12/24 14:53:27.526
• [2.585 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 11/12/24 14:53:27.529
  I1112 14:53:27.529145 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename runtimeclass @ 11/12/24 14:53:27.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:53:27.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:53:27.538
  E1112 14:53:28.207931      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:29.208212      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:53:29.550853 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5446" for this suite. @ 11/12/24 14:53:29.552
• [2.026 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 11/12/24 14:53:29.555
  I1112 14:53:29.555436 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:53:29.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:53:29.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:53:29.563
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:53:29.565
  E1112 14:53:30.208728      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:31.208946      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:32.209784      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:33.210027      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:53:33.574
  I1112 14:53:33.575447 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-11034af8-7981-4771-ace9-4438eea882a6 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:53:33.577
  I1112 14:53:33.584243 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1770" for this suite. @ 11/12/24 14:53:33.585
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 11/12/24 14:53:33.588
  I1112 14:53:33.588903 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:53:33.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:53:33.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:53:33.597
  STEP: Creating the pod @ 11/12/24 14:53:33.598
  E1112 14:53:34.211023      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:35.211934      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:53:36.116420 22 pod_client.go:173] Successfully updated pod "labelsupdate32c81a47-fa87-458f-9810-d15f57d0d013"
  E1112 14:53:36.212147      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:37.213729      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:53:38.123024 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8834" for this suite. @ 11/12/24 14:53:38.124
• [4.538 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 11/12/24 14:53:38.127
  I1112 14:53:38.127113 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename var-expansion @ 11/12/24 14:53:38.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:53:38.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:53:38.136
  STEP: Creating a pod to test substitution in volume subpath @ 11/12/24 14:53:38.137
  E1112 14:53:38.214440      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:39.214780      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:40.215704      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:41.215804      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:53:42.147
  I1112 14:53:42.148327 22 output.go:196] Trying to get logs from node worker01 pod var-expansion-ec94327d-4a91-4b24-8f7f-a35bd4f784f7 container dapi-container: <nil>
  STEP: delete the pod @ 11/12/24 14:53:42.15
  I1112 14:53:42.157471 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5232" for this suite. @ 11/12/24 14:53:42.158
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 11/12/24 14:53:42.161
  I1112 14:53:42.161356 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:53:42.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:53:42.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:53:42.169
  STEP: Creating configMap that has name configmap-test-emptyKey-23b3799a-1e08-4f76-88fb-fe5aff628c8a @ 11/12/24 14:53:42.17
  I1112 14:53:42.171718 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1112 14:53:42.216805      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "configmap-2077" for this suite. @ 11/12/24 14:53:42.259
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 11/12/24 14:53:42.262
  I1112 14:53:42.262092 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 14:53:42.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:53:42.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:53:42.27
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/12/24 14:53:42.272
  E1112 14:53:43.217358      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:44.217583      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:45.218430      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:46.218499      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:53:46.281
  I1112 14:53:46.282649 22 output.go:196] Trying to get logs from node worker01 pod pod-67e43af4-e335-45cb-b38a-c6ef1eea2d97 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 14:53:46.285
  I1112 14:53:46.290982 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1733" for this suite. @ 11/12/24 14:53:46.292
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 11/12/24 14:53:46.294
  I1112 14:53:46.294686 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:53:46.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:53:46.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:53:46.303
  STEP: Creating secret with name s-test-opt-del-bfba19d5-f46e-47af-965d-bdec748b314c @ 11/12/24 14:53:46.393
  STEP: Creating secret with name s-test-opt-upd-663ac0ed-3ae9-49af-97e7-0d527a3fc8c3 @ 11/12/24 14:53:46.395
  STEP: Creating the pod @ 11/12/24 14:53:46.398
  E1112 14:53:47.221158      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:48.221203      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-bfba19d5-f46e-47af-965d-bdec748b314c @ 11/12/24 14:53:48.416
  STEP: Updating secret s-test-opt-upd-663ac0ed-3ae9-49af-97e7-0d527a3fc8c3 @ 11/12/24 14:53:48.426
  STEP: Creating secret with name s-test-opt-create-9bb1bcc1-0423-4de8-8265-b6bdb7eb518b @ 11/12/24 14:53:48.43
  STEP: waiting to observe update in volume @ 11/12/24 14:53:48.432
  E1112 14:53:49.221276      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:50.221348      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:51.221431      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:52.221563      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:53.221849      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:54.222077      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:55.222294      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:56.222668      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:57.222865      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:58.223043      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:53:59.223243      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:00.223920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:01.224082      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:02.224445      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:03.224692      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:04.224919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:05.225245      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:06.225388      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:07.225788      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:08.225994      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:09.226378      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:10.227309      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:11.227966      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:12.228052      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:13.228597      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:14.228921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:15.229677      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:16.230403      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:17.230798      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:18.230867      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:19.230958      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:20.231919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:21.232646      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:22.233698      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:23.234092      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:24.234391      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:25.234702      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:26.234839      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:27.234861      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:28.235924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:29.236233      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:30.236498      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:31.236937      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:32.237067      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:33.238110      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:34.238333      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:35.238795      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:36.238874      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:37.239631      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:38.239720      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:39.240200      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:40.240332      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:41.240417      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:42.240555      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:43.240726      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:44.240825      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:45.241138      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:46.241280      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:47.242085      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:48.242407      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:49.242864      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:50.243945      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:51.244358      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:52.244421      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:53.244527      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:54.244723      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:55.245116      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:56.245199      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:57.245278      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:58.245639      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:54:59.246370      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:00.246501      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:01.246874      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:02.247935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:03.248011      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:04.248241      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:05.249173      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:06.249321      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:07.249745      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:08.249863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:09.250790      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:10.250883      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:55:10.609361 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4369" for this suite. @ 11/12/24 14:55:10.61
• [84.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 11/12/24 14:55:10.614
  I1112 14:55:10.614320 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:55:10.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:55:10.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:55:10.621
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:55:10.623
  E1112 14:55:11.251937      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:12.252074      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:55:12.63
  I1112 14:55:12.631736 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-dc57288f-5ec5-4628-ab21-b6cb933b6a97 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:55:12.634
  I1112 14:55:12.640230 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6023" for this suite. @ 11/12/24 14:55:12.641
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 11/12/24 14:55:12.643
  I1112 14:55:12.643994 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:55:12.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:55:12.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:55:12.652
  STEP: Creating configMap with name configmap-projected-all-test-volume-2338064a-abc9-4213-86f3-cfb223677813 @ 11/12/24 14:55:12.653
  STEP: Creating secret with name secret-projected-all-test-volume-032cadba-0a66-4f0d-acd3-0d3cc21c6835 @ 11/12/24 14:55:12.655
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 11/12/24 14:55:12.656
  E1112 14:55:13.252158      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:14.252399      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:55:14.663
  I1112 14:55:14.664888 22 output.go:196] Trying to get logs from node worker01 pod projected-volume-155d6f09-590b-41fe-a36e-1b6d69881af8 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 14:55:14.67
  I1112 14:55:14.676316 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-289" for this suite. @ 11/12/24 14:55:14.677
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 11/12/24 14:55:14.68
  I1112 14:55:14.680944 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename statefulset @ 11/12/24 14:55:14.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:55:14.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:55:14.688
  STEP: Creating service test in namespace statefulset-5262 @ 11/12/24 14:55:14.692
  STEP: Looking for a node to schedule stateful set and pod @ 11/12/24 14:55:14.694
  STEP: Creating pod with conflicting port in namespace statefulset-5262 @ 11/12/24 14:55:14.778
  STEP: Waiting until pod test-pod will start running in namespace statefulset-5262 @ 11/12/24 14:55:14.783
  E1112 14:55:15.252464      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:16.252602      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-5262 @ 11/12/24 14:55:16.787
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5262 @ 11/12/24 14:55:16.789
  I1112 14:55:16.799023 22 statefulset.go:869] Observed stateful pod in namespace: statefulset-5262, name: ss-0, uid: df6d3f77-f34c-436e-a21b-3820e6f81824, status phase: Pending. Waiting for statefulset controller to delete.
  I1112 14:55:16.803847 22 statefulset.go:869] Observed stateful pod in namespace: statefulset-5262, name: ss-0, uid: df6d3f77-f34c-436e-a21b-3820e6f81824, status phase: Failed. Waiting for statefulset controller to delete.
  I1112 14:55:16.809212 22 statefulset.go:869] Observed stateful pod in namespace: statefulset-5262, name: ss-0, uid: df6d3f77-f34c-436e-a21b-3820e6f81824, status phase: Failed. Waiting for statefulset controller to delete.
  I1112 14:55:16.810953 22 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-5262
  STEP: Removing pod with conflicting port in namespace statefulset-5262 @ 11/12/24 14:55:16.811
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5262 and will be in running state @ 11/12/24 14:55:16.818
  E1112 14:55:17.252789      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:18.252939      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:55:18.821378 22 statefulset.go:138] Deleting all statefulset in ns statefulset-5262
  I1112 14:55:18.822807 22 rest.go:150] Scaling statefulset ss to 0
  E1112 14:55:19.253989      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:20.254054      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:21.254139      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:22.254267      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:23.254411      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:24.254646      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:25.254779      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:26.254876      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:27.255924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:28.256202      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:55:28.828874 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1112 14:55:28.830094 22 rest.go:88] Deleting statefulset ss
  I1112 14:55:28.834960 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5262" for this suite. @ 11/12/24 14:55:28.836
• [14.158 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 11/12/24 14:55:28.839
  I1112 14:55:28.839096 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:55:28.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:55:28.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:55:28.847
  STEP: Setting up server cert @ 11/12/24 14:55:28.946
  E1112 14:55:29.257143      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:55:29.356
  STEP: Deploying the webhook pod @ 11/12/24 14:55:29.36
  STEP: Wait for the deployment to be ready @ 11/12/24 14:55:29.365
  I1112 14:55:29.368257 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1112 14:55:30.258145      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:31.258208      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/12/24 14:55:31.372
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:55:31.377
  E1112 14:55:32.258873      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:55:32.378083 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 11/12/24 14:55:32.381
  STEP: create a pod that should be updated by the webhook @ 11/12/24 14:55:32.389
  I1112 14:55:32.416288 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8735" for this suite. @ 11/12/24 14:55:32.418
  STEP: Destroying namespace "webhook-markers-6146" for this suite. @ 11/12/24 14:55:32.421
• [3.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 11/12/24 14:55:32.424
  I1112 14:55:32.424400 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename containers @ 11/12/24 14:55:32.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:55:32.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:55:32.434
  STEP: Creating a pod to test override command @ 11/12/24 14:55:32.435
  E1112 14:55:33.259267      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:34.259670      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:35.260068      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:36.260901      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:55:36.446
  I1112 14:55:36.447299 22 output.go:196] Trying to get logs from node worker01 pod client-containers-78fca7f2-fb44-4f0e-a171-8f688bedf0ad container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:55:36.449
  I1112 14:55:36.455524 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3342" for this suite. @ 11/12/24 14:55:36.456
• [4.035 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 11/12/24 14:55:36.459
  I1112 14:55:36.459134 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename cronjob @ 11/12/24 14:55:36.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:55:36.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:55:36.465
  STEP: Creating a ReplaceConcurrent cronjob @ 11/12/24 14:55:36.467
  STEP: Ensuring a job is scheduled @ 11/12/24 14:55:36.47
  E1112 14:55:37.261433      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:38.261520      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:39.262153      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:40.262708      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:41.262996      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:42.263935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:43.264814      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:44.265773      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:45.265854      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:46.265989      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:47.266686      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:48.266829      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:49.267110      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:50.267928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:51.267998      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:52.268113      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:53.268424      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:54.268647      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:55.269447      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:56.269569      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:57.269982      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:58.270104      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:55:59.270708      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:00.270837      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 11/12/24 14:56:00.472
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/12/24 14:56:00.473
  STEP: Ensuring the job is replaced with a new one @ 11/12/24 14:56:00.474
  E1112 14:56:01.271468      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:02.271933      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:03.272708      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:04.272908      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:05.273840      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:06.274193      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:07.274858      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:08.274872      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:09.275911      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:10.276027      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:11.276184      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:12.276329      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:13.276363      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:14.277375      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:15.277613      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:16.277731      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:17.277960      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:18.278083      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:19.279100      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:20.279204      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:21.279992      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:22.280107      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:23.280304      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:24.280947      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:25.281030      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:26.281284      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:27.282310      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:28.282502      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:29.283438      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:30.283917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:31.284899      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:32.285024      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:33.285681      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:34.286050      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:35.287035      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:36.287920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:37.288889      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:38.289007      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:39.290013      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:40.290149      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:41.291144      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:42.291288      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:43.291924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:44.292916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:45.293238      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:46.293467      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:47.294399      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:48.294492      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:49.294923      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:50.295912      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:51.296457      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:52.296540      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:53.297573      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:54.297878      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:55.298353      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:56.298851      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:57.299909      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:58.300980      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:56:59.301921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:00.302950      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 11/12/24 14:57:00.476
  I1112 14:57:00.479008 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-828" for this suite. @ 11/12/24 14:57:00.48
• [84.025 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 11/12/24 14:57:00.484
  I1112 14:57:00.484252 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 14:57:00.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:00.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:00.496
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/12/24 14:57:00.497
  E1112 14:57:01.303194      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:02.303939      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:03.303957      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:04.304257      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:57:04.508
  I1112 14:57:04.509643 22 output.go:196] Trying to get logs from node worker01 pod pod-54f48f54-9536-48f5-bd59-eee1fc0ca9de container test-container: <nil>
  STEP: delete the pod @ 11/12/24 14:57:04.513
  I1112 14:57:04.518884 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8837" for this suite. @ 11/12/24 14:57:04.52
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 11/12/24 14:57:04.522
  I1112 14:57:04.522592 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/12/24 14:57:04.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:04.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:04.53
  STEP: set up a multi version CRD @ 11/12/24 14:57:04.532
  I1112 14:57:04.532322 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 14:57:05.304392      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:06.305153      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:07.305795      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 11/12/24 14:57:07.498
  STEP: check the new version name is served @ 11/12/24 14:57:07.512
  STEP: check the old version name is removed @ 11/12/24 14:57:08.158
  E1112 14:57:08.306104      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/12/24 14:57:08.756
  E1112 14:57:09.306903      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:10.307747      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:11.109955 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3446" for this suite. @ 11/12/24 14:57:11.113
• [6.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 11/12/24 14:57:11.116
  I1112 14:57:11.116463 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:57:11.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:11.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:11.125
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:57:11.126
  E1112 14:57:11.308328      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:12.308488      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:13.309013      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:14.309384      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:57:15.138
  I1112 14:57:15.139688 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-4bdae58b-d1e7-4080-9d59-1d99d01845d2 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:57:15.142
  I1112 14:57:15.148485 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9747" for this suite. @ 11/12/24 14:57:15.149
• [4.036 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 11/12/24 14:57:15.152
  I1112 14:57:15.152300 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename namespaces @ 11/12/24 14:57:15.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:15.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:15.161
  STEP: Read namespace status @ 11/12/24 14:57:15.162
  I1112 14:57:15.164299 22 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 11/12/24 14:57:15.164
  I1112 14:57:15.166606 22 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 11/12/24 14:57:15.166
  I1112 14:57:15.170077 22 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1112 14:57:15.170211 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3715" for this suite. @ 11/12/24 14:57:15.251
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 11/12/24 14:57:15.254
  I1112 14:57:15.254612 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replicaset @ 11/12/24 14:57:15.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:15.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:15.262
  STEP: Create a Replicaset @ 11/12/24 14:57:15.265
  STEP: Verify that the required pods have come up. @ 11/12/24 14:57:15.267
  I1112 14:57:15.268729 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1112 14:57:15.309901      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:16.310050      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:17.310179      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:18.310306      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:19.310959      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:20.270174 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/12/24 14:57:20.27
  STEP: Getting /status @ 11/12/24 14:57:20.27
  I1112 14:57:20.271520 22 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 11/12/24 14:57:20.271
  I1112 14:57:20.274844 22 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 11/12/24 14:57:20.274
  I1112 14:57:20.275789 22 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1112 14:57:20.275862 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1112 14:57:20.275927 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1112 14:57:20.276058 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1112 14:57:20.276088 22 replica_set.go:682] Found replicaset test-rs in namespace replicaset-6877 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1112 14:57:20.276099 22 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 11/12/24 14:57:20.276
  I1112 14:57:20.276122 22 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1112 14:57:20.279751 22 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 11/12/24 14:57:20.279
  I1112 14:57:20.280535 22 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1112 14:57:20.280606 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1112 14:57:20.280666 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1112 14:57:20.280797 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1112 14:57:20.280810 22 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-6877 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1112 14:57:20.280879 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1112 14:57:20.280893 22 replica_set.go:718] Found replicaset test-rs in namespace replicaset-6877 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1112 14:57:20.280905 22 replica_set.go:729] Replicaset test-rs has a patched status
  I1112 14:57:20.280975 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6877" for this suite. @ 11/12/24 14:57:20.282
• [5.030 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 11/12/24 14:57:20.284
  I1112 14:57:20.284654 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:57:20.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:20.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:20.295
  STEP: Creating a pod to test downward api env vars @ 11/12/24 14:57:20.297
  E1112 14:57:20.311642      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:21.312500      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:22.312602      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:23.313191      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:57:24.307
  I1112 14:57:24.308880 22 output.go:196] Trying to get logs from node worker01 pod downward-api-30e86a24-06b7-4b0c-bd5a-502717011c2b container dapi-container: <nil>
  STEP: delete the pod @ 11/12/24 14:57:24.311
  E1112 14:57:24.313580      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:24.317680 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9967" for this suite. @ 11/12/24 14:57:24.319
• [4.036 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 11/12/24 14:57:24.321
  I1112 14:57:24.321269 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename server-version @ 11/12/24 14:57:24.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:24.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:24.328
  STEP: Request ServerVersion @ 11/12/24 14:57:24.33
  STEP: Confirm major version @ 11/12/24 14:57:24.33
  I1112 14:57:24.330629 22 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 11/12/24 14:57:24.33
  I1112 14:57:24.330655 22 server_version.go:58] cleanMinorVersion: 31
  I1112 14:57:24.330666 22 server_version.go:62] Minor version: 31
  I1112 14:57:24.330732 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6687" for this suite. @ 11/12/24 14:57:24.419
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 11/12/24 14:57:24.422
  I1112 14:57:24.422734 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename init-container @ 11/12/24 14:57:24.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:24.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:24.431
  STEP: creating the pod @ 11/12/24 14:57:24.432
  I1112 14:57:24.432702 22 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1112 14:57:25.314080      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:26.314145      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:27.314229      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:28.314325      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:28.617944 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-927" for this suite. @ 11/12/24 14:57:28.619
• [4.200 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 11/12/24 14:57:28.622
  I1112 14:57:28.622986 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:57:28.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:28.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:28.631
  STEP: creating a replication controller @ 11/12/24 14:57:28.633
  I1112 14:57:28.633360 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 create -f -'
  I1112 14:57:28.708606 22 builder.go:146] stderr: ""
  I1112 14:57:28.708641 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/12/24 14:57:28.708
  I1112 14:57:28.708718 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1112 14:57:28.755416 22 builder.go:146] stderr: ""
  I1112 14:57:28.755449 22 builder.go:147] stdout: "update-demo-nautilus-46r8c update-demo-nautilus-zbs5m "
  I1112 14:57:28.755493 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-46r8c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:57:28.793763 22 builder.go:146] stderr: ""
  I1112 14:57:28.793790 22 builder.go:147] stdout: ""
  I1112 14:57:28.793800 22 kubectl.go:2502] update-demo-nautilus-46r8c is created but not running
  E1112 14:57:29.314451      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:30.315068      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:31.315937      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:32.316017      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:33.316505      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:33.793934 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1112 14:57:33.841586 22 builder.go:146] stderr: ""
  I1112 14:57:33.841620 22 builder.go:147] stdout: "update-demo-nautilus-46r8c update-demo-nautilus-zbs5m "
  I1112 14:57:33.841653 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-46r8c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:57:33.880698 22 builder.go:146] stderr: ""
  I1112 14:57:33.880729 22 builder.go:147] stdout: "true"
  I1112 14:57:33.880767 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-46r8c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1112 14:57:33.919553 22 builder.go:146] stderr: ""
  I1112 14:57:33.919583 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1112 14:57:33.919594 22 kubectl.go:2393] validating pod update-demo-nautilus-46r8c
  I1112 14:57:33.921865 22 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1112 14:57:33.921908 22 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1112 14:57:33.921922 22 kubectl.go:2520] update-demo-nautilus-46r8c is verified up and running
  I1112 14:57:33.921960 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-zbs5m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:57:33.961174 22 builder.go:146] stderr: ""
  I1112 14:57:33.961203 22 builder.go:147] stdout: "true"
  I1112 14:57:33.961237 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-zbs5m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1112 14:57:33.999657 22 builder.go:146] stderr: ""
  I1112 14:57:33.999698 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1112 14:57:33.999709 22 kubectl.go:2393] validating pod update-demo-nautilus-zbs5m
  I1112 14:57:34.001762 22 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1112 14:57:34.001801 22 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1112 14:57:34.001816 22 kubectl.go:2520] update-demo-nautilus-zbs5m is verified up and running
  STEP: scaling down the replication controller @ 11/12/24 14:57:34.001
  I1112 14:57:34.002615 22 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1112 14:57:34.002642 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1112 14:57:34.317264      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:35.048642 22 builder.go:146] stderr: ""
  I1112 14:57:35.048676 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/12/24 14:57:35.048
  I1112 14:57:35.048749 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1112 14:57:35.089588 22 builder.go:146] stderr: ""
  I1112 14:57:35.089619 22 builder.go:147] stdout: "update-demo-nautilus-zbs5m "
  I1112 14:57:35.089660 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-zbs5m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:57:35.127885 22 builder.go:146] stderr: ""
  I1112 14:57:35.127923 22 builder.go:147] stdout: "true"
  I1112 14:57:35.127958 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-zbs5m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1112 14:57:35.166928 22 builder.go:146] stderr: ""
  I1112 14:57:35.166956 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1112 14:57:35.166966 22 kubectl.go:2393] validating pod update-demo-nautilus-zbs5m
  I1112 14:57:35.168515 22 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1112 14:57:35.168553 22 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1112 14:57:35.168565 22 kubectl.go:2520] update-demo-nautilus-zbs5m is verified up and running
  STEP: scaling up the replication controller @ 11/12/24 14:57:35.168
  I1112 14:57:35.169319 22 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1112 14:57:35.169347 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1112 14:57:35.317721      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:36.217063 22 builder.go:146] stderr: ""
  I1112 14:57:36.217095 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/12/24 14:57:36.217
  I1112 14:57:36.217168 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1112 14:57:36.258472 22 builder.go:146] stderr: ""
  I1112 14:57:36.258504 22 builder.go:147] stdout: "update-demo-nautilus-ctjpk update-demo-nautilus-zbs5m "
  I1112 14:57:36.258546 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-ctjpk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:57:36.300479 22 builder.go:146] stderr: ""
  I1112 14:57:36.300510 22 builder.go:147] stdout: ""
  I1112 14:57:36.300521 22 kubectl.go:2502] update-demo-nautilus-ctjpk is created but not running
  E1112 14:57:36.318705      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:37.319361      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:38.319390      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:39.320279      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:40.320663      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:41.301406 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1112 14:57:41.321716      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:41.342288 22 builder.go:146] stderr: ""
  I1112 14:57:41.342323 22 builder.go:147] stdout: "update-demo-nautilus-ctjpk update-demo-nautilus-zbs5m "
  I1112 14:57:41.342360 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-ctjpk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:57:41.381435 22 builder.go:146] stderr: ""
  I1112 14:57:41.381468 22 builder.go:147] stdout: "true"
  I1112 14:57:41.381502 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-ctjpk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1112 14:57:41.419343 22 builder.go:146] stderr: ""
  I1112 14:57:41.419376 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1112 14:57:41.419386 22 kubectl.go:2393] validating pod update-demo-nautilus-ctjpk
  I1112 14:57:41.421383 22 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1112 14:57:41.421421 22 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1112 14:57:41.421434 22 kubectl.go:2520] update-demo-nautilus-ctjpk is verified up and running
  I1112 14:57:41.421466 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-zbs5m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1112 14:57:41.459939 22 builder.go:146] stderr: ""
  I1112 14:57:41.459969 22 builder.go:147] stdout: "true"
  I1112 14:57:41.460007 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods update-demo-nautilus-zbs5m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1112 14:57:41.497997 22 builder.go:146] stderr: ""
  I1112 14:57:41.498028 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1112 14:57:41.498041 22 kubectl.go:2393] validating pod update-demo-nautilus-zbs5m
  I1112 14:57:41.499637 22 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1112 14:57:41.499676 22 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1112 14:57:41.499686 22 kubectl.go:2520] update-demo-nautilus-zbs5m is verified up and running
  STEP: using delete to clean up resources @ 11/12/24 14:57:41.499
  I1112 14:57:41.499744 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 delete --grace-period=0 --force -f -'
  I1112 14:57:41.540529 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1112 14:57:41.540565 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1112 14:57:41.540608 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get rc,svc -l name=update-demo --no-headers'
  I1112 14:57:41.585379 22 builder.go:146] stderr: "No resources found in kubectl-225 namespace.\n"
  I1112 14:57:41.585409 22 builder.go:147] stdout: ""
  I1112 14:57:41.585448 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-225 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1112 14:57:41.624914 22 builder.go:146] stderr: ""
  I1112 14:57:41.624949 22 builder.go:147] stdout: ""
  I1112 14:57:41.625040 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-225" for this suite. @ 11/12/24 14:57:41.626
• [13.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 11/12/24 14:57:41.629
  I1112 14:57:41.629060 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename security-context-test @ 11/12/24 14:57:41.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:41.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:41.637
  E1112 14:57:42.322751      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:43.322869      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:44.323171      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:45.323945      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:46.324910      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:47.324988      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:47.652119 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-164" for this suite. @ 11/12/24 14:57:47.653
• [6.027 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 11/12/24 14:57:47.655
  I1112 14:57:47.655773 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/12/24 14:57:47.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:47.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:47.664
  STEP: fetching the /apis discovery document @ 11/12/24 14:57:47.666
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 11/12/24 14:57:47.666
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 11/12/24 14:57:47.666
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 11/12/24 14:57:47.666
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 11/12/24 14:57:47.667
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 11/12/24 14:57:47.667
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 11/12/24 14:57:47.667
  I1112 14:57:47.667983 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1362" for this suite. @ 11/12/24 14:57:47.753
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 11/12/24 14:57:47.756
  I1112 14:57:47.756290 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/12/24 14:57:47.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:47.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:47.762
  STEP: set up a multi version CRD @ 11/12/24 14:57:47.765
  I1112 14:57:47.765422 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 14:57:48.325168      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:49.325187      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:50.326143      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 11/12/24 14:57:50.748
  STEP: check the unserved version gets removed @ 11/12/24 14:57:50.757
  E1112 14:57:51.326931      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/12/24 14:57:51.409
  E1112 14:57:52.327956      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:53.328782      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:53.799159 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8708" for this suite. @ 11/12/24 14:57:53.802
• [6.049 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 11/12/24 14:57:53.805
  I1112 14:57:53.805286 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 14:57:53.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:53.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:53.814
  STEP: creating pod @ 11/12/24 14:57:53.816
  E1112 14:57:54.329498      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:55.329687      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:57:55.824439 22 pods.go:83] Pod pod-hostip-2fc81454-d818-46d2-8961-971ecb8f392f has hostIP: 10.255.0.207
  I1112 14:57:55.824537 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7573" for this suite. @ 11/12/24 14:57:55.826
• [2.024 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 11/12/24 14:57:55.829
  I1112 14:57:55.829206 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename services @ 11/12/24 14:57:55.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:55.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:55.837
  STEP: fetching services @ 11/12/24 14:57:55.838
  I1112 14:57:55.839814 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9533" for this suite. @ 11/12/24 14:57:55.926
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 11/12/24 14:57:55.929
  I1112 14:57:55.929229 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename statefulset @ 11/12/24 14:57:55.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:57:55.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:57:55.938
  STEP: Creating service test in namespace statefulset-2244 @ 11/12/24 14:57:55.939
  STEP: Creating a new StatefulSet @ 11/12/24 14:57:55.941
  I1112 14:57:55.946748 22 wait.go:40] Found 0 stateful pods, waiting for 3
  E1112 14:57:56.330112      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:57.330203      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:58.330267      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:57:59.330450      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:00.331379      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:01.332177      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:02.332312      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:03.332378      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:04.332489      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:05.332612      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:58:05.948399 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:58:05.948424 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:58:05.948431 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1112 14:58:05.951774 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-2244 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:58:06.020992 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:58:06.021027 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:58:06.021038 22 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1112 14:58:06.333308      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:07.333451      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:08.333666      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:09.333857      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:10.333998      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:11.334453      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:12.334587      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:13.334657      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:14.334928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:15.335915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/12/24 14:58:16.024
  I1112 14:58:16.029346 22 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 11/12/24 14:58:16.029
  E1112 14:58:16.336787      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:17.336886      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:18.337044      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:19.337627      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:20.338190      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:21.338752      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:22.338803      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:23.339202      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:24.339846      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:25.339932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 11/12/24 14:58:26.032
  I1112 14:58:26.034079 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-2244 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1112 14:58:26.099141 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1112 14:58:26.099175 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1112 14:58:26.099184 22 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1112 14:58:26.340050      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:27.340179      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:28.340392      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:29.341229      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:30.341473      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:31.341599      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:32.341683      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:33.341821      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:34.342106      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:35.342238      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 11/12/24 14:58:36.105
  I1112 14:58:36.105280 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-2244 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1112 14:58:36.172835 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1112 14:58:36.172864 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1112 14:58:36.172873 22 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1112 14:58:36.343000      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:37.343928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:38.344101      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:39.344975      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:40.345649      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:41.346496      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:42.347379      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:43.347925      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:44.348079      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:45.348200      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:58:46.180727 22 statefulset.go:2507] Updating stateful set ss2
  E1112 14:58:46.348522      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:47.348728      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:48.348857      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:49.348926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:50.349019      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:51.349158      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:52.349281      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:53.349383      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:54.349544      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:55.349632      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 11/12/24 14:58:56.184
  I1112 14:58:56.185983 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=statefulset-2244 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1112 14:58:56.251131 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1112 14:58:56.251162 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1112 14:58:56.251171 22 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1112 14:58:56.349996      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:57.350128      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:58.350261      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:58:59.350446      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:00.350528      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:01.350603      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:02.351544      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:03.351925      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:04.352085      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:05.352208      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:06.257264 22 statefulset.go:138] Deleting all statefulset in ns statefulset-2244
  I1112 14:59:06.258401 22 rest.go:150] Scaling statefulset ss2 to 0
  E1112 14:59:06.353284      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:07.353754      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:08.353882      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:09.354070      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:10.354156      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:11.354478      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:12.354559      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:13.354686      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:14.355387      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:15.355475      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:16.264495 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1112 14:59:16.265755 22 rest.go:88] Deleting statefulset ss2
  I1112 14:59:16.270372 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2244" for this suite. @ 11/12/24 14:59:16.271
• [80.345 seconds]
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 11/12/24 14:59:16.274
  I1112 14:59:16.274589 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 14:59:16.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:59:16.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:59:16.283
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:59:16.284
  E1112 14:59:16.355523      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:17.356558      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:18.357350      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:19.358297      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:59:20.294
  I1112 14:59:20.295698 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-bb0dedd1-6063-4201-8f89-c49147d4e88f container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:59:20.301
  I1112 14:59:20.308861 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9185" for this suite. @ 11/12/24 14:59:20.31
• [4.038 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 11/12/24 14:59:20.312
  I1112 14:59:20.312289 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/12/24 14:59:20.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:59:20.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:59:20.319
  E1112 14:59:20.358493      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:21.359125      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 11/12/24 14:59:22.332
  STEP: Cleaning up the configmap @ 11/12/24 14:59:22.334
  STEP: Cleaning up the pod @ 11/12/24 14:59:22.336
  I1112 14:59:22.341478 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-357" for this suite. @ 11/12/24 14:59:22.343
• [2.033 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 11/12/24 14:59:22.345
  I1112 14:59:22.345319 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:59:22.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:59:22.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:59:22.353
  E1112 14:59:22.360065      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 11/12/24 14:59:22.452
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:59:22.81
  STEP: Deploying the webhook pod @ 11/12/24 14:59:22.815
  STEP: Wait for the deployment to be ready @ 11/12/24 14:59:22.82
  I1112 14:59:22.822864 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1112 14:59:23.360656      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:24.361680      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/12/24 14:59:24.827
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:59:24.831
  E1112 14:59:25.362652      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:25.832200 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 11/12/24 14:59:25.834
  STEP: create a configmap that should be updated by the webhook @ 11/12/24 14:59:25.843
  I1112 14:59:25.866334 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2057" for this suite. @ 11/12/24 14:59:25.868
  STEP: Destroying namespace "webhook-markers-8986" for this suite. @ 11/12/24 14:59:25.871
• [3.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 11/12/24 14:59:25.875
  I1112 14:59:25.875101 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:59:25.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:59:25.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:59:25.884
  STEP: starting the proxy server @ 11/12/24 14:59:25.886
  I1112 14:59:25.886114 22 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-416 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 11/12/24 14:59:25.917
  I1112 14:59:25.923395 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1112 14:59:25.924935 22 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:43597

  I1112 14:59:25.924939 22 kubectl.go:2229] kubectl proxy stderr: W1112 14:59:25.917706    1210 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-416" for this suite. @ 11/12/24 14:59:25.968
• [0.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 11/12/24 14:59:25.971
  I1112 14:59:25.971698 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 14:59:25.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:59:25.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:59:25.985
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 14:59:25.987
  E1112 14:59:26.363004      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:27.363934      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:59:27.995
  I1112 14:59:27.996635 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-2abadc17-5c96-4b72-a984-55edb4d1d242 container client-container: <nil>
  STEP: delete the pod @ 11/12/24 14:59:28
  I1112 14:59:28.007103 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5797" for this suite. @ 11/12/24 14:59:28.008
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 11/12/24 14:59:28.01
  I1112 14:59:28.010961 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 14:59:28.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:59:28.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:59:28.02
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/12/24 14:59:28.021
  I1112 14:59:28.021419 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-221 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1112 14:59:28.067265 22 builder.go:146] stderr: ""
  I1112 14:59:28.067300 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 11/12/24 14:59:28.067
  I1112 14:59:28.067374 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-221 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1112 14:59:28.110218 22 builder.go:146] stderr: ""
  I1112 14:59:28.110251 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/12/24 14:59:28.11
  I1112 14:59:28.111536 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-221 delete pods e2e-test-httpd-pod'
  E1112 14:59:28.364510      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:29.365495      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:29.704917 22 builder.go:146] stderr: ""
  I1112 14:59:29.704946 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1112 14:59:29.705050 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-221" for this suite. @ 11/12/24 14:59:29.706
• [1.698 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 11/12/24 14:59:29.71
  I1112 14:59:29.710473 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename deployment @ 11/12/24 14:59:29.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:59:29.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:59:29.718
  I1112 14:59:29.724317 22 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E1112 14:59:30.365590      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:31.365727      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:32.366708      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:33.366861      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:34.366880      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:34.726711 22 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/12/24 14:59:34.726
  I1112 14:59:34.726794 22 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1112 14:59:35.367930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:36.368332      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:36.729499 22 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1112 14:59:36.732931 22 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E1112 14:59:37.368635      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:38.368731      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:38.736019 22 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1112 14:59:38.738397 22 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1112 14:59:38.740329 22 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1112 14:59:38.744036 22 deployment.go:313] Updating deployment test-rollover-deployment
  I1112 14:59:38.744061 22 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1112 14:59:39.368785      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:40.368913      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:40.746869 22 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1112 14:59:40.749372 22 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1112 14:59:40.751386 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1112 14:59:40.751428 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1112 14:59:41.369662      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:42.370569      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:42.754440 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1112 14:59:42.754488 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1112 14:59:43.370875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:44.371928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:44.755660 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1112 14:59:44.755698 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1112 14:59:45.372714      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:46.373669      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:46.755091 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1112 14:59:46.755146 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1112 14:59:47.374713      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:48.375533      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:48.756050 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1112 14:59:48.756095 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 14, 59, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 14, 59, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1112 14:59:49.375928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:50.376147      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:50.754721 22 deployment.go:94] 
  I1112 14:59:50.754771 22 deployment.go:974] Ensure that both old replica sets have no replicas
  I1112 14:59:50.758154 22 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9053",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76733ff0-64e7-4775-a3ce-63b7f18a62ac",
      ResourceVersion: (string) (len=5) "38445",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020376,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020376,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020376,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020376,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1112 14:59:50.760248 22 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9053",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52caff4f-dca6-497a-8580-42302e298551",
      ResourceVersion: (string) (len=5) "38435",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "76733ff0-64e7-4775-a3ce-63b7f18a62ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 36 37 33 33 66  66 30 2d 36 34 65 37 2d  |\"76733ff0-64e7-|
              00000120  34 37 37 35 2d 61 33 63  65 2d 36 33 62 37 66 31  |4775-a3ce-63b7f1|
              00000130  38 61 36 32 61 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8a62ac\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 14:59:50.760851 22 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1112 14:59:50.761076 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9053",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2a74b16-2442-4ffe-a27f-9e1a4deca6e2",
      ResourceVersion: (string) (len=5) "38444",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020369,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "76733ff0-64e7-4775-a3ce-63b7f18a62ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 36 37 33 33 66 66 30  2d 36 34 65 37 2d 34 37  |76733ff0-64e7-47|
              000000c0  37 35 2d 61 33 63 65 2d  36 33 62 37 66 31 38 61  |75-a3ce-63b7f18a|
              000000d0  36 32 61 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |62ac\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 14:59:50.761913 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9053",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51d4d9de-b36f-4619-9ef0-b31dca581a50",
      ResourceVersion: (string) (len=5) "38396",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020376,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "76733ff0-64e7-4775-a3ce-63b7f18a62ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 36 37 33 33 66  66 30 2d 36 34 65 37 2d  |\"76733ff0-64e7-|
              00000120  34 37 37 35 2d 61 33 63  65 2d 36 33 62 37 66 31  |4775-a3ce-63b7f1|
              00000130  38 61 36 32 61 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8a62ac\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 14:59:50.764166 22 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-s5898" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-s5898",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-9053",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ff9fd13-a6de-4d99-b39a-488e585d81a4",
      ResourceVersion: (string) (len=5) "38417",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "52caff4f-dca6-497a-8580-42302e298551",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 61 66 66 34 66 2d 64  |d\":\"52caff4f-d|
              00000090  63 61 36 2d 34 39 37 61  2d 38 35 38 30 2d 34 32  |ca6-497a-8580-42|
              000000a0  33 30 32 65 32 39 38 35  35 31 5c 22 7d 22 3a 7b  |302e298551\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 31  39 5c 22 7d 22 3a 7b 22  |2.20.5.19\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9fk95",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9fk95",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867020379,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://b3472f1cc9829466ad8a2cdf25cd87ce24afdad8ffa7bc2a0e9437902ec78d7d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9fk95",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 14:59:50.765365 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9053" for this suite. @ 11/12/24 14:59:50.766
• [21.059 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 11/12/24 14:59:50.769
  I1112 14:59:50.769377 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 14:59:50.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:59:50.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:59:50.777
  STEP: Creating configMap with name configmap-test-volume-2df642f4-b0f3-4090-84c8-b00fe35e4e06 @ 11/12/24 14:59:50.778
  STEP: Creating a pod to test consume configMaps @ 11/12/24 14:59:50.78
  E1112 14:59:51.377234      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:52.377359      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:53.378164      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:54.379024      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 14:59:54.789
  I1112 14:59:54.790597 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-d3898f32-6a6e-4bbc-a6f9-d65743bdc54b container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 14:59:54.793
  I1112 14:59:54.799109 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-858" for this suite. @ 11/12/24 14:59:54.8
• [4.033 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 11/12/24 14:59:54.802
  I1112 14:59:54.802717 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 14:59:54.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 14:59:54.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 14:59:54.81
  STEP: Setting up server cert @ 11/12/24 14:59:54.91
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 14:59:55.154
  STEP: Deploying the webhook pod @ 11/12/24 14:59:55.158
  STEP: Wait for the deployment to be ready @ 11/12/24 14:59:55.165
  I1112 14:59:55.167774 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1112 14:59:55.379944      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 14:59:56.380060      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/12/24 14:59:57.174
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 14:59:57.18
  E1112 14:59:57.380581      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 14:59:58.180448 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1112 14:59:58.183650 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 14:59:58.381301      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9873-crds.webhook.example.com via the AdmissionRegistration API @ 11/12/24 14:59:58.69
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/12/24 14:59:58.697
  E1112 14:59:59.381744      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:00.381839      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:00:01.244260 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-59" for this suite. @ 11/12/24 15:00:01.246
  STEP: Destroying namespace "webhook-markers-4059" for this suite. @ 11/12/24 15:00:01.248
• [6.448 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 11/12/24 15:00:01.25
  I1112 15:00:01.250733 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 15:00:01.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:00:01.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:00:01.258
  STEP: Creating configMap with name cm-test-opt-del-66b13a32-8d10-4aaa-bf1f-87c2cb4e4b45 @ 11/12/24 15:00:01.347
  STEP: Creating configMap with name cm-test-opt-upd-3cbc04e8-22d3-42bd-9736-a4255e93a5f9 @ 11/12/24 15:00:01.349
  STEP: Creating the pod @ 11/12/24 15:00:01.351
  E1112 15:00:01.382868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:02.383025      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-66b13a32-8d10-4aaa-bf1f-87c2cb4e4b45 @ 11/12/24 15:00:03.366
  STEP: Updating configmap cm-test-opt-upd-3cbc04e8-22d3-42bd-9736-a4255e93a5f9 @ 11/12/24 15:00:03.368
  STEP: Creating configMap with name cm-test-opt-create-cfaf06da-bb82-49bf-ada1-83e0f2a1b401 @ 11/12/24 15:00:03.37
  STEP: waiting to observe update in volume @ 11/12/24 15:00:03.372
  E1112 15:00:03.383440      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:04.383932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:05.384934      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:06.385692      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:07.386175      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:08.386284      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:09.387121      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:10.387915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:11.388089      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:12.388748      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:13.388962      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:14.389305      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:15.390258      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:16.390418      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:17.390632      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:18.390877      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:19.391934      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:20.392222      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:21.392368      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:22.392851      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:23.392981      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:24.393224      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:25.393305      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:26.393412      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:27.393542      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:28.393784      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:29.394480      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:30.394851      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:31.395920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:32.396561      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:33.396766      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:34.397821      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:35.398045      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:36.398334      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:37.398471      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:38.398877      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:39.399916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:40.400224      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:41.400362      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:42.400491      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:43.400614      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:44.400892      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:45.401134      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:46.401568      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:47.402486      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:48.402870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:49.403916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:50.404439      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:51.404577      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:52.405047      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:53.405976      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:54.406508      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:55.406580      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:56.406874      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:57.407916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:58.408002      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:00:59.408083      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:00.408531      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:01.408624      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:02.408719      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:03.408802      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:04.409395      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:05.409457      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:06.410229      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:07.410304      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:08.410876      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:09.411933      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:10.412467      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:11.412749      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:12.412843      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:13.413760      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:14.414556      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:15.414676      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:16.414863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:17.414960      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:18.415921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:19.416123      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:20.416695      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:21.416819      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:22.416911      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:23.417046      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:24.417538      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:25.417673      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:26.418061      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:27.418193      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:28.418273      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:29.419060      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:30.419947      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:31.420011      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:32.420113      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:33.420241      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:34.420920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:35.420999      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:01:35.627618 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9892" for this suite. @ 11/12/24 15:01:35.629
• [94.381 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 11/12/24 15:01:35.631
  I1112 15:01:35.631611 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename pods @ 11/12/24 15:01:35.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:01:35.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:01:35.64
  E1112 15:01:36.421261      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:37.421480      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:38.422448      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:39.422645      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:40.422904      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:41.422973      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:01:41.664
  I1112 15:01:41.665581 22 output.go:196] Trying to get logs from node worker01 pod client-envvars-916f4989-1d52-47c5-830e-b1f057d870de container env3cont: <nil>
  STEP: delete the pod @ 11/12/24 15:01:41.667
  I1112 15:01:41.673161 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6279" for this suite. @ 11/12/24 15:01:41.674
• [6.045 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 11/12/24 15:01:41.676
  I1112 15:01:41.676571 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename containers @ 11/12/24 15:01:41.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:01:41.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:01:41.684
  STEP: Creating a pod to test override all @ 11/12/24 15:01:41.686
  E1112 15:01:42.423651      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:43.423724      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:44.423832      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:45.423906      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:01:45.695
  I1112 15:01:45.697252 22 output.go:196] Trying to get logs from node worker01 pod client-containers-8f795611-2699-4264-af33-aba9bf2f0064 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 15:01:45.699
  I1112 15:01:45.705734 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1641" for this suite. @ 11/12/24 15:01:45.707
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 11/12/24 15:01:45.709
  I1112 15:01:45.709430 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 15:01:45.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:01:45.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:01:45.718
  STEP: creating the pod @ 11/12/24 15:01:45.719
  I1112 15:01:45.719877 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-1528 create -f -'
  I1112 15:01:45.810889 22 builder.go:146] stderr: ""
  I1112 15:01:45.810925 22 builder.go:147] stdout: "pod/pause created\n"
  E1112 15:01:46.423965      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:47.424103      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 11/12/24 15:01:47.814
  I1112 15:01:47.814330 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-1528 label pods pause testing-label=testing-label-value'
  I1112 15:01:47.858606 22 builder.go:146] stderr: ""
  I1112 15:01:47.858644 22 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 11/12/24 15:01:47.858
  I1112 15:01:47.858703 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-1528 get pod pause -L testing-label'
  I1112 15:01:47.896389 22 builder.go:146] stderr: ""
  I1112 15:01:47.896419 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 11/12/24 15:01:47.896
  I1112 15:01:47.896479 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-1528 label pods pause testing-label-'
  I1112 15:01:47.940530 22 builder.go:146] stderr: ""
  I1112 15:01:47.940564 22 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 11/12/24 15:01:47.94
  I1112 15:01:47.940625 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-1528 get pod pause -L testing-label'
  I1112 15:01:47.978937 22 builder.go:146] stderr: ""
  I1112 15:01:47.978968 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 11/12/24 15:01:47.979
  I1112 15:01:47.979076 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-1528 delete --grace-period=0 --force -f -'
  I1112 15:01:48.021782 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1112 15:01:48.021810 22 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1112 15:01:48.021844 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-1528 get rc,svc -l name=pause --no-headers'
  I1112 15:01:48.064446 22 builder.go:146] stderr: "No resources found in kubectl-1528 namespace.\n"
  I1112 15:01:48.064477 22 builder.go:147] stdout: ""
  I1112 15:01:48.064514 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-1528 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1112 15:01:48.102189 22 builder.go:146] stderr: ""
  I1112 15:01:48.102224 22 builder.go:147] stdout: ""
  I1112 15:01:48.102315 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1528" for this suite. @ 11/12/24 15:01:48.103
• [2.397 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 11/12/24 15:01:48.106
  I1112 15:01:48.106601 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-preemption @ 11/12/24 15:01:48.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:01:48.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:01:48.114
  I1112 15:01:48.121303 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1112 15:01:48.424464      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:49.424730      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:50.424792      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:51.424930      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:52.425542      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:53.426190      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:54.426421      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:55.426337      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:56.427015      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:57.427111      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:58.427521      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:01:59.427738      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:00.428314      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:01.428519      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:02.429361      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:03.429446      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:04.430025      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:05.430145      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:06.431035      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:07.431153      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:08.431699      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:09.431962      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:10.432074      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:11.432284      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:12.433271      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:13.433401      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:14.434235      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:15.434377      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:16.434638      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:17.434786      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:18.434859      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:19.435922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:20.436467      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:21.436607      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:22.436831      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:23.436964      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:24.437281      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:25.437405      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:26.437537      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:27.437655      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:28.438372      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:29.438534      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:30.439105      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:31.439919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:32.440454      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:33.440575      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:34.440777      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:35.440916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:36.441615      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:37.442350      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:38.443117      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:39.443915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:40.444216      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:41.444337      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:42.445058      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:43.445144      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:44.445313      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:45.445448      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:46.446456      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:47.446593      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:02:48.124422 22 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/12/24 15:02:48.125
  I1112 15:02:48.125802 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/12/24 15:02:48.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:02:48.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:02:48.133
  I1112 15:02:48.143145 22 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1112 15:02:48.144317 22 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1112 15:02:48.170268 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7289" for this suite. @ 11/12/24 15:02:48.225
  I1112 15:02:48.227848 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4428" for this suite. @ 11/12/24 15:02:48.325
• [60.222 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 11/12/24 15:02:48.328
  I1112 15:02:48.328664 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 15:02:48.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:02:48.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:02:48.336
  STEP: Creating secret with name secret-test-a1c3234f-fdc4-4696-96c1-540328f653ac @ 11/12/24 15:02:48.439
  STEP: Creating a pod to test consume secrets @ 11/12/24 15:02:48.44
  E1112 15:02:48.446630      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:49.446834      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:50.446867      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:02:50.447
  I1112 15:02:50.448846 22 output.go:196] Trying to get logs from node worker01 pod pod-secrets-0b043d64-1b2e-454e-b7da-4f0b91b0f110 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/12/24 15:02:50.452
  I1112 15:02:50.459200 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8139" for this suite. @ 11/12/24 15:02:50.46
  STEP: Destroying namespace "secret-namespace-5015" for this suite. @ 11/12/24 15:02:50.462
• [2.136 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 11/12/24 15:02:50.464
  I1112 15:02:50.464867 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 15:02:50.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:02:50.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:02:50.473
  STEP: Creating configMap with name projected-configmap-test-volume-map-205a0a33-d42d-4c42-a567-60599d18d917 @ 11/12/24 15:02:50.474
  STEP: Creating a pod to test consume configMaps @ 11/12/24 15:02:50.476
  E1112 15:02:51.447937      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:52.448957      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:53.449047      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:54.449256      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:02:54.486
  I1112 15:02:54.487545 22 output.go:196] Trying to get logs from node worker01 pod pod-projected-configmaps-80b7f297-4c7b-4518-91d4-7779eccbc680 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 15:02:54.49
  I1112 15:02:54.496208 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8236" for this suite. @ 11/12/24 15:02:54.497
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 11/12/24 15:02:54.5
  I1112 15:02:54.500904 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename namespaces @ 11/12/24 15:02:54.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:02:54.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:02:54.511
  STEP: Updating Namespace "namespaces-8300" @ 11/12/24 15:02:54.513
  I1112 15:02:54.515864 22 namespace.go:389] Namespace "namespaces-8300" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"53b1e325-7b82-40d5-83f4-e85cf91f7ab1", "kubernetes.io/metadata.name":"namespaces-8300", "namespaces-8300":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1112 15:02:54.515969 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8300" for this suite. @ 11/12/24 15:02:54.599
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 11/12/24 15:02:54.601
  I1112 15:02:54.601962 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 15:02:54.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:02:54.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:02:54.61
  STEP: Creating a pod to test downward API volume plugin @ 11/12/24 15:02:54.612
  E1112 15:02:55.449545      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:56.449585      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:57.450395      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:02:58.450546      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:02:58.62
  I1112 15:02:58.622119 22 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-6f63f0a1-f392-4ada-8afa-f8efe059ec1b container client-container: <nil>
  STEP: delete the pod @ 11/12/24 15:02:58.624
  I1112 15:02:58.630247 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7297" for this suite. @ 11/12/24 15:02:58.631
• [4.032 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 11/12/24 15:02:58.633
  I1112 15:02:58.633700 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename deployment @ 11/12/24 15:02:58.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:02:58.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:02:58.642
  I1112 15:02:58.643306 22 deployment.go:1645] Creating simple deployment test-new-deployment
  I1112 15:02:58.648759 22 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E1112 15:02:59.450644      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:00.450827      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 11/12/24 15:03:00.654
  STEP: updating a scale subresource @ 11/12/24 15:03:00.655
  STEP: verifying the deployment Spec.Replicas was modified @ 11/12/24 15:03:00.658
  STEP: Patch a scale subresource @ 11/12/24 15:03:00.659
  I1112 15:03:00.667816 22 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2487",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48c73e9d-a630-4f22-90d1-a6332a22b16b",
      ResourceVersion: (string) (len=5) "39287",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020578,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020578,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020578,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1112 15:03:00.678227 22 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2487",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7f67211-a7d6-40fd-9b03-0a9417a3197b",
      ResourceVersion: (string) (len=5) "39294",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020578,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "48c73e9d-a630-4f22-90d1-a6332a22b16b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 38 63 37 33 65  39 64 2d 61 36 33 30 2d  |\"48c73e9d-a630-|
              00000120  34 66 32 32 2d 39 30 64  31 2d 61 36 33 33 32 61  |4f22-90d1-a6332a|
              00000130  32 32 62 31 36 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |22b16b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 15:03:00.681408 22 deployment.go:67] Pod "test-new-deployment-64bcfc6446-jg6t5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-jg6t5",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2487",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a27dd3cf-f01a-4e66-8323-0ba6690eac7e",
      ResourceVersion: (string) (len=5) "39281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020578,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "a7f67211-a7d6-40fd-9b03-0a9417a3197b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020578,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 37  66 36 37 32 31 31 2d 61  |d\":\"a7f67211-a|
              00000090  37 64 36 2d 34 30 66 64  2d 39 62 30 33 2d 30 61  |7d6-40fd-9b03-0a|
              000000a0  39 34 31 37 61 33 31 39  37 62 5c 22 7d 22 3a 7b  |9417a3197b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 34  38 5c 22 7d 22 3a 7b 22  |2.20.5.48\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxc78",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxc78",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020578,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020578,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020578,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867020579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c78849fc5c01281a325014c6dcb93f841dec05132bd10cac911b23cbb13ed70a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nxc78",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 15:03:00.682675 22 deployment.go:67] Pod "test-new-deployment-64bcfc6446-mh479" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-mh479",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2487",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47e662f7-cbec-4519-af38-d51cb9ae2a1f",
      ResourceVersion: (string) (len=5) "39292",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867020580,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "a7f67211-a7d6-40fd-9b03-0a9417a3197b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 37  66 36 37 32 31 31 2d 61  |d\":\"a7f67211-a|
              00000090  37 64 36 2d 34 30 66 64  2d 39 62 30 33 2d 30 61  |7d6-40fd-9b03-0a|
              000000a0  39 34 31 37 61 33 31 39  37 62 5c 22 7d 22 3a 7b  |9417a3197b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2r6q5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2r6q5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867020580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 15:03:00.683581 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2487" for this suite. @ 11/12/24 15:03:00.686
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 11/12/24 15:03:00.703
  I1112 15:03:00.703125 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 15:03:00.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:03:00.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:03:00.723
  STEP: Creating pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199 @ 11/12/24 15:03:00.724
  E1112 15:03:01.450894      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:02.451932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/12/24 15:03:02.73
  I1112 15:03:02.732236 22 container_probe.go:1749] Initial restart count of pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a is 0
  I1112 15:03:02.733279 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:03.452010      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:04.452201      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:04.735194 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:05.452928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:06.453740      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:06.737940 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:07.454738      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:08.454892      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:08.739751 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:09.455595      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:10.455922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:10.741984 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:11.456745      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:12.456831      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:12.743834 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:13.457545      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:14.457780      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:14.745951 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:15.458722      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:16.458822      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:16.748001 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:17.459774      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:18.459916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:18.749889 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:19.460729      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:20.460808      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:20.751660 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  E1112 15:03:21.461364      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:22.461500      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:22.753355 22 container_probe.go:1759] Get pod liveness-aac86d75-cf0c-416c-8683-a88638d9093a in namespace container-probe-2199
  I1112 15:03:22.753384 22 container_probe.go:1763] Restart count of pod container-probe-2199/liveness-aac86d75-cf0c-416c-8683-a88638d9093a is now 1 (20.021125953s elapsed)
  STEP: deleting the pod @ 11/12/24 15:03:22.753
  I1112 15:03:22.759000 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2199" for this suite. @ 11/12/24 15:03:22.76
• [22.071 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 11/12/24 15:03:22.762
  I1112 15:03:22.762663 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename svcaccounts @ 11/12/24 15:03:22.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:03:22.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:03:22.77
  STEP: Creating ServiceAccount "e2e-sa-74dkk"  @ 11/12/24 15:03:22.771
  I1112 15:03:22.773549 22 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-74dkk"  @ 11/12/24 15:03:22.773
  I1112 15:03:22.776427 22 service_accounts.go:839] AutomountServiceAccountToken: true
  I1112 15:03:22.776507 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8972" for this suite. @ 11/12/24 15:03:22.861
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 11/12/24 15:03:22.864
  I1112 15:03:22.864012 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename webhook @ 11/12/24 15:03:22.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:03:22.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:03:22.872
  STEP: Setting up server cert @ 11/12/24 15:03:22.971
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/12/24 15:03:23.348
  STEP: Deploying the webhook pod @ 11/12/24 15:03:23.351
  STEP: Wait for the deployment to be ready @ 11/12/24 15:03:23.356
  I1112 15:03:23.359249 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1112 15:03:23.462469      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:24.463123      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/12/24 15:03:25.364
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 15:03:25.368
  E1112 15:03:25.463752      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:26.368922 22 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1112 15:03:26.372061 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 15:03:26.463895      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3952-crds.webhook.example.com via the AdmissionRegistration API @ 11/12/24 15:03:26.877
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/12/24 15:03:26.889
  E1112 15:03:27.464020      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:28.464149      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:29.446036 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5879" for this suite. @ 11/12/24 15:03:29.447
  STEP: Destroying namespace "webhook-markers-3601" for this suite. @ 11/12/24 15:03:29.451
• [6.589 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 11/12/24 15:03:29.453
  I1112 15:03:29.453498 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename job @ 11/12/24 15:03:29.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:03:29.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:03:29.461
  STEP: Creating Indexed job @ 11/12/24 15:03:29.462
  E1112 15:03:29.464917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 11/12/24 15:03:29.465
  E1112 15:03:30.465279      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:31.465421      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:32.465560      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:33.465814      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:34.465883      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:35.466048      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:36.466117      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:37.466282      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 11/12/24 15:03:37.47
  I1112 15:03:37.471881 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8877" for this suite. @ 11/12/24 15:03:37.473
• [8.022 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 11/12/24 15:03:37.475
  I1112 15:03:37.475495 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename crd-webhook @ 11/12/24 15:03:37.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:03:37.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:03:37.484
  STEP: Setting up server cert @ 11/12/24 15:03:37.485
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/12/24 15:03:37.726
  STEP: Deploying the custom resource conversion webhook pod @ 11/12/24 15:03:37.729
  STEP: Wait for the deployment to be ready @ 11/12/24 15:03:37.735
  I1112 15:03:37.738103 22 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1112 15:03:38.466374      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:39.467037      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/12/24 15:03:39.742
  STEP: Verifying the service has paired with the endpoint @ 11/12/24 15:03:39.747
  E1112 15:03:40.467928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:40.748327 22 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1112 15:03:40.751372 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 15:03:41.468624      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:42.469529      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 11/12/24 15:03:43.28
  STEP: v2 custom resource should be converted @ 11/12/24 15:03:43.282
  E1112 15:03:43.470550      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:43.804555 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1066" for this suite. @ 11/12/24 15:03:43.807
• [6.335 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 11/12/24 15:03:43.81
  I1112 15:03:43.810121 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 15:03:43.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:03:43.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:03:43.821
  I1112 15:03:43.822660 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-1037 version'
  I1112 15:03:43.862475 22 builder.go:146] stderr: ""
  I1112 15:03:43.862504 22 builder.go:147] stdout: "Client Version: v1.31.2\nKustomize Version: v5.4.2\nServer Version: v1.31.2\n"
  I1112 15:03:43.862689 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1037" for this suite. @ 11/12/24 15:03:43.907
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 11/12/24 15:03:43.91
  I1112 15:03:43.910094 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename limitrange @ 11/12/24 15:03:43.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:03:43.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:03:43.918
  STEP: Creating a LimitRange @ 11/12/24 15:03:43.92
  STEP: Setting up watch @ 11/12/24 15:03:43.92
  STEP: Submitting a LimitRange @ 11/12/24 15:03:44.021
  STEP: Verifying LimitRange creation was observed @ 11/12/24 15:03:44.024
  STEP: Fetching the LimitRange to ensure it has proper values @ 11/12/24 15:03:44.024
  I1112 15:03:44.025340 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1112 15:03:44.025365 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 11/12/24 15:03:44.025
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 11/12/24 15:03:44.028
  I1112 15:03:44.029551 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1112 15:03:44.029577 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 11/12/24 15:03:44.029
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 11/12/24 15:03:44.033
  I1112 15:03:44.035285 22 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1112 15:03:44.035313 22 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 11/12/24 15:03:44.035
  STEP: Failing to create a Pod with more than max resources @ 11/12/24 15:03:44.036
  STEP: Updating a LimitRange @ 11/12/24 15:03:44.037
  STEP: Verifying LimitRange updating is effective @ 11/12/24 15:03:44.039
  E1112 15:03:44.471423      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:45.471935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 11/12/24 15:03:46.042
  STEP: Failing to create a Pod with more than max resources @ 11/12/24 15:03:46.045
  STEP: Deleting a LimitRange @ 11/12/24 15:03:46.046
  STEP: Verifying the LimitRange was deleted @ 11/12/24 15:03:46.05
  E1112 15:03:46.472674      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:47.472817      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:48.472960      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:49.473143      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:50.473271      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:03:51.052744 22 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 11/12/24 15:03:51.052
  I1112 15:03:51.056388 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4601" for this suite. @ 11/12/24 15:03:51.058
• [7.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 11/12/24 15:03:51.062
  I1112 15:03:51.062330 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/12/24 15:03:51.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:03:51.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:03:51.07
  STEP: creating a target pod @ 11/12/24 15:03:51.071
  E1112 15:03:51.474243      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:52.474584      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/12/24 15:03:53.16
  E1112 15:03:53.474870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:54.475913      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/12/24 15:03:55.167
  I1112 15:03:55.167532 22 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5411 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1112 15:03:55.167548 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  I1112 15:03:55.167895 22 exec_util.go:66] ExecWithOptions: Clientset creation
  I1112 15:03:55.167934 22 exec_util.go:83] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-5411/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1112 15:03:55.195837 22 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 11/12/24 15:03:55.198
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 11/12/24 15:03:55.199
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 11/12/24 15:03:55.203
  I1112 15:03:55.205661 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5411" for this suite. @ 11/12/24 15:03:55.208
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 11/12/24 15:03:55.212
  I1112 15:03:55.212110 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/12/24 15:03:55.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:03:55.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:03:55.22
  STEP: create the container to handle the HTTPGet hook request. @ 11/12/24 15:03:55.308
  E1112 15:03:55.475960      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:56.476133      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/12/24 15:03:57.317
  E1112 15:03:57.476804      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:03:58.476934      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 11/12/24 15:03:59.325
  E1112 15:03:59.477243      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:00.477385      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 11/12/24 15:04:01.331
  I1112 15:04:01.339311 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-819" for this suite. @ 11/12/24 15:04:01.34
• [6.131 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 11/12/24 15:04:01.343
  I1112 15:04:01.343318 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename watch @ 11/12/24 15:04:01.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:01.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:01.351
  STEP: creating a watch on configmaps @ 11/12/24 15:04:01.353
  STEP: creating a new configmap @ 11/12/24 15:04:01.353
  STEP: modifying the configmap once @ 11/12/24 15:04:01.355
  STEP: closing the watch once it receives two notifications @ 11/12/24 15:04:01.358
  I1112 15:04:01.358697 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3921  044ed971-6ac7-4a3d-9729-33050a19684f 39913 0 2024-11-12 15:04:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-12 15:04:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 15:04:01.358806 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3921  044ed971-6ac7-4a3d-9729-33050a19684f 39914 0 2024-11-12 15:04:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-12 15:04:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 11/12/24 15:04:01.358
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 11/12/24 15:04:01.361
  STEP: deleting the configmap @ 11/12/24 15:04:01.362
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 11/12/24 15:04:01.363
  I1112 15:04:01.364028 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3921  044ed971-6ac7-4a3d-9729-33050a19684f 39915 0 2024-11-12 15:04:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-12 15:04:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 15:04:01.364100 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3921  044ed971-6ac7-4a3d-9729-33050a19684f 39916 0 2024-11-12 15:04:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-12 15:04:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1112 15:04:01.364172 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3921" for this suite. @ 11/12/24 15:04:01.441
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 11/12/24 15:04:01.444
  I1112 15:04:01.444112 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename downward-api @ 11/12/24 15:04:01.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:01.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:01.452
  STEP: Creating the pod @ 11/12/24 15:04:01.454
  E1112 15:04:01.477719      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:02.477980      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:03.478972      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:04:03.972371 22 pod_client.go:173] Successfully updated pod "labelsupdate5cf89cb6-90fd-407a-a320-a9e39e085443"
  E1112 15:04:04.480042      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:05.480461      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:04:05.979020 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9779" for this suite. @ 11/12/24 15:04:05.98
• [4.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 11/12/24 15:04:05.984
  I1112 15:04:05.984057 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 15:04:05.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:05.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:05.994
  STEP: Creating configMap with name configmap-test-volume-d68b16f5-848b-4a02-8263-68b74ce4fd6c @ 11/12/24 15:04:05.996
  STEP: Creating a pod to test consume configMaps @ 11/12/24 15:04:05.998
  E1112 15:04:06.480802      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:07.481178      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:08.481997      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:09.482056      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:04:10.006
  I1112 15:04:10.007385 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-8506ed12-7003-4579-a146-c2edf87b9718 container agnhost-container: <nil>
  STEP: delete the pod @ 11/12/24 15:04:10.009
  I1112 15:04:10.016402 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7686" for this suite. @ 11/12/24 15:04:10.017
• [4.036 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 11/12/24 15:04:10.02
  I1112 15:04:10.020035 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename kubectl @ 11/12/24 15:04:10.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:10.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:10.028
  I1112 15:04:10.029416 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8794 create -f -'
  I1112 15:04:10.105555 22 builder.go:146] stderr: ""
  I1112 15:04:10.105597 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1112 15:04:10.105640 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8794 create -f -'
  I1112 15:04:10.191337 22 builder.go:146] stderr: ""
  I1112 15:04:10.191375 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/12/24 15:04:10.191
  E1112 15:04:10.482710      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:04:11.237749 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1112 15:04:11.237779 22 framework.go:733] Found 1 / 1
  I1112 15:04:11.237791 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1112 15:04:11.239128 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1112 15:04:11.239145 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1112 15:04:11.239179 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8794 describe pod agnhost-primary-vdzgb'
  I1112 15:04:11.289347 22 builder.go:146] stderr: ""
  I1112 15:04:11.289416 22 builder.go:147] stdout: "Name:             agnhost-primary-vdzgb\nNamespace:        kubectl-8794\nPriority:         0\nService Account:  default\nNode:             worker01/10.255.0.207\nStart Time:       Tue, 12 Nov 2024 15:04:10 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               172.20.5.35\nIPs:\n  IP:           172.20.5.35\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://9bb79d15693b59319a3b3a587ba9859bc74ae685d2c6e9164d921ea92d6c5e0e\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 12 Nov 2024 15:04:10 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-9jr79 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-9jr79:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8794/agnhost-primary-vdzgb to worker01\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I1112 15:04:11.289468 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8794 describe rc agnhost-primary'
  I1112 15:04:11.338814 22 builder.go:146] stderr: ""
  I1112 15:04:11.338874 22 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8794\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-vdzgb\n"
  I1112 15:04:11.338926 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8794 describe service agnhost-primary'
  I1112 15:04:11.382450 22 builder.go:146] stderr: ""
  I1112 15:04:11.382491 22 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8794\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.68.200.24\nIPs:                      10.68.200.24\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                172.20.5.35:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1112 15:04:11.383934 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8794 describe node master01'
  I1112 15:04:11.435771 22 builder.go:146] stderr: ""
  I1112 15:04:11.435841 22 builder.go:147] stdout: "Name:               master01\nRoles:              master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=master01\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=master\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 12 Nov 2024 13:36:21 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  master01\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 12 Nov 2024 15:04:04 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 12 Nov 2024 13:37:09 +0000   Tue, 12 Nov 2024 13:37:09 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Tue, 12 Nov 2024 15:04:04 +0000   Tue, 12 Nov 2024 13:36:21 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 12 Nov 2024 15:04:04 +0000   Tue, 12 Nov 2024 13:36:21 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 12 Nov 2024 15:04:04 +0000   Tue, 12 Nov 2024 13:36:21 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 12 Nov 2024 15:04:04 +0000   Tue, 12 Nov 2024 13:36:21 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.255.0.206\n  Hostname:    master01\nCapacity:\n  cpu:                4\n  ephemeral-storage:  40901312Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7441168Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  37694649077\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7133968Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 4ee05b8e77a94976bcb4605d4d60ac1f\n  System UUID:                4ee05b8e-77a9-4976-bcb4-605d4d60ac1f\n  Boot ID:                    ceab468c-e8a4-46f9-8394-a2b9656142a0\n  Kernel Version:             5.15.0-117-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.23\n  Kubelet Version:            v1.31.2\n  Kube-Proxy Version:         v1.31.2\nPodCIDR:                      172.20.0.0/24\nPodCIDRs:                     172.20.0.0/24\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-bvtmn                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         87m\n  kube-system                 dashboard-metrics-scraper-58cf467b87-mmsz8                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         86m\n  kube-system                 metrics-server-7cfd7b768f-dtznx                            100m (2%)     0 (0%)      200Mi (2%)       0 (0%)         86m\n  kube-system                 node-local-dns-wthbq                                       25m (0%)      0 (0%)      5Mi (0%)         0 (0%)         86m\n  sonobuoy                    sonobuoy-e2e-job-0ac2a22d6a0f487f                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         85m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-6206ccc493704952-zvth6    0 (0%)        0 (0%)      0 (0%)           0 (0%)         85m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                375m (9%)   0 (0%)\n  memory             205Mi (2%)  0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I1112 15:04:11.435893 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3129661397 --namespace=kubectl-8794 describe namespace kubectl-8794'
  I1112 15:04:11.478478 22 builder.go:146] stderr: ""
  I1112 15:04:11.478513 22 builder.go:147] stdout: "Name:         kubectl-8794\nLabels:       e2e-framework=kubectl\n              e2e-run=53b1e325-7b82-40d5-83f4-e85cf91f7ab1\n              kubernetes.io/metadata.name=kubectl-8794\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1112 15:04:11.478629 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8794" for this suite. @ 11/12/24 15:04:11.479
• [1.462 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 11/12/24 15:04:11.482
  I1112 15:04:11.482544 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  E1112 15:04:11.482888      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 15:04:11.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:11.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:11.583
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/12/24 15:04:11.584
  E1112 15:04:12.483943      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:13.484086      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:04:13.592
  I1112 15:04:13.593299 22 output.go:196] Trying to get logs from node worker01 pod pod-ba8a7552-cef2-43bc-8284-79b32ad41d33 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 15:04:13.595
  I1112 15:04:13.601229 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4587" for this suite. @ 11/12/24 15:04:13.602
• [2.123 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 11/12/24 15:04:13.605
  I1112 15:04:13.605610 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename statefulset @ 11/12/24 15:04:13.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:13.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:13.612
  STEP: Creating service test in namespace statefulset-6977 @ 11/12/24 15:04:13.614
  STEP: Creating statefulset ss in namespace statefulset-6977 @ 11/12/24 15:04:13.616
  I1112 15:04:13.621192 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E1112 15:04:14.484173      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:15.484309      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:16.484820      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:17.484895      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:18.485040      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:19.485198      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:20.485782      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:21.485883      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:22.486035      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:23.486155      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:04:23.622587 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 11/12/24 15:04:23.626
  STEP: updating a scale subresource @ 11/12/24 15:04:23.627
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/12/24 15:04:23.629
  STEP: Patch a scale subresource @ 11/12/24 15:04:23.63
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/12/24 15:04:23.634
  I1112 15:04:23.635464 22 statefulset.go:138] Deleting all statefulset in ns statefulset-6977
  I1112 15:04:23.638408 22 rest.go:150] Scaling statefulset ss to 0
  E1112 15:04:24.486552      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:25.487452      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:26.487909      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:27.488035      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:28.488164      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:29.488242      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:30.488364      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:31.489334      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:32.489464      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:33.489589      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:04:33.648918 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1112 15:04:33.650098 22 rest.go:88] Deleting statefulset ss
  I1112 15:04:33.654958 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6977" for this suite. @ 11/12/24 15:04:33.656
• [20.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 11/12/24 15:04:33.659
  I1112 15:04:33.659618 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename field-validation @ 11/12/24 15:04:33.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:33.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:33.667
  I1112 15:04:33.668954 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  W1112 15:04:33.669619      22 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001647950 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1112 15:04:34.490480      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:35.490813      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1112 15:04:36.191507      22 warnings.go:70] unknown field "alpha"
  W1112 15:04:36.191521      22 warnings.go:70] unknown field "beta"
  W1112 15:04:36.191524      22 warnings.go:70] unknown field "delta"
  W1112 15:04:36.191527      22 warnings.go:70] unknown field "epsilon"
  W1112 15:04:36.191530      22 warnings.go:70] unknown field "gamma"
  E1112 15:04:36.490886      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:04:36.707848 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-948" for this suite. @ 11/12/24 15:04:36.709
• [3.052 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 11/12/24 15:04:36.711
  I1112 15:04:36.711567 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename job @ 11/12/24 15:04:36.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:36.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:36.718
  STEP: Creating a suspended job @ 11/12/24 15:04:36.724
  STEP: Patching the Job @ 11/12/24 15:04:36.728
  STEP: Watching for Job to be patched @ 11/12/24 15:04:36.739
  I1112 15:04:36.740100 22 job.go:1330] Event ADDED observed for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-job-label:e2e-jnrns] and annotations: map[]
  I1112 15:04:36.740139 22 job.go:1330] Event MODIFIED observed for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-job-label:e2e-jnrns] and annotations: map[]
  I1112 15:04:36.740154 22 job.go:1333] Event MODIFIED found for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-jnrns:patched e2e-job-label:e2e-jnrns] and annotations: map[]
  STEP: Updating the job @ 11/12/24 15:04:36.74
  STEP: Watching for Job to be updated @ 11/12/24 15:04:36.744
  I1112 15:04:36.745120 22 job.go:1333] Event MODIFIED found for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-jnrns:patched e2e-job-label:e2e-jnrns] and annotations: map[updated:true]
  I1112 15:04:36.745150 22 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 11/12/24 15:04:36.745
  I1112 15:04:36.746233 22 job.go:1233] Job: e2e-jnrns as labels: map[e2e-jnrns:patched e2e-job-label:e2e-jnrns]
  STEP: Waiting for job to complete @ 11/12/24 15:04:36.746
  E1112 15:04:37.490976      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:38.491947      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:39.492649      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:40.492799      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:41.493017      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:42.493185      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:43.494024      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:44.494182      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:45.495090      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:46.495943      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 11/12/24 15:04:46.751
  STEP: Watching for Job to be deleted @ 11/12/24 15:04:46.754
  I1112 15:04:46.755118 22 job.go:1330] Event MODIFIED observed for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-jnrns:patched e2e-job-label:e2e-jnrns] and annotations: map[updated:true]
  I1112 15:04:46.755232 22 job.go:1330] Event MODIFIED observed for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-jnrns:patched e2e-job-label:e2e-jnrns] and annotations: map[updated:true]
  I1112 15:04:46.755281 22 job.go:1330] Event MODIFIED observed for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-jnrns:patched e2e-job-label:e2e-jnrns] and annotations: map[updated:true]
  I1112 15:04:46.755390 22 job.go:1330] Event MODIFIED observed for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-jnrns:patched e2e-job-label:e2e-jnrns] and annotations: map[updated:true]
  I1112 15:04:46.755456 22 job.go:1330] Event MODIFIED observed for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-jnrns:patched e2e-job-label:e2e-jnrns] and annotations: map[updated:true]
  I1112 15:04:46.755469 22 job.go:1333] Event DELETED found for Job e2e-jnrns in namespace job-7235 with labels: map[e2e-jnrns:patched e2e-job-label:e2e-jnrns] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 11/12/24 15:04:46.755
  I1112 15:04:46.756821 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7235" for this suite. @ 11/12/24 15:04:46.758
• [10.051 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 11/12/24 15:04:46.763
  I1112 15:04:46.763190 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-runtime @ 11/12/24 15:04:46.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:46.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:46.772
  STEP: create the container @ 11/12/24 15:04:46.774
  W1112 15:04:46.777940      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/12/24 15:04:46.778
  E1112 15:04:47.496951      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:48.497727      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:49.498765      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/12/24 15:04:49.784
  STEP: the container should be terminated @ 11/12/24 15:04:49.785
  STEP: the termination message should be set @ 11/12/24 15:04:49.785
  I1112 15:04:49.785966 22 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 11/12/24 15:04:49.785
  I1112 15:04:49.791889 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1986" for this suite. @ 11/12/24 15:04:49.793
• [3.032 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 11/12/24 15:04:49.795
  I1112 15:04:49.795673 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replication-controller @ 11/12/24 15:04:49.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:49.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:49.803
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 11/12/24 15:04:49.805
  E1112 15:04:50.498875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:51.499918      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 11/12/24 15:04:51.813
  STEP: Then the orphan pod is adopted @ 11/12/24 15:04:51.816
  E1112 15:04:52.500343      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:04:52.819439 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-573" for this suite. @ 11/12/24 15:04:52.821
• [3.028 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 11/12/24 15:04:52.823
  I1112 15:04:52.823423 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename container-probe @ 11/12/24 15:04:52.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:04:52.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:04:52.83
  STEP: Creating pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429 @ 11/12/24 15:04:52.832
  E1112 15:04:53.501038      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:54.501204      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/12/24 15:04:54.839
  I1112 15:04:54.840152 22 container_probe.go:1749] Initial restart count of pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd is 0
  I1112 15:04:54.841133 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:04:55.501733      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:56.502228      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:04:56.843418 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:04:57.503088      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:04:58.503157      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:04:58.845290 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:04:59.503922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:00.504061      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:00.847523 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:01.504179      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:02.504327      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:02.849437 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:03.505116      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:04.505270      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:04.851457 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:05.506146      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:06.506274      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:06.853394 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:07.507104      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:08.507893      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:08.855774 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:09.508554      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:10.508684      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:10.857721 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:11.509351      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:12.509442      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:12.859577 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:13.510275      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:14.510435      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:14.861732 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:15.511426      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:16.511518      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:16.863704 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:17.511916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:18.512041      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:18.866176 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:19.512828      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:20.512912      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:20.867970 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:21.513640      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:22.513759      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:22.869916 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:23.514587      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:24.515545      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:24.871828 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:25.515909      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:26.516046      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:26.874251 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:27.516934      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:28.517022      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:28.876139 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:29.517913      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:30.518037      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:30.878112 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:31.518829      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:32.518961      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:32.879989 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:33.519687      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:34.519920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:34.882296 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:35.520969      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:36.521283      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:36.884452 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:37.522153      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:38.522292      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:38.886254 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:39.522970      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:40.523922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:40.888013 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:41.524686      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:42.524825      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:42.889971 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:43.525654      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:44.525740      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:44.891935 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:45.526586      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:46.526677      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:46.893826 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:47.527497      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:48.527925      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:48.895990 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:49.528766      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:50.529145      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:50.898315 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:51.529972      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:52.530097      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:52.900120 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:53.530720      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:54.531042      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:54.902055 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:55.531347      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:56.531929      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:56.903997 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:57.532657      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:05:58.532775      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:05:58.906052 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:05:59.533818      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:00.534222      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:00.908445 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:01.535130      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:02.535920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:02.911184 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:03.536842      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:04.537057      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:04.913236 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:05.537901      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:06.537990      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:06.915138 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:07.538850      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:08.539914      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:08.917069 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:09.540819      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:10.540899      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:10.918964 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:11.541619      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:12.541718      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:12.920706 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:13.542330      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:14.543211      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:14.923661 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:15.543912      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:16.544024      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:16.926217 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:17.544882      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:18.545010      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:18.928046 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:19.545810      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:20.546301      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:20.930376 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:21.547019      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:22.547117      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:22.932296 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:23.547917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:24.548768      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:24.935087 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:25.549767      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:26.549892      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:26.937113 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:27.550748      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:28.550858      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:28.938893 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:29.551619      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:30.552656      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:30.940669 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:31.553276      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:32.553542      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:32.942552 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:33.554141      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:34.554327      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:34.944667 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:35.555317      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:36.555916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:36.947088 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:37.556737      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:38.556939      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:38.948954 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:39.557682      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:40.558242      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:40.951246 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:41.558833      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:42.558906      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:42.953828 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:43.559918      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:44.560090      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:44.956482 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:45.561089      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:46.561187      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:46.958386 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:47.562027      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:48.562158      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:48.960289 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:49.563033      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:50.563915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:50.961739 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:51.564319      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:52.564445      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:52.963597 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:53.565222      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:54.565396      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:54.965660 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:55.566312      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:56.566396      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:56.967438 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:57.566859      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:06:58.567920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:06:58.970151 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:06:59.568948      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:00.569042      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:00.972360 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:01.570065      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:02.570068      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:02.974221 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:03.570845      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:04.570861      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:04.976232 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:05.571876      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:06.572008      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:06.978012 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:07.572607      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:08.572731      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:08.979935 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:09.573425      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:10.573498      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:10.983081 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:11.573658      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:12.573789      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:12.984882 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:13.574535      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:14.574855      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:14.987221 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:15.575843      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:16.575965      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:16.989331 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:17.576947      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:18.577032      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:18.990620 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:19.577127      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:20.577251      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:20.992439 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:21.578071      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:22.578155      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:22.994238 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:23.578941      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:24.579933      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:24.996175 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:25.580817      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:26.580941      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:26.997979 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:27.581088      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:28.581217      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:29.000409 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:29.582115      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:30.582241      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:31.002185 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:31.582315      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:32.582851      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:33.003939 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:33.583457      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:34.583512      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:35.005532 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:35.584098      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:36.584227      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:37.007318 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:37.584936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:38.584993      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:39.009107 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:39.585592      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:40.585716      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:41.010837 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:41.586420      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:42.586502      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:43.013591 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:43.587225      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:44.587388      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:45.015675 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:45.587921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:46.588045      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:47.018288 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:47.588904      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:48.589049      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:49.019988 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:49.589694      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:50.589772      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:51.021939 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:51.590554      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:52.590681      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:53.023891 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:53.591507      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:54.591592      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:55.026022 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:55.592151      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:56.593095      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:57.028235 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:57.593612      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:07:58.593731      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:07:59.030938 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:07:59.594596      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:00.594724      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:01.032770 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:01.595400      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:02.595487      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:03.034571 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:03.595913      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:04.596160      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:05.036464 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:05.597048      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:06.597177      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:07.038441 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:07.598046      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:08.598125      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:09.041395 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:09.599075      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:10.599921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:11.044162 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:11.600760      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:12.600890      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:13.046129 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:13.601440      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:14.602226      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:15.048500 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:15.603077      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:16.603918      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:17.051213 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:17.604802      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:18.604926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:19.052993 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:19.605687      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:20.605807      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:21.054775 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:21.606290      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:22.606416      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:23.056517 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:23.607122      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:24.607198      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:25.058584 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:25.608156      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:26.608239      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:27.060380 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:27.608984      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:28.609111      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:29.062268 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:29.609933      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:30.610058      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:31.064252 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:31.610848      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:32.610869      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:33.065921 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:33.611509      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:34.612525      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:35.067775 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:35.613068      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:36.613195      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:37.070416 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:37.613991      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:38.614077      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:39.072338 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:39.614994      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:40.615915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:41.074147 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:41.616734      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:42.616866      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:43.076041 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:43.617294      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:44.617452      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:45.078878 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:45.618482      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:46.618517      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:47.081549 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:47.618855      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:48.618949      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:49.084122 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:49.619798      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:50.619900      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:51.086138 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:51.620752      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:52.620831      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:08:53.087718 22 container_probe.go:1759] Get pod test-grpc-f93b4375-c856-4263-89ce-66ecb85338bd in namespace container-probe-8429
  E1112 15:08:53.621228      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:54.621400      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/12/24 15:08:55.087
  I1112 15:08:55.094267 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8429" for this suite. @ 11/12/24 15:08:55.097
• [242.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 11/12/24 15:08:55.099
  I1112 15:08:55.099625 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replicaset @ 11/12/24 15:08:55.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:08:55.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:08:55.107
  I1112 15:08:55.113684 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1112 15:08:55.622459      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:56.622616      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:57.622864      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:58.622943      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:08:59.623917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:09:00.115717 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/12/24 15:09:00.115
  STEP: Scaling up "test-rs" replicaset @ 11/12/24 15:09:00.115
  I1112 15:09:00.120500 22 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 11/12/24 15:09:00.12
  I1112 15:09:00.125987 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9194 with ReadyReplicas 1, AvailableReplicas 1
  I1112 15:09:00.134581 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9194 with ReadyReplicas 1, AvailableReplicas 1
  I1112 15:09:00.140474 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9194 with ReadyReplicas 1, AvailableReplicas 1
  I1112 15:09:00.144134 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9194 with ReadyReplicas 1, AvailableReplicas 1
  E1112 15:09:00.624385      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:09:01.284416 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9194 with ReadyReplicas 2, AvailableReplicas 2
  I1112 15:09:01.564522 22 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-9194 with ReadyReplicas 3 found true
  I1112 15:09:01.564634 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9194" for this suite. @ 11/12/24 15:09:01.566
• [6.470 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 11/12/24 15:09:01.569
  I1112 15:09:01.569411 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename certificates @ 11/12/24 15:09:01.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:09:01.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:09:01.577
  E1112 15:09:01.625232      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting /apis @ 11/12/24 15:09:02.204
  STEP: getting /apis/certificates.k8s.io @ 11/12/24 15:09:02.206
  STEP: getting /apis/certificates.k8s.io/v1 @ 11/12/24 15:09:02.207
  STEP: creating @ 11/12/24 15:09:02.207
  STEP: getting @ 11/12/24 15:09:02.215
  STEP: listing @ 11/12/24 15:09:02.216
  STEP: watching @ 11/12/24 15:09:02.217
  I1112 15:09:02.217148 22 certificates.go:316] starting watch
  STEP: patching @ 11/12/24 15:09:02.217
  STEP: updating @ 11/12/24 15:09:02.22
  I1112 15:09:02.223861 22 certificates.go:332] waiting for watch events with expected annotations
  I1112 15:09:02.223885 22 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 11/12/24 15:09:02.223
  STEP: patching /approval @ 11/12/24 15:09:02.225
  STEP: updating /approval @ 11/12/24 15:09:02.227
  STEP: getting /status @ 11/12/24 15:09:02.23
  STEP: patching /status @ 11/12/24 15:09:02.231
  STEP: updating /status @ 11/12/24 15:09:02.234
  STEP: deleting @ 11/12/24 15:09:02.238
  STEP: deleting a collection @ 11/12/24 15:09:02.242
  I1112 15:09:02.246483 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6709" for this suite. @ 11/12/24 15:09:02.247
• [0.680 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 11/12/24 15:09:02.25
  I1112 15:09:02.250019 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename projected @ 11/12/24 15:09:02.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:09:02.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:09:02.258
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-fb53df73-f592-4942-8405-ffed248f0489 @ 11/12/24 15:09:02.348
  STEP: Creating the pod @ 11/12/24 15:09:02.351
  E1112 15:09:02.625875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:03.626109      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-fb53df73-f592-4942-8405-ffed248f0489 @ 11/12/24 15:09:04.371
  STEP: waiting to observe update in volume @ 11/12/24 15:09:04.373
  E1112 15:09:04.626373      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:05.626511      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:06.626663      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:07.626868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:08.627793      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:09.628015      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:10.628031      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:11.628073      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:12.628162      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:13.628296      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:14.628550      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:15.628637      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:16.628891      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:17.628955      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:18.629313      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:19.630237      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:20.631022      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:21.631909      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:22.632083      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:23.632228      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:24.632611      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:25.633636      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:26.634143      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:27.634472      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:28.634964      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:29.635906      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:30.636961      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:31.637046      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:32.637432      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:33.637676      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:34.638196      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:35.638296      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:36.638801      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:37.638868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:38.639175      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:39.639932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:40.639999      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:41.640086      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:42.640542      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:43.640688      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:44.641245      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:45.641389      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:46.642083      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:47.642105      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:48.642448      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:49.642622      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:50.643550      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:51.643921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:52.644394      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:53.644521      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:54.644910      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:55.645026      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:56.645602      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:57.645726      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:58.646671      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:09:59.646875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:00.647147      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:01.647942      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:02.648183      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:03.648248      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:04.648739      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:05.648863      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:06.649181      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:07.649314      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:08.649816      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:09.650043      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:10.650485      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:11.651479      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:12.651936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:13.652018      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:14.652264      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:15.653295      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:16.654060      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:17.654866      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:18.655679      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:19.655919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:20.656899      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:21.657012      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:22.657255      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:23.658101      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:24.658612      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:25.658744      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:26.659088      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:27.659928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:28.660176      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:29.660659      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:30.661334      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:31.661476      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:32.662186      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:33.662259      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:10:34.609676 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9219" for this suite. @ 11/12/24 15:10:34.611
• [92.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 11/12/24 15:10:34.613
  I1112 15:10:34.613991 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename statefulset @ 11/12/24 15:10:34.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:10:34.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:10:34.621
  STEP: Creating service test in namespace statefulset-168 @ 11/12/24 15:10:34.623
  I1112 15:10:34.635252 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E1112 15:10:34.662408      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:35.662447      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:36.662576      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:37.662665      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:38.662802      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:39.662876      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:40.663942      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:41.664003      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:42.664080      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:43.664204      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:10:44.635151 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 11/12/24 15:10:44.637
  I1112 15:10:44.647346 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1112 15:10:44.647386 22 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E1112 15:10:44.664418      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:45.665312      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:46.665441      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:47.665664      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:48.665790      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:49.665963      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:50.666093      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:51.666176      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:52.667125      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:53.667206      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:10:54.644491 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1112 15:10:54.644518 22 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 11/12/24 15:10:54.646
  STEP: Delete all of the StatefulSets @ 11/12/24 15:10:54.648
  STEP: Verify that StatefulSets have been deleted @ 11/12/24 15:10:54.65
  I1112 15:10:54.651886 22 statefulset.go:138] Deleting all statefulset in ns statefulset-168
  I1112 15:10:54.655751 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-168" for this suite. @ 11/12/24 15:10:54.658
• [20.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 11/12/24 15:10:54.664
  I1112 15:10:54.664296 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-preemption @ 11/12/24 15:10:54.665
  E1112 15:10:54.667624      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:10:54.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:10:54.676
  I1112 15:10:54.685121 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1112 15:10:55.667714      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:56.667953      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:57.668513      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:58.668743      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:10:59.668785      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:00.668924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:01.669261      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:02.669213      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:03.669252      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:04.670296      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:05.670857      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:06.671917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:07.672000      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:08.672129      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:09.673105      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:10.673764      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:11.673919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:12.674974      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:13.675537      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:14.675751      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:15.675833      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:16.675972      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:17.676039      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:18.676440      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:19.676537      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:20.676671      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:21.677604      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:22.677741      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:23.678315      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:24.678493      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:25.678876      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:26.678954      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:27.679940      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:28.680020      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:29.680489      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:30.681191      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:31.681815      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:32.682633      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:33.682945      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:34.683010      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:35.683104      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:36.683928      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:37.684029      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:38.684123      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:39.685149      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:40.685288      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:41.685380      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:42.685515      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:43.685950      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:44.686240      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:45.686623      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:46.686645      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:47.686869      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:48.686924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:49.687728      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:50.688081      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:51.688441      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:52.688680      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:53.689258      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:11:54.687165 22 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/12/24 15:11:54.688
  E1112 15:11:54.689275      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:11:54.698301 22 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1112 15:11:54.702116 22 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1112 15:11:54.714450 22 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1112 15:11:54.718245 22 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1112 15:11:54.729046 22 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1112 15:11:54.732729 22 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/12/24 15:11:54.732
  E1112 15:11:55.689430      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:56.689574      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 11/12/24 15:11:56.743
  E1112 15:11:57.690626      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:58.691433      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:11:59.691973      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:00.693000      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:12:00.787748 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2207" for this suite. @ 11/12/24 15:12:00.789
• [66.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 11/12/24 15:12:00.792
  I1112 15:12:00.792447 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename secrets @ 11/12/24 15:12:00.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:12:00.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:12:00.802
  STEP: Creating secret with name s-test-opt-del-3fff9200-63e2-4c0e-b886-e127a1b1d9b0 @ 11/12/24 15:12:00.889
  STEP: Creating secret with name s-test-opt-upd-3d8d7e96-47b8-4823-8b14-2dede050f5e9 @ 11/12/24 15:12:00.892
  STEP: Creating the pod @ 11/12/24 15:12:00.894
  E1112 15:12:01.693087      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:02.693155      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-3fff9200-63e2-4c0e-b886-e127a1b1d9b0 @ 11/12/24 15:12:02.911
  STEP: Updating secret s-test-opt-upd-3d8d7e96-47b8-4823-8b14-2dede050f5e9 @ 11/12/24 15:12:02.913
  STEP: Creating secret with name s-test-opt-create-ef9c6d00-2af6-443c-9656-f0049fd63b63 @ 11/12/24 15:12:02.915
  STEP: waiting to observe update in volume @ 11/12/24 15:12:02.918
  E1112 15:12:03.693795      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:04.694060      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:05.694218      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:06.694269      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:07.695208      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:08.695929      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:09.696953      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:10.697804      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:11.698065      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:12.698662      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:13.698786      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:14.698881      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:15.699922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:16.700045      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:17.700352      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:18.700494      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:19.700584      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:20.700666      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:21.700893      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:22.701342      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:23.701549      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:24.701804      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:25.702246      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:26.702785      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:27.703816      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:28.703901      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:29.704073      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:30.704153      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:31.704526      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:32.704668      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:33.704888      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:34.704937      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:35.705881      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:36.706524      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:37.706608      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:38.706867      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:39.707914      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:40.708061      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:41.708402      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:42.708538      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:43.708708      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:44.708943      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:45.709832      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:46.710625      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:47.711649      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:48.711934      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:49.712289      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:50.713195      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:51.714184      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:52.714257      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:53.714360      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:54.715395      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:55.715467      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:56.715554      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:57.715986      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:58.716045      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:12:59.716347      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:00.716496      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:01.716875      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:02.716685      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:03.717232      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:04.717304      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:05.717407      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:06.717539      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:07.718084      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:08.718168      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:09.718681      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:10.718812      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:11.718859      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:12.719935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:13.720399      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:14.720402      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:15.720865      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:16.720962      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:17.721239      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:18.721386      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:19.721935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:20.722071      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:21.722141      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:22.722191      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:23.722780      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:24.722868      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:25.723921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:26.724050      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:27.724848      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:28.724980      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:29.725398      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:30.725541      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:31.166136 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6872" for this suite. @ 11/12/24 15:13:31.167
• [90.377 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 11/12/24 15:13:31.17
  I1112 15:13:31.170013 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 15:13:31.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:31.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:31.178
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/12/24 15:13:31.18
  E1112 15:13:31.725918      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:32.726060      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:13:33.187
  I1112 15:13:33.188512 22 output.go:196] Trying to get logs from node worker01 pod pod-1a1ded7d-9c2f-4d65-b536-7309cce9e325 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 15:13:33.19
  I1112 15:13:33.197209 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6218" for this suite. @ 11/12/24 15:13:33.198
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 11/12/24 15:13:33.201
  I1112 15:13:33.201097 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename configmap @ 11/12/24 15:13:33.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:33.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:33.208
  STEP: Creating configMap configmap-7794/configmap-test-62d92823-fda5-4860-ab33-065c1e236139 @ 11/12/24 15:13:33.21
  STEP: Creating a pod to test consume configMaps @ 11/12/24 15:13:33.212
  E1112 15:13:33.726109      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:34.727083      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:13:35.219
  I1112 15:13:35.220671 22 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-f013f41c-3e1c-443b-aac1-49dd692c7baa container env-test: <nil>
  STEP: delete the pod @ 11/12/24 15:13:35.223
  I1112 15:13:35.229507 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7794" for this suite. @ 11/12/24 15:13:35.23
• [2.033 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 11/12/24 15:13:35.233
  I1112 15:13:35.233811 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename init-container @ 11/12/24 15:13:35.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:35.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:35.24
  STEP: creating the pod @ 11/12/24 15:13:35.242
  I1112 15:13:35.242165 22 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E1112 15:13:35.727919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:36.728103      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:37.728210      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:37.963348 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-172" for this suite. @ 11/12/24 15:13:37.965
• [2.734 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 11/12/24 15:13:37.967
  I1112 15:13:37.967446 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename replication-controller @ 11/12/24 15:13:37.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:37.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:37.975
  STEP: Creating ReplicationController "e2e-rc-2r4n4" @ 11/12/24 15:13:37.976
  I1112 15:13:37.979799 22 rc.go:792] Get Replication Controller "e2e-rc-2r4n4" to confirm replicas
  E1112 15:13:38.729122      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:38.980491 22 rc.go:792] Get Replication Controller "e2e-rc-2r4n4" to confirm replicas
  I1112 15:13:38.981608 22 rc.go:801] Found 1 replicas for "e2e-rc-2r4n4" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-2r4n4" @ 11/12/24 15:13:38.981
  STEP: Updating a scale subresource @ 11/12/24 15:13:38.982
  STEP: Verifying replicas where modified for replication controller "e2e-rc-2r4n4" @ 11/12/24 15:13:38.984
  I1112 15:13:38.984756 22 rc.go:792] Get Replication Controller "e2e-rc-2r4n4" to confirm replicas
  E1112 15:13:39.729671      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:39.985175 22 rc.go:792] Get Replication Controller "e2e-rc-2r4n4" to confirm replicas
  I1112 15:13:39.986641 22 rc.go:801] Found 2 replicas for "e2e-rc-2r4n4" replication controller
  I1112 15:13:39.986771 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6331" for this suite. @ 11/12/24 15:13:39.988
• [2.024 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 11/12/24 15:13:39.991
  I1112 15:13:39.991461 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sysctl @ 11/12/24 15:13:39.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:39.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:39.999
  STEP: Creating a pod with one valid and two invalid sysctls @ 11/12/24 15:13:40
  I1112 15:13:40.002940 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7919" for this suite. @ 11/12/24 15:13:40.089
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 11/12/24 15:13:40.092
  I1112 15:13:40.092120 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename daemonsets @ 11/12/24 15:13:40.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:40.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:40.1
  I1112 15:13:40.192864 22 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 11/12/24 15:13:40.195
  I1112 15:13:40.197136 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 15:13:40.197158 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 11/12/24 15:13:40.197
  I1112 15:13:40.297777 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 15:13:40.297805 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  E1112 15:13:40.730881      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:41.296687 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 15:13:41.296714 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  E1112 15:13:41.731916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:42.297567 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1112 15:13:42.297595 22 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 11/12/24 15:13:42.298
  I1112 15:13:42.312259 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 15:13:42.312294 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 11/12/24 15:13:42.312
  I1112 15:13:42.398212 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 15:13:42.398236 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  E1112 15:13:42.732532      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:43.319686 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 15:13:43.319712 22 fixtures.go:130] Node master01 is running 0 daemon pod, expected 1
  E1112 15:13:43.733308      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:44.319703 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1112 15:13:44.319728 22 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/12/24 15:13:44.322
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-416, will wait for the garbage collector to delete the pods @ 11/12/24 15:13:44.322
  I1112 15:13:44.375772 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.106344ms
  I1112 15:13:44.476207 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.431738ms
  E1112 15:13:44.733692      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:45.678206 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1112 15:13:45.678235 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1112 15:13:45.679499 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42132"},"items":null}

  I1112 15:13:45.680442 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42132"},"items":null}

  I1112 15:13:45.691616 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1112 15:13:45.733990      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "daemonsets-416" for this suite. @ 11/12/24 15:13:45.783
• [5.694 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 11/12/24 15:13:45.785
  I1112 15:13:45.785985 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename deployment @ 11/12/24 15:13:45.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:45.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:45.794
  STEP: creating a Deployment @ 11/12/24 15:13:45.8
  I1112 15:13:45.800307 22 deployment.go:507] Creating simple deployment test-deployment-6zsgx
  I1112 15:13:45.806628 22 deployment.go:222] deployment "test-deployment-6zsgx" doesn't have the required revision set
  E1112 15:13:46.734074      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:47.734212      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 11/12/24 15:13:47.812
  I1112 15:13:47.813746 22 deployment.go:532] Deployment test-deployment-6zsgx has Conditions: [{Available True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:46 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6zsgx-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 11/12/24 15:13:47.813
  I1112 15:13:47.819010 22 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 15, 13, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 15, 13, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 12, 15, 13, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 12, 15, 13, 45, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-6zsgx-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 11/12/24 15:13:47.819
  I1112 15:13:47.819851 22 deployment.go:579] Observed &Deployment event: ADDED
  I1112 15:13:47.819878 22 deployment.go:575] Observed Deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6zsgx-f4dbbbf74"}
  I1112 15:13:47.819950 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I1112 15:13:47.819968 22 deployment.go:575] Observed Deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6zsgx-f4dbbbf74"}
  I1112 15:13:47.819978 22 deployment.go:575] Observed Deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1112 15:13:47.820057 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I1112 15:13:47.820077 22 deployment.go:575] Observed Deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1112 15:13:47.820089 22 deployment.go:575] Observed Deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6zsgx-f4dbbbf74" is progressing.}
  I1112 15:13:47.820180 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I1112 15:13:47.820200 22 deployment.go:575] Observed Deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:46 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1112 15:13:47.820211 22 deployment.go:575] Observed Deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6zsgx-f4dbbbf74" has successfully progressed.}
  I1112 15:13:47.820279 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I1112 15:13:47.820295 22 deployment.go:575] Observed Deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:46 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1112 15:13:47.820307 22 deployment.go:575] Observed Deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6zsgx-f4dbbbf74" has successfully progressed.}
  I1112 15:13:47.820323 22 deployment.go:572] Found Deployment test-deployment-6zsgx in namespace deployment-3138 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1112 15:13:47.820362 22 deployment.go:583] Deployment test-deployment-6zsgx has an updated status
  STEP: patching the Statefulset Status @ 11/12/24 15:13:47.82
  I1112 15:13:47.820391 22 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1112 15:13:47.824745 22 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 11/12/24 15:13:47.824
  I1112 15:13:47.825580 22 deployment.go:616] Observed &Deployment event: ADDED
  I1112 15:13:47.825601 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6zsgx-f4dbbbf74"}
  I1112 15:13:47.825676 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1112 15:13:47.825693 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6zsgx-f4dbbbf74"}
  I1112 15:13:47.825711 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1112 15:13:47.825793 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1112 15:13:47.825870 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1112 15:13:47.825885 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:45 +0000 UTC 2024-11-12 15:13:45 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6zsgx-f4dbbbf74" is progressing.}
  I1112 15:13:47.825973 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1112 15:13:47.826127 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:46 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1112 15:13:47.826142 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6zsgx-f4dbbbf74" has successfully progressed.}
  I1112 15:13:47.826233 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1112 15:13:47.826245 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:46 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1112 15:13:47.826261 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-12 15:13:46 +0000 UTC 2024-11-12 15:13:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6zsgx-f4dbbbf74" has successfully progressed.}
  I1112 15:13:47.826273 22 deployment.go:612] Observed deployment test-deployment-6zsgx in namespace deployment-3138 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1112 15:13:47.826356 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1112 15:13:47.826371 22 deployment.go:609] Found deployment test-deployment-6zsgx in namespace deployment-3138 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1112 15:13:47.826381 22 deployment.go:620] Deployment test-deployment-6zsgx has a patched status
  I1112 15:13:47.828124 22 deployment.go:633] Deployment "test-deployment-6zsgx":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-6zsgx",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf952562-ad54-4418-a45f-521629487112",
      ResourceVersion: (string) (len=5) "42168",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867021225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-6zsgx-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1112 15:13:47.911412 22 deployment.go:39] New ReplicaSet "test-deployment-6zsgx-f4dbbbf74" of Deployment "test-deployment-6zsgx":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-6zsgx-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9539f52-4e52-425f-b6fd-a08de83e4773",
      ResourceVersion: (string) (len=5) "42163",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867021225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-6zsgx",
          UID: (types.UID) (len=36) "cf952562-ad54-4418-a45f-521629487112",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 63 66 39  |k:{\"uid\":\"cf9|
              00000120  35 32 35 36 32 2d 61 64  35 34 2d 34 34 31 38 2d  |52562-ad54-4418-|
              00000130  61 34 35 66 2d 35 32 31  36 32 39 34 38 37 31 31  |a45f-52162948711|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 15:13:47.913998 22 deployment.go:67] Pod "test-deployment-6zsgx-f4dbbbf74-w4tmr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-6zsgx-f4dbbbf74-w4tmr",
      GenerateName: (string) (len=32) "test-deployment-6zsgx-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-3138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cae06850-5a1f-49db-a32f-e0ca75838412",
      ResourceVersion: (string) (len=5) "42162",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867021225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-6zsgx-f4dbbbf74",
          UID: (types.UID) (len=36) "a9539f52-4e52-425f-b6fd-a08de83e4773",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 39 35 33 39 66 35  32 2d 34 65 35 32 2d 34  |"a9539f52-4e52-4|
              000000a0  32 35 66 2d 62 36 66 64  2d 61 30 38 64 65 38 33  |25f-b6fd-a08de83|
              000000b0  65 34 37 37 33 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |e4773\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 35 2e 36  30 5c 22 7d 22 3a 7b 22  |2.20.5.60\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rfqmq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rfqmq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=11) "172.20.5.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.20.5.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867021225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867021226,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://067f689c03f609fc777c474141bf3ce99ef87f04fc01dcb4c2047fbe13bae83d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rfqmq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 15:13:47.915202 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3138" for this suite. @ 11/12/24 15:13:47.916
• [2.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 11/12/24 15:13:47.919
  I1112 15:13:47.919582 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 15:13:47.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:47.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:47.927
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/12/24 15:13:47.929
  E1112 15:13:48.734279      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:49.734472      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:50.735515      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:51.735922      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:13:51.94
  I1112 15:13:51.941330 22 output.go:196] Trying to get logs from node worker01 pod pod-b9fcd09f-2b8e-429d-80ec-d01824dbcf78 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 15:13:51.943
  I1112 15:13:51.949804 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6238" for this suite. @ 11/12/24 15:13:51.951
• [4.035 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 11/12/24 15:13:51.954
  I1112 15:13:51.954215 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename deployment @ 11/12/24 15:13:51.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:52.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:52.011
  I1112 15:13:52.012738 22 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1112 15:13:52.014708 22 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1112 15:13:52.018051 22 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E1112 15:13:52.736796      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:53.736846      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1112 15:13:54.020964 22 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1112 15:13:54.021981 22 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1112 15:13:54.026252 22 deployment.go:313] Updating deployment test-recreate-deployment
  I1112 15:13:54.026280 22 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1112 15:13:54.063721 22 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1364",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1aeddff3-5470-430e-8553-2f329d2bee62",
      ResourceVersion: (string) (len=5) "42294",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867021232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1112 15:13:54.122045 22 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1364",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30d4d1f1-9d80-42de-96e4-be9fec6d25d2",
      ResourceVersion: (string) (len=5) "42292",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867021234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "1aeddff3-5470-430e-8553-2f329d2bee62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 61 65 64 64 66  66 33 2d 35 34 37 30 2d  |\"1aeddff3-5470-|
              00000120  34 33 30 65 2d 38 35 35  33 2d 32 66 33 32 39 64  |430e-8553-2f329d|
              00000130  32 62 65 65 36 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2bee62\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 15:13:54.122637 22 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1112 15:13:54.122850 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1364",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d9eaa68-85b9-4863-b0b0-342457c1b728",
      ResourceVersion: (string) (len=5) "42283",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867021232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "1aeddff3-5470-430e-8553-2f329d2bee62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 61 65 64 64 66  66 33 2d 35 34 37 30 2d  |\"1aeddff3-5470-|
              00000120  34 33 30 65 2d 38 35 35  33 2d 32 66 33 32 39 64  |430e-8553-2f329d|
              00000130  32 62 65 65 36 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2bee62\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1112 15:13:54.125056 22 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-ncc4q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-ncc4q",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-1364",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "558e6d1b-3bc3-4368-8e5f-8ca848b0776c",
      ResourceVersion: (string) (len=5) "42295",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867021234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "30d4d1f1-9d80-42de-96e4-be9fec6d25d2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  64 34 64 31 66 31 2d 39  |d\":\"30d4d1f1-9|
              00000090  64 38 30 2d 34 32 64 65  2d 39 36 65 34 2d 62 65  |d80-42de-96e4-be|
              000000a0  39 66 65 63 36 64 32 35  64 32 5c 22 7d 22 3a 7b  |9fec6d25d2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qqvdm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qqvdm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867021234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867021234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qqvdm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1112 15:13:54.126263 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1364" for this suite. @ 11/12/24 15:13:54.127
• [2.176 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 11/12/24 15:13:54.13
  I1112 15:13:54.130260 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename sched-pred @ 11/12/24 15:13:54.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:13:54.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:13:54.138
  I1112 15:13:54.139828 22 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1112 15:13:54.229611 22 util.go:393] Waiting for terminating namespaces to be deleted...
  I1112 15:13:54.230811 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node master01 before test
  I1112 15:13:54.232502 22 predicates.go:957] calico-node-bvtmn from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.232519 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 15:13:54.232528 22 predicates.go:957] dashboard-metrics-scraper-58cf467b87-mmsz8 from kube-system started at 2024-11-12 13:37:25 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.232535 22 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1112 15:13:54.232543 22 predicates.go:957] metrics-server-7cfd7b768f-dtznx from kube-system started at 2024-11-12 13:37:23 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.232550 22 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1112 15:13:54.232558 22 predicates.go:957] node-local-dns-wthbq from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.232569 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 15:13:54.232576 22 predicates.go:957] sonobuoy-e2e-job-0ac2a22d6a0f487f from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 15:13:54.232583 22 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1112 15:13:54.232589 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 15:13:54.232596 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-zvth6 from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 15:13:54.232602 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 15:13:54.232608 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1112 15:13:54.232615 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I1112 15:13:54.233890 22 predicates.go:957] test-recreate-deployment-88d47c55d-ncc4q from deployment-1364 started at 2024-11-12 15:13:54 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.233904 22 predicates.go:959] 	Container httpd ready: false, restart count 0
  I1112 15:13:54.233913 22 predicates.go:957] calico-node-m54sf from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.233919 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 15:13:54.233927 22 predicates.go:957] node-local-dns-2b6xg from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.233938 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 15:13:54.233947 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-fbw97 from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 15:13:54.233954 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 15:13:54.233959 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1112 15:13:54.233963 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker02 before test
  I1112 15:13:54.235309 22 predicates.go:957] calico-kube-controllers-555d448d69-zrxx6 from kube-system started at 2024-11-12 13:50:16 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.235320 22 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I1112 15:13:54.235327 22 predicates.go:957] calico-node-k2sjz from kube-system started at 2024-11-12 13:36:56 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.235333 22 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1112 15:13:54.235340 22 predicates.go:957] coredns-66dfb88745-vr48k from kube-system started at 2024-11-12 13:37:21 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.235349 22 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1112 15:13:54.235355 22 predicates.go:957] kubernetes-dashboard-5945846449-wt8g7 from kube-system started at 2024-11-12 13:50:16 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.235364 22 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1112 15:13:54.235372 22 predicates.go:957] node-local-dns-s4fn4 from kube-system started at 2024-11-12 13:37:22 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.235384 22 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I1112 15:13:54.235394 22 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-12 13:38:07 +0000 UTC (1 container statuses recorded)
  I1112 15:13:54.235398 22 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1112 15:13:54.235402 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-6206ccc493704952-6z88b from sonobuoy started at 2024-11-12 13:38:14 +0000 UTC (2 container statuses recorded)
  I1112 15:13:54.235406 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1112 15:13:54.235410 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/12/24 15:13:54.235
  E1112 15:13:54.737189      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:55.737256      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/12/24 15:13:56.243
  STEP: Trying to apply a random label on the found node. @ 11/12/24 15:13:56.25
  STEP: verifying the node has the label kubernetes.io/e2e-9af19571-7bc6-4501-8d9d-2efaabdad13b 95 @ 11/12/24 15:13:56.255
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 11/12/24 15:13:56.256
  E1112 15:13:56.737856      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:57.738120      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.255.0.207 on the node which pod4 resides and expect not scheduled @ 11/12/24 15:13:58.262
  E1112 15:13:58.738205      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:13:59.738360      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:00.738929      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:01.739932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:02.740840      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:03.740971      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:04.741963      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:05.742033      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:06.742791      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:07.742876      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:08.743599      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:09.743833      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:10.743926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:11.744055      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:12.744969      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:13.745110      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:14.745926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:15.746030      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:16.746774      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:17.746882      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:18.747675      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:19.747935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:20.748908      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:21.748981      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:22.749755      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:23.749902      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:24.750859      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:25.751915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:26.752681      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:27.752832      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:28.753216      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:29.753393      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:30.754422      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:31.754560      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:32.754870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:33.755949      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:34.756858      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:35.756981      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:36.757824      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:37.757945      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:38.758747      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:39.758883      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:40.759434      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:41.759918      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:42.760683      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:43.760813      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:44.761870      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:45.762009      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:46.762869      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:47.763941      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:48.764789      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:49.765004      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:50.765877      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:51.765966      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:52.766672      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:53.766822      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:54.767698      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:55.767917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:56.768650      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:57.768782      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:58.768846      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:14:59.769091      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:00.770055      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:01.770336      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:02.770669      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:03.770816      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:04.771701      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:05.771920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:06.772358      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:07.772453      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:08.773019      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:09.773104      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:10.773134      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:11.773261      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:12.774100      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:13.774225      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:14.774998      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:15.775920      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:16.776766      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:17.776853      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:18.777636      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:19.777846      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:20.778374      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:21.778460      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:22.779261      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:23.779913      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:24.780859      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:25.780980      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:26.781726      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:27.781851      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:28.782465      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:29.783398      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:30.784423      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:31.784542      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:32.784689      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:33.785322      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:34.786044      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:35.786167      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:36.786633      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:37.786751      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:38.787641      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:39.787865      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:40.788082      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:41.788441      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:42.788523      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:43.788600      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:44.789622      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:45.789763      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:46.790240      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:47.790366      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:48.791255      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:49.791954      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:50.792549      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:51.792667      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:52.792923      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:53.793047      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:54.794034      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:55.794156      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:56.794927      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:57.795917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:58.796663      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:15:59.796741      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:00.797712      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:01.798430      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:02.799288      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:03.799820      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:04.800685      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:05.801166      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:06.801945      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:07.801971      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:08.802053      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:09.802201      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:10.803052      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:11.803918      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:12.804817      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:13.804942      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:14.805880      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:15.806182      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:16.806968      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:17.807910      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:18.808085      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:19.808305      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:20.809133      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:21.809286      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:22.810076      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:23.810196      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:24.810972      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:25.811921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:26.812680      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:27.812811      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:28.813598      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:29.813855      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:30.814821      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:31.814862      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:32.815709      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:33.815905      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:34.815940      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:35.816022      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:36.816812      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:37.816935      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:38.817552      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:39.817576      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:40.818556      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:41.818677      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:42.819497      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:43.819924      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:44.820903      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:45.820988      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:46.821794      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:47.822704      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:48.823558      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:49.823787      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:50.824744      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:51.824932      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:52.825088      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:53.825207      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:54.826091      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:55.826982      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:56.827022      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:57.827910      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:58.828143      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:16:59.828381      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:00.829125      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:01.829468      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:02.829639      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:03.829768      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:04.830808      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:05.830864      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:06.831357      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:07.831921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:08.832779      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:09.833745      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:10.834722      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:11.834808      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:12.835538      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:13.835911      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:14.836859      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:15.836949      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:16.837318      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:17.837455      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:18.838235      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:19.838395      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:20.839054      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:21.839919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:22.840590      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:23.840959      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:24.841843      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:25.841926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:26.842784      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:27.842859      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:28.843588      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:29.843812      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:30.844780      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:31.845175      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:32.845957      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:33.846078      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:34.846956      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:35.847923      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:36.848666      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:37.848791      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:38.849553      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:39.849780      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:40.850740      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:41.850861      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:42.851673      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:43.851779      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:44.852461      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:45.852587      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:46.853249      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:47.853392      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:48.854275      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:49.854479      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:50.855371      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:51.855915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:52.856552      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:53.856667      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:54.857567      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:55.857684      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:56.857784      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:57.858164      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:58.858936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:17:59.859916      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:00.860854      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:01.860986      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:02.861739      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:03.861997      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:04.862959      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:05.863919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:06.864282      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:07.864402      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:08.865160      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:09.865249      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:10.866219      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:11.866347      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:12.866427      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:13.866544      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:14.867217      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:15.867919      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:16.868783      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:17.868901      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:18.869616      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:19.869842      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:20.870685      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:21.871405      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:22.871914      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:23.872041      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:24.872956      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:25.873076      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:26.873852      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:27.874377      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:28.875017      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:29.875917      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:30.875973      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:31.876128      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:32.876936      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:33.877138      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:34.877998      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:35.878122      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:36.878729      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:37.879250      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:38.879427      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:39.879617      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:40.880319      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:41.880444      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:42.880780      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:43.880899      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:44.881468      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:45.881603      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:46.882362      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:47.883017      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:48.883915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:49.884845      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:50.885661      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:51.885746      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:52.886383      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:53.886700      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:54.887702      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:55.887915      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:56.888764      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:57.889275      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-9af19571-7bc6-4501-8d9d-2efaabdad13b off the node worker01 @ 11/12/24 15:18:58.265
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-9af19571-7bc6-4501-8d9d-2efaabdad13b @ 11/12/24 15:18:58.271
  I1112 15:18:58.273467 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4678" for this suite. @ 11/12/24 15:18:58.275
• [304.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 11/12/24 15:18:58.278
  I1112 15:18:58.278280 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename gc @ 11/12/24 15:18:58.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:18:58.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:18:58.289
  STEP: create the rc @ 11/12/24 15:18:58.291
  W1112 15:18:58.293570      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1112 15:18:58.889306      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:18:59.889491      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:00.889640      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:01.889909      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:02.889908      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/12/24 15:19:03.295
  STEP: wait for all pods to be garbage collected @ 11/12/24 15:19:03.298
  E1112 15:19:03.890926      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:04.891918      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:05.892035      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:06.892800      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:07.892921      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/12/24 15:19:08.302
  W1112 15:19:08.303964      22 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1112 15:19:08.303986 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1112 15:19:08.304118 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3853" for this suite. @ 11/12/24 15:19:08.305
• [10.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 11/12/24 15:19:08.307
  I1112 15:19:08.307863 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename emptydir @ 11/12/24 15:19:08.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:19:08.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:19:08.315
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 11/12/24 15:19:08.317
  E1112 15:19:08.893210      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:09.893307      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:10.893654      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1112 15:19:11.893793      22 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/12/24 15:19:12.325
  I1112 15:19:12.328034 22 output.go:196] Trying to get logs from node worker01 pod pod-0b0fc125-e1d0-4abe-a2da-c55ed9b0f979 container test-container: <nil>
  STEP: delete the pod @ 11/12/24 15:19:12.335
  I1112 15:19:12.341682 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7140" for this suite. @ 11/12/24 15:19:12.343
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 11/12/24 15:19:12.345
  I1112 15:19:12.345940 22 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3129661397
  STEP: Building a namespace api object, basename podtemplate @ 11/12/24 15:19:12.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/12/24 15:19:12.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/12/24 15:19:12.354
  I1112 15:19:12.365890 22 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8127" for this suite. @ 11/12/24 15:19:12.443
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1112 15:19:12.447641 22 suites.go:34] Running AfterSuite actions on node 1
  I1112 15:19:12.447655 22 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.032 seconds]
------------------------------

Ran 404 of 6605 Specs in 6038.147 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h40m38.755103665s
Test Suite Passed
