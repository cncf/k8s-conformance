  I0904 22:31:48.457868      18 e2e.go:109] Starting e2e run "75b503a7-116e-496d-90db-5a3cc9f0f910" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1725489106 - will randomize all specs

Will run 404 of 6603 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0904 22:31:48.986245 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:31:48.988237 18 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0904 22:31:49.121010 18 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0904 22:31:49.127131 18 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-canal' (0 seconds elapsed)
  I0904 22:31:49.127198 18 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-ingress-nginx-controller' (0 seconds elapsed)
  I0904 22:31:49.127461 18 e2e.go:245] e2e test version: v1.31.0
  I0904 22:31:49.128938 18 e2e.go:254] kube-apiserver version: v1.31.0+rke2r1
  I0904 22:31:49.129068 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:31:49.134616 18 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 09/04/24 22:31:49.435
  I0904 22:31:49.435637 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 22:31:49.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:31:49.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:31:49.524
  STEP: creating a ServiceAccount @ 09/04/24 22:31:49.539
  STEP: watching for the ServiceAccount to be added @ 09/04/24 22:31:49.564
  STEP: patching the ServiceAccount @ 09/04/24 22:31:49.567
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/04/24 22:31:49.65
  STEP: deleting the ServiceAccount @ 09/04/24 22:31:49.656
  I0904 22:31:49.738422 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2339" for this suite. @ 09/04/24 22:31:49.743
• [0.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/04/24 22:31:49.757
  I0904 22:31:49.757233 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 22:31:49.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:31:49.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:31:49.829
  I0904 22:31:49.832503 18 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/04/24 22:31:50.88
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/04/24 22:31:50.913
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/04/24 22:31:51.925
  I0904 22:31:51.940737 18 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/04/24 22:31:51.94
  I0904 22:31:52.967478 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5931" for this suite. @ 09/04/24 22:31:52.98
• [3.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/04/24 22:31:53.007
  I0904 22:31:53.007162 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 22:31:53.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:31:53.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:31:53.064
  STEP: Creating configMap configmap-5360/configmap-test-6643513e-a44a-4fb1-88c0-41a53d4c841c @ 09/04/24 22:31:53.084
  STEP: Creating a pod to test consume configMaps @ 09/04/24 22:31:53.111
  STEP: Saw pod success @ 09/04/24 22:32:03.172
  I0904 22:32:03.180199 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-14d5b230-0c6e-49ca-b89a-38422d120c8f container env-test: <nil>
  STEP: delete the pod @ 09/04/24 22:32:03.34
  I0904 22:32:03.384300 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5360" for this suite. @ 09/04/24 22:32:03.39
• [10.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/04/24 22:32:03.408
  I0904 22:32:03.409020 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename deployment @ 09/04/24 22:32:03.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:03.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:03.468
  I0904 22:32:03.471659 18 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0904 22:32:03.488516 18 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0904 22:32:03.522855 18 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0904 22:32:05.531658 18 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0904 22:32:05.535486 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 32, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 32, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 32, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 32, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-7549bcf47c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 22:32:07.539790 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 32, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 32, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 32, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 32, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-7549bcf47c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 22:32:09.540374 18 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0904 22:32:09.603404 18 deployment.go:313] Updating deployment test-recreate-deployment
  I0904 22:32:09.603487 18 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0904 22:32:09.837095 18 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b39a0c1-9c5f-4b89-9e30-cf36b0751cab",
      ResourceVersion: (string) (len=4) "5325",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861085923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 22:32:09.845029 18 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cef6bcd9-f9bf-483b-9b68-62289b90cf23",
      ResourceVersion: (string) (len=4) "5323",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861085929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0b39a0c1-9c5f-4b89-9e30-cf36b0751cab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 62 33 39 61 30  63 31 2d 39 63 35 66 2d  |\"0b39a0c1-9c5f-|
              00000120  34 62 38 39 2d 39 65 33  30 2d 63 66 33 36 62 30  |4b89-9e30-cf36b0|
              00000130  37 35 31 63 61 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |751cab\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 22:32:09.850327 18 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0904 22:32:09.850892 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f92dc82-c664-4d47-bcbf-cbacd9e67e39",
      ResourceVersion: (string) (len=4) "5314",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861085923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0b39a0c1-9c5f-4b89-9e30-cf36b0751cab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 62 33 39 61 30  63 31 2d 39 63 35 66 2d  |\"0b39a0c1-9c5f-|
              00000120  34 62 38 39 2d 39 65 33  30 2d 63 66 33 36 62 30  |4b89-9e30-cf36b0|
              00000130  37 35 31 63 61 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |751cab\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 22:32:09.856920 18 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-cjhxb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-cjhxb",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-4316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9dad3f8e-9382-42f2-8901-ba47fca498e8",
      ResourceVersion: (string) (len=4) "5326",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861085929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "cef6bcd9-f9bf-483b-9b68-62289b90cf23",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 65  66 36 62 63 64 39 2d 66  |d\":\"cef6bcd9-f|
              00000090  39 62 66 2d 34 38 33 62  2d 39 62 36 38 2d 36 32  |9bf-483b-9b68-62|
              000000a0  32 38 39 62 39 30 63 66  32 33 5c 22 7d 22 3a 7b  |289b90cf23\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cgp4p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cgp4p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861085929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861085929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cgp4p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 22:32:09.860122 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4316" for this suite. @ 09/04/24 22:32:09.864
• [6.480 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/04/24 22:32:09.888
  I0904 22:32:09.888754 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 22:32:09.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:09.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:09.939
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/04/24 22:32:09.942
  STEP: Saw pod success @ 09/04/24 22:32:18.004
  I0904 22:32:18.008223 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-d9eca029-eee5-4b30-98dc-b4150d125282 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 22:32:18.016
  I0904 22:32:18.078010 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1761" for this suite. @ 09/04/24 22:32:18.089
• [8.218 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 09/04/24 22:32:18.107
  I0904 22:32:18.107138 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 22:32:18.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:18.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:18.167
  I0904 22:32:18.175455 18 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-9800"
  I0904 22:32:18.188732 18 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-9800"
  STEP: waiting for a new root ca configmap created @ 09/04/24 22:32:18.689
  I0904 22:32:18.695616 18 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-9800"
  I0904 22:32:18.709332 18 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-9800"
  STEP: waiting for the root ca configmap reconciled @ 09/04/24 22:32:19.21
  I0904 22:32:19.215511 18 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-9800"
  I0904 22:32:19.215674 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9800" for this suite. @ 09/04/24 22:32:19.22
• [1.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/04/24 22:32:19.238
  I0904 22:32:19.238062 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/24 22:32:19.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:19.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:19.278
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/24 22:32:19.321
  STEP: create the pod with lifecycle hook @ 09/04/24 22:32:21.373
  STEP: delete the pod with lifecycle hook @ 09/04/24 22:32:25.415
  STEP: check prestop hook @ 09/04/24 22:32:27.455
  I0904 22:32:27.464242 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3477" for this suite. @ 09/04/24 22:32:27.469
• [8.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/04/24 22:32:27.486
  I0904 22:32:27.486126 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:32:27.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:27.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:27.533
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 22:32:27.535
  STEP: Saw pod success @ 09/04/24 22:32:31.572
  I0904 22:32:31.575599 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-81540f15-9038-4e30-a8b8-b517c7e8c923 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 22:32:31.582
  I0904 22:32:31.618401 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2856" for this suite. @ 09/04/24 22:32:31.622
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/04/24 22:32:31.633
  I0904 22:32:31.633960 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 22:32:31.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:31.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:31.675
  I0904 22:32:31.677835 18 replica_set.go:191] Creating ReplicaSet my-hostname-basic-62526d13-a62d-4023-8ee9-7a79d978e8e9
  I0904 22:32:31.695680 18 resource.go:87] Pod name my-hostname-basic-62526d13-a62d-4023-8ee9-7a79d978e8e9: Found 0 pods out of 1
  I0904 22:32:36.704294 18 resource.go:87] Pod name my-hostname-basic-62526d13-a62d-4023-8ee9-7a79d978e8e9: Found 1 pods out of 1
  I0904 22:32:36.704349 18 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-62526d13-a62d-4023-8ee9-7a79d978e8e9" is running
  I0904 22:32:36.709393 18 replica_set.go:220] Pod "my-hostname-basic-62526d13-a62d-4023-8ee9-7a79d978e8e9-94zdt" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 22:32:34 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 22:32:31 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 22:32:34 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 22:32:34 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 22:32:31 +0000 UTC Reason: Message:}])
  I0904 22:32:36.709460 18 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/04/24 22:32:36.709
  I0904 22:32:36.734605 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-289" for this suite. @ 09/04/24 22:32:36.755
• [5.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/04/24 22:32:36.776
  I0904 22:32:36.776936 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 22:32:36.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:36.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:36.877
  I0904 22:32:36.881633 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  W0904 22:32:39.647408      18 warnings.go:70] unknown field "alpha"
  W0904 22:32:39.647452      18 warnings.go:70] unknown field "beta"
  W0904 22:32:39.647462      18 warnings.go:70] unknown field "delta"
  W0904 22:32:39.647469      18 warnings.go:70] unknown field "epsilon"
  W0904 22:32:39.647477      18 warnings.go:70] unknown field "gamma"
  I0904 22:32:40.262444 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4331" for this suite. @ 09/04/24 22:32:40.268
• [3.509 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/04/24 22:32:40.287
  I0904 22:32:40.287349 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/04/24 22:32:40.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:40.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:40.326
  STEP: Setting up the test @ 09/04/24 22:32:40.329
  STEP: Creating hostNetwork=false pod @ 09/04/24 22:32:40.329
  STEP: Creating hostNetwork=true pod @ 09/04/24 22:32:44.391
  STEP: Running the test @ 09/04/24 22:32:46.43
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/04/24 22:32:46.43
  I0904 22:32:46.430352 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:46.430795 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:46.431635 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:46.431721 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0904 22:32:46.648562 18 exec_util.go:111] Exec stderr: ""
  I0904 22:32:46.648934 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:46.649070 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:46.649726 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:46.650283 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0904 22:32:46.753926 18 exec_util.go:111] Exec stderr: ""
  I0904 22:32:46.753997 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:46.754331 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:46.755205 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:46.755311 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0904 22:32:46.864048 18 exec_util.go:111] Exec stderr: ""
  I0904 22:32:46.864119 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:46.864139 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:46.864734 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:46.864818 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0904 22:32:46.954993 18 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/04/24 22:32:46.955
  I0904 22:32:46.955118 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:46.955217 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:46.955937 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:46.956021 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0904 22:32:47.051727 18 exec_util.go:111] Exec stderr: ""
  I0904 22:32:47.051827 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:47.051847 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:47.053189 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:47.053273 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0904 22:32:47.157200 18 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/04/24 22:32:47.157
  I0904 22:32:47.157351 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:47.157372 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:47.158134 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:47.158278 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0904 22:32:47.254449 18 exec_util.go:111] Exec stderr: ""
  I0904 22:32:47.254745 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:47.254784 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:47.255512 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:47.255614 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0904 22:32:47.369295 18 exec_util.go:111] Exec stderr: ""
  I0904 22:32:47.369474 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:47.369570 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:47.370412 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:47.370496 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0904 22:32:47.466261 18 exec_util.go:111] Exec stderr: ""
  I0904 22:32:47.466591 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2559 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:32:47.466863 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:47.467609 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:32:47.467835 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2559/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0904 22:32:47.603246 18 exec_util.go:111] Exec stderr: ""
  I0904 22:32:47.603589 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2559" for this suite. @ 09/04/24 22:32:47.609
• [7.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/04/24 22:32:47.624
  I0904 22:32:47.624646 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 22:32:47.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:47.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:47.668
  STEP: Creating configMap with name configmap-test-volume-4867608d-e8c9-4560-a8dd-d2d7e9445e76 @ 09/04/24 22:32:47.673
  STEP: Creating a pod to test consume configMaps @ 09/04/24 22:32:47.692
  STEP: Saw pod success @ 09/04/24 22:32:51.744
  I0904 22:32:51.749159 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-86d6bbe8-5459-4bc0-baf4-c6fa000b5896 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 22:32:51.758
  I0904 22:32:51.801532 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9658" for this suite. @ 09/04/24 22:32:51.808
• [4.197 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/04/24 22:32:51.823
  I0904 22:32:51.823136 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:32:51.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:51.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:51.881
  STEP: Creating configMap with name projected-configmap-test-volume-b28551bc-abe6-4182-a5c7-35dc6375da4e @ 09/04/24 22:32:51.884
  STEP: Creating a pod to test consume configMaps @ 09/04/24 22:32:51.899
  STEP: Saw pod success @ 09/04/24 22:32:55.955
  I0904 22:32:55.958782 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-configmaps-d37241d4-a1cc-455f-9275-983d2dbc344f container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 22:32:55.968
  I0904 22:32:56.007879 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4592" for this suite. @ 09/04/24 22:32:56.019
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/04/24 22:32:56.04
  I0904 22:32:56.040713 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/24 22:32:56.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:56.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:56.084
  I0904 22:32:56.088612 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:32:59.455063 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1428" for this suite. @ 09/04/24 22:32:59.46
• [3.440 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/04/24 22:32:59.481
  I0904 22:32:59.481492 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-pred @ 09/04/24 22:32:59.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:32:59.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:32:59.529
  I0904 22:32:59.533476 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 22:32:59.583222 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 22:32:59.592654 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-0-215.us-east-2.compute.internal before test
  I0904 22:32:59.601844 18 predicates.go:957] cloud-controller-manager-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:46 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.601898 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0904 22:32:59.601913 18 predicates.go:957] etcd-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:16 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.601924 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0904 22:32:59.601935 18 predicates.go:957] helm-install-rke2-canal-259hd from kube-system started at 2024-09-04 22:17:59 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.601945 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:32:59.601956 18 predicates.go:957] helm-install-rke2-coredns-5v24h from kube-system started at 2024-09-04 22:17:59 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.601965 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:32:59.601976 18 predicates.go:957] helm-install-rke2-ingress-nginx-m9msd from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.601985 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:32:59.601995 18 predicates.go:957] helm-install-rke2-metrics-server-mg5p9 from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602004 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:32:59.602014 18 predicates.go:957] helm-install-rke2-snapshot-controller-6fxtw from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602023 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:32:59.602110 18 predicates.go:957] helm-install-rke2-snapshot-controller-crd-86mvl from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602123 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:32:59.602200 18 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-m6729 from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602211 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:32:59.602222 18 predicates.go:957] kube-apiserver-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:38 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602231 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0904 22:32:59.602241 18 predicates.go:957] kube-controller-manager-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:44 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602325 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0904 22:32:59.602338 18 predicates.go:957] kube-proxy-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:16 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602347 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 22:32:59.602427 18 predicates.go:957] kube-scheduler-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:44 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602453 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0904 22:32:59.602592 18 predicates.go:957] rke2-canal-25pbv from kube-system started at 2024-09-04 22:18:07 +0000 UTC (2 container statuses recorded)
  I0904 22:32:59.602603 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 22:32:59.602667 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 22:32:59.602681 18 predicates.go:957] rke2-coredns-rke2-coredns-787bc4b7b7-k62mw from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602690 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 22:32:59.602774 18 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-6dc69d7b97-mv7fg from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602786 18 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0904 22:32:59.602796 18 predicates.go:957] rke2-ingress-nginx-controller-klr4x from kube-system started at 2024-09-04 22:19:01 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602854 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 22:32:59.602865 18 predicates.go:957] rke2-metrics-server-6d99b6d454-bmgqg from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602875 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0904 22:32:59.602884 18 predicates.go:957] rke2-snapshot-controller-658d97fccc-jjrmm from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.602961 18 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0904 22:32:59.602994 18 predicates.go:957] rke2-snapshot-validation-webhook-784bcc6c8-nlsh4 from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.603093 18 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0904 22:32:59.603384 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-nh7cj from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 22:32:59.603395 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:32:59.603404 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 22:32:59.603771 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-1-123.us-east-2.compute.internal before test
  I0904 22:32:59.610656 18 predicates.go:957] cloud-controller-manager-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.610699 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0904 22:32:59.610715 18 predicates.go:957] etcd-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:04 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.610725 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0904 22:32:59.611363 18 predicates.go:957] kube-apiserver-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:30 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.611610 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0904 22:32:59.611647 18 predicates.go:957] kube-controller-manager-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.611657 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0904 22:32:59.611668 18 predicates.go:957] kube-proxy-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:54 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.611677 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 22:32:59.611688 18 predicates.go:957] kube-scheduler-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.611697 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0904 22:32:59.611709 18 predicates.go:957] rke2-canal-dxxtw from kube-system started at 2024-09-04 22:22:03 +0000 UTC (2 container statuses recorded)
  I0904 22:32:59.611935 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 22:32:59.612305 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 22:32:59.612320 18 predicates.go:957] rke2-ingress-nginx-controller-vgzvt from kube-system started at 2024-09-04 22:22:15 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.612329 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 22:32:59.612339 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-t5zl8 from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 22:32:59.612348 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:32:59.612587 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 22:32:59.612602 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-3-55.us-east-2.compute.internal before test
  I0904 22:32:59.617839 18 predicates.go:957] cloud-controller-manager-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.617882 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0904 22:32:59.617896 18 predicates.go:957] etcd-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:53 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.617906 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0904 22:32:59.617957 18 predicates.go:957] kube-apiserver-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:04 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.617992 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0904 22:32:59.618067 18 predicates.go:957] kube-controller-manager-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.618079 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0904 22:32:59.618092 18 predicates.go:957] kube-proxy-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:53 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.618101 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 22:32:59.618167 18 predicates.go:957] kube-scheduler-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.618180 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0904 22:32:59.618190 18 predicates.go:957] rke2-canal-4t7bp from kube-system started at 2024-09-04 22:21:14 +0000 UTC (2 container statuses recorded)
  I0904 22:32:59.618199 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 22:32:59.618208 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 22:32:59.618264 18 predicates.go:957] rke2-coredns-rke2-coredns-787bc4b7b7-6sq7l from kube-system started at 2024-09-04 22:21:28 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.618785 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 22:32:59.618802 18 predicates.go:957] rke2-ingress-nginx-controller-hq7pq from kube-system started at 2024-09-04 22:21:28 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.618812 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 22:32:59.618871 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-dbjgz from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 22:32:59.618884 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:32:59.618894 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 22:32:59.618903 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-12.us-east-2.compute.internal before test
  I0904 22:32:59.623270 18 predicates.go:957] kube-proxy-ip-172-31-8-12.us-east-2.compute.internal from kube-system started at 2024-09-04 22:25:15 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.623316 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 22:32:59.623329 18 predicates.go:957] rke2-canal-9dmlp from kube-system started at 2024-09-04 22:25:15 +0000 UTC (2 container statuses recorded)
  I0904 22:32:59.623339 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 22:32:59.623348 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 22:32:59.623684 18 predicates.go:957] rke2-ingress-nginx-controller-xfrvr from kube-system started at 2024-09-04 22:25:46 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.623699 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 22:32:59.623710 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-04 22:31:31 +0000 UTC (1 container statuses recorded)
  I0904 22:32:59.623719 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 22:32:59.623729 18 predicates.go:957] sonobuoy-e2e-job-110b92c570fb4a51 from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 22:32:59.623740 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0904 22:32:59.623750 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:32:59.623985 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-l6z47 from sonobuoy started at 2024-09-04 22:31:36 +0000 UTC (2 container statuses recorded)
  I0904 22:32:59.624339 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:32:59.624391 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/04/24 22:32:59.624
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17f22b4451d0e74d], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 09/04/24 22:32:59.694
  I0904 22:33:00.689892 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1963" for this suite. @ 09/04/24 22:33:00.694
• [1.228 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/04/24 22:33:00.709
  I0904 22:33:00.709892 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename svc-latency @ 09/04/24 22:33:00.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:33:00.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:33:00.751
  I0904 22:33:00.758198 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-505 @ 09/04/24 22:33:00.759
  I0904 22:33:00.773138      18 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-505, replica count: 1
  I0904 22:33:01.825131      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 22:33:02.825570      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 22:33:02.955851 18 service_latency.go:356] Created: latency-svc-xhx22
  I0904 22:33:02.985983 18 service_latency.go:363] Got endpoints: latency-svc-xhx22 [59.777656ms]
  I0904 22:33:03.025431 18 service_latency.go:356] Created: latency-svc-j22ct
  I0904 22:33:03.049768 18 service_latency.go:363] Got endpoints: latency-svc-j22ct [63.548745ms]
  I0904 22:33:03.060146 18 service_latency.go:356] Created: latency-svc-s7n47
  I0904 22:33:03.084427 18 service_latency.go:363] Got endpoints: latency-svc-s7n47 [97.942178ms]
  I0904 22:33:03.093908 18 service_latency.go:356] Created: latency-svc-8qktp
  I0904 22:33:03.114244 18 service_latency.go:363] Got endpoints: latency-svc-8qktp [127.548426ms]
  I0904 22:33:03.134167 18 service_latency.go:356] Created: latency-svc-qvljx
  I0904 22:33:03.149520 18 service_latency.go:363] Got endpoints: latency-svc-qvljx [161.752313ms]
  I0904 22:33:03.175275 18 service_latency.go:356] Created: latency-svc-sm9ch
  I0904 22:33:03.199979 18 service_latency.go:363] Got endpoints: latency-svc-sm9ch [212.285239ms]
  I0904 22:33:03.216312 18 service_latency.go:356] Created: latency-svc-b7tcs
  I0904 22:33:03.248073 18 service_latency.go:363] Got endpoints: latency-svc-b7tcs [260.188449ms]
  I0904 22:33:03.258445 18 service_latency.go:356] Created: latency-svc-wxbf2
  I0904 22:33:03.285072 18 service_latency.go:363] Got endpoints: latency-svc-wxbf2 [296.705421ms]
  I0904 22:33:03.303724 18 service_latency.go:356] Created: latency-svc-sr4nh
  I0904 22:33:03.329879 18 service_latency.go:363] Got endpoints: latency-svc-sr4nh [342.462872ms]
  I0904 22:33:03.346837 18 service_latency.go:356] Created: latency-svc-vbhs4
  I0904 22:33:03.368810 18 service_latency.go:363] Got endpoints: latency-svc-vbhs4 [380.686546ms]
  I0904 22:33:03.381906 18 service_latency.go:356] Created: latency-svc-nnj57
  I0904 22:33:03.413421 18 service_latency.go:363] Got endpoints: latency-svc-nnj57 [425.383678ms]
  I0904 22:33:03.424581 18 service_latency.go:356] Created: latency-svc-jd5jc
  I0904 22:33:03.448056 18 service_latency.go:363] Got endpoints: latency-svc-jd5jc [459.855325ms]
  I0904 22:33:03.470755 18 service_latency.go:356] Created: latency-svc-j88x5
  I0904 22:33:03.500186 18 service_latency.go:363] Got endpoints: latency-svc-j88x5 [512.56743ms]
  I0904 22:33:03.521444 18 service_latency.go:356] Created: latency-svc-zgc7p
  I0904 22:33:03.547730 18 service_latency.go:363] Got endpoints: latency-svc-zgc7p [559.772065ms]
  I0904 22:33:03.559744 18 service_latency.go:356] Created: latency-svc-8qj6z
  I0904 22:33:03.582515 18 service_latency.go:363] Got endpoints: latency-svc-8qj6z [594.22376ms]
  I0904 22:33:03.600217 18 service_latency.go:356] Created: latency-svc-dd2ds
  I0904 22:33:03.611776 18 service_latency.go:363] Got endpoints: latency-svc-dd2ds [624.245523ms]
  I0904 22:33:03.632539 18 service_latency.go:356] Created: latency-svc-48n75
  I0904 22:33:03.658891 18 service_latency.go:363] Got endpoints: latency-svc-48n75 [609.031454ms]
  I0904 22:33:03.669386 18 service_latency.go:356] Created: latency-svc-vnpcw
  I0904 22:33:03.697697 18 service_latency.go:363] Got endpoints: latency-svc-vnpcw [613.211928ms]
  I0904 22:33:03.713694 18 service_latency.go:356] Created: latency-svc-jlnkw
  I0904 22:33:03.735400 18 service_latency.go:363] Got endpoints: latency-svc-jlnkw [619.428477ms]
  I0904 22:33:03.759375 18 service_latency.go:356] Created: latency-svc-cjhff
  I0904 22:33:03.783926 18 service_latency.go:363] Got endpoints: latency-svc-cjhff [634.340505ms]
  I0904 22:33:03.809852 18 service_latency.go:356] Created: latency-svc-cg8kz
  I0904 22:33:03.838100 18 service_latency.go:363] Got endpoints: latency-svc-cg8kz [638.045881ms]
  I0904 22:33:04.094515 18 service_latency.go:356] Created: latency-svc-jx7hf
  I0904 22:33:04.108172 18 service_latency.go:356] Created: latency-svc-p6d2t
  I0904 22:33:04.111053 18 service_latency.go:356] Created: latency-svc-tmzk9
  I0904 22:33:04.131308 18 service_latency.go:363] Got endpoints: latency-svc-jx7hf [395.837913ms]
  I0904 22:33:04.132306 18 service_latency.go:356] Created: latency-svc-7q2cn
  I0904 22:33:04.134502 18 service_latency.go:356] Created: latency-svc-2dpjw
  I0904 22:33:04.135799 18 service_latency.go:356] Created: latency-svc-q8sww
  I0904 22:33:04.135928 18 service_latency.go:356] Created: latency-svc-j2tv5
  I0904 22:33:04.136045 18 service_latency.go:356] Created: latency-svc-2ptjf
  I0904 22:33:04.136095 18 service_latency.go:356] Created: latency-svc-r92kt
  I0904 22:33:04.136182 18 service_latency.go:356] Created: latency-svc-fgdrz
  I0904 22:33:04.136291 18 service_latency.go:356] Created: latency-svc-7789c
  I0904 22:33:04.136314 18 service_latency.go:356] Created: latency-svc-jn2qz
  I0904 22:33:04.136797 18 service_latency.go:356] Created: latency-svc-7cd6c
  I0904 22:33:04.138456 18 service_latency.go:356] Created: latency-svc-wmtv4
  I0904 22:33:04.140305 18 service_latency.go:356] Created: latency-svc-tx8ph
  I0904 22:33:04.149296 18 service_latency.go:363] Got endpoints: latency-svc-tmzk9 [365.297481ms]
  I0904 22:33:04.149362 18 service_latency.go:363] Got endpoints: latency-svc-p6d2t [701.014685ms]
  I0904 22:33:04.178070 18 service_latency.go:363] Got endpoints: latency-svc-7cd6c [564.908955ms]
  I0904 22:33:04.180376 18 service_latency.go:363] Got endpoints: latency-svc-fgdrz [342.205373ms]
  I0904 22:33:04.181136 18 service_latency.go:363] Got endpoints: latency-svc-7q2cn [679.342549ms]
  I0904 22:33:04.188265 18 service_latency.go:363] Got endpoints: latency-svc-tx8ph [640.483491ms]
  I0904 22:33:04.188270 18 service_latency.go:363] Got endpoints: latency-svc-j2tv5 [858.20648ms]
  I0904 22:33:04.219518 18 service_latency.go:363] Got endpoints: latency-svc-2dpjw [559.104131ms]
  I0904 22:33:04.233173 18 service_latency.go:363] Got endpoints: latency-svc-2ptjf [985.016008ms]
  I0904 22:33:04.233192 18 service_latency.go:363] Got endpoints: latency-svc-q8sww [948.070481ms]
  I0904 22:33:04.233206 18 service_latency.go:363] Got endpoints: latency-svc-r92kt [819.708095ms]
  I0904 22:33:04.233221 18 service_latency.go:363] Got endpoints: latency-svc-7789c [863.607478ms]
  I0904 22:33:04.234656 18 service_latency.go:363] Got endpoints: latency-svc-wmtv4 [651.412113ms]
  I0904 22:33:04.260159 18 service_latency.go:363] Got endpoints: latency-svc-jn2qz [562.279328ms]
  I0904 22:33:04.261188 18 service_latency.go:356] Created: latency-svc-g4hd4
  I0904 22:33:04.288085 18 service_latency.go:363] Got endpoints: latency-svc-g4hd4 [156.000031ms]
  I0904 22:33:04.295483 18 service_latency.go:356] Created: latency-svc-kwf6w
  I0904 22:33:04.325337 18 service_latency.go:363] Got endpoints: latency-svc-kwf6w [175.263939ms]
  I0904 22:33:04.334895 18 service_latency.go:356] Created: latency-svc-m2k65
  I0904 22:33:04.355530 18 service_latency.go:363] Got endpoints: latency-svc-m2k65 [205.938827ms]
  I0904 22:33:04.376451 18 service_latency.go:356] Created: latency-svc-kc6q5
  I0904 22:33:04.396185 18 service_latency.go:363] Got endpoints: latency-svc-kc6q5 [218.048701ms]
  I0904 22:33:04.416380 18 service_latency.go:356] Created: latency-svc-pmbxn
  I0904 22:33:04.447943 18 service_latency.go:363] Got endpoints: latency-svc-pmbxn [266.693559ms]
  I0904 22:33:04.457364 18 service_latency.go:356] Created: latency-svc-rq864
  I0904 22:33:04.483397 18 service_latency.go:363] Got endpoints: latency-svc-rq864 [302.077709ms]
  I0904 22:33:04.499173 18 service_latency.go:356] Created: latency-svc-nxk44
  I0904 22:33:04.518673 18 service_latency.go:363] Got endpoints: latency-svc-nxk44 [329.417703ms]
  I0904 22:33:04.529463 18 service_latency.go:356] Created: latency-svc-fgxlg
  I0904 22:33:04.561106 18 service_latency.go:363] Got endpoints: latency-svc-fgxlg [372.736225ms]
  I0904 22:33:04.570380 18 service_latency.go:356] Created: latency-svc-pnk5k
  I0904 22:33:04.602235 18 service_latency.go:363] Got endpoints: latency-svc-pnk5k [382.293356ms]
  I0904 22:33:04.609537 18 service_latency.go:356] Created: latency-svc-kzxr4
  I0904 22:33:04.628494 18 service_latency.go:363] Got endpoints: latency-svc-kzxr4 [395.247942ms]
  I0904 22:33:04.642135 18 service_latency.go:356] Created: latency-svc-6bz9d
  I0904 22:33:04.673458 18 service_latency.go:363] Got endpoints: latency-svc-6bz9d [439.936474ms]
  I0904 22:33:04.679330 18 service_latency.go:356] Created: latency-svc-svccs
  I0904 22:33:04.710787 18 service_latency.go:363] Got endpoints: latency-svc-svccs [477.076798ms]
  I0904 22:33:04.730657 18 service_latency.go:356] Created: latency-svc-vpj5h
  I0904 22:33:04.760145 18 service_latency.go:363] Got endpoints: latency-svc-vpj5h [524.573793ms]
  I0904 22:33:04.773783 18 service_latency.go:356] Created: latency-svc-v65rv
  I0904 22:33:04.794208 18 service_latency.go:363] Got endpoints: latency-svc-v65rv [558.797481ms]
  I0904 22:33:04.819406 18 service_latency.go:356] Created: latency-svc-7b9w4
  I0904 22:33:04.844043 18 service_latency.go:363] Got endpoints: latency-svc-7b9w4 [583.82243ms]
  I0904 22:33:04.852547 18 service_latency.go:356] Created: latency-svc-n2bg9
  I0904 22:33:04.878463 18 service_latency.go:363] Got endpoints: latency-svc-n2bg9 [590.299008ms]
  I0904 22:33:04.888911 18 service_latency.go:356] Created: latency-svc-swjdx
  I0904 22:33:04.898073 18 service_latency.go:363] Got endpoints: latency-svc-swjdx [572.67367ms]
  I0904 22:33:04.930340 18 service_latency.go:356] Created: latency-svc-2c45w
  I0904 22:33:04.956765 18 service_latency.go:363] Got endpoints: latency-svc-2c45w [601.166887ms]
  I0904 22:33:04.969547 18 service_latency.go:356] Created: latency-svc-d4ftt
  I0904 22:33:04.994147 18 service_latency.go:363] Got endpoints: latency-svc-d4ftt [597.885177ms]
  I0904 22:33:05.016100 18 service_latency.go:356] Created: latency-svc-bhmm6
  I0904 22:33:05.042573 18 service_latency.go:363] Got endpoints: latency-svc-bhmm6 [594.497211ms]
  I0904 22:33:05.057534 18 service_latency.go:356] Created: latency-svc-64wqp
  I0904 22:33:05.067989 18 service_latency.go:363] Got endpoints: latency-svc-64wqp [584.272256ms]
  I0904 22:33:05.096808 18 service_latency.go:356] Created: latency-svc-878h8
  I0904 22:33:05.118097 18 service_latency.go:363] Got endpoints: latency-svc-878h8 [599.029219ms]
  I0904 22:33:05.139298 18 service_latency.go:356] Created: latency-svc-cbntt
  I0904 22:33:05.163102 18 service_latency.go:363] Got endpoints: latency-svc-cbntt [601.5329ms]
  I0904 22:33:05.172666 18 service_latency.go:356] Created: latency-svc-2nczn
  I0904 22:33:05.198679 18 service_latency.go:363] Got endpoints: latency-svc-2nczn [596.252286ms]
  I0904 22:33:05.205526 18 service_latency.go:356] Created: latency-svc-4r6ph
  I0904 22:33:05.233759 18 service_latency.go:363] Got endpoints: latency-svc-4r6ph [605.192555ms]
  I0904 22:33:05.250072 18 service_latency.go:356] Created: latency-svc-mprq6
  I0904 22:33:05.277482 18 service_latency.go:363] Got endpoints: latency-svc-mprq6 [603.951029ms]
  I0904 22:33:05.288017 18 service_latency.go:356] Created: latency-svc-76z8r
  I0904 22:33:05.314366 18 service_latency.go:363] Got endpoints: latency-svc-76z8r [603.470061ms]
  I0904 22:33:05.334911 18 service_latency.go:356] Created: latency-svc-j5fcc
  I0904 22:33:05.368201 18 service_latency.go:363] Got endpoints: latency-svc-j5fcc [607.982547ms]
  I0904 22:33:05.384289 18 service_latency.go:356] Created: latency-svc-d7gp2
  I0904 22:33:05.419890 18 service_latency.go:363] Got endpoints: latency-svc-d7gp2 [625.611665ms]
  I0904 22:33:05.428910 18 service_latency.go:356] Created: latency-svc-bn5cd
  I0904 22:33:05.449525 18 service_latency.go:363] Got endpoints: latency-svc-bn5cd [605.421313ms]
  I0904 22:33:05.478994 18 service_latency.go:356] Created: latency-svc-nnc9b
  I0904 22:33:05.498125 18 service_latency.go:363] Got endpoints: latency-svc-nnc9b [619.330514ms]
  I0904 22:33:05.516807 18 service_latency.go:356] Created: latency-svc-ccvrm
  I0904 22:33:05.554041 18 service_latency.go:363] Got endpoints: latency-svc-ccvrm [655.913028ms]
  I0904 22:33:05.575154 18 service_latency.go:356] Created: latency-svc-z7m9q
  I0904 22:33:05.603857 18 service_latency.go:363] Got endpoints: latency-svc-z7m9q [646.734691ms]
  I0904 22:33:05.614327 18 service_latency.go:356] Created: latency-svc-f5zlg
  I0904 22:33:05.638147 18 service_latency.go:363] Got endpoints: latency-svc-f5zlg [643.932898ms]
  I0904 22:33:05.655146 18 service_latency.go:356] Created: latency-svc-2jj58
  I0904 22:33:05.676856 18 service_latency.go:363] Got endpoints: latency-svc-2jj58 [634.069055ms]
  I0904 22:33:05.693095 18 service_latency.go:356] Created: latency-svc-krtqp
  I0904 22:33:05.727554 18 service_latency.go:363] Got endpoints: latency-svc-krtqp [659.135997ms]
  I0904 22:33:05.737470 18 service_latency.go:356] Created: latency-svc-5z889
  I0904 22:33:05.763665 18 service_latency.go:363] Got endpoints: latency-svc-5z889 [645.480584ms]
  I0904 22:33:05.780169 18 service_latency.go:356] Created: latency-svc-gm522
  I0904 22:33:05.796924 18 service_latency.go:363] Got endpoints: latency-svc-gm522 [633.750973ms]
  I0904 22:33:05.810214 18 service_latency.go:356] Created: latency-svc-tkmjf
  I0904 22:33:05.836693 18 service_latency.go:363] Got endpoints: latency-svc-tkmjf [637.941317ms]
  I0904 22:33:05.849410 18 service_latency.go:356] Created: latency-svc-xlvkz
  I0904 22:33:05.873407 18 service_latency.go:363] Got endpoints: latency-svc-xlvkz [639.571977ms]
  I0904 22:33:05.886099 18 service_latency.go:356] Created: latency-svc-q4cjw
  I0904 22:33:05.909403 18 service_latency.go:363] Got endpoints: latency-svc-q4cjw [631.838444ms]
  I0904 22:33:05.922253 18 service_latency.go:356] Created: latency-svc-dpht5
  I0904 22:33:05.947535 18 service_latency.go:363] Got endpoints: latency-svc-dpht5 [633.061069ms]
  I0904 22:33:05.966009 18 service_latency.go:356] Created: latency-svc-7zzmm
  I0904 22:33:06.007685 18 service_latency.go:363] Got endpoints: latency-svc-7zzmm [639.417651ms]
  I0904 22:33:06.030760 18 service_latency.go:356] Created: latency-svc-8gvb4
  I0904 22:33:06.055923 18 service_latency.go:363] Got endpoints: latency-svc-8gvb4 [626.928893ms]
  I0904 22:33:06.077525 18 service_latency.go:356] Created: latency-svc-b9ss8
  I0904 22:33:06.102259 18 service_latency.go:363] Got endpoints: latency-svc-b9ss8 [652.656797ms]
  I0904 22:33:06.112351 18 service_latency.go:356] Created: latency-svc-sqqwb
  I0904 22:33:06.148251 18 service_latency.go:363] Got endpoints: latency-svc-sqqwb [649.570534ms]
  I0904 22:33:06.163457 18 service_latency.go:356] Created: latency-svc-n699q
  I0904 22:33:06.194774 18 service_latency.go:363] Got endpoints: latency-svc-n699q [640.536272ms]
  I0904 22:33:06.202821 18 service_latency.go:356] Created: latency-svc-4q6tq
  I0904 22:33:06.238696 18 service_latency.go:363] Got endpoints: latency-svc-4q6tq [634.76655ms]
  I0904 22:33:06.253514 18 service_latency.go:356] Created: latency-svc-wdf9d
  I0904 22:33:06.284300 18 service_latency.go:363] Got endpoints: latency-svc-wdf9d [646.075425ms]
  I0904 22:33:06.292502 18 service_latency.go:356] Created: latency-svc-d8xgr
  I0904 22:33:06.320327 18 service_latency.go:363] Got endpoints: latency-svc-d8xgr [643.406178ms]
  I0904 22:33:06.356436 18 service_latency.go:356] Created: latency-svc-p6hz8
  I0904 22:33:06.357407 18 service_latency.go:356] Created: latency-svc-xbmsv
  I0904 22:33:06.384268 18 service_latency.go:363] Got endpoints: latency-svc-p6hz8 [656.654814ms]
  I0904 22:33:06.384433 18 service_latency.go:363] Got endpoints: latency-svc-xbmsv [620.699053ms]
  I0904 22:33:06.400271 18 service_latency.go:356] Created: latency-svc-qljq7
  I0904 22:33:06.425175 18 service_latency.go:363] Got endpoints: latency-svc-qljq7 [628.174808ms]
  I0904 22:33:06.433638 18 service_latency.go:356] Created: latency-svc-h4dgx
  I0904 22:33:06.467663 18 service_latency.go:363] Got endpoints: latency-svc-h4dgx [630.884918ms]
  I0904 22:33:06.480727 18 service_latency.go:356] Created: latency-svc-f5tm2
  I0904 22:33:06.516491 18 service_latency.go:363] Got endpoints: latency-svc-f5tm2 [643.025953ms]
  I0904 22:33:06.523621 18 service_latency.go:356] Created: latency-svc-qs8bl
  I0904 22:33:06.556442 18 service_latency.go:356] Created: latency-svc-sx4dg
  I0904 22:33:06.590751 18 service_latency.go:363] Got endpoints: latency-svc-qs8bl [681.159545ms]
  I0904 22:33:06.606720 18 service_latency.go:363] Got endpoints: latency-svc-sx4dg [659.029181ms]
  I0904 22:33:06.607296 18 service_latency.go:356] Created: latency-svc-2n9bt
  I0904 22:33:06.637908 18 service_latency.go:363] Got endpoints: latency-svc-2n9bt [630.151201ms]
  I0904 22:33:06.652155 18 service_latency.go:356] Created: latency-svc-mqwfz
  I0904 22:33:06.681019 18 service_latency.go:356] Created: latency-svc-rkspd
  I0904 22:33:06.693150 18 service_latency.go:363] Got endpoints: latency-svc-mqwfz [637.142628ms]
  I0904 22:33:06.719038 18 service_latency.go:363] Got endpoints: latency-svc-rkspd [616.127756ms]
  I0904 22:33:06.741259 18 service_latency.go:356] Created: latency-svc-8t8lz
  I0904 22:33:06.774623 18 service_latency.go:363] Got endpoints: latency-svc-8t8lz [626.29838ms]
  I0904 22:33:06.779246 18 service_latency.go:356] Created: latency-svc-8jsnd
  I0904 22:33:06.817414 18 service_latency.go:356] Created: latency-svc-rgvj8
  I0904 22:33:06.830620 18 service_latency.go:363] Got endpoints: latency-svc-8jsnd [635.767548ms]
  I0904 22:33:06.840187 18 service_latency.go:363] Got endpoints: latency-svc-rgvj8 [601.410416ms]
  I0904 22:33:06.861532 18 service_latency.go:356] Created: latency-svc-9trmh
  I0904 22:33:06.887601 18 service_latency.go:363] Got endpoints: latency-svc-9trmh [603.229233ms]
  I0904 22:33:06.902701 18 service_latency.go:356] Created: latency-svc-rzdg2
  I0904 22:33:06.929843 18 service_latency.go:363] Got endpoints: latency-svc-rzdg2 [609.268714ms]
  I0904 22:33:06.942915 18 service_latency.go:356] Created: latency-svc-vcbb6
  I0904 22:33:06.963332 18 service_latency.go:363] Got endpoints: latency-svc-vcbb6 [578.518365ms]
  I0904 22:33:06.996195 18 service_latency.go:356] Created: latency-svc-bhtzt
  I0904 22:33:07.024737 18 service_latency.go:363] Got endpoints: latency-svc-bhtzt [640.130808ms]
  I0904 22:33:07.033533 18 service_latency.go:356] Created: latency-svc-bwkwz
  I0904 22:33:07.057641 18 service_latency.go:363] Got endpoints: latency-svc-bwkwz [632.27137ms]
  I0904 22:33:07.073581 18 service_latency.go:356] Created: latency-svc-xfx8n
  I0904 22:33:07.098488 18 service_latency.go:363] Got endpoints: latency-svc-xfx8n [630.740833ms]
  I0904 22:33:07.109315 18 service_latency.go:356] Created: latency-svc-j7wns
  I0904 22:33:07.132981 18 service_latency.go:363] Got endpoints: latency-svc-j7wns [616.110755ms]
  I0904 22:33:07.153799 18 service_latency.go:356] Created: latency-svc-bs5rm
  I0904 22:33:07.176250 18 service_latency.go:363] Got endpoints: latency-svc-bs5rm [585.384466ms]
  I0904 22:33:07.183590 18 service_latency.go:356] Created: latency-svc-xvf7r
  I0904 22:33:07.208414 18 service_latency.go:363] Got endpoints: latency-svc-xvf7r [601.630802ms]
  I0904 22:33:07.224640 18 service_latency.go:356] Created: latency-svc-xf4df
  I0904 22:33:07.247866 18 service_latency.go:363] Got endpoints: latency-svc-xf4df [609.876216ms]
  I0904 22:33:07.279430 18 service_latency.go:356] Created: latency-svc-77v8d
  I0904 22:33:07.279510 18 service_latency.go:363] Got endpoints: latency-svc-77v8d [585.942436ms]
  I0904 22:33:07.304124 18 service_latency.go:356] Created: latency-svc-24p5w
  I0904 22:33:07.331482 18 service_latency.go:363] Got endpoints: latency-svc-24p5w [612.376898ms]
  I0904 22:33:07.339940 18 service_latency.go:356] Created: latency-svc-7dgp7
  I0904 22:33:07.375554 18 service_latency.go:363] Got endpoints: latency-svc-7dgp7 [600.530303ms]
  I0904 22:33:07.391652 18 service_latency.go:356] Created: latency-svc-kv699
  I0904 22:33:07.417677 18 service_latency.go:363] Got endpoints: latency-svc-kv699 [586.978234ms]
  I0904 22:33:07.432822 18 service_latency.go:356] Created: latency-svc-shdvn
  I0904 22:33:07.452279 18 service_latency.go:363] Got endpoints: latency-svc-shdvn [612.011784ms]
  I0904 22:33:07.468851 18 service_latency.go:356] Created: latency-svc-d764l
  I0904 22:33:07.503955 18 service_latency.go:363] Got endpoints: latency-svc-d764l [616.268941ms]
  I0904 22:33:07.513897 18 service_latency.go:356] Created: latency-svc-shkg9
  I0904 22:33:07.553718 18 service_latency.go:363] Got endpoints: latency-svc-shkg9 [623.802208ms]
  I0904 22:33:07.571492 18 service_latency.go:356] Created: latency-svc-b8vcc
  I0904 22:33:07.612115 18 service_latency.go:363] Got endpoints: latency-svc-b8vcc [648.556367ms]
  I0904 22:33:07.615882 18 service_latency.go:356] Created: latency-svc-kkctj
  I0904 22:33:07.654940 18 service_latency.go:363] Got endpoints: latency-svc-kkctj [629.976525ms]
  I0904 22:33:07.658369 18 service_latency.go:356] Created: latency-svc-h8hz8
  I0904 22:33:07.679717 18 service_latency.go:363] Got endpoints: latency-svc-h8hz8 [621.591186ms]
  I0904 22:33:07.701351 18 service_latency.go:356] Created: latency-svc-xjj9z
  I0904 22:33:07.724627 18 service_latency.go:363] Got endpoints: latency-svc-xjj9z [626.062752ms]
  I0904 22:33:07.735330 18 service_latency.go:356] Created: latency-svc-nxfph
  I0904 22:33:07.763193 18 service_latency.go:363] Got endpoints: latency-svc-nxfph [629.980975ms]
  I0904 22:33:07.775546 18 service_latency.go:356] Created: latency-svc-7x7b5
  I0904 22:33:07.798907 18 service_latency.go:363] Got endpoints: latency-svc-7x7b5 [622.402497ms]
  I0904 22:33:07.813049 18 service_latency.go:356] Created: latency-svc-lfbvb
  I0904 22:33:07.836512 18 service_latency.go:363] Got endpoints: latency-svc-lfbvb [627.08396ms]
  I0904 22:33:07.853762 18 service_latency.go:356] Created: latency-svc-v4grf
  I0904 22:33:07.888444 18 service_latency.go:363] Got endpoints: latency-svc-v4grf [640.512073ms]
  I0904 22:33:07.899216 18 service_latency.go:356] Created: latency-svc-l52lw
  I0904 22:33:07.924256 18 service_latency.go:363] Got endpoints: latency-svc-l52lw [644.708076ms]
  I0904 22:33:07.947627 18 service_latency.go:356] Created: latency-svc-4vt2t
  I0904 22:33:07.965406 18 service_latency.go:363] Got endpoints: latency-svc-4vt2t [633.857028ms]
  I0904 22:33:08.002253 18 service_latency.go:356] Created: latency-svc-vj2rp
  I0904 22:33:08.034823 18 service_latency.go:363] Got endpoints: latency-svc-vj2rp [659.195388ms]
  I0904 22:33:08.038063 18 service_latency.go:356] Created: latency-svc-7r2gg
  I0904 22:33:08.061406 18 service_latency.go:363] Got endpoints: latency-svc-7r2gg [643.059965ms]
  I0904 22:33:08.068796 18 service_latency.go:356] Created: latency-svc-xhg7j
  I0904 22:33:08.094587 18 service_latency.go:363] Got endpoints: latency-svc-xhg7j [641.531599ms]
  I0904 22:33:08.113845 18 service_latency.go:356] Created: latency-svc-txmsw
  I0904 22:33:08.132335 18 service_latency.go:363] Got endpoints: latency-svc-txmsw [628.315833ms]
  I0904 22:33:08.152915 18 service_latency.go:356] Created: latency-svc-xgj5t
  I0904 22:33:08.173796 18 service_latency.go:363] Got endpoints: latency-svc-xgj5t [620.006098ms]
  I0904 22:33:08.188864 18 service_latency.go:356] Created: latency-svc-bx7jw
  I0904 22:33:08.230143 18 service_latency.go:363] Got endpoints: latency-svc-bx7jw [617.951842ms]
  I0904 22:33:08.243412 18 service_latency.go:356] Created: latency-svc-dgqnh
  I0904 22:33:08.263653 18 service_latency.go:363] Got endpoints: latency-svc-dgqnh [608.610399ms]
  I0904 22:33:08.282861 18 service_latency.go:356] Created: latency-svc-qs8jk
  I0904 22:33:08.307760 18 service_latency.go:363] Got endpoints: latency-svc-qs8jk [627.717481ms]
  I0904 22:33:08.315535 18 service_latency.go:356] Created: latency-svc-9f5nb
  I0904 22:33:08.340451 18 service_latency.go:363] Got endpoints: latency-svc-9f5nb [614.788855ms]
  I0904 22:33:08.351124 18 service_latency.go:356] Created: latency-svc-4ddln
  I0904 22:33:08.374454 18 service_latency.go:363] Got endpoints: latency-svc-4ddln [610.54887ms]
  I0904 22:33:08.393041 18 service_latency.go:356] Created: latency-svc-2cc6b
  I0904 22:33:08.420177 18 service_latency.go:363] Got endpoints: latency-svc-2cc6b [620.919461ms]
  I0904 22:33:08.428547 18 service_latency.go:356] Created: latency-svc-xn8tf
  I0904 22:33:08.458173 18 service_latency.go:356] Created: latency-svc-nvxjj
  I0904 22:33:08.463626 18 service_latency.go:363] Got endpoints: latency-svc-xn8tf [626.747175ms]
  I0904 22:33:08.504729 18 service_latency.go:356] Created: latency-svc-vhj8c
  I0904 22:33:08.517311 18 service_latency.go:363] Got endpoints: latency-svc-nvxjj [628.79722ms]
  I0904 22:33:08.550876 18 service_latency.go:356] Created: latency-svc-q7zr8
  I0904 22:33:08.567396 18 service_latency.go:363] Got endpoints: latency-svc-vhj8c [643.048574ms]
  I0904 22:33:08.587385 18 service_latency.go:356] Created: latency-svc-v59xb
  I0904 22:33:08.616264 18 service_latency.go:363] Got endpoints: latency-svc-q7zr8 [650.572771ms]
  I0904 22:33:08.635431 18 service_latency.go:356] Created: latency-svc-4ljwk
  I0904 22:33:08.659953 18 service_latency.go:363] Got endpoints: latency-svc-v59xb [622.354705ms]
  I0904 22:33:08.672244 18 service_latency.go:356] Created: latency-svc-np4pv
  I0904 22:33:08.700643 18 service_latency.go:356] Created: latency-svc-bkzpr
  I0904 22:33:08.728345 18 service_latency.go:363] Got endpoints: latency-svc-4ljwk [666.87267ms]
  I0904 22:33:08.741540 18 service_latency.go:356] Created: latency-svc-lh92c
  I0904 22:33:08.764511 18 service_latency.go:363] Got endpoints: latency-svc-np4pv [669.84425ms]
  I0904 22:33:08.771435 18 service_latency.go:356] Created: latency-svc-gwjsn
  I0904 22:33:08.791712 18 service_latency.go:356] Created: latency-svc-jcndf
  I0904 22:33:08.822424 18 service_latency.go:363] Got endpoints: latency-svc-bkzpr [690.024391ms]
  I0904 22:33:08.840683 18 service_latency.go:356] Created: latency-svc-nlpq7
  I0904 22:33:08.856318 18 service_latency.go:356] Created: latency-svc-5g6hh
  I0904 22:33:08.879550 18 service_latency.go:363] Got endpoints: latency-svc-lh92c [705.290641ms]
  I0904 22:33:08.913040 18 service_latency.go:356] Created: latency-svc-wbm68
  I0904 22:33:08.915616 18 service_latency.go:363] Got endpoints: latency-svc-gwjsn [685.405231ms]
  I0904 22:33:08.951786 18 service_latency.go:356] Created: latency-svc-vx4k4
  I0904 22:33:08.983405 18 service_latency.go:363] Got endpoints: latency-svc-jcndf [718.87965ms]
  I0904 22:33:08.998049 18 service_latency.go:356] Created: latency-svc-ts26d
  I0904 22:33:09.033384 18 service_latency.go:363] Got endpoints: latency-svc-nlpq7 [725.401301ms]
  I0904 22:33:09.046406 18 service_latency.go:356] Created: latency-svc-fm84c
  I0904 22:33:09.086279 18 service_latency.go:363] Got endpoints: latency-svc-5g6hh [745.327433ms]
  I0904 22:33:09.104392 18 service_latency.go:356] Created: latency-svc-4zxxs
  I0904 22:33:09.130614 18 service_latency.go:363] Got endpoints: latency-svc-wbm68 [755.477006ms]
  I0904 22:33:09.147011 18 service_latency.go:356] Created: latency-svc-c2sm5
  I0904 22:33:09.175861 18 service_latency.go:363] Got endpoints: latency-svc-vx4k4 [755.60632ms]
  I0904 22:33:09.195498 18 service_latency.go:356] Created: latency-svc-64nh8
  I0904 22:33:09.216755 18 service_latency.go:363] Got endpoints: latency-svc-ts26d [753.053557ms]
  I0904 22:33:09.229748 18 service_latency.go:356] Created: latency-svc-8xssn
  I0904 22:33:09.267487 18 service_latency.go:356] Created: latency-svc-vgcr7
  I0904 22:33:09.267995 18 service_latency.go:363] Got endpoints: latency-svc-fm84c [750.604907ms]
  I0904 22:33:09.296630 18 service_latency.go:356] Created: latency-svc-8ngn2
  I0904 22:33:09.317214 18 service_latency.go:363] Got endpoints: latency-svc-4zxxs [749.747886ms]
  I0904 22:33:09.342048 18 service_latency.go:356] Created: latency-svc-gflkz
  I0904 22:33:09.372205 18 service_latency.go:363] Got endpoints: latency-svc-c2sm5 [755.786917ms]
  I0904 22:33:09.383486 18 service_latency.go:356] Created: latency-svc-sxksw
  I0904 22:33:09.412245 18 service_latency.go:363] Got endpoints: latency-svc-64nh8 [752.237186ms]
  I0904 22:33:09.420105 18 service_latency.go:356] Created: latency-svc-ktvcm
  I0904 22:33:09.453687 18 service_latency.go:356] Created: latency-svc-ksrv5
  I0904 22:33:09.463861 18 service_latency.go:363] Got endpoints: latency-svc-8xssn [735.399179ms]
  I0904 22:33:09.492179 18 service_latency.go:356] Created: latency-svc-mgbzw
  I0904 22:33:09.516182 18 service_latency.go:363] Got endpoints: latency-svc-vgcr7 [751.527911ms]
  I0904 22:33:09.527842 18 service_latency.go:356] Created: latency-svc-bm6bg
  I0904 22:33:09.572575 18 service_latency.go:363] Got endpoints: latency-svc-8ngn2 [749.837939ms]
  I0904 22:33:09.574492 18 service_latency.go:356] Created: latency-svc-s2xq4
  I0904 22:33:09.629297 18 service_latency.go:363] Got endpoints: latency-svc-gflkz [749.675023ms]
  I0904 22:33:09.631071 18 service_latency.go:356] Created: latency-svc-vltkt
  I0904 22:33:09.672384 18 service_latency.go:363] Got endpoints: latency-svc-sxksw [756.714272ms]
  I0904 22:33:09.677984 18 service_latency.go:356] Created: latency-svc-mw8jr
  I0904 22:33:09.695086 18 service_latency.go:356] Created: latency-svc-m97jz
  I0904 22:33:09.722846 18 service_latency.go:363] Got endpoints: latency-svc-ktvcm [739.362405ms]
  I0904 22:33:09.741535 18 service_latency.go:356] Created: latency-svc-r2dqh
  I0904 22:33:09.760070 18 service_latency.go:363] Got endpoints: latency-svc-ksrv5 [726.611697ms]
  I0904 22:33:09.779169 18 service_latency.go:356] Created: latency-svc-prvf5
  I0904 22:33:09.805750 18 service_latency.go:356] Created: latency-svc-r4x4j
  I0904 22:33:09.809940 18 service_latency.go:363] Got endpoints: latency-svc-mgbzw [723.584755ms]
  I0904 22:33:09.849774 18 service_latency.go:356] Created: latency-svc-pcpwk
  I0904 22:33:09.872346 18 service_latency.go:363] Got endpoints: latency-svc-bm6bg [741.030086ms]
  I0904 22:33:09.886134 18 service_latency.go:356] Created: latency-svc-jc9pr
  I0904 22:33:09.922872 18 service_latency.go:363] Got endpoints: latency-svc-s2xq4 [746.727455ms]
  I0904 22:33:09.925544 18 service_latency.go:356] Created: latency-svc-49sjb
  I0904 22:33:09.966321 18 service_latency.go:356] Created: latency-svc-ltptm
  I0904 22:33:09.970018 18 service_latency.go:363] Got endpoints: latency-svc-vltkt [753.154471ms]
  I0904 22:33:09.997633 18 service_latency.go:356] Created: latency-svc-c2xtp
  I0904 22:33:10.024603 18 service_latency.go:363] Got endpoints: latency-svc-mw8jr [755.941023ms]
  I0904 22:33:10.040755 18 service_latency.go:356] Created: latency-svc-6rhkn
  I0904 22:33:10.060879 18 service_latency.go:363] Got endpoints: latency-svc-m97jz [743.60947ms]
  I0904 22:33:10.076791 18 service_latency.go:356] Created: latency-svc-5jqm4
  I0904 22:33:10.107101 18 service_latency.go:356] Created: latency-svc-n7zvv
  I0904 22:33:10.110833 18 service_latency.go:363] Got endpoints: latency-svc-r2dqh [738.544344ms]
  I0904 22:33:10.137226 18 service_latency.go:356] Created: latency-svc-vs8rx
  I0904 22:33:10.169992 18 service_latency.go:363] Got endpoints: latency-svc-prvf5 [757.664636ms]
  I0904 22:33:10.180004 18 service_latency.go:356] Created: latency-svc-j7n5v
  I0904 22:33:10.220998 18 service_latency.go:363] Got endpoints: latency-svc-r4x4j [757.079065ms]
  I0904 22:33:10.223205 18 service_latency.go:356] Created: latency-svc-tvmfr
  I0904 22:33:10.245390 18 service_latency.go:356] Created: latency-svc-77hnr
  I0904 22:33:10.281127 18 service_latency.go:363] Got endpoints: latency-svc-pcpwk [764.877171ms]
  I0904 22:33:10.284107 18 service_latency.go:356] Created: latency-svc-82zdl
  I0904 22:33:10.319985 18 service_latency.go:363] Got endpoints: latency-svc-jc9pr [747.336636ms]
  I0904 22:33:10.330594 18 service_latency.go:356] Created: latency-svc-tqkc4
  I0904 22:33:10.364117 18 service_latency.go:356] Created: latency-svc-hb7h9
  I0904 22:33:10.378274 18 service_latency.go:363] Got endpoints: latency-svc-49sjb [748.911235ms]
  I0904 22:33:10.394434 18 service_latency.go:356] Created: latency-svc-nrmj7
  I0904 22:33:10.421357 18 service_latency.go:363] Got endpoints: latency-svc-ltptm [748.692036ms]
  I0904 22:33:10.438161 18 service_latency.go:356] Created: latency-svc-4nbpr
  I0904 22:33:10.464015 18 service_latency.go:363] Got endpoints: latency-svc-c2xtp [741.095756ms]
  I0904 22:33:10.476802 18 service_latency.go:356] Created: latency-svc-dp5wd
  I0904 22:33:10.514874 18 service_latency.go:363] Got endpoints: latency-svc-6rhkn [754.713657ms]
  I0904 22:33:10.515653 18 service_latency.go:356] Created: latency-svc-klkjq
  I0904 22:33:10.546802 18 service_latency.go:356] Created: latency-svc-qg6l7
  I0904 22:33:10.580358 18 service_latency.go:363] Got endpoints: latency-svc-5jqm4 [770.347852ms]
  I0904 22:33:10.587637 18 service_latency.go:356] Created: latency-svc-97kj2
  I0904 22:33:10.625227 18 service_latency.go:363] Got endpoints: latency-svc-n7zvv [752.809348ms]
  I0904 22:33:10.641966 18 service_latency.go:356] Created: latency-svc-qmhvt
  I0904 22:33:10.676188 18 service_latency.go:363] Got endpoints: latency-svc-vs8rx [753.257164ms]
  I0904 22:33:10.691859 18 service_latency.go:356] Created: latency-svc-nzb4k
  I0904 22:33:10.718511 18 service_latency.go:363] Got endpoints: latency-svc-j7n5v [748.444587ms]
  I0904 22:33:10.724875 18 service_latency.go:356] Created: latency-svc-82qln
  I0904 22:33:10.759201 18 service_latency.go:363] Got endpoints: latency-svc-tvmfr [734.240765ms]
  I0904 22:33:10.773410 18 service_latency.go:356] Created: latency-svc-kfgdv
  I0904 22:33:10.802699 18 service_latency.go:356] Created: latency-svc-q64wt
  I0904 22:33:10.815207 18 service_latency.go:363] Got endpoints: latency-svc-77hnr [754.25866ms]
  I0904 22:33:10.850201 18 service_latency.go:356] Created: latency-svc-tvcmc
  I0904 22:33:10.872137 18 service_latency.go:363] Got endpoints: latency-svc-82zdl [761.233456ms]
  I0904 22:33:10.898246 18 service_latency.go:356] Created: latency-svc-pz94r
  I0904 22:33:10.923931 18 service_latency.go:363] Got endpoints: latency-svc-tqkc4 [753.867266ms]
  I0904 22:33:10.964177 18 service_latency.go:363] Got endpoints: latency-svc-hb7h9 [743.1083ms]
  I0904 22:33:11.021828 18 service_latency.go:363] Got endpoints: latency-svc-nrmj7 [740.620779ms]
  I0904 22:33:11.059677 18 service_latency.go:363] Got endpoints: latency-svc-4nbpr [739.622972ms]
  I0904 22:33:11.109006 18 service_latency.go:363] Got endpoints: latency-svc-dp5wd [730.666884ms]
  I0904 22:33:11.165141 18 service_latency.go:363] Got endpoints: latency-svc-klkjq [742.934345ms]
  I0904 22:33:11.210632 18 service_latency.go:363] Got endpoints: latency-svc-qg6l7 [746.543268ms]
  I0904 22:33:11.263896 18 service_latency.go:363] Got endpoints: latency-svc-97kj2 [748.939825ms]
  I0904 22:33:11.315021 18 service_latency.go:363] Got endpoints: latency-svc-qmhvt [734.590308ms]
  I0904 22:33:11.364893 18 service_latency.go:363] Got endpoints: latency-svc-nzb4k [739.491328ms]
  I0904 22:33:11.423514 18 service_latency.go:363] Got endpoints: latency-svc-82qln [747.255164ms]
  I0904 22:33:11.471229 18 service_latency.go:363] Got endpoints: latency-svc-kfgdv [752.59525ms]
  I0904 22:33:11.519142 18 service_latency.go:363] Got endpoints: latency-svc-q64wt [759.498023ms]
  I0904 22:33:11.565971 18 service_latency.go:363] Got endpoints: latency-svc-tvcmc [750.652769ms]
  I0904 22:33:11.617316 18 service_latency.go:363] Got endpoints: latency-svc-pz94r [745.105465ms]
  I0904 22:33:11.617492 18 service_latency.go:114] Latencies: [63.548745ms 97.942178ms 127.548426ms 156.000031ms 161.752313ms 175.263939ms 205.938827ms 212.285239ms 218.048701ms 260.188449ms 266.693559ms 296.705421ms 302.077709ms 329.417703ms 342.205373ms 342.462872ms 365.297481ms 372.736225ms 380.686546ms 382.293356ms 395.247942ms 395.837913ms 425.383678ms 439.936474ms 459.855325ms 477.076798ms 512.56743ms 524.573793ms 558.797481ms 559.104131ms 559.772065ms 562.279328ms 564.908955ms 572.67367ms 578.518365ms 583.82243ms 584.272256ms 585.384466ms 585.942436ms 586.978234ms 590.299008ms 594.22376ms 594.497211ms 596.252286ms 597.885177ms 599.029219ms 600.530303ms 601.166887ms 601.410416ms 601.5329ms 601.630802ms 603.229233ms 603.470061ms 603.951029ms 605.192555ms 605.421313ms 607.982547ms 608.610399ms 609.031454ms 609.268714ms 609.876216ms 610.54887ms 612.011784ms 612.376898ms 613.211928ms 614.788855ms 616.110755ms 616.127756ms 616.268941ms 617.951842ms 619.330514ms 619.428477ms 620.006098ms 620.699053ms 620.919461ms 621.591186ms 622.354705ms 622.402497ms 623.802208ms 624.245523ms 625.611665ms 626.062752ms 626.29838ms 626.747175ms 626.928893ms 627.08396ms 627.717481ms 628.174808ms 628.315833ms 628.79722ms 629.976525ms 629.980975ms 630.151201ms 630.740833ms 630.884918ms 631.838444ms 632.27137ms 633.061069ms 633.750973ms 633.857028ms 634.069055ms 634.340505ms 634.76655ms 635.767548ms 637.142628ms 637.941317ms 638.045881ms 639.417651ms 639.571977ms 640.130808ms 640.483491ms 640.512073ms 640.536272ms 641.531599ms 643.025953ms 643.048574ms 643.059965ms 643.406178ms 643.932898ms 644.708076ms 645.480584ms 646.075425ms 646.734691ms 648.556367ms 649.570534ms 650.572771ms 651.412113ms 652.656797ms 655.913028ms 656.654814ms 659.029181ms 659.135997ms 659.195388ms 666.87267ms 669.84425ms 679.342549ms 681.159545ms 685.405231ms 690.024391ms 701.014685ms 705.290641ms 718.87965ms 723.584755ms 725.401301ms 726.611697ms 730.666884ms 734.240765ms 734.590308ms 735.399179ms 738.544344ms 739.362405ms 739.491328ms 739.622972ms 740.620779ms 741.030086ms 741.095756ms 742.934345ms 743.1083ms 743.60947ms 745.105465ms 745.327433ms 746.543268ms 746.727455ms 747.255164ms 747.336636ms 748.444587ms 748.692036ms 748.911235ms 748.939825ms 749.675023ms 749.747886ms 749.837939ms 750.604907ms 750.652769ms 751.527911ms 752.237186ms 752.59525ms 752.809348ms 753.053557ms 753.154471ms 753.257164ms 753.867266ms 754.25866ms 754.713657ms 755.477006ms 755.60632ms 755.786917ms 755.941023ms 756.714272ms 757.079065ms 757.664636ms 759.498023ms 761.233456ms 764.877171ms 770.347852ms 819.708095ms 858.20648ms 863.607478ms 948.070481ms 985.016008ms]
  I0904 22:33:11.617554 18 service_latency.go:118] 50 %ile: 634.069055ms
  I0904 22:33:11.617573 18 service_latency.go:119] 90 %ile: 753.257164ms
  I0904 22:33:11.617586 18 service_latency.go:120] 99 %ile: 948.070481ms
  I0904 22:33:11.617599 18 service_latency.go:121] Total sample count: 200
  I0904 22:33:11.617772 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-505" for this suite. @ 09/04/24 22:33:11.635
• [10.948 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/04/24 22:33:11.658
  I0904 22:33:11.658497 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 22:33:11.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:33:11.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:33:11.719
  STEP: creating the pod with failed condition @ 09/04/24 22:33:11.726
  STEP: updating the pod @ 09/04/24 22:35:11.762
  I0904 22:35:12.287387 18 pod_client.go:173] Successfully updated pod "var-expansion-349ec458-e63e-40ad-abf2-80c962f4397b"
  STEP: waiting for pod running @ 09/04/24 22:35:12.287
  STEP: deleting the pod gracefully @ 09/04/24 22:35:14.3
  I0904 22:35:14.300984 18 delete.go:62] Deleting pod "var-expansion-349ec458-e63e-40ad-abf2-80c962f4397b" in namespace "var-expansion-5569"
  I0904 22:35:14.319659 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-349ec458-e63e-40ad-abf2-80c962f4397b" to be fully deleted
  I0904 22:35:46.462901 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5569" for this suite. @ 09/04/24 22:35:46.468
• [154.838 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/04/24 22:35:46.496
  I0904 22:35:46.496794 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 22:35:46.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:35:46.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:35:46.537
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/24 22:35:46.604
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 22:35:46.62
  I0904 22:35:46.699384 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:35:46.699452 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:35:47.644725 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:35:47.644769 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:35:48.634710 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 22:35:48.634776 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:35:49.629876 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 22:35:49.629923 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:35:50.640073 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 22:35:50.640147 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:35:53.672390 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 22:35:53.672472 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:35:53.768778 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 22:35:53.768835 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:35:54.632868 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 22:35:54.633444 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/04/24 22:35:54.637
  STEP: DeleteCollection of the DaemonSets @ 09/04/24 22:35:54.643
  STEP: Verify that ReplicaSets have been deleted @ 09/04/24 22:35:54.657
  I0904 22:35:54.668526 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8275"},"items":null}

  I0904 22:35:54.699053 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8276"},"items":[{"metadata":{"name":"daemon-set-6hqf4","generateName":"daemon-set-","namespace":"daemonsets-2615","uid":"1c76c6e5-7b69-4a70-828a-b039621881e8","resourceVersion":"8276","creationTimestamp":"2024-09-04T22:35:46Z","deletionTimestamp":"2024-09-04T22:36:24Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"a9ac86ff65adae940ad15ed4cd6112e67c58cac0f642741c3e19b4f6f39a158e","cni.projectcalico.org/podIP":"10.42.2.8/32","cni.projectcalico.org/podIPs":"10.42.2.8/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5f54d0ae-f58d-42bd-8428-34307d4542e5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5f54d0ae-f58d-42bd-8428-34307d4542e5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.8\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-slldr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-slldr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-1-123.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-1-123.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:48Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:46Z"}],"hostIP":"172.31.1.123","hostIPs":[{"ip":"172.31.1.123"}],"podIP":"10.42.2.8","podIPs":[{"ip":"10.42.2.8"}],"startTime":"2024-09-04T22:35:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-04T22:35:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://c377fdddd3c25b921e879a8dc6d90888a32f73235a0ef00ef84eaa1834ba8ddb","started":true,"volumeMounts":[{"name":"kube-api-access-slldr","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-b65zs","generateName":"daemon-set-","namespace":"daemonsets-2615","uid":"dd832cf1-3097-462e-914e-c135d0a8195c","resourceVersion":"8273","creationTimestamp":"2024-09-04T22:35:46Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"dbc636089c0707e19e1daaeb2705b0253aafe3d092d56dcc7483999d37a96538","cni.projectcalico.org/podIP":"10.42.0.16/32","cni.projectcalico.org/podIPs":"10.42.0.16/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5f54d0ae-f58d-42bd-8428-34307d4542e5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5f54d0ae-f58d-42bd-8428-34307d4542e5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-97hdx","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-97hdx","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-0-215.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-0-215.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:54Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:46Z"}],"hostIP":"172.31.0.215","hostIPs":[{"ip":"172.31.0.215"}],"podIP":"10.42.0.16","podIPs":[{"ip":"10.42.0.16"}],"startTime":"2024-09-04T22:35:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-04T22:35:54Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8c32a3d188e2f7800ad13bbf7741bdfe9f36663b2b5c113554ebd5e10f354903","started":true,"volumeMounts":[{"name":"kube-api-access-97hdx","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fb4kz","generateName":"daemon-set-","namespace":"daemonsets-2615","uid":"5a57e7aa-8eb1-4d15-97ec-6ba608bff822","resourceVersion":"8236","creationTimestamp":"2024-09-04T22:35:46Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"9f655d2781dac2ab6624fcf24040559e06281b12008a4ad931610ce8dc460644","cni.projectcalico.org/podIP":"10.42.3.23/32","cni.projectcalico.org/podIPs":"10.42.3.23/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5f54d0ae-f58d-42bd-8428-34307d4542e5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5f54d0ae-f58d-42bd-8428-34307d4542e5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.23\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ddhxs","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ddhxs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-8-12.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-8-12.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:48Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:46Z"}],"hostIP":"172.31.8.12","hostIPs":[{"ip":"172.31.8.12"}],"podIP":"10.42.3.23","podIPs":[{"ip":"10.42.3.23"}],"startTime":"2024-09-04T22:35:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-04T22:35:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://415c2fdea482ea71e8387bf3b243b57f717dbc3f0a3b3b26a1a6a6685fb9815d","started":true,"volumeMounts":[{"name":"kube-api-access-ddhxs","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-hqtw2","generateName":"daemon-set-","namespace":"daemonsets-2615","uid":"303cc64a-c967-4a73-8767-210eb45e27d7","resourceVersion":"8270","creationTimestamp":"2024-09-04T22:35:46Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"ca230518e0540b3fed6a046c48fc61be75b192c1f3b4555786e31397b866a25d","cni.projectcalico.org/podIP":"10.42.1.5/32","cni.projectcalico.org/podIPs":"10.42.1.5/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5f54d0ae-f58d-42bd-8428-34307d4542e5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5f54d0ae-f58d-42bd-8428-34307d4542e5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-04T22:35:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.5\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-l9nlj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-l9nlj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-55.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-55.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:54Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T22:35:46Z"}],"hostIP":"172.31.3.55","hostIPs":[{"ip":"172.31.3.55"}],"podIP":"10.42.1.5","podIPs":[{"ip":"10.42.1.5"}],"startTime":"2024-09-04T22:35:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-04T22:35:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://007a81d704b2bedb866d7dd027fe0a9c8a27b6e12ba9a5892f62dfa09903db08","started":true,"volumeMounts":[{"name":"kube-api-access-l9nlj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0904 22:35:54.758174 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2615" for this suite. @ 09/04/24 22:35:54.831
• [8.362 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 09/04/24 22:35:54.869
  I0904 22:35:54.870010 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 22:35:54.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:35:54.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:35:54.922
  STEP: validating cluster-info @ 09/04/24 22:35:54.926
  I0904 22:35:54.926592 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-8939 cluster-info'
  I0904 22:35:55.167079 18 builder.go:146] stderr: ""
  I0904 22:35:55.167147 18 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0904 22:35:55.167277 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8939" for this suite. @ 09/04/24 22:35:55.179
• [0.328 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/04/24 22:35:55.197
  I0904 22:35:55.197883 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pv @ 09/04/24 22:35:55.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:35:55.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:35:55.255
  STEP: Creating initial PV and PVC @ 09/04/24 22:35:55.261
  I0904 22:35:55.262039 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6049" @ 09/04/24 22:35:55.3
  STEP: Listing PVCs in namespace "pv-6049" @ 09/04/24 22:35:55.307
  STEP: Patching the PV "pv-6049-mcmqk" @ 09/04/24 22:35:55.313
  STEP: Patching the PVC "pvc-njprw" @ 09/04/24 22:35:55.336
  STEP: Getting PV "pv-6049-mcmqk" @ 09/04/24 22:35:55.356
  STEP: Getting PVC "pvc-njprw" @ 09/04/24 22:35:55.361
  STEP: Deleting PVC "pvc-njprw" @ 09/04/24 22:35:55.381
  STEP: Confirm deletion of PVC "pvc-njprw" @ 09/04/24 22:35:55.397
  STEP: Deleting PV "pv-6049-mcmqk" @ 09/04/24 22:35:57.408
  STEP: Confirm deletion of PV "pv-6049-mcmqk" @ 09/04/24 22:35:57.436
  STEP: Recreating another PV & PVC @ 09/04/24 22:35:59.457
  I0904 22:35:59.457332 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6049-kmqrz" @ 09/04/24 22:35:59.489
  STEP: Updating the PVC "pvc-vnkqk" @ 09/04/24 22:35:59.57
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-vnkqk=updated" @ 09/04/24 22:35:59.59
  STEP: Deleting PVC "pvc-vnkqk" via DeleteCollection @ 09/04/24 22:35:59.595
  STEP: Confirm deletion of PVC "pvc-vnkqk" @ 09/04/24 22:35:59.616
  STEP: Deleting PV "pv-6049-kmqrz" via DeleteCollection @ 09/04/24 22:36:01.628
  STEP: Confirm deletion of PV "pv-6049-kmqrz" @ 09/04/24 22:36:01.648
  I0904 22:36:01.660252 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0904 22:36:01.660312 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-vnkqk"
  I0904 22:36:01.665000 18 pv.go:193] Deleting PersistentVolume "pv-6049-kmqrz"
  I0904 22:36:01.672677 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6049" for this suite. @ 09/04/24 22:36:01.68
• [6.523 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/04/24 22:36:01.722
  I0904 22:36:01.722300 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:36:01.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:01.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:01.8
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 22:36:01.806
  STEP: Saw pod success @ 09/04/24 22:36:05.856
  I0904 22:36:05.861079 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-4345bde2-d790-4f23-a86f-3562ae416c80 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 22:36:05.888
  I0904 22:36:05.923681 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8642" for this suite. @ 09/04/24 22:36:05.936
• [4.230 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/04/24 22:36:05.953
  I0904 22:36:05.953469 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename csi-storageclass @ 09/04/24 22:36:05.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:05.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:05.998
  STEP: Creating a StorageClass @ 09/04/24 22:36:06.008
  STEP: Get StorageClass "e2e-8kbgh" @ 09/04/24 22:36:06.079
  STEP: Patching the StorageClass "e2e-8kbgh" @ 09/04/24 22:36:06.097
  STEP: Delete StorageClass "e2e-8kbgh" @ 09/04/24 22:36:06.11
  STEP: Confirm deletion of StorageClass "e2e-8kbgh" @ 09/04/24 22:36:06.128
  STEP: Create a replacement StorageClass @ 09/04/24 22:36:06.134
  STEP: Updating StorageClass "e2e-v2-pgszf" @ 09/04/24 22:36:06.149
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-pgszf=updated" @ 09/04/24 22:36:06.163
  STEP: Deleting StorageClass "e2e-v2-pgszf" via DeleteCollection @ 09/04/24 22:36:06.166
  STEP: Confirm deletion of StorageClass "e2e-v2-pgszf" @ 09/04/24 22:36:06.183
  I0904 22:36:06.187173 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1826" for this suite. @ 09/04/24 22:36:06.192
• [0.256 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 09/04/24 22:36:06.209
  I0904 22:36:06.209428 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 22:36:06.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:06.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:06.258
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/24 22:36:06.262
  I0904 22:36:06.262122 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1546 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0904 22:36:06.389261 18 builder.go:146] stderr: ""
  I0904 22:36:06.389334 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/04/24 22:36:06.389
  I0904 22:36:06.395473 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1546 delete pods e2e-test-httpd-pod'
  I0904 22:36:07.819978 18 builder.go:146] stderr: ""
  I0904 22:36:07.820038 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0904 22:36:07.820278 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1546" for this suite. @ 09/04/24 22:36:07.829
• [1.634 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/04/24 22:36:07.843
  I0904 22:36:07.843566 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename watch @ 09/04/24 22:36:07.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:07.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:07.901
  STEP: creating a watch on configmaps @ 09/04/24 22:36:07.905
  STEP: creating a new configmap @ 09/04/24 22:36:07.906
  STEP: modifying the configmap once @ 09/04/24 22:36:07.915
  STEP: closing the watch once it receives two notifications @ 09/04/24 22:36:07.928
  I0904 22:36:07.929595 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2246  aa383c5d-0730-457c-86a1-85ec223b9c67 8469 0 2024-09-04 22:36:07 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-04 22:36:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 22:36:07.929991 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2246  aa383c5d-0730-457c-86a1-85ec223b9c67 8470 0 2024-09-04 22:36:07 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-04 22:36:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/04/24 22:36:07.93
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/04/24 22:36:07.942
  STEP: deleting the configmap @ 09/04/24 22:36:07.943
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/04/24 22:36:07.954
  I0904 22:36:07.954606 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2246  aa383c5d-0730-457c-86a1-85ec223b9c67 8471 0 2024-09-04 22:36:07 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-04 22:36:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 22:36:07.954891 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2246  aa383c5d-0730-457c-86a1-85ec223b9c67 8472 0 2024-09-04 22:36:07 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-04 22:36:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 22:36:07.955213 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2246" for this suite. @ 09/04/24 22:36:07.96
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/04/24 22:36:07.978
  I0904 22:36:07.979093 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 22:36:07.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:08.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:08.031
  STEP: Creating configMap with name configmap-test-volume-8525c7ca-c064-4df6-bf49-b126ccfa3cbe @ 09/04/24 22:36:08.034
  STEP: Creating a pod to test consume configMaps @ 09/04/24 22:36:08.045
  STEP: Saw pod success @ 09/04/24 22:36:14.112
  I0904 22:36:14.116322 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-0a37ac5b-ee42-4fc5-aa31-9bd6c00f3a2d container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 22:36:14.124
  I0904 22:36:14.160318 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7966" for this suite. @ 09/04/24 22:36:14.165
• [6.199 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/04/24 22:36:14.177
  I0904 22:36:14.177988 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 22:36:14.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:14.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:14.228
  STEP: creating service endpoint-test2 in namespace services-9897 @ 09/04/24 22:36:14.23
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9897 to expose endpoints map[] @ 09/04/24 22:36:14.256
  I0904 22:36:14.274226 18 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0904 22:36:15.285758 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9897 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9897 @ 09/04/24 22:36:15.285
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9897 to expose endpoints map[pod1:[80]] @ 09/04/24 22:36:17.334
  I0904 22:36:17.346372 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9897 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/04/24 22:36:17.346
  I0904 22:36:17.346488 18 resource.go:361] Creating new exec pod
  I0904 22:36:20.367367 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-9897 exec execpod2zbpb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 22:36:20.634826 18 builder.go:146] stderr: "+ + nc -v -t -w 2 endpoint-test2 80\necho hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0904 22:36:20.634886 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 22:36:20.634972 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-9897 exec execpod2zbpb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.141.242 80'
  I0904 22:36:20.863312 18 builder.go:146] stderr: "+ + echonc -v -t hostName -w\n 2 10.43.141.242 80\nConnection to 10.43.141.242 80 port [tcp/http] succeeded!\n"
  I0904 22:36:20.863369 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9897 @ 09/04/24 22:36:20.863
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9897 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/04/24 22:36:26.901
  I0904 22:36:26.915892 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9897 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/04/24 22:36:26.915
  I0904 22:36:27.917180 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-9897 exec execpod2zbpb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 22:36:28.165795 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0904 22:36:28.165873 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 22:36:28.166077 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-9897 exec execpod2zbpb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.141.242 80'
  I0904 22:36:28.365293 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.141.242 80\nConnection to 10.43.141.242 80 port [tcp/http] succeeded!\n"
  I0904 22:36:28.365360 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9897 @ 09/04/24 22:36:28.365
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9897 to expose endpoints map[pod2:[80]] @ 09/04/24 22:36:28.422
  I0904 22:36:28.456193 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9897 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/04/24 22:36:28.456
  I0904 22:36:29.457168 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-9897 exec execpod2zbpb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 22:36:29.714732 18 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0904 22:36:29.714800 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 22:36:29.714895 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-9897 exec execpod2zbpb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.141.242 80'
  I0904 22:36:29.893267 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.141.242 80\nConnection to 10.43.141.242 80 port [tcp/http] succeeded!\n"
  I0904 22:36:29.893334 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9897 @ 09/04/24 22:36:29.893
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9897 to expose endpoints map[] @ 09/04/24 22:36:29.975
  I0904 22:36:29.998607 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9897 exposes endpoints map[]
  I0904 22:36:30.073583 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9897" for this suite. @ 09/04/24 22:36:30.078
• [15.915 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/04/24 22:36:30.093
  I0904 22:36:30.093291 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 22:36:30.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:30.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:30.148
  STEP: Creating secret with name secret-test-8814dfac-868c-43e5-af54-b2d246ece01a @ 09/04/24 22:36:30.153
  STEP: Creating a pod to test consume secrets @ 09/04/24 22:36:30.169
  STEP: Saw pod success @ 09/04/24 22:36:34.221
  I0904 22:36:34.224149 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-secrets-b14040b9-4fa5-499a-b1d1-dc063e9acdf2 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 22:36:34.232
  I0904 22:36:34.270181 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3246" for this suite. @ 09/04/24 22:36:34.274
• [4.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/04/24 22:36:34.289
  I0904 22:36:34.289867 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-runtime @ 09/04/24 22:36:34.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:34.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:34.336
  STEP: create the container @ 09/04/24 22:36:34.339
  W0904 22:36:34.352777      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/04/24 22:36:34.353
  STEP: get the container status @ 09/04/24 22:36:37.428
  STEP: the container should be terminated @ 09/04/24 22:36:37.431
  STEP: the termination message should be set @ 09/04/24 22:36:37.432
  I0904 22:36:37.432061 18 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/04/24 22:36:37.432
  I0904 22:36:37.484405 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8785" for this suite. @ 09/04/24 22:36:37.49
• [3.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/04/24 22:36:37.502
  I0904 22:36:37.502611 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename certificates @ 09/04/24 22:36:37.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:37.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:37.571
  STEP: getting /apis @ 09/04/24 22:36:39.008
  STEP: getting /apis/certificates.k8s.io @ 09/04/24 22:36:39.015
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/04/24 22:36:39.016
  STEP: creating @ 09/04/24 22:36:39.018
  STEP: getting @ 09/04/24 22:36:39.072
  STEP: listing @ 09/04/24 22:36:39.08
  STEP: watching @ 09/04/24 22:36:39.087
  I0904 22:36:39.087998 18 certificates.go:316] starting watch
  STEP: patching @ 09/04/24 22:36:39.089
  STEP: updating @ 09/04/24 22:36:39.1
  I0904 22:36:39.116420 18 certificates.go:332] waiting for watch events with expected annotations
  I0904 22:36:39.116520 18 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/04/24 22:36:39.117
  STEP: patching /approval @ 09/04/24 22:36:39.12
  STEP: updating /approval @ 09/04/24 22:36:39.152
  STEP: getting /status @ 09/04/24 22:36:39.163
  STEP: patching /status @ 09/04/24 22:36:39.167
  STEP: updating /status @ 09/04/24 22:36:39.184
  STEP: deleting @ 09/04/24 22:36:39.208
  STEP: deleting a collection @ 09/04/24 22:36:39.225
  I0904 22:36:39.269275 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7411" for this suite. @ 09/04/24 22:36:39.277
• [1.791 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/04/24 22:36:39.295
  I0904 22:36:39.295145 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 22:36:39.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:39.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:39.332
  STEP: Creating secret with name secret-test-64c54f35-6001-46c7-8d79-ff6b9c0532bd @ 09/04/24 22:36:39.335
  STEP: Creating a pod to test consume secrets @ 09/04/24 22:36:39.344
  STEP: Saw pod success @ 09/04/24 22:36:43.376
  I0904 22:36:43.379167 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-secrets-4a0313cb-13bc-4343-b935-2b86ec5f3d67 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 22:36:43.387
  I0904 22:36:43.422446 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8015" for this suite. @ 09/04/24 22:36:43.426
• [4.150 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/04/24 22:36:43.445
  I0904 22:36:43.445873 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename deployment @ 09/04/24 22:36:43.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:43.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:43.482
  I0904 22:36:43.490672 18 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0904 22:36:43.515261 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0904 22:36:48.526139 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 22:36:48.526
  I0904 22:36:48.526250 18 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0904 22:36:48.550250 18 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0904 22:36:48.557339 18 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0904 22:36:50.581017 18 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0904 22:36:50.585621 18 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0904 22:36:50.617116 18 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8918",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48efffd1-a73c-4851-9cc5-5799ba2d4e22",
      ResourceVersion: (string) (len=4) "8907",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861086208,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086208,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086208,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086208,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086208,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 22:36:50.628778 18 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8918",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61bd1d21-3932-4606-9486-785c0fdafc73",
      ResourceVersion: (string) (len=4) "8895",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861086208,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "48efffd1-a73c-4851-9cc5-5799ba2d4e22",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086208,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 38 65 66 66 66  64 31 2d 61 37 33 63 2d  |\"48efffd1-a73c-|
              00000120  34 38 35 31 2d 39 63 63  35 2d 35 37 39 39 62 61  |4851-9cc5-5799ba|
              00000130  32 64 34 65 32 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2d4e22\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 22:36:50.630053 18 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0904 22:36:50.630376 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8918",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e66e60b3-3405-4a93-8cc8-8892299fc4d9",
      ResourceVersion: (string) (len=4) "8904",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861086203,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "48efffd1-a73c-4851-9cc5-5799ba2d4e22",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 34 38 65 66 66 66 64  |"uid\":\"48efffd|
              000000b0  31 2d 61 37 33 63 2d 34  38 35 31 2d 39 63 63 35  |1-a73c-4851-9cc5|
              000000c0  2d 35 37 39 39 62 61 32  64 34 65 32 32 5c 22 7d  |-5799ba2d4e22\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 22:36:50.640660 18 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-5wrxg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-5wrxg",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-8918",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6d61ea0-e484-4820-95f3-707750b3c926",
      ResourceVersion: (string) (len=4) "8894",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861086208,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "84c8f1686e2d651edc06670e4c0b1f49440b7eddf17a873da56e7819c2d58ca8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.32/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.32/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "61bd1d21-3932-4606-9486-785c0fdafc73",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086208,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  62 64 31 64 32 31 2d 33  |d\":\"61bd1d21-3|
              00000090  39 33 32 2d 34 36 30 36  2d 39 34 38 36 2d 37 38  |932-4606-9486-78|
              000000a0  35 63 30 66 64 61 66 63  37 33 5c 22 7d 22 3a 7b  |5c0fdafc73\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 33 32  5c 22 7d 22 3a 7b 22 2e  |.42.3.32\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5zpn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5zpn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086208,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861086208,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) (len=10) "10.42.3.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861086208,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861086209,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://a2b821c9235717ee561e6788168e697ed590484b9290f43045977c801ef15a63",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c5zpn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 22:36:50.655133 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8918" for this suite. @ 09/04/24 22:36:50.669
• [7.235 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/04/24 22:36:50.681
  I0904 22:36:50.681277 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 22:36:50.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:50.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:50.723
  STEP: Creating a pod to test substitution in container's command @ 09/04/24 22:36:50.726
  STEP: Saw pod success @ 09/04/24 22:36:54.783
  I0904 22:36:54.789164 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod var-expansion-d87dc7d4-eb48-4657-8006-fc6a533d975f container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 22:36:54.801
  I0904 22:36:54.831666 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-399" for this suite. @ 09/04/24 22:36:54.846
• [4.177 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/04/24 22:36:54.859
  I0904 22:36:54.859964 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 22:36:54.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:54.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:54.915
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 22:36:54.919
  STEP: Saw pod success @ 09/04/24 22:36:58.969
  I0904 22:36:58.974620 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-a4c1f23c-022e-4697-930d-86694e352941 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 22:36:58.99
  I0904 22:36:59.041730 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6929" for this suite. @ 09/04/24 22:36:59.049
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/04/24 22:36:59.066
  I0904 22:36:59.066769 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 22:36:59.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:36:59.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:36:59.123
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/24 22:36:59.127
  I0904 22:36:59.127205 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1693 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0904 22:36:59.268038 18 builder.go:146] stderr: ""
  I0904 22:36:59.268106 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/04/24 22:36:59.269
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/04/24 22:37:04.32
  I0904 22:37:04.320937 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1693 get pod e2e-test-httpd-pod -o json'
  I0904 22:37:04.416305 18 builder.go:146] stderr: ""
  I0904 22:37:04.416450 18 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"50c510965a62947f2141e0220c593066ee6c4ab06c3b0c79ac54d353a6dea18e\",\n            \"cni.projectcalico.org/podIP\": \"10.42.3.35/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.3.35/32\"\n        },\n        \"creationTimestamp\": \"2024-09-04T22:36:59Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1693\",\n        \"resourceVersion\": \"9029\",\n        \"uid\": \"6ce4b01e-0abe-4419-8330-46dfa4e371fd\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-zqjcq\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-8-12.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-zqjcq\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T22:37:00Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T22:36:59Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T22:37:00Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T22:37:00Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T22:36:59Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://458c49db53b61208c6f2f2ccd5c3166f0d524ca45f1f8a2e63035efef45721e3\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-09-04T22:37:00Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-zqjcq\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.8.12\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.8.12\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.3.35\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.3.35\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-09-04T22:36:59Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/04/24 22:37:04.416
  I0904 22:37:04.416586 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1693 replace -f -'
  I0904 22:37:04.621269 18 builder.go:146] stderr: ""
  I0904 22:37:04.621315 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/04/24 22:37:04.621
  I0904 22:37:04.628807 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1693 delete pods e2e-test-httpd-pod'
  I0904 22:37:07.088879 18 builder.go:146] stderr: ""
  I0904 22:37:07.088942 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0904 22:37:07.089081 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1693" for this suite. @ 09/04/24 22:37:07.095
• [8.041 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/04/24 22:37:07.107
  I0904 22:37:07.107938 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:37:07.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:37:07.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:37:07.149
  STEP: Creating configMap with name projected-configmap-test-volume-map-e3727568-2ff0-45b8-9f2c-d2e38e0a25f3 @ 09/04/24 22:37:07.153
  STEP: Creating a pod to test consume configMaps @ 09/04/24 22:37:07.162
  STEP: Saw pod success @ 09/04/24 22:37:11.21
  I0904 22:37:11.214220 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-configmaps-fd69e57a-7a1d-4406-9884-c79572ae38fe container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 22:37:11.224
  I0904 22:37:11.270604 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8375" for this suite. @ 09/04/24 22:37:11.274
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/04/24 22:37:11.288
  I0904 22:37:11.288745 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 22:37:11.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:37:11.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:37:11.329
  STEP: Read namespace status @ 09/04/24 22:37:11.332
  I0904 22:37:11.337292 18 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/04/24 22:37:11.337
  I0904 22:37:11.353060 18 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/04/24 22:37:11.353
  I0904 22:37:11.383637 18 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0904 22:37:11.383936 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6557" for this suite. @ 09/04/24 22:37:11.39
• [0.118 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/04/24 22:37:11.408
  I0904 22:37:11.408227 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 22:37:11.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:37:11.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:37:11.443
  STEP: creating service in namespace services-4573 @ 09/04/24 22:37:11.447
  STEP: creating service affinity-clusterip in namespace services-4573 @ 09/04/24 22:37:11.447
  STEP: creating replication controller affinity-clusterip in namespace services-4573 @ 09/04/24 22:37:11.473
  I0904 22:37:11.500332      18 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4573, replica count: 3
  I0904 22:37:14.551048      18 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 22:37:17.552003      18 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 22:37:17.560275 18 resource.go:361] Creating new exec pod
  I0904 22:37:20.587888 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-4573 exec execpod-affinityv6mzp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0904 22:37:21.032812 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0904 22:37:21.032889 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 22:37:21.033112 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-4573 exec execpod-affinityv6mzp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.220.220 80'
  I0904 22:37:21.219612 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.220.220 80\nConnection to 10.43.220.220 80 port [tcp/http] succeeded!\n"
  I0904 22:37:21.219676 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 22:37:21.219768 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-4573 exec execpod-affinityv6mzp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.220.220:80/ ; done'
  I0904 22:37:21.528710 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.220.220:80/\n"
  I0904 22:37:21.528787 18 builder.go:147] stdout: "\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk\naffinity-clusterip-dfltk"
  I0904 22:37:21.528815 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528834 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528849 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528863 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528876 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528893 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528908 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528921 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528934 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528949 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528973 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528986 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.528999 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.529012 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.529035 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.529063 18 service.go:242] Received response from host: affinity-clusterip-dfltk
  I0904 22:37:21.529175 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4573, will wait for the garbage collector to delete the pods @ 09/04/24 22:37:21.571
  I0904 22:37:21.647296 18 resources.go:139] Deleting ReplicationController affinity-clusterip took: 11.343487ms
  I0904 22:37:21.747769 18 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.470821ms
  I0904 22:37:25.613288 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4573" for this suite. @ 09/04/24 22:37:25.619
• [14.229 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/04/24 22:37:25.638
  I0904 22:37:25.638363 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 22:37:25.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:37:25.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:37:25.703
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/04/24 22:37:25.706
  STEP: Saw pod success @ 09/04/24 22:37:29.75
  I0904 22:37:29.759616 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-8dc5ae15-2ed3-4655-a108-4c3b7ced4a06 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 22:37:29.768
  I0904 22:37:29.810455 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6347" for this suite. @ 09/04/24 22:37:29.83
• [4.204 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/04/24 22:37:29.842
  I0904 22:37:29.842793 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 22:37:29.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:37:29.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:37:29.888
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 22:37:29.892
  STEP: Saw pod success @ 09/04/24 22:37:33.931
  I0904 22:37:33.935836 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-66faa401-65a2-43ae-b93c-85da3033e087 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 22:37:33.943
  I0904 22:37:33.996294 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4348" for this suite. @ 09/04/24 22:37:34.005
• [4.175 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/04/24 22:37:34.02
  I0904 22:37:34.020161 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename taint-single-pod @ 09/04/24 22:37:34.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:37:34.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:37:34.065
  I0904 22:37:34.068568 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0904 22:38:34.069136 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 22:38:34.073459 18 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/04/24 22:38:34.073
  I0904 22:38:34.296163 18 taints.go:294] Pod is running on ip-172-31-8-12.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/04/24 22:38:34.296
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/24 22:38:34.329
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/04/24 22:38:34.336
  I0904 22:38:34.336710 18 taints.go:313] Pod wasn't evicted. Proceeding
  I0904 22:38:34.336733 18 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/24 22:38:34.397
  STEP: Waiting some time to make sure that toleration time passed. @ 09/04/24 22:38:34.423
  I0904 22:39:49.424111 18 taints.go:329] Pod wasn't evicted. Test successful
  I0904 22:39:49.424593 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7692" for this suite. @ 09/04/24 22:39:49.436
• [135.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/04/24 22:39:49.45
  I0904 22:39:49.450841 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename security-context @ 09/04/24 22:39:49.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:39:49.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:39:49.503
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/04/24 22:39:49.508
  STEP: Saw pod success @ 09/04/24 22:39:53.56
  I0904 22:39:53.565236 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod security-context-7569b327-dbd3-4d8d-b4dd-39f77c8b0860 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 22:39:53.582
  I0904 22:39:53.617847 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6254" for this suite. @ 09/04/24 22:39:53.622
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 09/04/24 22:39:53.639
  I0904 22:39:53.639982 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 22:39:53.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:39:53.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:39:53.686
  STEP: fetching services @ 09/04/24 22:39:53.694
  I0904 22:39:53.702122 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3378" for this suite. @ 09/04/24 22:39:53.723
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 09/04/24 22:39:53.743
  I0904 22:39:53.743363 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/24 22:39:53.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:39:53.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:39:53.792
  I0904 22:39:53.852011 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0904 22:40:53.857819 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/04/24 22:40:53.864
  I0904 22:40:53.919596 18 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0904 22:40:53.942274 18 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0904 22:40:54.028707 18 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0904 22:40:54.077729 18 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I0904 22:40:54.147234 18 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I0904 22:40:54.191866 18 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  I0904 22:40:54.252407 18 preemption.go:266] Created pod: pod3-0-sched-preemption-medium-priority
  I0904 22:40:54.279007 18 preemption.go:266] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/04/24 22:40:54.279
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/04/24 22:40:58.357
  I0904 22:41:02.613033 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1946" for this suite. @ 09/04/24 22:41:02.618
• [68.901 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/04/24 22:41:02.645
  I0904 22:41:02.645999 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/24 22:41:02.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:41:02.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:41:02.693
  I0904 22:41:02.703544 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6195" for this suite. @ 09/04/24 22:41:02.719
• [0.097 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/04/24 22:41:02.743
  I0904 22:41:02.743716 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 22:41:02.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:41:02.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:41:02.794
  STEP: Creating pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116 @ 09/04/24 22:41:02.797
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 22:41:06.838
  I0904 22:41:06.841846 18 container_probe.go:1749] Initial restart count of pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a is 0
  I0904 22:41:06.848518 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:08.854301 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:10.860109 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:12.865608 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:14.870374 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:16.875276 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:18.881500 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:20.887072 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:22.893401 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:24.909536 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:26.915453 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:28.924397 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:30.930503 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:32.935181 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:34.940502 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:36.947170 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:38.956656 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:40.960858 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:42.968021 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:44.972424 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:46.977301 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:48.985314 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:50.990168 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:52.994968 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:55.000527 18 container_probe.go:1759] Get pod busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a in namespace container-probe-1116
  I0904 22:41:55.000589 18 container_probe.go:1763] Restart count of pod container-probe-1116/busybox-ddd8ea98-fded-43b7-a5a0-35eecda9b55a is now 1 (48.158678028s elapsed)
  STEP: deleting the pod @ 09/04/24 22:41:55
  I0904 22:41:55.053755 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1116" for this suite. @ 09/04/24 22:41:55.063
• [52.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/04/24 22:41:55.08
  I0904 22:41:55.080696 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 22:41:55.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:41:55.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:41:55.12
  I0904 22:42:55.153192 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2256" for this suite. @ 09/04/24 22:42:55.157
• [60.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/04/24 22:42:55.173
  I0904 22:42:55.174037 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 22:42:55.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:42:55.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:42:55.218
  STEP: creating secret secrets-3214/secret-test-146b94a6-2ec7-47be-abfc-db77dcc5d42b @ 09/04/24 22:42:55.221
  STEP: Creating a pod to test consume secrets @ 09/04/24 22:42:55.23
  STEP: Saw pod success @ 09/04/24 22:42:59.272
  I0904 22:42:59.277020 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-89d61152-b805-4a15-bb67-46114fd42b04 container env-test: <nil>
  STEP: delete the pod @ 09/04/24 22:42:59.299
  I0904 22:42:59.341513 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3214" for this suite. @ 09/04/24 22:42:59.347
• [4.187 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/04/24 22:42:59.36
  I0904 22:42:59.360911 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/04/24 22:42:59.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:42:59.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:42:59.416
  STEP: creating a target pod @ 09/04/24 22:42:59.419
  STEP: adding an ephemeral container @ 09/04/24 22:43:01.444
  STEP: checking pod container endpoints @ 09/04/24 22:43:05.5
  I0904 22:43:05.500779 18 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7913 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:43:05.500808 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:43:05.503102 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:43:05.503238 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-7913/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0904 22:43:05.616755 18 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/04/24 22:43:05.626
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/04/24 22:43:05.634
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/04/24 22:43:05.663
  I0904 22:43:05.701331 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7913" for this suite. @ 09/04/24 22:43:05.712
• [6.372 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/04/24 22:43:05.735
  I0904 22:43:05.735044 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 22:43:05.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:43:05.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:43:05.798
  STEP: Creating projection with secret that has name secret-emptykey-test-bf7079a5-0743-4eac-86c2-69b8ad11b38d @ 09/04/24 22:43:05.801
  I0904 22:43:05.803805 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7771" for this suite. @ 09/04/24 22:43:05.81
• [0.087 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/04/24 22:43:05.823
  I0904 22:43:05.823944 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:43:05.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:43:05.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:43:05.906
  STEP: Creating the pod @ 09/04/24 22:43:05.909
  I0904 22:43:08.497168 18 pod_client.go:173] Successfully updated pod "annotationupdate880271f1-caf2-4501-add4-ad7d046a5000"
  I0904 22:43:12.538503 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5279" for this suite. @ 09/04/24 22:43:12.546
• [6.736 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/04/24 22:43:12.559
  I0904 22:43:12.559960 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 22:43:12.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:43:12.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:43:12.627
  STEP: Creating pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345 @ 09/04/24 22:43:12.634
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 22:43:14.708
  I0904 22:43:14.714200 18 container_probe.go:1749] Initial restart count of pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 is 0
  I0904 22:43:14.718003 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:16.725852 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:18.734372 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:20.748966 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:22.764692 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:24.769904 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:26.784736 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:28.794506 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:30.805172 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:32.816533 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:34.826180 18 container_probe.go:1759] Get pod liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 in namespace container-probe-6345
  I0904 22:43:34.826243 18 container_probe.go:1763] Restart count of pod container-probe-6345/liveness-4877d618-f36f-4a42-8fac-d16fd5e8f025 is now 1 (20.111974101s elapsed)
  STEP: deleting the pod @ 09/04/24 22:43:34.826
  I0904 22:43:34.884837 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6345" for this suite. @ 09/04/24 22:43:34.894
• [22.355 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/04/24 22:43:34.915
  I0904 22:43:34.915970 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename subpath @ 09/04/24 22:43:34.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:43:34.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:43:34.962
  STEP: Setting up data @ 09/04/24 22:43:34.965
  STEP: Creating pod pod-subpath-test-configmap-62mr @ 09/04/24 22:43:34.988
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/24 22:43:34.989
  STEP: Saw pod success @ 09/04/24 22:43:59.128
  I0904 22:43:59.132296 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-subpath-test-configmap-62mr container test-container-subpath-configmap-62mr: <nil>
  STEP: delete the pod @ 09/04/24 22:43:59.141
  STEP: Deleting pod pod-subpath-test-configmap-62mr @ 09/04/24 22:43:59.176
  I0904 22:43:59.176129 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-62mr" in namespace "subpath-305"
  I0904 22:43:59.179745 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-305" for this suite. @ 09/04/24 22:43:59.185
• [24.295 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/04/24 22:43:59.213
  I0904 22:43:59.213637 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:43:59.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:43:59.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:43:59.254
  STEP: Creating projection with secret that has name projected-secret-test-3bb7af02-1d3e-4494-8b73-dc63234082ef @ 09/04/24 22:43:59.257
  STEP: Creating a pod to test consume secrets @ 09/04/24 22:43:59.267
  STEP: Saw pod success @ 09/04/24 22:44:03.306
  I0904 22:44:03.310271 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-secrets-f48c3f59-659f-4362-ae9f-f6e158ac0668 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 22:44:03.321
  I0904 22:44:03.374891 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2495" for this suite. @ 09/04/24 22:44:03.382
• [4.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/04/24 22:44:03.411
  I0904 22:44:03.411803 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename gc @ 09/04/24 22:44:03.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:03.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:03.476
  STEP: create the deployment @ 09/04/24 22:44:03.48
  W0904 22:44:03.493973      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/04/24 22:44:03.494
  STEP: delete the deployment @ 09/04/24 22:44:03.646
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/04/24 22:44:03.709
  STEP: Gathering metrics @ 09/04/24 22:44:04.286
  I0904 22:44:05.792368 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 22:44:05.792640 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7329" for this suite. @ 09/04/24 22:44:05.798
• [2.403 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/04/24 22:44:05.815
  I0904 22:44:05.815108 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 22:44:05.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:05.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:05.856
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5996 @ 09/04/24 22:44:05.859
  STEP: changing the ExternalName service to type=NodePort @ 09/04/24 22:44:05.869
  STEP: creating replication controller externalname-service in namespace services-5996 @ 09/04/24 22:44:05.921
  I0904 22:44:05.964679      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5996, replica count: 2
  I0904 22:44:09.015764      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 22:44:09.015954 18 resource.go:361] Creating new exec pod
  I0904 22:44:12.073038 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-5996 exec execpodvpwdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0904 22:44:12.339127 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0904 22:44:12.339195 18 builder.go:147] stdout: "externalname-service-dpvsd"
  I0904 22:44:12.339636 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-5996 exec execpodvpwdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.148.73 80'
  I0904 22:44:12.545053 18 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.148.73 80\n+ echo hostName\nConnection to 10.43.148.73 80 port [tcp/http] succeeded!\n"
  I0904 22:44:12.545106 18 builder.go:147] stdout: ""
  I0904 22:44:13.340093 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-5996 exec execpodvpwdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.148.73 80'
  I0904 22:44:13.620237 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.148.73 80\nConnection to 10.43.148.73 80 port [tcp/http] succeeded!\n"
  I0904 22:44:13.620308 18 builder.go:147] stdout: "externalname-service-dpvsd"
  I0904 22:44:13.620409 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-5996 exec execpodvpwdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.0.215 31352'
  I0904 22:44:13.872636 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.0.215 31352\nConnection to 172.31.0.215 31352 port [tcp/*] succeeded!\n"
  I0904 22:44:13.872708 18 builder.go:147] stdout: "externalname-service-f6l5v"
  I0904 22:44:13.872810 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-5996 exec execpodvpwdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.1.123 31352'
  I0904 22:44:14.059126 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.1.123 31352\nConnection to 172.31.1.123 31352 port [tcp/*] succeeded!\n"
  I0904 22:44:14.059189 18 builder.go:147] stdout: ""
  I0904 22:44:14.873231 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-5996 exec execpodvpwdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.1.123 31352'
  I0904 22:44:15.106010 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.1.123 31352\nConnection to 172.31.1.123 31352 port [tcp/*] succeeded!\n"
  I0904 22:44:15.106207 18 builder.go:147] stdout: "externalname-service-f6l5v"
  I0904 22:44:15.106303 18 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0904 22:44:15.184876 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5996" for this suite. @ 09/04/24 22:44:15.194
• [9.413 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/04/24 22:44:15.228
  I0904 22:44:15.228383 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 22:44:15.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:15.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:15.285
  STEP: Creating configMap with name configmap-test-volume-map-214f2c6d-fc7e-430e-a74e-c506b852a3ca @ 09/04/24 22:44:15.291
  STEP: Creating a pod to test consume configMaps @ 09/04/24 22:44:15.309
  STEP: Saw pod success @ 09/04/24 22:44:19.359
  I0904 22:44:19.363899 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-e0d1824b-d7f2-4dbe-a56e-3f2b3a1e36bc container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 22:44:19.372
  I0904 22:44:19.414860 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-424" for this suite. @ 09/04/24 22:44:19.429
• [4.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/04/24 22:44:19.463
  I0904 22:44:19.463432 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 22:44:19.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:19.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:19.527
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 22:44:19.53
  STEP: Saw pod success @ 09/04/24 22:44:23.577
  I0904 22:44:23.585412 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-8035fed3-6425-46b2-9de3-15a905ddf1af container client-container: <nil>
  STEP: delete the pod @ 09/04/24 22:44:23.615
  I0904 22:44:23.665414 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8184" for this suite. @ 09/04/24 22:44:23.681
• [4.237 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/04/24 22:44:23.7
  I0904 22:44:23.700771 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:44:23.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:23.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:23.768
  STEP: Creating secret with name s-test-opt-del-28ca8b94-32e3-4f08-810e-5b63e3a9d5f0 @ 09/04/24 22:44:23.779
  STEP: Creating secret with name s-test-opt-upd-927b0c7f-0ce7-431f-9234-7aa472406fc2 @ 09/04/24 22:44:23.789
  STEP: Creating the pod @ 09/04/24 22:44:23.805
  STEP: Deleting secret s-test-opt-del-28ca8b94-32e3-4f08-810e-5b63e3a9d5f0 @ 09/04/24 22:44:25.898
  STEP: Updating secret s-test-opt-upd-927b0c7f-0ce7-431f-9234-7aa472406fc2 @ 09/04/24 22:44:25.909
  STEP: Creating secret with name s-test-opt-create-6e8aa2dd-0c48-4d6e-8098-c4cab479f037 @ 09/04/24 22:44:25.934
  STEP: waiting to observe update in volume @ 09/04/24 22:44:25.944
  I0904 22:44:27.982783 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4314" for this suite. @ 09/04/24 22:44:27.987
• [4.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/04/24 22:44:28.024
  I0904 22:44:28.024764 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/04/24 22:44:28.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:28.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:28.087
  STEP: creating a target pod @ 09/04/24 22:44:28.09
  STEP: adding an ephemeral container @ 09/04/24 22:44:30.13
  STEP: checking pod container endpoints @ 09/04/24 22:44:34.169
  I0904 22:44:34.169190 18 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2063 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:44:34.169349 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:44:34.170261 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:44:34.170487 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-2063/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0904 22:44:34.315298 18 exec_util.go:111] Exec stderr: ""
  I0904 22:44:34.326632 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2063" for this suite. @ 09/04/24 22:44:34.333
• [6.325 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/04/24 22:44:34.35
  I0904 22:44:34.350340 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename proxy @ 09/04/24 22:44:34.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:34.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:34.4
  I0904 22:44:34.409572 18 proxy.go:293] Creating pod...
  I0904 22:44:36.468065 18 proxy.go:317] Creating service...
  I0904 22:44:36.497617 18 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/pods/agnhost/proxy/some/path/with/DELETE
  I0904 22:44:36.531306 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 22:44:36.531366 18 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/pods/agnhost/proxy/some/path/with/GET
  I0904 22:44:36.537234 18 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0904 22:44:36.537293 18 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/pods/agnhost/proxy/some/path/with/HEAD
  I0904 22:44:36.543564 18 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0904 22:44:36.544218 18 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/pods/agnhost/proxy/some/path/with/OPTIONS
  I0904 22:44:36.548727 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 22:44:36.548788 18 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/pods/agnhost/proxy/some/path/with/PATCH
  I0904 22:44:36.553562 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 22:44:36.553619 18 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/pods/agnhost/proxy/some/path/with/POST
  I0904 22:44:36.558417 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 22:44:36.558476 18 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/pods/agnhost/proxy/some/path/with/PUT
  I0904 22:44:36.562622 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 22:44:36.562701 18 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/services/test-service/proxy/some/path/with/DELETE
  I0904 22:44:36.568630 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 22:44:36.568687 18 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/services/test-service/proxy/some/path/with/GET
  I0904 22:44:36.574560 18 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0904 22:44:36.574619 18 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/services/test-service/proxy/some/path/with/HEAD
  I0904 22:44:36.581052 18 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0904 22:44:36.581718 18 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/services/test-service/proxy/some/path/with/OPTIONS
  I0904 22:44:36.587425 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 22:44:36.587481 18 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/services/test-service/proxy/some/path/with/PATCH
  I0904 22:44:36.592400 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 22:44:36.592467 18 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/services/test-service/proxy/some/path/with/POST
  I0904 22:44:36.599356 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 22:44:36.599421 18 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5200/services/test-service/proxy/some/path/with/PUT
  I0904 22:44:36.607728 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 22:44:36.608067 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5200" for this suite. @ 09/04/24 22:44:36.612
• [2.284 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/04/24 22:44:36.635
  I0904 22:44:36.635737 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename disruption @ 09/04/24 22:44:36.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:36.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:36.678
  STEP: Creating a kubernetes client @ 09/04/24 22:44:36.682
  I0904 22:44:36.682616 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename disruption-2 @ 09/04/24 22:44:36.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:36.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:36.779
  STEP: Waiting for the pdb to be processed @ 09/04/24 22:44:36.8
  STEP: Waiting for the pdb to be processed @ 09/04/24 22:44:38.819
  STEP: Waiting for the pdb to be processed @ 09/04/24 22:44:38.864
  STEP: listing a collection of PDBs across all namespaces @ 09/04/24 22:44:40.872
  STEP: listing a collection of PDBs in namespace disruption-2347 @ 09/04/24 22:44:40.881
  STEP: deleting a collection of PDBs @ 09/04/24 22:44:40.888
  STEP: Waiting for the PDB collection to be deleted @ 09/04/24 22:44:40.913
  I0904 22:44:40.916813 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3790" for this suite. @ 09/04/24 22:44:40.922
  I0904 22:44:40.940976 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2347" for this suite. @ 09/04/24 22:44:41.023
• [4.406 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/04/24 22:44:41.041
  I0904 22:44:41.041956 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 22:44:41.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:41.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:41.082
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/04/24 22:44:41.085
  I0904 22:44:41.086787 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:44:43.701167 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:44:52.237972 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3193" for this suite. @ 09/04/24 22:44:52.246
• [11.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/04/24 22:44:52.264
  I0904 22:44:52.264418 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 22:44:52.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:44:52.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:44:52.315
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/04/24 22:44:52.368
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 22:44:52.383
  I0904 22:44:52.485263 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:44:52.486235 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:44:53.397436 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:44:53.398078 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:44:54.405149 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 22:44:54.405215 18 fixtures.go:130] Node ip-172-31-1-123.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:44:55.394393 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 22:44:55.394919 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/04/24 22:44:55.398
  I0904 22:44:55.497410 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:44:55.497472 18 fixtures.go:130] Node ip-172-31-3-55.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:44:56.437587 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:44:56.437639 18 fixtures.go:130] Node ip-172-31-3-55.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:44:57.457053 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:44:57.457104 18 fixtures.go:130] Node ip-172-31-3-55.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:44:58.448157 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 22:44:58.448212 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/04/24 22:44:58.448
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 22:44:58.455
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6923, will wait for the garbage collector to delete the pods @ 09/04/24 22:44:58.455
  I0904 22:44:58.523837 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.326991ms
  I0904 22:44:58.624445 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.604427ms
  I0904 22:45:00.929405 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:45:00.929465 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 22:45:00.934321 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12126"},"items":null}

  I0904 22:45:00.937847 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12126"},"items":null}

  I0904 22:45:00.957289 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6923" for this suite. @ 09/04/24 22:45:00.961
• [8.710 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/04/24 22:45:00.974
  I0904 22:45:00.974675 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 22:45:00.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:45:01.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:45:01.022
  I0904 22:45:01.066586 18 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 22:45:01.078
  I0904 22:45:01.187082 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:45:01.187138 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:45:02.091555 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:45:02.091604 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:45:03.090151 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:45:03.090223 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:45:04.101412 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 22:45:04.101476 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/04/24 22:45:04.126
  STEP: Check that daemon pods images are updated. @ 09/04/24 22:45:04.193
  I0904 22:45:04.201163 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:04.201226 18 daemon_set.go:1193] Wrong image for pod: daemon-set-bgptc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:04.201247 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:05.199199 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:05.199644 18 daemon_set.go:1193] Wrong image for pod: daemon-set-bgptc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:05.199805 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:06.201569 18 daemon_set.go:1198] Pod daemon-set-5dtkx is not available
  I0904 22:45:06.201638 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:06.201655 18 daemon_set.go:1193] Wrong image for pod: daemon-set-bgptc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:06.201705 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:07.200261 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:07.200339 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:08.199429 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:08.199481 18 daemon_set.go:1198] Pod daemon-set-fhb82 is not available
  I0904 22:45:08.199500 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:09.199621 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:09.200068 18 daemon_set.go:1198] Pod daemon-set-fhb82 is not available
  I0904 22:45:09.200357 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:10.200271 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:10.200328 18 daemon_set.go:1198] Pod daemon-set-fhb82 is not available
  I0904 22:45:10.200346 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:11.206619 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:11.206672 18 daemon_set.go:1198] Pod daemon-set-fhb82 is not available
  I0904 22:45:11.206690 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:12.199724 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:12.200007 18 daemon_set.go:1198] Pod daemon-set-fhb82 is not available
  I0904 22:45:12.200033 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:13.203006 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:13.203065 18 daemon_set.go:1198] Pod daemon-set-fhb82 is not available
  I0904 22:45:13.203082 18 daemon_set.go:1193] Wrong image for pod: daemon-set-z7zpd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:14.222284 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:15.200012 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:15.200069 18 daemon_set.go:1198] Pod daemon-set-hc2xx is not available
  I0904 22:45:16.199722 18 daemon_set.go:1193] Wrong image for pod: daemon-set-675jw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 22:45:16.200410 18 daemon_set.go:1198] Pod daemon-set-hc2xx is not available
  I0904 22:45:18.205405 18 daemon_set.go:1198] Pod daemon-set-2jpsq is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/04/24 22:45:18.21
  I0904 22:45:18.220322 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:45:18.220382 18 fixtures.go:130] Node ip-172-31-3-55.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:45:19.229715 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:45:19.229779 18 fixtures.go:130] Node ip-172-31-3-55.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:45:20.223531 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 22:45:20.223601 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 22:45:20.248
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7945, will wait for the garbage collector to delete the pods @ 09/04/24 22:45:20.248
  I0904 22:45:20.320259 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.182264ms
  I0904 22:45:20.421193 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.933753ms
  I0904 22:45:23.036960 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:45:23.037119 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 22:45:23.045516 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12413"},"items":null}

  I0904 22:45:23.049957 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12413"},"items":null}

  I0904 22:45:23.088226 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7945" for this suite. @ 09/04/24 22:45:23.093
• [22.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/04/24 22:45:23.115
  I0904 22:45:23.115235 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 22:45:23.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:45:23.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:45:23.166
  I0904 22:45:23.169453 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:45:26.304351 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4808" for this suite. @ 09/04/24 22:45:26.308
• [3.217 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 09/04/24 22:45:26.332
  I0904 22:45:26.332469 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename job @ 09/04/24 22:45:26.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:45:26.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:45:26.375
  STEP: Creating a job @ 09/04/24 22:45:26.38
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/04/24 22:45:26.418
  STEP: patching /status @ 09/04/24 22:45:30.432
  STEP: updating /status @ 09/04/24 22:45:30.502
  STEP: get /status @ 09/04/24 22:45:30.516
  I0904 22:45:30.520494 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3976" for this suite. @ 09/04/24 22:45:30.537
• [4.222 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/04/24 22:45:30.554
  I0904 22:45:30.554599 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename security-context @ 09/04/24 22:45:30.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:45:30.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:45:30.604
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/04/24 22:45:30.616
  STEP: Saw pod success @ 09/04/24 22:45:34.679
  I0904 22:45:34.682809 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod security-context-fe4e8fa6-84ad-428c-bfe6-3e8d22c49a55 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 22:45:34.69
  I0904 22:45:34.731192 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6212" for this suite. @ 09/04/24 22:45:34.736
• [4.193 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/04/24 22:45:34.753
  I0904 22:45:34.753847 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename limitrange @ 09/04/24 22:45:34.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:45:34.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:45:34.797
  STEP: Creating LimitRange "e2e-limitrange-wfnxm" in namespace "limitrange-9469" @ 09/04/24 22:45:34.8
  STEP: Creating another limitRange in another namespace @ 09/04/24 22:45:34.811
  I0904 22:45:34.894818 18 limit_range.go:299] Namespace "e2e-limitrange-wfnxm-4482" created
  I0904 22:45:34.894866 18 limit_range.go:300] Creating LimitRange "e2e-limitrange-wfnxm" in namespace "e2e-limitrange-wfnxm-4482"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-wfnxm" @ 09/04/24 22:45:34.904
  I0904 22:45:34.907875 18 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-wfnxm" in "limitrange-9469" namespace @ 09/04/24 22:45:34.908
  I0904 22:45:34.920123 18 limit_range.go:335] LimitRange "e2e-limitrange-wfnxm" has been patched
  STEP: Delete LimitRange "e2e-limitrange-wfnxm" by Collection with labelSelector: "e2e-limitrange-wfnxm=patched" @ 09/04/24 22:45:34.92
  STEP: Confirm that the limitRange "e2e-limitrange-wfnxm" has been deleted @ 09/04/24 22:45:34.935
  I0904 22:45:34.935147 18 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0904 22:45:34.939208 18 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-wfnxm=patched"
  I0904 22:45:34.939261 18 limit_range.go:344] LimitRange "e2e-limitrange-wfnxm" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-wfnxm" @ 09/04/24 22:45:34.939
  I0904 22:45:34.942500 18 limit_range.go:350] Found 1 limitRange
  I0904 22:45:34.942821 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9469" for this suite. @ 09/04/24 22:45:34.947
  STEP: Destroying namespace "e2e-limitrange-wfnxm-4482" for this suite. @ 09/04/24 22:45:34.959
• [0.223 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/04/24 22:45:34.978
  I0904 22:45:34.978664 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 22:45:34.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:45:35.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:45:35.027
  STEP: creating a Pod with a static label @ 09/04/24 22:45:35.038
  STEP: watching for Pod to be ready @ 09/04/24 22:45:35.057
  I0904 22:45:35.059998 18 pods.go:945] observed Pod pod-test in namespace pods-8405 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0904 22:45:35.075254 18 pods.go:945] observed Pod pod-test in namespace pods-8405 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC  }]
  I0904 22:45:35.120625 18 pods.go:945] observed Pod pod-test in namespace pods-8405 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC  }]
  I0904 22:45:35.808844 18 pods.go:945] observed Pod pod-test in namespace pods-8405 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC  }]
  I0904 22:45:38.049142 18 pods.go:948] Found Pod pod-test in namespace pods-8405 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:38 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:38 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 22:45:35 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/04/24 22:45:38.053
  STEP: getting the Pod and ensuring that it's patched @ 09/04/24 22:45:38.092
  STEP: replacing the Pod's status Ready condition to False @ 09/04/24 22:45:38.112
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/04/24 22:45:38.135
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/04/24 22:45:38.135
  STEP: watching for the Pod to be deleted @ 09/04/24 22:45:38.162
  I0904 22:45:38.165514 18 pods.go:1058] observed event type MODIFIED
  I0904 22:45:40.070766 18 pods.go:1058] observed event type MODIFIED
  I0904 22:45:40.576059 18 pods.go:1058] observed event type MODIFIED
  I0904 22:45:40.715403 18 pods.go:1058] observed event type MODIFIED
  I0904 22:45:41.069004 18 pods.go:1058] observed event type MODIFIED
  I0904 22:45:41.101675 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8405" for this suite. @ 09/04/24 22:45:41.107
• [6.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 09/04/24 22:45:41.12
  I0904 22:45:41.120253 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 22:45:41.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:45:41.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:45:41.178
  STEP: Creating service test in namespace statefulset-3046 @ 09/04/24 22:45:41.181
  STEP: Creating a new StatefulSet @ 09/04/24 22:45:41.191
  I0904 22:45:41.224245 18 wait.go:40] Found 0 stateful pods, waiting for 3
  I0904 22:45:51.237737 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 22:45:51.238082 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 22:45:51.238283 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/04/24 22:45:51.25
  I0904 22:45:51.265475 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/04/24 22:45:51.265
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/04/24 22:46:01.286
  STEP: Performing a canary update @ 09/04/24 22:46:01.286
  I0904 22:46:01.323195 18 statefulset.go:2507] Updating stateful set ss2
  I0904 22:46:01.386883 18 wait.go:74] Waiting for Pod statefulset-3046/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/04/24 22:46:11.334
  I0904 22:46:11.518126 18 wait.go:40] Found 2 stateful pods, waiting for 3
  I0904 22:46:21.491187 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 22:46:21.491303 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 22:46:21.491325 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/04/24 22:46:21.509
  I0904 22:46:21.531890 18 statefulset.go:2507] Updating stateful set ss2
  I0904 22:46:21.555407 18 wait.go:74] Waiting for Pod statefulset-3046/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0904 22:46:31.563278 18 statefulset.go:2507] Updating stateful set ss2
  I0904 22:46:31.608007 18 wait.go:56] Waiting for StatefulSet statefulset-3046/ss2 to complete update
  I0904 22:46:31.608066 18 wait.go:63] Waiting for Pod statefulset-3046/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0904 22:46:41.574739 18 statefulset.go:138] Deleting all statefulset in ns statefulset-3046
  I0904 22:46:41.579448 18 rest.go:150] Scaling statefulset ss2 to 0
  I0904 22:46:51.615922 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 22:46:51.619606 18 rest.go:88] Deleting statefulset ss2
  I0904 22:46:51.663106 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3046" for this suite. @ 09/04/24 22:46:51.677
• [70.575 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/04/24 22:46:51.695
  I0904 22:46:51.695649 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename security-context-test @ 09/04/24 22:46:51.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:46:51.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:46:51.742
  I0904 22:46:55.818927 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9085" for this suite. @ 09/04/24 22:46:55.823
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/04/24 22:46:55.84
  I0904 22:46:55.840187 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 22:46:55.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:46:55.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:46:55.889
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 22:46:55.892
  STEP: Saw pod success @ 09/04/24 22:46:59.93
  I0904 22:46:59.934652 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-807955e8-df40-4e33-b630-61fed7e25d23 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 22:46:59.941
  I0904 22:47:00.004573 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9005" for this suite. @ 09/04/24 22:47:00.01
• [4.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/04/24 22:47:00.051
  I0904 22:47:00.051684 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 22:47:00.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:47:00.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:47:00.114
  STEP: Creating secret with name s-test-opt-del-bba9a551-a055-46eb-b376-065ba7bf5666 @ 09/04/24 22:47:00.122
  STEP: Creating secret with name s-test-opt-upd-6ce86ab3-e9bb-43cd-bf96-028d399747e2 @ 09/04/24 22:47:00.132
  STEP: Creating the pod @ 09/04/24 22:47:00.142
  STEP: Deleting secret s-test-opt-del-bba9a551-a055-46eb-b376-065ba7bf5666 @ 09/04/24 22:47:04.238
  STEP: Updating secret s-test-opt-upd-6ce86ab3-e9bb-43cd-bf96-028d399747e2 @ 09/04/24 22:47:04.249
  STEP: Creating secret with name s-test-opt-create-30764a59-21db-4f2b-8679-65254a35aaba @ 09/04/24 22:47:04.259
  STEP: waiting to observe update in volume @ 09/04/24 22:47:04.289
  I0904 22:47:38.595058 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5739" for this suite. @ 09/04/24 22:47:38.603
• [38.576 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 09/04/24 22:47:38.628
  I0904 22:47:38.628701 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 22:47:38.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:47:38.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:47:38.686
  STEP: Creating service test in namespace statefulset-4633 @ 09/04/24 22:47:38.692
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/04/24 22:47:38.707
  STEP: Creating stateful set ss in namespace statefulset-4633 @ 09/04/24 22:47:38.714
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4633 @ 09/04/24 22:47:38.742
  I0904 22:47:38.776439 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0904 22:47:48.747708 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/04/24 22:47:48.747
  I0904 22:47:48.759186 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-4633 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 22:47:49.067641 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 22:47:49.067823 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 22:47:49.067848 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 22:47:49.073168 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0904 22:47:59.072774 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 22:47:59.072851 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0904 22:47:59.174353 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999s
  I0904 22:48:00.180278 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.925071108s
  I0904 22:48:01.190198 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.919238081s
  I0904 22:48:02.195923 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.909265584s
  I0904 22:48:03.201207 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.903575022s
  I0904 22:48:04.206725 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.897365872s
  I0904 22:48:05.212084 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.891988792s
  I0904 22:48:06.217029 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.886980195s
  I0904 22:48:07.228454 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.882262941s
  I0904 22:48:08.234455 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 871.057247ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4633 @ 09/04/24 22:48:09.234
  I0904 22:48:09.239126 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-4633 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 22:48:09.433624 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 22:48:09.433674 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 22:48:09.433809 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 22:48:09.437952 18 wait.go:40] Found 1 stateful pods, waiting for 3
  I0904 22:48:19.439737 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 22:48:19.439802 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 22:48:19.439822 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/04/24 22:48:19.439
  STEP: Scale down will halt with unhealthy stateful pod @ 09/04/24 22:48:19.439
  I0904 22:48:19.449439 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-4633 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 22:48:19.664006 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 22:48:19.664067 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 22:48:19.664089 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 22:48:19.664309 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-4633 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 22:48:20.431702 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 22:48:20.431782 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 22:48:20.431811 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 22:48:20.431882 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-4633 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 22:48:20.706989 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 22:48:20.707045 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 22:48:20.707068 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 22:48:20.707085 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0904 22:48:20.711054 18 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0904 22:48:30.717344 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 22:48:30.717407 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0904 22:48:30.717426 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0904 22:48:30.818048 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.99999946s
  I0904 22:48:31.823622 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.913129752s
  I0904 22:48:32.828602 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.907303215s
  I0904 22:48:33.835319 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.901909464s
  I0904 22:48:34.839992 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.895961164s
  I0904 22:48:35.846050 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.890583374s
  I0904 22:48:36.852478 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.884173906s
  I0904 22:48:37.859882 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.878725113s
  I0904 22:48:38.871925 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.870760648s
  I0904 22:48:39.877611 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 859.184461ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4633 @ 09/04/24 22:48:40.877
  I0904 22:48:40.882967 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-4633 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 22:48:41.091423 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 22:48:41.091488 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 22:48:41.091507 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 22:48:41.091571 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-4633 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 22:48:41.276560 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 22:48:41.276636 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 22:48:41.276663 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 22:48:41.276766 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-4633 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 22:48:41.498907 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 22:48:41.498976 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 22:48:41.498999 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 22:48:41.499018 18 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/04/24 22:48:51.513
  I0904 22:48:51.513800 18 statefulset.go:138] Deleting all statefulset in ns statefulset-4633
  I0904 22:48:51.519482 18 rest.go:150] Scaling statefulset ss to 0
  I0904 22:48:51.542098 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 22:48:51.547640 18 rest.go:88] Deleting statefulset ss
  I0904 22:48:51.567706 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4633" for this suite. @ 09/04/24 22:48:51.572
• [72.960 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 09/04/24 22:48:51.59
  I0904 22:48:51.590267 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 22:48:51.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:48:51.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:48:51.633
  STEP: creating Agnhost RC @ 09/04/24 22:48:51.637
  I0904 22:48:51.637274 18 kubectl.go:1537] namespace kubectl-1183
  I0904 22:48:51.637846 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1183 create -f -'
  I0904 22:48:51.853861 18 builder.go:146] stderr: ""
  I0904 22:48:51.853914 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/24 22:48:51.853
  I0904 22:48:52.860285 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 22:48:52.860343 18 framework.go:733] Found 0 / 1
  I0904 22:48:53.860839 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 22:48:53.860897 18 framework.go:733] Found 1 / 1
  I0904 22:48:53.860923 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0904 22:48:53.864184 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 22:48:53.864242 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 22:48:53.864258 18 kubectl.go:1544] wait on agnhost-primary startup in kubectl-1183 
  I0904 22:48:53.864327 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1183 logs agnhost-primary-drnw9 agnhost-primary'
  I0904 22:48:54.011253 18 builder.go:146] stderr: ""
  I0904 22:48:54.011317 18 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/04/24 22:48:54.011
  I0904 22:48:54.011419 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1183 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0904 22:48:54.153187 18 builder.go:146] stderr: ""
  I0904 22:48:54.153996 18 builder.go:147] stdout: "service/rm2 exposed\n"
  I0904 22:48:54.175986 18 utils.go:1203] Service rm2 in namespace kubectl-1183 found.
  STEP: exposing service @ 09/04/24 22:48:56.185
  I0904 22:48:56.185150 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1183 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0904 22:48:56.343246 18 builder.go:146] stderr: ""
  I0904 22:48:56.343354 18 builder.go:147] stdout: "service/rm3 exposed\n"
  I0904 22:48:56.372441 18 utils.go:1203] Service rm3 in namespace kubectl-1183 found.
  I0904 22:48:58.379484 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1183" for this suite. @ 09/04/24 22:48:58.383
• [6.809 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/04/24 22:48:58.399
  I0904 22:48:58.399687 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/24 22:48:58.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:48:58.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:48:58.437
  I0904 22:49:00.498984 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9187" for this suite. @ 09/04/24 22:49:00.508
• [2.136 seconds]
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/04/24 22:49:00.536
  I0904 22:49:00.536641 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/04/24 22:49:00.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:49:00.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:49:00.592
  STEP: mirroring a new custom Endpoint @ 09/04/24 22:49:00.656
  I0904 22:49:00.675941 18 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/04/24 22:49:02.68
  STEP: mirroring deletion of a custom Endpoint @ 09/04/24 22:49:02.703
  I0904 22:49:02.746740 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6416" for this suite. @ 09/04/24 22:49:02.753
• [2.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/04/24 22:49:02.772
  I0904 22:49:02.772807 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 22:49:02.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:49:02.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:49:02.819
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/04/24 22:49:02.823
  STEP: Saw pod success @ 09/04/24 22:49:08.874
  I0904 22:49:08.881910 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-a3bac413-a9f9-4198-b3b7-40a5ac75c744 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 22:49:08.899
  I0904 22:49:08.944455 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6151" for this suite. @ 09/04/24 22:49:08.952
• [6.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/04/24 22:49:08.969
  I0904 22:49:08.969491 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 22:49:08.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:49:09.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:49:09.02
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 22:49:09.03
  STEP: Saw pod success @ 09/04/24 22:49:13.066
  I0904 22:49:13.070395 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-b5fb91a0-93a4-4102-a7f2-dc51c4f4a269 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 22:49:13.09
  I0904 22:49:13.153037 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1092" for this suite. @ 09/04/24 22:49:13.161
• [4.203 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/04/24 22:49:13.173
  I0904 22:49:13.173396 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 22:49:13.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:49:13.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:49:13.23
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/24 22:49:13.28
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 22:49:13.304
  I0904 22:49:13.372718 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:49:13.372788 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:49:14.325352 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:49:14.325684 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:49:15.313909 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 22:49:15.313975 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:49:16.314321 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 22:49:16.314382 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/04/24 22:49:16.318
  I0904 22:49:16.424150 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:49:16.424211 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:49:17.350306 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:49:17.350371 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:49:18.351059 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:49:18.351133 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:49:19.356135 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:49:19.356616 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:49:20.351416 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 22:49:20.351471 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:49:21.349716 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 22:49:21.349774 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 22:49:21.36
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7941, will wait for the garbage collector to delete the pods @ 09/04/24 22:49:21.36
  I0904 22:49:21.427493 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.03244ms
  I0904 22:49:21.528503 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.010951ms
  I0904 22:49:24.135555 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 22:49:24.135606 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 22:49:24.139494 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14454"},"items":null}

  I0904 22:49:24.142888 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14454"},"items":null}

  I0904 22:49:24.167775 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7941" for this suite. @ 09/04/24 22:49:24.172
• [11.010 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/04/24 22:49:24.185
  I0904 22:49:24.185839 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename cronjob @ 09/04/24 22:49:24.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:49:24.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:49:24.228
  STEP: Creating a ForbidConcurrent cronjob @ 09/04/24 22:49:24.231
  STEP: Ensuring a job is scheduled @ 09/04/24 22:49:24.243
  STEP: Ensuring exactly one is scheduled @ 09/04/24 22:50:00.247
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/04/24 22:50:00.251
  STEP: Ensuring no more jobs are scheduled @ 09/04/24 22:50:00.254
  STEP: Removing cronjob @ 09/04/24 22:50:00.258
  I0904 22:50:00.279854 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-17" for this suite. @ 09/04/24 22:50:00.286
• [36.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/04/24 22:50:00.306
  I0904 22:50:00.306330 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 22:50:00.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:50:00.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:50:00.388
  STEP: Creating a ResourceQuota with best effort scope @ 09/04/24 22:50:00.391
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/24 22:50:00.403
  STEP: Creating a ResourceQuota with not best effort scope @ 09/04/24 22:50:02.409
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/24 22:50:02.419
  STEP: Creating a best-effort pod @ 09/04/24 22:50:04.424
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/04/24 22:50:04.47
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/04/24 22:50:06.475
  STEP: Deleting the pod @ 09/04/24 22:50:08.48
  STEP: Ensuring resource quota status released the pod usage @ 09/04/24 22:50:08.536
  STEP: Creating a not best-effort pod @ 09/04/24 22:50:10.543
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/04/24 22:50:10.582
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/04/24 22:50:12.592
  STEP: Deleting the pod @ 09/04/24 22:50:14.598
  STEP: Ensuring resource quota status released the pod usage @ 09/04/24 22:50:14.643
  I0904 22:50:16.647564 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4692" for this suite. @ 09/04/24 22:50:16.652
• [16.362 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/04/24 22:50:16.668
  I0904 22:50:16.668721 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 22:50:16.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:50:16.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:50:16.713
  STEP: Counting existing ResourceQuota @ 09/04/24 22:50:16.715
  STEP: Creating a ResourceQuota @ 09/04/24 22:50:21.727
  STEP: Ensuring resource quota status is calculated @ 09/04/24 22:50:21.742
  STEP: Creating a Pod that fits quota @ 09/04/24 22:50:23.747
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/04/24 22:50:23.788
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/04/24 22:50:25.795
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/04/24 22:50:25.8
  STEP: Ensuring a pod cannot update its resource requirements @ 09/04/24 22:50:25.804
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/04/24 22:50:25.81
  STEP: Deleting the pod @ 09/04/24 22:50:27.818
  STEP: Ensuring resource quota status released the pod usage @ 09/04/24 22:50:27.892
  I0904 22:50:29.897968 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8163" for this suite. @ 09/04/24 22:50:29.903
• [13.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 09/04/24 22:50:29.919
  I0904 22:50:29.919597 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 22:50:29.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:50:29.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:50:29.963
  STEP: Creating a pod to test service account token:  @ 09/04/24 22:50:29.967
  STEP: Saw pod success @ 09/04/24 22:50:33.998
  I0904 22:50:34.005108 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod test-pod-a191a315-6140-48a3-8b64-6ee6c1fb8e39 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 22:50:34.011
  I0904 22:50:34.048757 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7701" for this suite. @ 09/04/24 22:50:34.053
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/04/24 22:50:34.064
  I0904 22:50:34.064944 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename deployment @ 09/04/24 22:50:34.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:50:34.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:50:34.106
  STEP: creating a Deployment @ 09/04/24 22:50:34.114
  STEP: waiting for Deployment to be created @ 09/04/24 22:50:34.124
  STEP: waiting for all Replicas to be Ready @ 09/04/24 22:50:34.126
  I0904 22:50:34.127613 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 22:50:34.128111 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 22:50:34.170923 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 22:50:34.171245 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 22:50:34.215339 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 22:50:34.216035 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 22:50:34.299244 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 22:50:34.299300 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 22:50:35.639378 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0904 22:50:35.639491 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0904 22:50:35.987843 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/04/24 22:50:35.987
  I0904 22:50:36.010947 18 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/04/24 22:50:36.011
  I0904 22:50:36.014605 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0
  I0904 22:50:36.014923 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0
  I0904 22:50:36.014955 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0
  I0904 22:50:36.015537 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0
  I0904 22:50:36.015579 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0
  I0904 22:50:36.015594 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0
  I0904 22:50:36.016099 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0
  I0904 22:50:36.016121 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 0
  I0904 22:50:36.016280 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:36.016623 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:36.016679 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:36.016697 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:36.016716 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:36.016768 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:36.043499 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:36.043555 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:36.100378 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:36.100651 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:36.166468 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:36.166552 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:36.201546 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:36.201604 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:38.061563 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:38.061638 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:38.139683 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  STEP: listing Deployments @ 09/04/24 22:50:38.139
  I0904 22:50:38.143591 18 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/04/24 22:50:38.143
  I0904 22:50:38.161061 18 deployment.go:360] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/04/24 22:50:38.161
  I0904 22:50:38.170696 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 22:50:38.254902 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 22:50:38.363566 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 22:50:38.418789 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 22:50:39.667403 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 22:50:40.033726 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 22:50:40.136144 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 22:50:40.154650 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 22:50:41.681959 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/04/24 22:50:41.757
  STEP: fetching the DeploymentStatus @ 09/04/24 22:50:41.777
  I0904 22:50:41.789283 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:41.789777 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:41.789931 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:41.791683 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 1
  I0904 22:50:41.792145 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:41.792471 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 3
  I0904 22:50:41.792720 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:41.792801 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 2
  I0904 22:50:41.792855 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-5347 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/04/24 22:50:41.793
  I0904 22:50:41.815679 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.815725 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.815747 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.816375 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.816633 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.817030 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.817074 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.817395 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.817507 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.817681 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.817932 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.818319 18 deployment.go:475] observed event type MODIFIED
  I0904 22:50:41.823073 18 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0904 22:50:41.836883 18 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5347",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d482fd11-d48f-435e-96a1-5f2ea611ad0c",
      ResourceVersion: (string) (len=5) "15036",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087038,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "25db46c5-9e0e-402b-ba2b-f4453912edc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 35 64 62  34 36 63 35 2d 39 65 30  |":\"25db46c5-9e0|
              00000130  65 2d 34 30 32 62 2d 62  61 32 62 2d 66 34 34 35  |e-402b-ba2b-f445|
              00000140  33 39 31 32 65 64 63 33  5c 22 7d 22 3a 7b 7d 7d  |3912edc3\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0904 22:50:41.853327 18 deployment.go:669] pod: "test-deployment-6c86c7f765-dr9xh":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-dr9xh",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-5347",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "638129b0-02d5-42cd-900b-21bd4644c505",
      ResourceVersion: (string) (len=5) "15003",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087038,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9e42f904808ffbf3aa4c7eaf6150a62aa896ec671283fd11b9493fa59f4e22ca",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.84/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "d482fd11-d48f-435e-96a1-5f2ea611ad0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 34 38 32 66 64 31 31  |uid\":\"d482fd11|
              000000a0  2d 64 34 38 66 2d 34 33  35 65 2d 39 36 61 31 2d  |-d48f-435e-96a1-|
              000000b0  35 66 32 65 61 36 31 31  61 64 30 63 5c 22 7d 22  |5f2ea611ad0c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 38 34  5c 22 7d 22 3a 7b 22 2e  |.42.3.84\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fwqzj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fwqzj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) (len=10) "10.42.3.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087038,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087039,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://de1b5f82cf1b76f24b8c470d35ec11df77ea87c02362ec1979456ec61a2bbdd6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fwqzj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0904 22:50:41.871463 18 deployment.go:669] pod: "test-deployment-6c86c7f765-nks9l":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-nks9l",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-5347",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81d345dd-5afb-4f11-ae4a-18c47b57f1f6",
      ResourceVersion: (string) (len=5) "15035",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087040,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.24/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.24/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "70331df14c72390c3d206d7e84080af3baca9a5686f9488ceb34d0c330620208"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "d482fd11-d48f-435e-96a1-5f2ea611ad0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 34 38 32 66 64 31 31  |uid\":\"d482fd11|
              000000a0  2d 64 34 38 66 2d 34 33  35 65 2d 39 36 61 31 2d  |-d48f-435e-96a1-|
              000000b0  35 66 32 65 61 36 31 31  61 64 30 63 5c 22 7d 22  |5f2ea611ad0c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 34  5c 22 7d 22 3a 7b 22 2e  |.42.2.24\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5ws7d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5ws7d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-1-123.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.1.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.1.123"
        }
      },
      PodIP: (string) (len=10) "10.42.2.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087040,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087041,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1e9450e10418b462bb9d108447a7a846298dc1006fd1bc47df75ed4c3830ba52",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5ws7d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0904 22:50:41.875858 18 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5347",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a895798d-1631-4618-af63-bb1273609c17",
      ResourceVersion: (string) (len=5) "14948",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087034,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "25db46c5-9e0e-402b-ba2b-f4453912edc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 35 64 62  34 36 63 35 2d 39 65 30  |":\"25db46c5-9e0|
              00000130  65 2d 34 30 32 62 2d 62  61 32 62 2d 66 34 34 35  |e-402b-ba2b-f445|
              00000140  33 39 31 32 65 64 63 33  5c 22 7d 22 3a 7b 7d 7d  |3912edc3\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0904 22:50:41.887165 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5347" for this suite. @ 09/04/24 22:50:41.896
• [7.854 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/04/24 22:50:41.921
  I0904 22:50:41.921157 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 22:50:41.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:50:41.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:50:41.99
  STEP: creating a replication controller @ 09/04/24 22:50:41.994
  I0904 22:50:41.995180 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 create -f -'
  I0904 22:50:42.307914 18 builder.go:146] stderr: ""
  I0904 22:50:42.307982 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/24 22:50:42.308
  I0904 22:50:42.308227 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 22:50:42.537795 18 builder.go:146] stderr: ""
  I0904 22:50:42.537978 18 builder.go:147] stdout: "update-demo-nautilus-fzs4t update-demo-nautilus-lvjw8 "
  I0904 22:50:42.538046 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-fzs4t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 22:50:42.695900 18 builder.go:146] stderr: ""
  I0904 22:50:42.695958 18 builder.go:147] stdout: ""
  I0904 22:50:42.695977 18 kubectl.go:2502] update-demo-nautilus-fzs4t is created but not running
  I0904 22:50:47.698888 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 22:50:47.803027 18 builder.go:146] stderr: ""
  I0904 22:50:47.803101 18 builder.go:147] stdout: "update-demo-nautilus-fzs4t update-demo-nautilus-lvjw8 "
  I0904 22:50:47.803614 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-fzs4t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 22:50:47.900094 18 builder.go:146] stderr: ""
  I0904 22:50:47.900150 18 builder.go:147] stdout: ""
  I0904 22:50:47.900523 18 kubectl.go:2502] update-demo-nautilus-fzs4t is created but not running
  I0904 22:50:52.902829 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 22:50:53.084248 18 builder.go:146] stderr: ""
  I0904 22:50:53.084312 18 builder.go:147] stdout: "update-demo-nautilus-fzs4t update-demo-nautilus-lvjw8 "
  I0904 22:50:53.084394 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-fzs4t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 22:50:53.244690 18 builder.go:146] stderr: ""
  I0904 22:50:53.244736 18 builder.go:147] stdout: "true"
  I0904 22:50:53.244805 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-fzs4t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 22:50:53.424444 18 builder.go:146] stderr: ""
  I0904 22:50:53.424509 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 22:50:53.424534 18 kubectl.go:2393] validating pod update-demo-nautilus-fzs4t
  I0904 22:50:53.451987 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 22:50:53.452093 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 22:50:53.452248 18 kubectl.go:2520] update-demo-nautilus-fzs4t is verified up and running
  I0904 22:50:53.452418 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-lvjw8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 22:50:53.744572 18 builder.go:146] stderr: ""
  I0904 22:50:53.744632 18 builder.go:147] stdout: "true"
  I0904 22:50:53.744903 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-lvjw8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 22:50:53.848662 18 builder.go:146] stderr: ""
  I0904 22:50:53.848715 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 22:50:53.848736 18 kubectl.go:2393] validating pod update-demo-nautilus-lvjw8
  I0904 22:50:53.857454 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 22:50:53.857537 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 22:50:53.857558 18 kubectl.go:2520] update-demo-nautilus-lvjw8 is verified up and running
  STEP: scaling down the replication controller @ 09/04/24 22:50:53.857
  I0904 22:50:53.860059 18 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0904 22:50:53.860135 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0904 22:50:54.983859 18 builder.go:146] stderr: ""
  I0904 22:50:54.984080 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/24 22:50:54.984
  I0904 22:50:54.984219 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 22:50:55.094842 18 builder.go:146] stderr: ""
  I0904 22:50:55.095018 18 builder.go:147] stdout: "update-demo-nautilus-fzs4t update-demo-nautilus-lvjw8 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/04/24 22:50:55.095
  I0904 22:51:00.095998 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 22:51:00.204057 18 builder.go:146] stderr: ""
  I0904 22:51:00.204119 18 builder.go:147] stdout: "update-demo-nautilus-lvjw8 "
  I0904 22:51:00.204184 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-lvjw8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 22:51:00.298266 18 builder.go:146] stderr: ""
  I0904 22:51:00.298316 18 builder.go:147] stdout: "true"
  I0904 22:51:00.298976 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-lvjw8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 22:51:00.389004 18 builder.go:146] stderr: ""
  I0904 22:51:00.389062 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 22:51:00.389084 18 kubectl.go:2393] validating pod update-demo-nautilus-lvjw8
  I0904 22:51:00.395982 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 22:51:00.396041 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 22:51:00.396060 18 kubectl.go:2520] update-demo-nautilus-lvjw8 is verified up and running
  STEP: scaling up the replication controller @ 09/04/24 22:51:00.396
  I0904 22:51:00.399067 18 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0904 22:51:00.399134 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0904 22:51:01.540030 18 builder.go:146] stderr: ""
  I0904 22:51:01.540096 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/24 22:51:01.54
  I0904 22:51:01.540315 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 22:51:01.711925 18 builder.go:146] stderr: ""
  I0904 22:51:01.711980 18 builder.go:147] stdout: "update-demo-nautilus-7tbg8 update-demo-nautilus-lvjw8 "
  I0904 22:51:01.712042 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-7tbg8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 22:51:01.805132 18 builder.go:146] stderr: ""
  I0904 22:51:01.805199 18 builder.go:147] stdout: ""
  I0904 22:51:01.805219 18 kubectl.go:2502] update-demo-nautilus-7tbg8 is created but not running
  I0904 22:51:06.806815 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 22:51:06.897763 18 builder.go:146] stderr: ""
  I0904 22:51:06.897815 18 builder.go:147] stdout: "update-demo-nautilus-7tbg8 update-demo-nautilus-lvjw8 "
  I0904 22:51:06.897961 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-7tbg8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 22:51:06.984394 18 builder.go:146] stderr: ""
  I0904 22:51:06.984458 18 builder.go:147] stdout: "true"
  I0904 22:51:06.984532 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-7tbg8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 22:51:07.082616 18 builder.go:146] stderr: ""
  I0904 22:51:07.082679 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 22:51:07.082702 18 kubectl.go:2393] validating pod update-demo-nautilus-7tbg8
  I0904 22:51:07.101371 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 22:51:07.101467 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 22:51:07.101488 18 kubectl.go:2520] update-demo-nautilus-7tbg8 is verified up and running
  I0904 22:51:07.101556 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-lvjw8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 22:51:07.194185 18 builder.go:146] stderr: ""
  I0904 22:51:07.194244 18 builder.go:147] stdout: "true"
  I0904 22:51:07.194451 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods update-demo-nautilus-lvjw8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 22:51:07.315377 18 builder.go:146] stderr: ""
  I0904 22:51:07.315444 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 22:51:07.315559 18 kubectl.go:2393] validating pod update-demo-nautilus-lvjw8
  I0904 22:51:07.320424 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 22:51:07.320492 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 22:51:07.320513 18 kubectl.go:2520] update-demo-nautilus-lvjw8 is verified up and running
  STEP: using delete to clean up resources @ 09/04/24 22:51:07.32
  I0904 22:51:07.320726 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 delete --grace-period=0 --force -f -'
  I0904 22:51:07.417939 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 22:51:07.418011 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0904 22:51:07.418117 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get rc,svc -l name=update-demo --no-headers'
  I0904 22:51:07.589891 18 builder.go:146] stderr: "No resources found in kubectl-981 namespace.\n"
  I0904 22:51:07.590151 18 builder.go:147] stdout: ""
  I0904 22:51:07.590218 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-981 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0904 22:51:07.810605 18 builder.go:146] stderr: ""
  I0904 22:51:07.810807 18 builder.go:147] stdout: ""
  I0904 22:51:07.810952 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-981" for this suite. @ 09/04/24 22:51:07.818
• [25.919 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 09/04/24 22:51:07.839
  I0904 22:51:07.839873 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename job @ 09/04/24 22:51:07.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:07.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:51:07.888
  STEP: Creating a job @ 09/04/24 22:51:07.891
  STEP: Ensuring active pods == parallelism @ 09/04/24 22:51:07.906
  STEP: Orphaning one of the Job's Pods @ 09/04/24 22:51:11.911
  I0904 22:51:12.441007 18 pod_client.go:173] Successfully updated pod "adopt-release-k65sx"
  STEP: Checking that the Job readopts the Pod @ 09/04/24 22:51:12.441
  STEP: Removing the labels from the Job's Pod @ 09/04/24 22:51:14.455
  I0904 22:51:14.977873 18 pod_client.go:173] Successfully updated pod "adopt-release-k65sx"
  STEP: Checking that the Job releases the Pod @ 09/04/24 22:51:14.977
  I0904 22:51:16.998813 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5636" for this suite. @ 09/04/24 22:51:17.005
• [9.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 09/04/24 22:51:17.021
  I0904 22:51:17.021327 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 22:51:17.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:17.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:51:17.071
  STEP: validating api versions @ 09/04/24 22:51:17.074
  I0904 22:51:17.074302 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1863 api-versions'
  I0904 22:51:17.200416 18 builder.go:146] stderr: ""
  I0904 22:51:17.200485 18 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nv1\n"
  I0904 22:51:17.200606 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1863" for this suite. @ 09/04/24 22:51:17.206
• [0.202 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/04/24 22:51:17.223
  I0904 22:51:17.223552 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 22:51:17.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:17.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:51:17.265
  I0904 22:51:17.271416 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6947" for this suite. @ 09/04/24 22:51:17.306
• [0.102 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/04/24 22:51:17.326
  I0904 22:51:17.327034 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 22:51:17.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:17.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:51:17.365
  I0904 22:51:17.368159 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  W0904 22:51:19.921594      18 warnings.go:70] unknown field "alpha"
  W0904 22:51:19.921794      18 warnings.go:70] unknown field "beta"
  W0904 22:51:19.921878      18 warnings.go:70] unknown field "delta"
  W0904 22:51:19.921961      18 warnings.go:70] unknown field "epsilon"
  W0904 22:51:19.922044      18 warnings.go:70] unknown field "gamma"
  I0904 22:51:20.536453 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8443" for this suite. @ 09/04/24 22:51:20.546
• [3.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/04/24 22:51:20.569
  I0904 22:51:20.569467 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 22:51:20.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:20.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:51:20.641
  STEP: Creating a test namespace @ 09/04/24 22:51:20.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:20.795
  STEP: Creating a service in the namespace @ 09/04/24 22:51:20.805
  STEP: Deleting the namespace @ 09/04/24 22:51:20.847
  STEP: Waiting for the namespace to be removed. @ 09/04/24 22:51:20.881
  STEP: Recreating the namespace @ 09/04/24 22:51:26.886
  STEP: Verifying there is no service in the namespace @ 09/04/24 22:51:26.931
  I0904 22:51:26.937644 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1580" for this suite. @ 09/04/24 22:51:26.946
  STEP: Destroying namespace "nsdeletetest-4216" for this suite. @ 09/04/24 22:51:26.958
  I0904 22:51:26.963383 18 framework.go:370] Namespace nsdeletetest-4216 was already deleted
  STEP: Destroying namespace "nsdeletetest-7659" for this suite. @ 09/04/24 22:51:26.963
• [6.415 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/04/24 22:51:26.986
  I0904 22:51:26.986109 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/24 22:51:26.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:27.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:51:27.038
  I0904 22:51:31.121826 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4023" for this suite. @ 09/04/24 22:51:31.127
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/04/24 22:51:31.139
  I0904 22:51:31.139471 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 22:51:31.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:31.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:51:31.188
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/04/24 22:51:31.193
  I0904 22:51:31.194058 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/04/24 22:51:38.507
  I0904 22:51:38.508164 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:51:40.441520 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:51:48.283642 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8532" for this suite. @ 09/04/24 22:51:48.291
• [17.168 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 09/04/24 22:51:48.308
  I0904 22:51:48.308402 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 22:51:48.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:48.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:51:48.366
  I0904 22:51:48.369979 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-748 create -f -'
  I0904 22:51:48.584451 18 builder.go:146] stderr: ""
  I0904 22:51:48.584688 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0904 22:51:48.585611 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-748 create -f -'
  I0904 22:51:48.790708 18 builder.go:146] stderr: ""
  I0904 22:51:48.790757 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/24 22:51:48.79
  I0904 22:51:49.805458 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 22:51:49.805502 18 framework.go:733] Found 0 / 1
  I0904 22:51:50.796479 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 22:51:50.796532 18 framework.go:733] Found 1 / 1
  I0904 22:51:50.796557 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0904 22:51:50.800797 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 22:51:50.800854 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 22:51:50.800916 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-748 describe pod agnhost-primary-n9xvh'
  I0904 22:51:50.936248 18 builder.go:146] stderr: ""
  I0904 22:51:50.936354 18 builder.go:147] stdout: "Name:             agnhost-primary-n9xvh\nNamespace:        kubectl-748\nPriority:         0\nService Account:  default\nNode:             ip-172-31-8-12.us-east-2.compute.internal/172.31.8.12\nStart Time:       Wed, 04 Sep 2024 22:51:48 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 8de2fab02d3049212d01c0e6c350e5bfe588fe27ff6484d9bbc64ecdf252f516\n                  cni.projectcalico.org/podIP: 10.42.3.91/32\n                  cni.projectcalico.org/podIPs: 10.42.3.91/32\nStatus:           Running\nIP:               10.42.3.91\nIPs:\n  IP:           10.42.3.91\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://e581bd00acaaf40ac08a713536b7be04abac6f49a28bad5da030fad8d83d87ff\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 04 Sep 2024 22:51:49 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jchjk (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-jchjk:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-748/agnhost-primary-n9xvh to ip-172-31-8-12.us-east-2.compute.internal\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0904 22:51:50.936437 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-748 describe rc agnhost-primary'
  I0904 22:51:51.063237 18 builder.go:146] stderr: ""
  I0904 22:51:51.063436 18 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-748\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-n9xvh\n"
  I0904 22:51:51.063572 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-748 describe service agnhost-primary'
  I0904 22:51:51.199552 18 builder.go:146] stderr: ""
  I0904 22:51:51.199616 18 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-748\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.101.131\nIPs:                      10.43.101.131\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.3.91:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0904 22:51:51.214070 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-748 describe node ip-172-31-0-215.us-east-2.compute.internal'
  I0904 22:51:51.409104 18 builder.go:146] stderr: ""
  I0904 22:51:51.410685 18 builder.go:147] stdout: "Name:               ip-172-31-0-215.us-east-2.compute.internal\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=rke2\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-0-215.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=rke2\n                    role-control-plane=true\n                    role-etcd=true\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.0.215\n                    etcd.rke2.cattle.io/local-snapshots-timestamp: 2024-09-04T22:17:55Z\n                    etcd.rke2.cattle.io/node-address: 172.31.0.215\n                    etcd.rke2.cattle.io/node-name: ip-172-31-0-215.us-east-2.compute.internal-25a8e52a\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"56:49:7c:3f:ba:d8\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.0.215\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke2.io/encryption-config-hash: start-4a76c76861d9261fac080b953f3df3aa2653f3c62d61395c14ad2ffb3f8d6350\n                    rke2.io/external-ip: 18.116.42.252\n                    rke2.io/hostname: ip-172-31-0-215\n                    rke2.io/internal-ip: 172.31.0.215\n                    rke2.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"fake.fqdn.value\",\"--node-name\",\"ip-172-31-0-215.us-east-2.compute.internal\",\"--pro...\n                    rke2.io/node-config-hash: WP5Y6QRD4KUNEPAASW35OYSFSNLJGS4A5VUQNCFW3DAGNGZZNFFA====\n                    rke2.io/node-env: {}\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 04 Sep 2024 22:17:42 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-0-215.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 04 Sep 2024 22:51:46 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 04 Sep 2024 22:18:30 +0000   Wed, 04 Sep 2024 22:18:30 +0000   FlannelIsUp                  Flannel is running on this node\n  EtcdIsVoter          True    Wed, 04 Sep 2024 22:48:00 +0000   Wed, 04 Sep 2024 22:18:00 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\n  MemoryPressure       False   Wed, 04 Sep 2024 22:50:22 +0000   Wed, 04 Sep 2024 22:17:42 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 04 Sep 2024 22:50:22 +0000   Wed, 04 Sep 2024 22:17:42 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 04 Sep 2024 22:50:22 +0000   Wed, 04 Sep 2024 22:17:42 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 04 Sep 2024 22:50:22 +0000   Wed, 04 Sep 2024 22:18:19 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.0.215\n  ExternalIP:  18.116.42.252\n  Hostname:    ip-172-31-0-215\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      36666348Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3937656Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      35669023307\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3937656Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 ec20c390780c110b6b3ccd7fc914745d\n  System UUID:                ec20c390-780c-110b-6b3c-cd7fc914745d\n  Boot ID:                    7ff9cbae-50e1-4f58-865f-d6739a606324\n  Kernel Version:             5.14.21-150500.55.44-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP5\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.20-k3s1\n  Kubelet Version:            v1.31.0+rke2r1\n  Kube-Proxy Version:         \nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   rke2://ip-172-31-0-215.us-east-2.compute.internal\nNon-terminated Pods:          (14 in total)\n  Namespace                   Name                                                                   CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                                   ------------  ----------  ---------------  -------------  ---\n  kube-system                 cloud-controller-manager-ip-172-31-0-215.us-east-2.compute.internal    100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         33m\n  kube-system                 etcd-ip-172-31-0-215.us-east-2.compute.internal                        200m (10%)    0 (0%)      512Mi (13%)      0 (0%)         33m\n  kube-system                 kube-apiserver-ip-172-31-0-215.us-east-2.compute.internal              250m (12%)    0 (0%)      1Gi (26%)        0 (0%)         33m\n  kube-system                 kube-controller-manager-ip-172-31-0-215.us-east-2.compute.internal     200m (10%)    0 (0%)      256Mi (6%)       0 (0%)         33m\n  kube-system                 kube-proxy-ip-172-31-0-215.us-east-2.compute.internal                  250m (12%)    0 (0%)      128Mi (3%)       0 (0%)         33m\n  kube-system                 kube-scheduler-ip-172-31-0-215.us-east-2.compute.internal              100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         33m\n  kube-system                 rke2-canal-25pbv                                                       250m (12%)    0 (0%)      0 (0%)           0 (0%)         33m\n  kube-system                 rke2-coredns-rke2-coredns-787bc4b7b7-k62mw                             100m (5%)     100m (5%)   128Mi (3%)       128Mi (3%)     33m\n  kube-system                 rke2-coredns-rke2-coredns-autoscaler-6dc69d7b97-mv7fg                  25m (1%)      100m (5%)   16Mi (0%)        64Mi (1%)      33m\n  kube-system                 rke2-ingress-nginx-controller-klr4x                                    100m (5%)     0 (0%)      90Mi (2%)        0 (0%)         32m\n  kube-system                 rke2-metrics-server-6d99b6d454-bmgqg                                   100m (5%)     0 (0%)      200Mi (5%)       0 (0%)         33m\n  kube-system                 rke2-snapshot-controller-658d97fccc-jjrmm                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         33m\n  kube-system                 rke2-snapshot-validation-webhook-784bcc6c8-nlsh4                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         33m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-nh7cj                0 (0%)        0 (0%)      0 (0%)           0 (0%)         20m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests      Limits\n  --------               --------      ------\n  cpu                    1675m (83%)   200m (10%)\n  memory                 2610Mi (67%)  192Mi (4%)\n  ephemeral-storage      0 (0%)        0 (0%)\n  hugepages-1Gi          0 (0%)        0 (0%)\n  hugepages-2Mi          0 (0%)        0 (0%)\n  scheduling.k8s.io/foo  0             0\nEvents:\n  Type    Reason                          Age                From                   Message\n  ----    ------                          ----               ----                   -------\n  Normal  Starting                        33m                kube-proxy             \n  Normal  NodeAllocatableEnforced         34m                kubelet                Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientMemory         34m (x8 over 34m)  kubelet                Node ip-172-31-0-215.us-east-2.compute.internal status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure           34m (x7 over 34m)  kubelet                Node ip-172-31-0-215.us-east-2.compute.internal status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID            34m (x7 over 34m)  kubelet                Node ip-172-31-0-215.us-east-2.compute.internal status is now: NodeHasSufficientPID\n  Normal  Synced                          34m                cloud-node-controller  Node synced successfully\n  Normal  RegisteredNode                  34m                node-controller        Node ip-172-31-0-215.us-east-2.compute.internal event: Registered Node ip-172-31-0-215.us-east-2.compute.internal in Controller\n  Normal  NodePasswordValidationComplete  33m                rke2-supervisor        Deferred node password secret validation complete\n"
  I0904 22:51:51.410940 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-748 describe namespace kubectl-748'
  I0904 22:51:51.540052 18 builder.go:146] stderr: ""
  I0904 22:51:51.540126 18 builder.go:147] stdout: "Name:         kubectl-748\nLabels:       e2e-framework=kubectl\n              e2e-run=75b503a7-116e-496d-90db-5a3cc9f0f910\n              kubernetes.io/metadata.name=kubectl-748\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0904 22:51:51.540274 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-748" for this suite. @ 09/04/24 22:51:51.545
• [3.248 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/04/24 22:51:51.556
  I0904 22:51:51.556534 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename gc @ 09/04/24 22:51:51.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:51:51.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:51:51.67
  STEP: create the rc @ 09/04/24 22:51:51.673
  W0904 22:51:51.684487      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/04/24 22:51:56.692
  STEP: wait for all pods to be garbage collected @ 09/04/24 22:51:56.725
  STEP: Gathering metrics @ 09/04/24 22:52:01.732
  I0904 22:52:01.845652 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 22:52:01.846223 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4499" for this suite. @ 09/04/24 22:52:01.851
• [10.309 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/04/24 22:52:01.865
  I0904 22:52:01.865180 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:52:01.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:52:01.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:52:01.915
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 22:52:01.919
  STEP: Saw pod success @ 09/04/24 22:52:05.967
  I0904 22:52:05.978694 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-51078492-6188-4d36-9655-419cfa7691d1 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 22:52:06.003
  I0904 22:52:06.033404 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5380" for this suite. @ 09/04/24 22:52:06.038
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/04/24 22:52:06.059
  I0904 22:52:06.059208 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename watch @ 09/04/24 22:52:06.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:52:06.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:52:06.117
  STEP: creating a new configmap @ 09/04/24 22:52:06.12
  STEP: modifying the configmap once @ 09/04/24 22:52:06.135
  STEP: modifying the configmap a second time @ 09/04/24 22:52:06.154
  STEP: deleting the configmap @ 09/04/24 22:52:06.174
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/04/24 22:52:06.195
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/04/24 22:52:06.197
  I0904 22:52:06.197821 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2816  99725d20-ca31-497f-ac74-a5c2f48e4741 15846 0 2024-09-04 22:52:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-04 22:52:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 22:52:06.198246 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2816  99725d20-ca31-497f-ac74-a5c2f48e4741 15848 0 2024-09-04 22:52:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-04 22:52:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 22:52:06.198597 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2816" for this suite. @ 09/04/24 22:52:06.205
• [0.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/04/24 22:52:06.22
  I0904 22:52:06.220550 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/24 22:52:06.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:52:06.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:52:06.268
  STEP: Performing setup for networking test in namespace pod-network-test-1852 @ 09/04/24 22:52:06.271
  STEP: creating a selector @ 09/04/24 22:52:06.271
  STEP: Creating the service pods in kubernetes @ 09/04/24 22:52:06.271
  I0904 22:52:06.271733 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/04/24 22:52:28.618
  I0904 22:52:30.650940 18 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0904 22:52:30.650999 18 networking.go:42] Breadth first check of 10.42.0.25 on host 172.31.0.215...
  I0904 22:52:30.655852 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.95:9080/dial?request=hostname&protocol=udp&host=10.42.0.25&port=8081&tries=1'] Namespace:pod-network-test-1852 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:52:30.656052 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:52:30.656889 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:52:30.657011 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1852/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.95%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.25%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 22:52:30.771000 18 utils.go:356] Waiting for responses: map[]
  I0904 22:52:30.771062 18 utils.go:360] reached 10.42.0.25 after 0/1 tries
  I0904 22:52:30.771162 18 networking.go:42] Breadth first check of 10.42.2.26 on host 172.31.1.123...
  I0904 22:52:30.778438 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.95:9080/dial?request=hostname&protocol=udp&host=10.42.2.26&port=8081&tries=1'] Namespace:pod-network-test-1852 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:52:30.778780 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:52:30.780441 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:52:30.780526 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1852/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.95%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.26%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 22:52:30.882738 18 utils.go:356] Waiting for responses: map[]
  I0904 22:52:30.882788 18 utils.go:360] reached 10.42.2.26 after 0/1 tries
  I0904 22:52:30.882809 18 networking.go:42] Breadth first check of 10.42.1.19 on host 172.31.3.55...
  I0904 22:52:30.886709 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.95:9080/dial?request=hostname&protocol=udp&host=10.42.1.19&port=8081&tries=1'] Namespace:pod-network-test-1852 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:52:30.886767 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:52:30.887415 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:52:30.887502 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1852/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.95%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.19%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 22:52:30.999771 18 utils.go:356] Waiting for responses: map[]
  I0904 22:52:31.000049 18 utils.go:360] reached 10.42.1.19 after 0/1 tries
  I0904 22:52:31.000073 18 networking.go:42] Breadth first check of 10.42.3.94 on host 172.31.8.12...
  I0904 22:52:31.004463 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.95:9080/dial?request=hostname&protocol=udp&host=10.42.3.94&port=8081&tries=1'] Namespace:pod-network-test-1852 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 22:52:31.004507 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:52:31.005269 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 22:52:31.005376 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1852/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.95%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.94%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 22:52:31.116988 18 utils.go:356] Waiting for responses: map[]
  I0904 22:52:31.117047 18 utils.go:360] reached 10.42.3.94 after 0/1 tries
  I0904 22:52:31.117238 18 networking.go:53] Going to retry 0 out of 4 pods....
  I0904 22:52:31.117422 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1852" for this suite. @ 09/04/24 22:52:31.122
• [24.915 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 09/04/24 22:52:31.136
  I0904 22:52:31.137081 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename dns @ 09/04/24 22:52:31.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:52:31.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:52:31.203
  STEP: Creating a test externalName service @ 09/04/24 22:52:31.207
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-24.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local; sleep 1; done
   @ 09/04/24 22:52:31.219
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-24.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-24.svc.cluster.local; sleep 1; done
   @ 09/04/24 22:52:31.22
  STEP: creating a pod to probe DNS @ 09/04/24 22:52:31.22
  STEP: submitting the pod to kubernetes @ 09/04/24 22:52:31.22
  STEP: retrieving the pod @ 09/04/24 22:52:43.294
  STEP: looking for the results for each expected name from probers @ 09/04/24 22:52:43.298
  I0904 22:52:43.313313 18 dns_common.go:552] DNS probes using dns-test-c9c69ce0-4dc8-4a07-847e-541a1dc0854e succeeded

  STEP: changing the externalName to bar.example.com @ 09/04/24 22:52:43.313
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-24.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local; sleep 1; done
   @ 09/04/24 22:52:43.334
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-24.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-24.svc.cluster.local; sleep 1; done
   @ 09/04/24 22:52:43.334
  STEP: creating a second pod to probe DNS @ 09/04/24 22:52:43.334
  STEP: submitting the pod to kubernetes @ 09/04/24 22:52:43.334
  STEP: retrieving the pod @ 09/04/24 22:52:47.375
  STEP: looking for the results for each expected name from probers @ 09/04/24 22:52:47.387
  I0904 22:52:47.406008 18 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local from pod  dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 22:52:47.416590 18 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-24.svc.cluster.local from pod  dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 22:52:47.416662 18 dns_common.go:489] Lookups using dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b failed for: [wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local jessie_udp@dns-test-service-3.dns-24.svc.cluster.local]

  I0904 22:52:47.424520 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 22:52:47.433979 18 dns_common.go:495] Pod client logs for querier: 
  I0904 22:52:47.446758 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 22:52:52.392833 18 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local from pod  dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 22:52:52.397643 18 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-24.svc.cluster.local from pod  dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 22:52:52.397708 18 dns_common.go:489] Lookups using dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b failed for: [wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local jessie_udp@dns-test-service-3.dns-24.svc.cluster.local]

  I0904 22:52:52.405052 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 22:52:52.413438 18 dns_common.go:495] Pod client logs for querier: 
  I0904 22:52:52.421088 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 22:52:57.395982 18 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local from pod  dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 22:52:57.400399 18 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-24.svc.cluster.local from pod  dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 22:52:57.400816 18 dns_common.go:489] Lookups using dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b failed for: [wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local jessie_udp@dns-test-service-3.dns-24.svc.cluster.local]

  I0904 22:52:57.411073 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 22:52:57.428583 18 dns_common.go:495] Pod client logs for querier: 
  I0904 22:52:57.441028 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 22:53:02.396386 18 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local from pod  dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 22:53:02.401588 18 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-24.svc.cluster.local from pod  dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 22:53:02.401657 18 dns_common.go:489] Lookups using dns-24/dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b failed for: [wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local jessie_udp@dns-test-service-3.dns-24.svc.cluster.local]

  I0904 22:53:02.410161 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 22:53:02.419285 18 dns_common.go:495] Pod client logs for querier: 
  I0904 22:53:02.430732 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 22:53:07.397344 18 dns_common.go:552] DNS probes using dns-test-2b1c427b-a0eb-4630-a2a9-af57ea56967b succeeded

  STEP: changing the service to type=ClusterIP @ 09/04/24 22:53:07.397
  W0904 22:53:07.500580      18 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-24.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-24.svc.cluster.local; sleep 1; done
   @ 09/04/24 22:53:07.502
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-24.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-24.svc.cluster.local; sleep 1; done
   @ 09/04/24 22:53:07.502
  STEP: creating a third pod to probe DNS @ 09/04/24 22:53:07.503
  STEP: submitting the pod to kubernetes @ 09/04/24 22:53:07.509
  STEP: retrieving the pod @ 09/04/24 22:53:17.568
  STEP: looking for the results for each expected name from probers @ 09/04/24 22:53:17.573
  I0904 22:53:17.599353 18 dns_common.go:552] DNS probes using dns-test-960da5f3-2c8d-47ca-987b-1b390a1e5d3b succeeded

  STEP: deleting the pod @ 09/04/24 22:53:17.599
  STEP: deleting the pod @ 09/04/24 22:53:17.635
  STEP: deleting the pod @ 09/04/24 22:53:17.687
  STEP: deleting the test externalName service @ 09/04/24 22:53:17.754
  I0904 22:53:17.800858 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-24" for this suite. @ 09/04/24 22:53:17.807
• [46.682 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/04/24 22:53:17.823
  I0904 22:53:17.823212 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-watch @ 09/04/24 22:53:17.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:53:17.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:53:17.871
  I0904 22:53:17.877883 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Creating first CR  @ 09/04/24 22:53:20.443
  I0904 22:53:20.461687 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T22:53:20Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T22:53:20Z]] name:name1 resourceVersion:16365 uid:9423f4fe-8469-4d81-bfb7-54c27dc4f1f5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/04/24 22:53:30.462
  I0904 22:53:30.474791 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T22:53:30Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T22:53:30Z]] name:name2 resourceVersion:16446 uid:0bb83244-d79a-405e-a23a-bc60f7a93365] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/04/24 22:53:40.475
  I0904 22:53:40.496562 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T22:53:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T22:53:40Z]] name:name1 resourceVersion:16485 uid:9423f4fe-8469-4d81-bfb7-54c27dc4f1f5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/04/24 22:53:50.496
  I0904 22:53:50.508801 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T22:53:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T22:53:50Z]] name:name2 resourceVersion:16524 uid:0bb83244-d79a-405e-a23a-bc60f7a93365] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/04/24 22:54:00.51
  I0904 22:54:00.524001 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T22:53:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T22:53:40Z]] name:name1 resourceVersion:16564 uid:9423f4fe-8469-4d81-bfb7-54c27dc4f1f5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/04/24 22:54:10.525
  I0904 22:54:10.541848 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T22:53:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T22:53:50Z]] name:name2 resourceVersion:16603 uid:0bb83244-d79a-405e-a23a-bc60f7a93365] num:map[num1:9223372036854775807 num2:1000000]]}
  I0904 22:54:21.073110 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6834" for this suite. @ 09/04/24 22:54:21.078
• [63.269 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/04/24 22:54:21.093
  I0904 22:54:21.093619 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 22:54:21.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:54:21.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:54:21.14
  STEP: Creating pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816 @ 09/04/24 22:54:21.145
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 22:54:23.186
  I0904 22:54:23.190505 18 container_probe.go:1749] Initial restart count of pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 is 0
  I0904 22:54:23.194647 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:25.200188 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:27.204955 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:29.210001 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:31.229058 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:33.234085 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:35.241085 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:37.245260 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:39.249847 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:41.254854 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:43.260027 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:43.260092 18 container_probe.go:1763] Restart count of pod container-probe-816/liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 is now 1 (20.069478666s elapsed)
  I0904 22:54:45.264117 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:47.269522 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:49.275232 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:51.281196 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:53.285572 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:55.293032 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:57.298394 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:54:59.303422 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:01.309083 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:03.313851 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:03.313919 18 container_probe.go:1763] Restart count of pod container-probe-816/liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 is now 2 (40.12330652s elapsed)
  I0904 22:55:05.320836 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:07.335640 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:09.339993 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:11.346191 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:13.351110 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:15.355599 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:17.359967 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:19.365101 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:21.370225 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:23.374968 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:23.375060 18 container_probe.go:1763] Restart count of pod container-probe-816/liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 is now 3 (1m0.18444746s elapsed)
  I0904 22:55:25.380400 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:27.385583 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:29.391408 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:31.397700 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:33.402794 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:35.407976 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:37.415221 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:39.420320 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:41.425038 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:43.432860 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:43.432926 18 container_probe.go:1763] Restart count of pod container-probe-816/liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 is now 4 (1m20.242312171s elapsed)
  I0904 22:55:45.442461 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:47.452092 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:49.458871 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:51.464266 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:53.469489 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:55.483584 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:57.489398 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:55:59.495010 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:01.501456 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:03.506979 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:05.512304 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:07.526462 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:09.531589 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:11.536887 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:13.542262 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:15.548175 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:17.552808 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:19.557350 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:21.563645 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:23.573662 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:25.580843 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:27.588439 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:29.594756 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:31.603167 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:33.608591 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:35.613393 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:37.619362 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:39.624438 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:41.629986 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:43.635714 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:45.640839 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:47.657602 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:49.662093 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:51.667140 18 container_probe.go:1759] Get pod liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 in namespace container-probe-816
  I0904 22:56:51.667191 18 container_probe.go:1763] Restart count of pod container-probe-816/liveness-dc80fdc8-3a3b-4b49-9fca-133a3c76e113 is now 5 (2m28.47657603s elapsed)
  STEP: deleting the pod @ 09/04/24 22:56:51.667
  I0904 22:56:51.704614 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-816" for this suite. @ 09/04/24 22:56:51.725
• [150.650 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/04/24 22:56:51.744
  I0904 22:56:51.744372 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-pred @ 09/04/24 22:56:51.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:56:51.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:56:51.8
  I0904 22:56:51.802993 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 22:56:51.816969 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 22:56:51.821539 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-0-215.us-east-2.compute.internal before test
  I0904 22:56:51.831927 18 predicates.go:957] cloud-controller-manager-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:46 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.832301 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0904 22:56:51.832588 18 predicates.go:957] etcd-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:16 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.832934 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0904 22:56:51.833471 18 predicates.go:957] helm-install-rke2-canal-259hd from kube-system started at 2024-09-04 22:17:59 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.834016 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:56:51.834472 18 predicates.go:957] helm-install-rke2-coredns-5v24h from kube-system started at 2024-09-04 22:17:59 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.835013 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:56:51.835440 18 predicates.go:957] helm-install-rke2-ingress-nginx-m9msd from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.836016 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:56:51.836480 18 predicates.go:957] helm-install-rke2-metrics-server-mg5p9 from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.837121 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:56:51.837641 18 predicates.go:957] helm-install-rke2-snapshot-controller-6fxtw from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.838193 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:56:51.838804 18 predicates.go:957] helm-install-rke2-snapshot-controller-crd-86mvl from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.839303 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:56:51.839781 18 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-m6729 from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.840311 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 22:56:51.840779 18 predicates.go:957] kube-apiserver-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:38 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.841254 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0904 22:56:51.841713 18 predicates.go:957] kube-controller-manager-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:44 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.842202 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0904 22:56:51.842764 18 predicates.go:957] kube-proxy-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:16 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.843216 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 22:56:51.843721 18 predicates.go:957] kube-scheduler-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:44 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.844253 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0904 22:56:51.844716 18 predicates.go:957] rke2-canal-25pbv from kube-system started at 2024-09-04 22:18:07 +0000 UTC (2 container statuses recorded)
  I0904 22:56:51.845227 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 22:56:51.845698 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 22:56:51.846272 18 predicates.go:957] rke2-coredns-rke2-coredns-787bc4b7b7-k62mw from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.846969 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 22:56:51.847611 18 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-6dc69d7b97-mv7fg from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.848240 18 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0904 22:56:51.848813 18 predicates.go:957] rke2-ingress-nginx-controller-klr4x from kube-system started at 2024-09-04 22:19:01 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.849401 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 22:56:51.849957 18 predicates.go:957] rke2-metrics-server-6d99b6d454-bmgqg from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.850575 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0904 22:56:51.851243 18 predicates.go:957] rke2-snapshot-controller-658d97fccc-jjrmm from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.851891 18 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0904 22:56:51.852059 18 predicates.go:957] rke2-snapshot-validation-webhook-784bcc6c8-nlsh4 from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.852202 18 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0904 22:56:51.852498 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-nh7cj from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 22:56:51.852618 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:56:51.852754 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 22:56:51.852890 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-1-123.us-east-2.compute.internal before test
  I0904 22:56:51.859028 18 predicates.go:957] cloud-controller-manager-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.859072 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0904 22:56:51.859091 18 predicates.go:957] etcd-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:04 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.859104 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0904 22:56:51.859118 18 predicates.go:957] kube-apiserver-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:30 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.859130 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0904 22:56:51.859146 18 predicates.go:957] kube-controller-manager-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.859157 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0904 22:56:51.859171 18 predicates.go:957] kube-proxy-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:54 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.859182 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 22:56:51.859196 18 predicates.go:957] kube-scheduler-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.859208 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0904 22:56:51.859221 18 predicates.go:957] rke2-canal-dxxtw from kube-system started at 2024-09-04 22:22:03 +0000 UTC (2 container statuses recorded)
  I0904 22:56:51.859232 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 22:56:51.859243 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 22:56:51.859256 18 predicates.go:957] rke2-ingress-nginx-controller-vgzvt from kube-system started at 2024-09-04 22:22:15 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.859267 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 22:56:51.859280 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-t5zl8 from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 22:56:51.859291 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:56:51.859302 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 22:56:51.859314 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-3-55.us-east-2.compute.internal before test
  I0904 22:56:51.874669 18 predicates.go:957] cloud-controller-manager-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.874721 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0904 22:56:51.874737 18 predicates.go:957] etcd-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:53 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.874751 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0904 22:56:51.874765 18 predicates.go:957] kube-apiserver-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:04 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.874778 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0904 22:56:51.874791 18 predicates.go:957] kube-controller-manager-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.874802 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0904 22:56:51.874816 18 predicates.go:957] kube-proxy-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:53 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.874836 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 22:56:51.874851 18 predicates.go:957] kube-scheduler-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.874863 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0904 22:56:51.874877 18 predicates.go:957] rke2-canal-4t7bp from kube-system started at 2024-09-04 22:21:14 +0000 UTC (2 container statuses recorded)
  I0904 22:56:51.874888 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 22:56:51.874900 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 22:56:51.874914 18 predicates.go:957] rke2-coredns-rke2-coredns-787bc4b7b7-6sq7l from kube-system started at 2024-09-04 22:21:28 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.874926 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 22:56:51.874941 18 predicates.go:957] rke2-ingress-nginx-controller-hq7pq from kube-system started at 2024-09-04 22:21:28 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.874962 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 22:56:51.874976 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-dbjgz from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 22:56:51.874987 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:56:51.874999 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 22:56:51.875012 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-12.us-east-2.compute.internal before test
  I0904 22:56:51.880953 18 predicates.go:957] kube-proxy-ip-172-31-8-12.us-east-2.compute.internal from kube-system started at 2024-09-04 22:25:15 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.880997 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 22:56:51.881013 18 predicates.go:957] rke2-canal-9dmlp from kube-system started at 2024-09-04 22:25:15 +0000 UTC (2 container statuses recorded)
  I0904 22:56:51.881024 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 22:56:51.881036 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 22:56:51.881050 18 predicates.go:957] rke2-ingress-nginx-controller-td226 from kube-system started at 2024-09-04 22:38:47 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.881062 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 22:56:51.881075 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-04 22:31:31 +0000 UTC (1 container statuses recorded)
  I0904 22:56:51.881086 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 22:56:51.881098 18 predicates.go:957] sonobuoy-e2e-job-110b92c570fb4a51 from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 22:56:51.881109 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0904 22:56:51.881120 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:56:51.881135 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-l6z47 from sonobuoy started at 2024-09-04 22:31:36 +0000 UTC (2 container statuses recorded)
  I0904 22:56:51.881231 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 22:56:51.881248 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-0-215.us-east-2.compute.internal @ 09/04/24 22:56:51.92
  STEP: verifying the node has the label node ip-172-31-1-123.us-east-2.compute.internal @ 09/04/24 22:56:51.957
  STEP: verifying the node has the label node ip-172-31-3-55.us-east-2.compute.internal @ 09/04/24 22:56:52.011
  STEP: verifying the node has the label node ip-172-31-8-12.us-east-2.compute.internal @ 09/04/24 22:56:52.053
  I0904 22:56:52.125969 18 predicates.go:372] Pod cloud-controller-manager-ip-172-31-0-215.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126020 18 predicates.go:372] Pod cloud-controller-manager-ip-172-31-1-123.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-1-123.us-east-2.compute.internal
  I0904 22:56:52.126038 18 predicates.go:372] Pod cloud-controller-manager-ip-172-31-3-55.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126054 18 predicates.go:372] Pod etcd-ip-172-31-0-215.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126069 18 predicates.go:372] Pod etcd-ip-172-31-1-123.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-1-123.us-east-2.compute.internal
  I0904 22:56:52.126082 18 predicates.go:372] Pod etcd-ip-172-31-3-55.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126100 18 predicates.go:372] Pod kube-apiserver-ip-172-31-0-215.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126114 18 predicates.go:372] Pod kube-apiserver-ip-172-31-1-123.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-1-123.us-east-2.compute.internal
  I0904 22:56:52.126128 18 predicates.go:372] Pod kube-apiserver-ip-172-31-3-55.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126142 18 predicates.go:372] Pod kube-controller-manager-ip-172-31-0-215.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126156 18 predicates.go:372] Pod kube-controller-manager-ip-172-31-1-123.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-1-123.us-east-2.compute.internal
  I0904 22:56:52.126172 18 predicates.go:372] Pod kube-controller-manager-ip-172-31-3-55.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126186 18 predicates.go:372] Pod kube-proxy-ip-172-31-0-215.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126200 18 predicates.go:372] Pod kube-proxy-ip-172-31-1-123.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-1-123.us-east-2.compute.internal
  I0904 22:56:52.126215 18 predicates.go:372] Pod kube-proxy-ip-172-31-3-55.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126229 18 predicates.go:372] Pod kube-proxy-ip-172-31-8-12.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-8-12.us-east-2.compute.internal
  I0904 22:56:52.126243 18 predicates.go:372] Pod kube-scheduler-ip-172-31-0-215.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126257 18 predicates.go:372] Pod kube-scheduler-ip-172-31-1-123.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-1-123.us-east-2.compute.internal
  I0904 22:56:52.126270 18 predicates.go:372] Pod kube-scheduler-ip-172-31-3-55.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126284 18 predicates.go:372] Pod rke2-canal-25pbv requesting resource cpu=250m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126299 18 predicates.go:372] Pod rke2-canal-4t7bp requesting resource cpu=250m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126313 18 predicates.go:372] Pod rke2-canal-9dmlp requesting resource cpu=250m on Node ip-172-31-8-12.us-east-2.compute.internal
  I0904 22:56:52.126326 18 predicates.go:372] Pod rke2-canal-dxxtw requesting resource cpu=250m on Node ip-172-31-1-123.us-east-2.compute.internal
  I0904 22:56:52.126346 18 predicates.go:372] Pod rke2-coredns-rke2-coredns-787bc4b7b7-6sq7l requesting resource cpu=100m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126359 18 predicates.go:372] Pod rke2-coredns-rke2-coredns-787bc4b7b7-k62mw requesting resource cpu=100m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126374 18 predicates.go:372] Pod rke2-coredns-rke2-coredns-autoscaler-6dc69d7b97-mv7fg requesting resource cpu=25m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126386 18 predicates.go:372] Pod rke2-ingress-nginx-controller-hq7pq requesting resource cpu=100m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126400 18 predicates.go:372] Pod rke2-ingress-nginx-controller-klr4x requesting resource cpu=100m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126413 18 predicates.go:372] Pod rke2-ingress-nginx-controller-td226 requesting resource cpu=100m on Node ip-172-31-8-12.us-east-2.compute.internal
  I0904 22:56:52.126427 18 predicates.go:372] Pod rke2-ingress-nginx-controller-vgzvt requesting resource cpu=100m on Node ip-172-31-1-123.us-east-2.compute.internal
  I0904 22:56:52.126445 18 predicates.go:372] Pod rke2-metrics-server-6d99b6d454-bmgqg requesting resource cpu=100m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126459 18 predicates.go:372] Pod rke2-snapshot-controller-658d97fccc-jjrmm requesting resource cpu=0m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126472 18 predicates.go:372] Pod rke2-snapshot-validation-webhook-784bcc6c8-nlsh4 requesting resource cpu=0m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126486 18 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-8-12.us-east-2.compute.internal
  I0904 22:56:52.126502 18 predicates.go:372] Pod sonobuoy-e2e-job-110b92c570fb4a51 requesting resource cpu=0m on Node ip-172-31-8-12.us-east-2.compute.internal
  I0904 22:56:52.126513 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-dbjgz requesting resource cpu=0m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.126585 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-l6z47 requesting resource cpu=0m on Node ip-172-31-8-12.us-east-2.compute.internal
  I0904 22:56:52.126603 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-nh7cj requesting resource cpu=0m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.126617 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-t5zl8 requesting resource cpu=0m on Node ip-172-31-1-123.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/04/24 22:56:52.126
  I0904 22:56:52.126662 18 predicates.go:382] Creating a pod which consumes cpu=227m on Node ip-172-31-0-215.us-east-2.compute.internal
  I0904 22:56:52.143033 18 predicates.go:382] Creating a pod which consumes cpu=385m on Node ip-172-31-1-123.us-east-2.compute.internal
  I0904 22:56:52.173985 18 predicates.go:382] Creating a pod which consumes cpu=315m on Node ip-172-31-3-55.us-east-2.compute.internal
  I0904 22:56:52.193874 18 predicates.go:382] Creating a pod which consumes cpu=980m on Node ip-172-31-8-12.us-east-2.compute.internal
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/04/24 22:56:56.297
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-10c434cd-8279-4e21-852b-b99dc6c1c3e4.17f22c91da241df8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2750/filler-pod-10c434cd-8279-4e21-852b-b99dc6c1c3e4 to ip-172-31-0-215.us-east-2.compute.internal] @ 09/04/24 22:56:56.304
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-10c434cd-8279-4e21-852b-b99dc6c1c3e4.17f22c9220a523ae], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/04/24 22:56:56.304
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-10c434cd-8279-4e21-852b-b99dc6c1c3e4.17f22c9225f9e669], Reason = [Created], Message = [Created container filler-pod-10c434cd-8279-4e21-852b-b99dc6c1c3e4] @ 09/04/24 22:56:56.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-10c434cd-8279-4e21-852b-b99dc6c1c3e4.17f22c923c49d40a], Reason = [Started], Message = [Started container filler-pod-10c434cd-8279-4e21-852b-b99dc6c1c3e4] @ 09/04/24 22:56:56.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-510590e6-8649-4ebb-9244-a7de4238ea5d.17f22c91db865904], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2750/filler-pod-510590e6-8649-4ebb-9244-a7de4238ea5d to ip-172-31-1-123.us-east-2.compute.internal] @ 09/04/24 22:56:56.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-510590e6-8649-4ebb-9244-a7de4238ea5d.17f22c92129173c5], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/04/24 22:56:56.306
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-510590e6-8649-4ebb-9244-a7de4238ea5d.17f22c92175aed2c], Reason = [Created], Message = [Created container filler-pod-510590e6-8649-4ebb-9244-a7de4238ea5d] @ 09/04/24 22:56:56.306
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-510590e6-8649-4ebb-9244-a7de4238ea5d.17f22c92262b8621], Reason = [Started], Message = [Started container filler-pod-510590e6-8649-4ebb-9244-a7de4238ea5d] @ 09/04/24 22:56:56.306
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5a1bf45f-4ab8-43df-b2c4-d796427d8c33.17f22c91de6f7f25], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2750/filler-pod-5a1bf45f-4ab8-43df-b2c4-d796427d8c33 to ip-172-31-8-12.us-east-2.compute.internal] @ 09/04/24 22:56:56.306
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5a1bf45f-4ab8-43df-b2c4-d796427d8c33.17f22c921becd3df], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/04/24 22:56:56.307
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5a1bf45f-4ab8-43df-b2c4-d796427d8c33.17f22c9222cd8e41], Reason = [Created], Message = [Created container filler-pod-5a1bf45f-4ab8-43df-b2c4-d796427d8c33] @ 09/04/24 22:56:56.307
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5a1bf45f-4ab8-43df-b2c4-d796427d8c33.17f22c9231d77544], Reason = [Started], Message = [Started container filler-pod-5a1bf45f-4ab8-43df-b2c4-d796427d8c33] @ 09/04/24 22:56:56.307
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ab897f2d-727e-4db5-8173-812e527297ec.17f22c91ddc92544], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2750/filler-pod-ab897f2d-727e-4db5-8173-812e527297ec to ip-172-31-3-55.us-east-2.compute.internal] @ 09/04/24 22:56:56.307
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ab897f2d-727e-4db5-8173-812e527297ec.17f22c921a4af3c8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/04/24 22:56:56.307
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ab897f2d-727e-4db5-8173-812e527297ec.17f22c921f1c44a7], Reason = [Created], Message = [Created container filler-pod-ab897f2d-727e-4db5-8173-812e527297ec] @ 09/04/24 22:56:56.307
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ab897f2d-727e-4db5-8173-812e527297ec.17f22c923190cb39], Reason = [Started], Message = [Started container filler-pod-ab897f2d-727e-4db5-8173-812e527297ec] @ 09/04/24 22:56:56.307
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17f22c92d0c6e071], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.] @ 09/04/24 22:56:56.343
  STEP: removing the label node off the node ip-172-31-0-215.us-east-2.compute.internal @ 09/04/24 22:56:57.325
  STEP: verifying the node doesn't have the label node @ 09/04/24 22:56:57.354
  STEP: removing the label node off the node ip-172-31-1-123.us-east-2.compute.internal @ 09/04/24 22:56:57.372
  STEP: verifying the node doesn't have the label node @ 09/04/24 22:56:57.4
  STEP: removing the label node off the node ip-172-31-3-55.us-east-2.compute.internal @ 09/04/24 22:56:57.41
  STEP: verifying the node doesn't have the label node @ 09/04/24 22:56:57.452
  STEP: removing the label node off the node ip-172-31-8-12.us-east-2.compute.internal @ 09/04/24 22:56:57.46
  STEP: verifying the node doesn't have the label node @ 09/04/24 22:56:57.502
  I0904 22:56:57.515302 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2750" for this suite. @ 09/04/24 22:56:57.528
• [5.808 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/04/24 22:56:57.554
  I0904 22:56:57.555271 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 22:56:57.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:56:57.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:56:57.614
  I0904 22:56:57.623797 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  W0904 22:56:57.628029      18 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001407880 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0904 22:57:00.185792      18 warnings.go:70] unknown field "alpha"
  W0904 22:57:00.185820      18 warnings.go:70] unknown field "beta"
  W0904 22:57:00.185829      18 warnings.go:70] unknown field "delta"
  W0904 22:57:00.185877      18 warnings.go:70] unknown field "epsilon"
  W0904 22:57:00.185913      18 warnings.go:70] unknown field "gamma"
  I0904 22:57:00.773682 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6227" for this suite. @ 09/04/24 22:57:00.778
• [3.235 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/04/24 22:57:00.791
  I0904 22:57:00.791524 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename deployment @ 09/04/24 22:57:00.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:57:00.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:57:00.833
  STEP: creating a Deployment @ 09/04/24 22:57:00.84
  I0904 22:57:00.840107 18 deployment.go:507] Creating simple deployment test-deployment-cxfcr
  I0904 22:57:00.885801 18 deployment.go:222] deployment "test-deployment-cxfcr" doesn't have the required revision set
  STEP: Getting /status @ 09/04/24 22:57:02.924
  I0904 22:57:02.943697 18 deployment.go:532] Deployment test-deployment-cxfcr has Conditions: [{Available True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cxfcr-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/04/24 22:57:02.943
  I0904 22:57:02.971737 18 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 57, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 57, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 57, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 57, 0, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-cxfcr-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/04/24 22:57:02.971
  I0904 22:57:02.974639 18 deployment.go:579] Observed &Deployment event: ADDED
  I0904 22:57:02.974705 18 deployment.go:575] Observed Deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-cxfcr-f4dbbbf74"}
  I0904 22:57:02.975298 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0904 22:57:02.975358 18 deployment.go:575] Observed Deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-cxfcr-f4dbbbf74"}
  I0904 22:57:02.975517 18 deployment.go:575] Observed Deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 22:57:02.976208 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0904 22:57:02.976474 18 deployment.go:575] Observed Deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 22:57:02.976506 18 deployment.go:575] Observed Deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-cxfcr-f4dbbbf74" is progressing.}
  I0904 22:57:02.977068 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0904 22:57:02.977140 18 deployment.go:575] Observed Deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 22:57:02.977166 18 deployment.go:575] Observed Deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cxfcr-f4dbbbf74" has successfully progressed.}
  I0904 22:57:02.977746 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0904 22:57:02.978447 18 deployment.go:575] Observed Deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 22:57:02.978576 18 deployment.go:575] Observed Deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cxfcr-f4dbbbf74" has successfully progressed.}
  I0904 22:57:02.978727 18 deployment.go:572] Found Deployment test-deployment-cxfcr in namespace deployment-465 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 22:57:02.979023 18 deployment.go:583] Deployment test-deployment-cxfcr has an updated status
  STEP: patching the Statefulset Status @ 09/04/24 22:57:02.979
  I0904 22:57:02.979276 18 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0904 22:57:02.998835 18 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/04/24 22:57:02.999
  I0904 22:57:03.001954 18 deployment.go:616] Observed &Deployment event: ADDED
  I0904 22:57:03.002020 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-cxfcr-f4dbbbf74"}
  I0904 22:57:03.002777 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 22:57:03.002842 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-cxfcr-f4dbbbf74"}
  I0904 22:57:03.002920 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 22:57:03.003374 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 22:57:03.003424 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 22:57:03.003448 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:00 +0000 UTC 2024-09-04 22:57:00 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-cxfcr-f4dbbbf74" is progressing.}
  I0904 22:57:03.003867 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 22:57:03.003907 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 22:57:03.004071 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cxfcr-f4dbbbf74" has successfully progressed.}
  I0904 22:57:03.004686 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 22:57:03.004750 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 22:57:03.004775 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 22:57:02 +0000 UTC 2024-09-04 22:57:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cxfcr-f4dbbbf74" has successfully progressed.}
  I0904 22:57:03.004952 18 deployment.go:612] Observed deployment test-deployment-cxfcr in namespace deployment-465 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 22:57:03.005590 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 22:57:03.005657 18 deployment.go:609] Found deployment test-deployment-cxfcr in namespace deployment-465 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0904 22:57:03.005732 18 deployment.go:620] Deployment test-deployment-cxfcr has a patched status
  I0904 22:57:03.032430 18 deployment.go:633] Deployment "test-deployment-cxfcr":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-cxfcr",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-465",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b318a30-37d3-4af7-af52-437a752a87db",
      ResourceVersion: (string) (len=5) "17434",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-cxfcr-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 22:57:03.067501 18 deployment.go:39] New ReplicaSet "test-deployment-cxfcr-f4dbbbf74" of Deployment "test-deployment-cxfcr":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-cxfcr-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-465",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b8b14f3-21f0-4f9e-a0d8-2961544d1e1f",
      ResourceVersion: (string) (len=5) "17413",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-cxfcr",
          UID: (types.UID) (len=36) "2b318a30-37d3-4af7-af52-437a752a87db",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 62 33  |k:{\"uid\":\"2b3|
              00000120  31 38 61 33 30 2d 33 37  64 33 2d 34 61 66 37 2d  |18a30-37d3-4af7-|
              00000130  61 66 35 32 2d 34 33 37  61 37 35 32 61 38 37 64  |af52-437a752a87d|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 22:57:03.077000 18 deployment.go:67] Pod "test-deployment-cxfcr-f4dbbbf74-dnnch" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-cxfcr-f4dbbbf74-dnnch",
      GenerateName: (string) (len=32) "test-deployment-cxfcr-f4dbbbf74-",
      Namespace: (string) (len=14) "deployment-465",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f26ed3b-da7e-4e1d-8557-165a26f4306b",
      ResourceVersion: (string) (len=5) "17412",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "811fd753f238305df02fc0af520b71d0df015aa5f28fd059b1a53d01338948d3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-cxfcr-f4dbbbf74",
          UID: (types.UID) (len=36) "7b8b14f3-21f0-4f9e-a0d8-2961544d1e1f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 62 38 62 31 34 66  33 2d 32 31 66 30 2d 34  |"7b8b14f3-21f0-4|
              000000a0  66 39 65 2d 61 30 64 38  2d 32 39 36 31 35 34 34  |f9e-a0d8-2961544|
              000000b0  64 31 65 31 66 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |d1e1f\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 39  5c 22 7d 22 3a 7b 22 2e  |.42.2.29\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s4mmp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s4mmp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-1-123.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.1.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.1.123"
        }
      },
      PodIP: (string) (len=10) "10.42.2.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087422,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8290ec0d9971d3dde3f86337f3283b84b0fc5f336ac1433482bed340fc8aaf3e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s4mmp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 22:57:03.082991 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-465" for this suite. @ 09/04/24 22:57:03.095
• [2.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/04/24 22:57:03.124
  I0904 22:57:03.124096 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename controllerrevisions @ 09/04/24 22:57:03.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:57:03.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:57:03.179
  STEP: Creating DaemonSet "e2e-zwcmg-daemon-set" @ 09/04/24 22:57:03.238
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 22:57:03.267
  I0904 22:57:03.324861 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zwcmg-daemon-set: 0
  I0904 22:57:03.324932 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:57:04.279827 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zwcmg-daemon-set: 0
  I0904 22:57:04.279880 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:57:05.291563 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zwcmg-daemon-set: 0
  I0904 22:57:05.291599 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:57:06.285214 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zwcmg-daemon-set: 2
  I0904 22:57:06.285262 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 22:57:07.278583 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zwcmg-daemon-set: 4
  I0904 22:57:07.278765 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset e2e-zwcmg-daemon-set
  STEP: Confirm DaemonSet "e2e-zwcmg-daemon-set" successfully created with "daemonset-name=e2e-zwcmg-daemon-set" label @ 09/04/24 22:57:07.295
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-zwcmg-daemon-set" @ 09/04/24 22:57:07.308
  I0904 22:57:07.312925 18 controller_revision.go:162] Located ControllerRevision: "e2e-zwcmg-daemon-set-68f78dc6b8"
  STEP: Patching ControllerRevision "e2e-zwcmg-daemon-set-68f78dc6b8" @ 09/04/24 22:57:07.317
  I0904 22:57:07.335070 18 controller_revision.go:173] e2e-zwcmg-daemon-set-68f78dc6b8 has been patched
  STEP: Create a new ControllerRevision @ 09/04/24 22:57:07.335
  I0904 22:57:07.350134 18 controller_revision.go:191] Created ControllerRevision: e2e-zwcmg-daemon-set-64cc59b7d
  STEP: Confirm that there are two ControllerRevisions @ 09/04/24 22:57:07.35
  I0904 22:57:07.350251 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 22:57:07.358886 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-zwcmg-daemon-set-68f78dc6b8" @ 09/04/24 22:57:07.358
  STEP: Confirm that there is only one ControllerRevision @ 09/04/24 22:57:07.372
  I0904 22:57:07.372710 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 22:57:07.377126 18 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-zwcmg-daemon-set-64cc59b7d" @ 09/04/24 22:57:07.381
  I0904 22:57:07.409936 18 controller_revision.go:220] e2e-zwcmg-daemon-set-64cc59b7d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/04/24 22:57:07.41
  W0904 22:57:07.432637      18 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/04/24 22:57:07.432
  I0904 22:57:07.432822 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 22:57:08.433376 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 22:57:08.440463 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-zwcmg-daemon-set-64cc59b7d=updated" @ 09/04/24 22:57:08.44
  STEP: Confirm that there is only one ControllerRevision @ 09/04/24 22:57:08.486
  I0904 22:57:08.486613 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 22:57:08.494771 18 controller_revision.go:265] Found 1 ControllerRevisions
  I0904 22:57:08.506590 18 controller_revision.go:246] ControllerRevision "e2e-zwcmg-daemon-set-d9795588c" has revision 3
  STEP: Deleting DaemonSet "e2e-zwcmg-daemon-set" @ 09/04/24 22:57:08.511
  STEP: deleting DaemonSet.extensions e2e-zwcmg-daemon-set in namespace controllerrevisions-5194, will wait for the garbage collector to delete the pods @ 09/04/24 22:57:08.511
  I0904 22:57:08.620384 18 resources.go:139] Deleting DaemonSet.extensions e2e-zwcmg-daemon-set took: 45.926291ms
  I0904 22:57:08.821514 18 resources.go:163] Terminating DaemonSet.extensions e2e-zwcmg-daemon-set pods took: 201.111179ms
  I0904 22:57:10.528601 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zwcmg-daemon-set: 0
  I0904 22:57:10.528662 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-zwcmg-daemon-set
  I0904 22:57:10.535853 18 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17610"},"items":null}

  I0904 22:57:10.629817 18 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17610"},"items":null}

  I0904 22:57:10.655108 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5194" for this suite. @ 09/04/24 22:57:10.66
• [7.549 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/04/24 22:57:10.674
  I0904 22:57:10.675028 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/04/24 22:57:10.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:57:10.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:57:10.718
  I0904 22:57:10.722114 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0904 22:58:10.723122 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 22:58:10.728203 18 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/04/24 22:58:10.728
  I0904 22:58:10.962669 18 taints.go:463] Pod1 is running on ip-172-31-8-12.us-east-2.compute.internal. Tainting Node
  I0904 22:58:15.206493 18 taints.go:471] Pod2 is running on ip-172-31-8-12.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/04/24 22:58:15.206
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/24 22:58:15.239
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/04/24 22:58:15.247
  I0904 22:58:21.518843 18 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0904 22:58:41.591767 18 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/24 22:58:41.629
  I0904 22:58:41.635069 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2119" for this suite. @ 09/04/24 22:58:41.642
• [91.001 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/04/24 22:58:41.678
  I0904 22:58:41.678547 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/04/24 22:58:41.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:58:41.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:58:41.772
  STEP: getting /apis @ 09/04/24 22:58:41.775
  STEP: getting /apis/storage.k8s.io @ 09/04/24 22:58:41.781
  STEP: getting /apis/storage.k8s.io/v1 @ 09/04/24 22:58:41.783
  STEP: creating @ 09/04/24 22:58:41.784
  STEP: watching @ 09/04/24 22:58:41.836
  I0904 22:58:41.836771 18 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/04/24 22:58:41.852
  STEP: listing in namespace @ 09/04/24 22:58:41.855
  STEP: listing across namespaces @ 09/04/24 22:58:41.859
  STEP: patching @ 09/04/24 22:58:41.862
  STEP: updating @ 09/04/24 22:58:41.873
  I0904 22:58:41.888883 18 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0904 22:58:41.889037 18 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/04/24 22:58:41.889
  STEP: deleting a collection @ 09/04/24 22:58:41.905
  I0904 22:58:41.937403 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8618" for this suite. @ 09/04/24 22:58:41.943
• [0.286 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/04/24 22:58:41.966
  I0904 22:58:41.966761 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 22:58:41.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:58:42.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:58:42.012
  STEP: Setting up server cert @ 09/04/24 22:58:42.112
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 22:58:44.063
  STEP: Deploying the webhook pod @ 09/04/24 22:58:44.079
  STEP: Wait for the deployment to be ready @ 09/04/24 22:58:44.114
  I0904 22:58:44.131824 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 22:58:46.143038 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 58, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 58, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 58, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 58, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 22:58:48.147
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 22:58:48.173
  I0904 22:58:49.174120 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/04/24 22:58:49.182
  STEP: create a pod @ 09/04/24 22:58:49.236
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/04/24 22:58:51.272
  I0904 22:58:51.272267 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=webhook-237 attach --namespace=webhook-237 to-be-attached-pod -i -c=container1'
  I0904 22:58:51.390942 18 builder.go:135] rc: 1
  I0904 22:58:51.544150 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-237" for this suite. @ 09/04/24 22:58:51.559
  STEP: Destroying namespace "webhook-markers-1201" for this suite. @ 09/04/24 22:58:51.58
• [9.629 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/04/24 22:58:51.595
  I0904 22:58:51.595069 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 22:58:51.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:58:51.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:58:51.644
  STEP: Counting existing ResourceQuota @ 09/04/24 22:58:51.653
  STEP: Creating a ResourceQuota @ 09/04/24 22:58:56.661
  STEP: Ensuring resource quota status is calculated @ 09/04/24 22:58:56.671
  STEP: Creating a ReplicaSet @ 09/04/24 22:58:58.677
  STEP: Ensuring resource quota status captures replicaset creation @ 09/04/24 22:58:58.715
  STEP: Deleting a ReplicaSet @ 09/04/24 22:59:00.722
  STEP: Ensuring resource quota status released usage @ 09/04/24 22:59:00.736
  I0904 22:59:02.742697 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6096" for this suite. @ 09/04/24 22:59:02.749
• [11.166 seconds]
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/04/24 22:59:02.761
  I0904 22:59:02.761698 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 22:59:02.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:02.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:02.826
  STEP: Create set of pods @ 09/04/24 22:59:02.829
  I0904 22:59:02.842563 18 pods.go:871] created test-pod-1
  I0904 22:59:02.872046 18 pods.go:871] created test-pod-2
  I0904 22:59:02.905306 18 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/04/24 22:59:02.905
  STEP: waiting for all pods to be deleted @ 09/04/24 22:59:06.993
  I0904 22:59:07.002279 18 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0904 22:59:08.001162 18 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0904 22:59:09.021855 18 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0904 22:59:09.998145 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4551" for this suite. @ 09/04/24 22:59:10.003
• [7.257 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/04/24 22:59:10.02
  I0904 22:59:10.020033 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 22:59:10.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:10.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:10.064
  STEP: creating the pod @ 09/04/24 22:59:10.068
  STEP: setting up watch @ 09/04/24 22:59:10.069
  STEP: submitting the pod to kubernetes @ 09/04/24 22:59:10.199
  STEP: verifying the pod is in kubernetes @ 09/04/24 22:59:10.22
  STEP: verifying pod creation was observed @ 09/04/24 22:59:10.24
  STEP: deleting the pod gracefully @ 09/04/24 22:59:12.261
  STEP: verifying pod deletion was observed @ 09/04/24 22:59:12.284
  I0904 22:59:14.768419 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6229" for this suite. @ 09/04/24 22:59:14.781
• [4.774 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/04/24 22:59:14.794
  I0904 22:59:14.794573 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:59:14.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:14.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:14.854
  STEP: Creating projection with secret that has name projected-secret-test-d2af0d8c-dda3-4438-98c2-f115a7da2f27 @ 09/04/24 22:59:14.86
  STEP: Creating a pod to test consume secrets @ 09/04/24 22:59:14.876
  STEP: Saw pod success @ 09/04/24 22:59:18.924
  I0904 22:59:18.932558 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-secrets-b95ff3c3-9c6c-4854-beab-a51793a732f7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 22:59:18.954
  I0904 22:59:18.989242 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1379" for this suite. @ 09/04/24 22:59:18.994
• [4.222 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/04/24 22:59:19.017
  I0904 22:59:19.017853 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 22:59:19.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:19.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:19.059
  I0904 22:59:19.062369 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: creating the pod @ 09/04/24 22:59:19.063
  STEP: submitting the pod to kubernetes @ 09/04/24 22:59:19.063
  I0904 22:59:21.124689 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8006" for this suite. @ 09/04/24 22:59:21.132
• [2.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/04/24 22:59:21.149
  I0904 22:59:21.149873 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename containers @ 09/04/24 22:59:21.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:21.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:21.192
  STEP: Creating a pod to test override all @ 09/04/24 22:59:21.196
  STEP: Saw pod success @ 09/04/24 22:59:25.235
  I0904 22:59:25.238674 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod client-containers-4daa52d0-4dfb-406d-a3ad-9dbaf6740903 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 22:59:25.245
  I0904 22:59:25.284470 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8724" for this suite. @ 09/04/24 22:59:25.291
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/04/24 22:59:25.317
  I0904 22:59:25.317211 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename containers @ 09/04/24 22:59:25.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:25.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:25.361
  STEP: Creating a pod to test override command @ 09/04/24 22:59:25.364
  STEP: Saw pod success @ 09/04/24 22:59:29.439
  I0904 22:59:29.449510 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod client-containers-0eebfcd1-2673-436e-ad76-09232718aad3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 22:59:29.463
  I0904 22:59:29.513321 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-300" for this suite. @ 09/04/24 22:59:29.519
• [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/04/24 22:59:29.541
  I0904 22:59:29.541637 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename events @ 09/04/24 22:59:29.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:29.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:29.581
  STEP: Create set of events @ 09/04/24 22:59:29.585
  I0904 22:59:29.615030 18 core_events.go:198] created test-event-1
  I0904 22:59:29.634310 18 core_events.go:198] created test-event-2
  I0904 22:59:29.645364 18 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/04/24 22:59:29.645
  STEP: delete collection of events @ 09/04/24 22:59:29.649
  I0904 22:59:29.650217 18 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/04/24 22:59:29.689
  I0904 22:59:29.689997 18 core_events.go:230] requesting list of events to confirm quantity
  I0904 22:59:29.693728 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8645" for this suite. @ 09/04/24 22:59:29.698
• [0.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/04/24 22:59:29.71
  I0904 22:59:29.710328 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 22:59:29.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:29.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:29.759
  STEP: set up a multi version CRD @ 09/04/24 22:59:29.764
  I0904 22:59:29.765206 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: rename a version @ 09/04/24 22:59:34.209
  STEP: check the new version name is served @ 09/04/24 22:59:34.242
  STEP: check the old version name is removed @ 09/04/24 22:59:35.81
  STEP: check the other version is not changed @ 09/04/24 22:59:36.54
  I0904 22:59:40.217629 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9667" for this suite. @ 09/04/24 22:59:40.225
• [10.527 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/04/24 22:59:40.237
  I0904 22:59:40.238050 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:59:40.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:40.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:40.277
  STEP: Creating configMap with name projected-configmap-test-volume-48c1f1c5-675d-4087-a896-91ad20c4697a @ 09/04/24 22:59:40.281
  STEP: Creating a pod to test consume configMaps @ 09/04/24 22:59:40.291
  STEP: Saw pod success @ 09/04/24 22:59:46.342
  I0904 22:59:46.345903 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-configmaps-e05df21b-f834-48ed-b16d-c8031dd226fe container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 22:59:46.36
  I0904 22:59:46.393123 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1181" for this suite. @ 09/04/24 22:59:46.399
• [6.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/04/24 22:59:46.41
  I0904 22:59:46.410524 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 22:59:46.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:46.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:46.448
  STEP: Creating configMap with name configmap-projected-all-test-volume-d923846b-55a8-4751-97dd-6284a08bc389 @ 09/04/24 22:59:46.454
  STEP: Creating secret with name secret-projected-all-test-volume-aa107621-2b2e-4b0a-8123-c756e686add9 @ 09/04/24 22:59:46.463
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/04/24 22:59:46.48
  STEP: Saw pod success @ 09/04/24 22:59:50.511
  I0904 22:59:50.513844 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod projected-volume-4005d5c0-5f3b-4f41-bdf7-479ae735067f container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 22:59:50.52
  I0904 22:59:50.557593 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9197" for this suite. @ 09/04/24 22:59:50.563
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/04/24 22:59:50.586
  I0904 22:59:50.587164 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/24 22:59:50.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:50.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:50.649
  I0904 22:59:50.658356 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 22:59:53.765108 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7122" for this suite. @ 09/04/24 22:59:53.773
• [3.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/04/24 22:59:53.788
  I0904 22:59:53.788599 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename aggregator @ 09/04/24 22:59:53.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 22:59:53.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 22:59:53.834
  I0904 22:59:53.839017 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Registering the sample API server. @ 09/04/24 22:59:53.84
  I0904 22:59:54.255666 18 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0904 22:59:54.342163 18 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0904 22:59:56.437305 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 22:59:58.452761 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:00.442995 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:02.442582 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:04.441847 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:06.441566 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:08.440970 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:10.442613 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:12.442027 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:14.441042 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:16.442473 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:18.442788 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 22, 59, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:00:20.581670 18 aggregator.go:755] Waited 123.669426ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/04/24 23:00:20.652
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/04/24 23:00:20.657
  STEP: List APIServices @ 09/04/24 23:00:20.678
  I0904 23:00:20.687243 18 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/04/24 23:00:20.687
  I0904 23:00:20.723070 18 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/04/24 23:00:20.723
  I0904 23:00:20.750690 18 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.September, 4, 23, 0, 20, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/04/24 23:00:20.75
  I0904 23:00:20.758849 18 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-09-04 23:00:20 +0000 UTC Passed all checks passed}
  I0904 23:00:20.760703 18 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 23:00:20.761180 18 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/04/24 23:00:20.761
  I0904 23:00:20.785344 18 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-41233546" @ 09/04/24 23:00:20.785
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/04/24 23:00:20.811
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/04/24 23:00:20.83
  STEP: Patch APIService Status @ 09/04/24 23:00:20.836
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/04/24 23:00:20.858
  I0904 23:00:20.868387 18 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-09-04 23:00:20 +0000 UTC Passed all checks passed}
  I0904 23:00:20.868457 18 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 23:00:20.868567 18 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0904 23:00:20.868595 18 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/04/24 23:00:20.868
  STEP: Confirm that the generated APIService has been deleted @ 09/04/24 23:00:20.887
  I0904 23:00:20.887755 18 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0904 23:00:20.896837 18 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0904 23:00:20.896900 18 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0904 23:00:21.138135 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4904" for this suite. @ 09/04/24 23:00:21.161
• [27.387 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/04/24 23:00:21.176
  I0904 23:00:21.177079 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename deployment @ 09/04/24 23:00:21.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:00:21.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:00:21.238
  I0904 23:00:21.242720 18 deployment.go:1196] Creating deployment "webserver-deployment"
  I0904 23:00:21.272164 18 deployment.go:1200] Waiting for observed generation 1
  I0904 23:00:23.285762 18 deployment.go:1205] Waiting for all required pods to come up
  I0904 23:00:23.290513 18 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/04/24 23:00:23.291
  I0904 23:00:27.331389 18 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0904 23:00:27.337914 18 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0904 23:00:27.368207 18 deployment.go:313] Updating deployment webserver-deployment
  I0904 23:00:27.368288 18 deployment.go:1224] Waiting for observed generation 2
  I0904 23:00:29.381592 18 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0904 23:00:29.384768 18 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0904 23:00:29.387691 18 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0904 23:00:29.404049 18 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0904 23:00:29.404281 18 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0904 23:00:29.407304 18 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0904 23:00:29.455157 18 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0904 23:00:29.456634 18 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0904 23:00:29.498323 18 deployment.go:313] Updating deployment webserver-deployment
  I0904 23:00:29.498392 18 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0904 23:00:29.534797 18 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0904 23:00:29.565258 18 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0904 23:00:29.626016 18 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ab5c384-40e1-49d5-af20-8e9742118968",
      ResourceVersion: (string) (len=5) "19240",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 23:00:29.714717 18 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
      ResourceVersion: (string) (len=5) "19231",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5ab5c384-40e1-49d5-af20-8e9742118968",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 61 62 35 63 33  38 34 2d 34 30 65 31 2d  |\"5ab5c384-40e1-|
              00000120  34 39 64 35 2d 61 66 32  30 2d 38 65 39 37 34 32  |49d5-af20-8e9742|
              00000130  31 31 38 39 36 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |118968\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 23:00:29.716546 18 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0904 23:00:29.716856 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
      ResourceVersion: (string) (len=5) "19230",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5ab5c384-40e1-49d5-af20-8e9742118968",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 61 62 35 63 33  38 34 2d 34 30 65 31 2d  |\"5ab5c384-40e1-|
              00000120  34 39 64 35 2d 61 66 32  30 2d 38 65 39 37 34 32  |49d5-af20-8e9742|
              00000130  31 31 38 39 36 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |118968\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 23:00:29.808622 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-252tw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-252tw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a9876b3-dc51-4b9d-9aa7-e1eb8758fd1d",
      ResourceVersion: (string) (len=5) "19071",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "16195c69a49fd7fb891bfe675b3d1a9492e86922cc59d9c7338199172a76c2b4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.31/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.31/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 33 31  5c 22 7d 22 3a 7b 22 2e  |.42.2.31\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jz2t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jz2t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-1-123.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.1.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.1.123"
        }
      },
      PodIP: (string) (len=10) "10.42.2.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087623,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dc377d724a9a4fba58d7a745e4bb2960a51114f1316dd64b9e790b9b2724948d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8jz2t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.815472 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-42fds" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-42fds",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bfc97e6-59ce-4d17-b4da-22359d4dab94",
      ResourceVersion: (string) (len=5) "19100",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "913b1f43a652c3ee765e9aea4a54c82d424b2c1af308db32584b6d7c07d0687e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.28/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 32 38  5c 22 7d 22 3a 7b 22 2e  |.42.0.28\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ngrbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ngrbv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-215.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.215",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.215"
        }
      },
      PodIP: (string) (len=10) "10.42.0.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8b011d3f239cf492ed5d6ebc872c794145a247cb5c2bbf5796e9dbc1be994fbe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ngrbv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.819897 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-4f647" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4f647",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f63bbf31-065a-470c-9a37-b24644230065",
      ResourceVersion: (string) (len=5) "19262",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sbvbs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sbvbs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sbvbs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.823682 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5r62l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5r62l",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e1f0b34-d8f5-4a11-b193-c54e7ddd5394",
      ResourceVersion: (string) (len=5) "19271",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-drbll",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-drbll",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.825691 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7gdx7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7gdx7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30fc9e3a-cb29-4721-9e3e-ebc6e5fb1f4e",
      ResourceVersion: (string) (len=5) "19249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xsfw6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xsfw6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-215.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.828233 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8rmxb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8rmxb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1dd74a1-aca5-4763-b7b2-e8254b742214",
      ResourceVersion: (string) (len=5) "19113",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.29/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "018f07225100e4200d3004e3c00a44880cb5e38a1c6b1d8c8b1e74fc22695d0f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 32 39  5c 22 7d 22 3a 7b 22 2e  |.42.0.29\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dtrcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dtrcx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-215.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.215",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.215"
        }
      },
      PodIP: (string) (len=10) "10.42.0.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087625,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1972b56ffa62c2f717f2fcca9bf0101c9e9c10ebc38b8b4654499eb0b8a16331",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dtrcx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.832858 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-b6zv6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-b6zv6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "890a02d9-6eb0-453f-94c5-ad3d0fb1be69",
      ResourceVersion: (string) (len=5) "19073",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "644d40fd55123c3852b68e8e2d9527c357ba2a232b064b70c925fa7ad7b9115f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.32/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.32/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 33 32  5c 22 7d 22 3a 7b 22 2e  |.42.2.32\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lp6nb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lp6nb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-1-123.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.1.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.1.123"
        }
      },
      PodIP: (string) (len=10) "10.42.2.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087623,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://52000a0ba27ffcc42e77cb2352b42abb3f8ee042c1f65c8faf1d231b07df0106",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lp6nb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.842928 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bhjx7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bhjx7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ff94f73-1a66-449e-a85b-9767c7021419",
      ResourceVersion: (string) (len=5) "19078",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "98038972777edc6be1475eac3a027f5fba96216710b63d146d1660c213f6eeae",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.117/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.117/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 31  37 5c 22 7d 22 3a 7b 22  |.42.3.117\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hzpwx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hzpwx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) (len=11) "10.42.3.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087623,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a57ab6e6f9358e8a6be305937422df800b3ad30346c7f9dd7e1d309b54837fcc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hzpwx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.847550 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-c98rf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-c98rf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55b4a825-cc07-405e-9ced-3cf19344edac",
      ResourceVersion: (string) (len=5) "19066",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d22509f3fbf5e25e0791e8190e33063eddff5dd0b2ef268bed2d715bab43e11f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.33/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.33/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 33 33  5c 22 7d 22 3a 7b 22 2e  |.42.2.33\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lr8h6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lr8h6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-1-123.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.1.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.1.123"
        }
      },
      PodIP: (string) (len=10) "10.42.2.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087623,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://543aa3d3458312380ba2fa2c4a217e7e56fec44f3efd744d0fb7061a76cfca0e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lr8h6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.851620 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cpfvr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cpfvr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "561b6d49-c08f-47fe-b313-f0ee04af8e2e",
      ResourceVersion: (string) (len=5) "19270",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8cqvl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8cqvl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.853618 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-dsqkj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dsqkj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f22c37b6-19aa-4a91-86fb-320f82658739",
      ResourceVersion: (string) (len=5) "19237",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-scdrm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-scdrm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.856131 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fjcvr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fjcvr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f24c5a5-6e47-4d3a-a637-7660766f93d9",
      ResourceVersion: (string) (len=5) "19107",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.23/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a2ede5fbad85b9320c41850a834a10715563c6ac2ed850deb95dd635af118548",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.23/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 33  5c 22 7d 22 3a 7b 22 2e  |.42.1.23\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-npv9s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-npv9s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-55.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.55"
        }
      },
      PodIP: (string) (len=10) "10.42.1.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8aa8a141785e322eb06e262f1359130cdd8536226497c3ac4d8bda044f95982a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-npv9s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.859687 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-gsdgp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-gsdgp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bee0f034-4fce-463e-8dda-cc3b5c30af57",
      ResourceVersion: (string) (len=5) "19269",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-75cqf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-75cqf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.869870 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hxb58" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hxb58",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9474367-6632-4e13-b7d8-3a86273326f0",
      ResourceVersion: (string) (len=5) "19263",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-drkvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-drkvk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-215.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.872176 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-k2zcs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-k2zcs",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cea14ee4-7589-49e8-991a-53a3e7a4dff1",
      ResourceVersion: (string) (len=5) "19257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2vkmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2vkmd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-1-123.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.874649 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-lgmbz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lgmbz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ee94b98-db84-4479-8480-e8a0db773933",
      ResourceVersion: (string) (len=5) "19272",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26vmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26vmn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.876933 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qh69j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qh69j",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2afa4c94-2547-4359-b2a7-b2925fa12f24",
      ResourceVersion: (string) (len=5) "19268",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6ss4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6ss4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-55.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c6ss4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.880158 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rfvbw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rfvbw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df16ba55-78e5-429d-b1c0-ed9265fa0830",
      ResourceVersion: (string) (len=5) "19260",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v6vvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v6vvb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.882177 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-slph6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-slph6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5cd3fa71-87ac-4b5b-a0b4-f433ac68fb71",
      ResourceVersion: (string) (len=5) "19256",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qq8t7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qq8t7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.884574 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-w8gj4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-w8gj4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d37d93e9-8912-42dc-8fb0-e00360c16fcf",
      ResourceVersion: (string) (len=5) "19084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d6349a27484d7d51018b483178d866dd2a68cac02d47b9a75d7e5307aaaa3fc9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.22/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "6fa755c1-10e3-466e-8f8c-08068c676b27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  61 37 35 35 63 31 2d 31  |d\":\"6fa755c1-1|
              00000090  30 65 33 2d 34 36 36 65  2d 38 66 38 63 2d 30 38  |0e3-466e-8f8c-08|
              000000a0  30 36 38 63 36 37 36 62  32 37 5c 22 7d 22 3a 7b  |068c676b27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.22\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-62hvr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-62hvr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-55.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.55"
        }
      },
      PodIP: (string) (len=10) "10.42.1.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861087624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a416a3d992ed6330b3a08f6b52ac67bc1a6585c755d0049e1230d268e1d55911",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-62hvr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.887834 18 deployment.go:67] Pod "webserver-deployment-786f49d774-4whdp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-4whdp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fd38e4d-dc69-42fe-bd37-e5b03f6c5a50",
      ResourceVersion: (string) (len=5) "19254",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4c74d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4c74d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-55.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.890142 18 deployment.go:67] Pod "webserver-deployment-786f49d774-5c2vq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-5c2vq",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0e0e4dd-fdd4-4c6a-811e-273e781b4cf9",
      ResourceVersion: (string) (len=5) "19218",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f421f3ce9cceb318312f3ece515b76fb779d79e2310c73fc18003303a17458b6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.34/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 33 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.2.34\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w8mfc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w8mfc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-1-123.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.1.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.1.123"
        }
      },
      PodIP: (string) (len=10) "10.42.2.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w8mfc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.893403 18 deployment.go:67] Pod "webserver-deployment-786f49d774-5fv4d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-5fv4d",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c1759ed-bb8e-47ff-a61f-33b2eab2d9a3",
      ResourceVersion: (string) (len=5) "19266",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hk9x5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hk9x5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.934431 18 deployment.go:67] Pod "webserver-deployment-786f49d774-5pn77" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-5pn77",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e363d86-e82b-41fd-a8ff-b19ca0ca79f1",
      ResourceVersion: (string) (len=5) "19264",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-29lkr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-29lkr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.938973 18 deployment.go:67] Pod "webserver-deployment-786f49d774-626j6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-626j6",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99b29add-75c6-4d8a-8838-2e78419408f2",
      ResourceVersion: (string) (len=5) "19267",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qf7rq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qf7rq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-1-123.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.1.123",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.1.123"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qf7rq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.948155 18 deployment.go:67] Pod "webserver-deployment-786f49d774-6khst" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6khst",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40a5c00c-c808-40f3-93c3-fa52d41ff737",
      ResourceVersion: (string) (len=5) "19265",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w95bt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w95bt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.953101 18 deployment.go:67] Pod "webserver-deployment-786f49d774-fkb8c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-fkb8c",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa004045-5fa1-4467-82ae-a4735b07b17e",
      ResourceVersion: (string) (len=5) "19202",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f977cdbda563a6780a06a824122b6916025549924e57c506ac9c42951891dcef",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.121/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.121/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2j52d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2j52d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2j52d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.957673 18 deployment.go:67] Pod "webserver-deployment-786f49d774-ftwqd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ftwqd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb0695b6-fd75-4dce-ba53-2449db4a860a",
      ResourceVersion: (string) (len=5) "19212",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ab52c3696f0480e5b4199871d2b18c53b1a01c09b69f8c15ba265f2042e0ccfc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.30/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.30/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 33 30 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.30\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2w5zv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2w5zv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-215.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.215",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.215"
        }
      },
      PodIP: (string) (len=10) "10.42.0.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2w5zv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.969964 18 deployment.go:67] Pod "webserver-deployment-786f49d774-mjvgz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-mjvgz",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c22bbf0-afee-4c18-80a4-bab7893889ac",
      ResourceVersion: (string) (len=5) "19224",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.24/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.24/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3007d4d5395347ef13f221c1713d23f3d8fe0e12d907047d73382ecf6715696e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 32 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.24\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bwgtc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bwgtc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-55.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.55"
        }
      },
      PodIP: (string) (len=10) "10.42.1.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bwgtc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.979928 18 deployment.go:67] Pod "webserver-deployment-786f49d774-nx4p4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-nx4p4",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b729c053-7ba8-45c0-8c9f-754fb212527f",
      ResourceVersion: (string) (len=5) "19258",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nphdz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nphdz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-215.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:29.998472 18 deployment.go:67] Pod "webserver-deployment-786f49d774-xdb9j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xdb9j",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd3615d8-c8d7-4389-a751-fc50cbe5f3b4",
      ResourceVersion: (string) (len=5) "19273",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-77k7h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-77k7h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:30.000924 18 deployment.go:67] Pod "webserver-deployment-786f49d774-xqv7s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xqv7s",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec7f4cbb-00d3-4dfe-ad6a-6088053ea16b",
      ResourceVersion: (string) (len=5) "19226",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "911c1987cabeda2dcb80de46cf7c758899d49d9574042ee6a3f2f0b2deb10450",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.120/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.120/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f1f8c260-e356-484d-a316-92e9dc864881",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  66 38 63 32 36 30 2d 65  |d\":\"f1f8c260-e|
              00000090  33 35 36 2d 34 38 34 64  2d 61 33 31 36 2d 39 32  |356-484d-a316-92|
              000000a0  65 39 64 63 38 36 34 38  38 31 5c 22 7d 22 3a 7b  |e9dc864881\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 31 32 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |.3.120\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cwjmt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cwjmt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861087627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) (len=11) "10.42.3.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861087627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cwjmt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:00:30.007111 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2809" for this suite. @ 09/04/24 23:00:30.057
• [8.961 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/04/24 23:00:30.141
  I0904 23:00:30.141546 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 23:00:30.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:00:30.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:00:30.27
  STEP: Creating a pod to test substitution in container's args @ 09/04/24 23:00:30.283
  STEP: Saw pod success @ 09/04/24 23:00:40.436
  I0904 23:00:40.439743 18 output.go:196] Trying to get logs from node ip-172-31-1-123.us-east-2.compute.internal pod var-expansion-4dd0d6cd-fa20-48c3-bc68-1d3649358902 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 23:00:40.477
  I0904 23:00:40.504640 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4116" for this suite. @ 09/04/24 23:00:40.511
• [10.380 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/04/24 23:00:40.522
  I0904 23:00:40.522376 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:00:40.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:00:40.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:00:40.564
  STEP: Setting up server cert @ 09/04/24 23:00:40.656
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:00:41.236
  STEP: Deploying the webhook pod @ 09/04/24 23:00:41.248
  STEP: Wait for the deployment to be ready @ 09/04/24 23:00:41.28
  I0904 23:00:41.296367 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 23:00:43.322
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:00:43.352
  I0904 23:00:44.353477 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/04/24 23:00:44.564
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 23:00:44.632
  STEP: Deleting the collection of validation webhooks @ 09/04/24 23:00:44.685
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 23:00:44.787
  I0904 23:00:44.907354 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3459" for this suite. @ 09/04/24 23:00:44.911
  STEP: Destroying namespace "webhook-markers-4067" for this suite. @ 09/04/24 23:00:44.938
• [4.439 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 09/04/24 23:00:44.961
  I0904 23:00:44.961358 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 23:00:44.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:00:45.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:00:45.023
  I0904 23:00:45.066673 18 service_accounts.go:618] created pod
  STEP: Saw pod success @ 09/04/24 23:00:49.083
  I0904 23:01:19.083351 18 service_accounts.go:624] polling logs
  I0904 23:01:19.092644 18 service_accounts.go:634] Pod logs: 
  I0904 23:00:46.631085       1 log.go:245] OK: Got token
  I0904 23:00:46.631180       1 log.go:245] validating with in-cluster discovery
  I0904 23:00:46.631728       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0904 23:00:46.632200       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4765:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00013a960), NotBefore:(*jwt.NumericDate)(0xc00013aa50), IssuedAt:(*jwt.NumericDate)(0xc00013a970), ID:"59282f18-6d9e-4d60-bed6-82e9c3ad3b2a"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4765", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4f65bf0d-d556-4b3d-9b71-342d20e00c6f"}}}
  I0904 23:00:46.756418       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0904 23:00:46.761199       1 log.go:245] OK: Validated signature on JWT
  I0904 23:00:46.761328       1 log.go:245] OK: Got valid claims from token!
  I0904 23:00:46.761364       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4765:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013fd0), NotBefore:(*jwt.NumericDate)(0xc0002c8018), IssuedAt:(*jwt.NumericDate)(0xc000013fd8), ID:"59282f18-6d9e-4d60-bed6-82e9c3ad3b2a"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4765", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4f65bf0d-d556-4b3d-9b71-342d20e00c6f"}}}

  I0904 23:01:19.092776 18 service_accounts.go:638] completed pod
  I0904 23:01:19.102786 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4765" for this suite. @ 09/04/24 23:01:19.107
• [34.159 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/04/24 23:01:19.121
  I0904 23:01:19.121726 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 23:01:19.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:01:19.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:01:19.162
  I0904 23:01:19.190489 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0904 23:01:24.196659 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 23:01:24.196
  STEP: Scaling up "test-rs" replicaset @ 09/04/24 23:01:24.196
  I0904 23:01:24.219336 18 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/04/24 23:01:24.219
  I0904 23:01:24.251176 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3060 with ReadyReplicas 1, AvailableReplicas 1
  I0904 23:01:24.286265 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3060 with ReadyReplicas 1, AvailableReplicas 1
  I0904 23:01:24.327018 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3060 with ReadyReplicas 1, AvailableReplicas 1
  I0904 23:01:24.346489 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3060 with ReadyReplicas 1, AvailableReplicas 1
  I0904 23:01:25.567745 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3060 with ReadyReplicas 2, AvailableReplicas 2
  I0904 23:01:26.742349 18 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-3060 with ReadyReplicas 3 found true
  I0904 23:01:26.742619 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3060" for this suite. @ 09/04/24 23:01:26.747
• [7.639 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/04/24 23:01:26.76
  I0904 23:01:26.760487 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename init-container @ 09/04/24 23:01:26.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:01:26.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:01:26.815
  STEP: creating the pod @ 09/04/24 23:01:26.817
  I0904 23:01:26.817940 18 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0904 23:01:30.750417 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8703" for this suite. @ 09/04/24 23:01:30.763
• [4.020 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/04/24 23:01:30.782
  I0904 23:01:30.782117 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:01:30.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:01:30.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:01:30.817
  STEP: Setting up server cert @ 09/04/24 23:01:30.912
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:01:31.72
  STEP: Deploying the webhook pod @ 09/04/24 23:01:31.741
  STEP: Wait for the deployment to be ready @ 09/04/24 23:01:31.769
  I0904 23:01:31.787976 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 23:01:33.834248 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 23, 1, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 1, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 23, 1, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 1, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 23:01:35.839
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:01:35.875
  I0904 23:01:36.877407 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/04/24 23:01:36.884
  STEP: create the configmap with a random name @ 09/04/24 23:01:37.122
  STEP: verify the configmap is mutated @ 09/04/24 23:01:37.151
  STEP: create the configmap with 'skip-me' name @ 09/04/24 23:01:37.151
  I0904 23:01:37.281510 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1610" for this suite. @ 09/04/24 23:01:37.309
  STEP: Destroying namespace "webhook-markers-7997" for this suite. @ 09/04/24 23:01:37.361
• [6.596 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/04/24 23:01:37.38
  I0904 23:01:37.380616 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 23:01:37.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:01:37.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:01:37.421
  STEP: Creating a pod to test downward api env vars @ 09/04/24 23:01:37.424
  STEP: Saw pod success @ 09/04/24 23:01:41.456
  I0904 23:01:41.460344 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downward-api-191dea68-04a4-4c34-b45b-c41179a8750b container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 23:01:41.47
  I0904 23:01:41.497799 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2049" for this suite. @ 09/04/24 23:01:41.505
• [4.143 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/04/24 23:01:41.524
  I0904 23:01:41.524345 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 23:01:41.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:01:41.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:01:41.559
  STEP: Creating pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749 @ 09/04/24 23:01:41.567
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 23:01:43.603
  I0904 23:01:43.606388 18 container_probe.go:1749] Initial restart count of pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 is 0
  I0904 23:01:43.609411 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:01:45.614808 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:01:47.619828 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:01:49.625149 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:01:51.631166 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:01:53.638279 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:01:55.643245 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:01:57.650775 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:01:59.656030 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:01.660273 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:03.665596 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:05.670215 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:07.677147 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:09.681139 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:11.685467 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:13.690185 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:15.694834 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:17.699512 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:19.704269 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:21.708681 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:23.712308 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:25.716901 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:27.721851 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:29.725957 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:31.730289 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:33.734990 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:35.741571 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:37.746226 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:39.752632 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:41.757404 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:43.762006 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:45.767031 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:47.772087 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:49.776021 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:51.780151 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:53.792435 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:55.797037 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:57.800841 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:59.805792 18 container_probe.go:1759] Get pod test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 in namespace container-probe-8749
  I0904 23:02:59.806050 18 container_probe.go:1763] Restart count of pod container-probe-8749/test-grpc-884e3b2b-9a06-4d64-b8b5-58d77cbaa283 is now 1 (1m16.199613166s elapsed)
  STEP: deleting the pod @ 09/04/24 23:02:59.806
  I0904 23:02:59.836229 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8749" for this suite. @ 09/04/24 23:02:59.844
• [78.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/04/24 23:02:59.86
  I0904 23:02:59.860470 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename ingressclass @ 09/04/24 23:02:59.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:02:59.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:02:59.912
  STEP: getting /apis @ 09/04/24 23:02:59.917
  STEP: getting /apis/networking.k8s.io @ 09/04/24 23:02:59.923
  STEP: getting /apis/networking.k8s.iov1 @ 09/04/24 23:02:59.925
  STEP: creating @ 09/04/24 23:02:59.926
  STEP: getting @ 09/04/24 23:02:59.957
  STEP: listing @ 09/04/24 23:02:59.961
  STEP: watching @ 09/04/24 23:02:59.963
  I0904 23:02:59.963707 18 ingressclass.go:348] starting watch
  STEP: patching @ 09/04/24 23:02:59.965
  STEP: updating @ 09/04/24 23:02:59.973
  I0904 23:02:59.993618 18 ingressclass.go:364] waiting for watch events with expected annotations
  I0904 23:02:59.993689 18 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/04/24 23:02:59.993
  STEP: deleting a collection @ 09/04/24 23:03:00.027
  I0904 23:03:00.069529 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6465" for this suite. @ 09/04/24 23:03:00.074
• [0.228 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/04/24 23:03:00.089
  I0904 23:03:00.089505 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 23:03:00.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:00.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:00.141
  STEP: Updating Namespace "namespaces-8543" @ 09/04/24 23:03:00.144
  I0904 23:03:00.161028 18 namespace.go:389] Namespace "namespaces-8543" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"75b503a7-116e-496d-90db-5a3cc9f0f910", "kubernetes.io/metadata.name":"namespaces-8543", "namespaces-8543":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0904 23:03:00.161148 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8543" for this suite. @ 09/04/24 23:03:00.175
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/04/24 23:03:00.188
  I0904 23:03:00.188273 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/24 23:03:00.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:00.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:00.252
  STEP: creating the policy @ 09/04/24 23:03:00.267
  STEP: waiting until the marker is denied @ 09/04/24 23:03:00.299
  STEP: testing a replicated Deployment to be allowed @ 09/04/24 23:03:00.964
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/04/24 23:03:01.02
  I0904 23:03:01.184896 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4392" for this suite. @ 09/04/24 23:03:01.21
• [1.048 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/04/24 23:03:01.241
  I0904 23:03:01.242182 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/04/24 23:03:01.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:01.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:01.287
  STEP: Creating two CSIDrivers @ 09/04/24 23:03:01.291
  STEP: Getting "inline-driver-d0bf31fc-a077-45d8-9e6d-2c5f857a33a3" & "inline-driver-85d7d67c-a5eb-4c75-8f84-3f7b117769ba" @ 09/04/24 23:03:01.339
  STEP: Patching the CSIDriver "inline-driver-85d7d67c-a5eb-4c75-8f84-3f7b117769ba" @ 09/04/24 23:03:01.345
  STEP: Updating the CSIDriver "inline-driver-85d7d67c-a5eb-4c75-8f84-3f7b117769ba" @ 09/04/24 23:03:01.356
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4199" @ 09/04/24 23:03:01.369
  STEP: Deleting CSIDriver "inline-driver-d0bf31fc-a077-45d8-9e6d-2c5f857a33a3" @ 09/04/24 23:03:01.372
  STEP: Confirm deletion of CSIDriver "inline-driver-d0bf31fc-a077-45d8-9e6d-2c5f857a33a3" @ 09/04/24 23:03:01.382
  STEP: Deleting CSIDriver "inline-driver-85d7d67c-a5eb-4c75-8f84-3f7b117769ba" via DeleteCollection @ 09/04/24 23:03:01.385
  STEP: Confirm deletion of CSIDriver "inline-driver-85d7d67c-a5eb-4c75-8f84-3f7b117769ba" @ 09/04/24 23:03:01.401
  I0904 23:03:01.405368 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4199" for this suite. @ 09/04/24 23:03:01.41
• [0.180 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/04/24 23:03:01.422
  I0904 23:03:01.424394 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename hostport @ 09/04/24 23:03:01.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:01.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:01.469
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/04/24 23:03:01.511
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.3.55 on the node which pod1 resides and expect scheduled @ 09/04/24 23:03:05.544
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.3.55 but use UDP protocol on the node which pod2 resides @ 09/04/24 23:03:07.569
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/04/24 23:03:11.632
  I0904 23:03:11.632779 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.3.55 http://127.0.0.1:54323/hostname] Namespace:hostport-5010 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:03:11.632805 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:03:11.633579 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:03:11.633660 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-5010/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.3.55+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.55, port: 54323 @ 09/04/24 23:03:11.762
  I0904 23:03:11.763062 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.3.55:54323/hostname] Namespace:hostport-5010 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:03:11.763162 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:03:11.763961 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:03:11.764142 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-5010/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.3.55%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.55, port: 54323 UDP @ 09/04/24 23:03:11.877
  I0904 23:03:11.877628 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.3.55 54323] Namespace:hostport-5010 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:03:11.877684 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:03:11.878521 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:03:11.878714 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-5010/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.3.55+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0904 23:03:16.998157 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5010" for this suite. @ 09/04/24 23:03:17.011
• [15.604 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/04/24 23:03:17.027
  I0904 23:03:17.027986 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 23:03:17.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:17.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:17.086
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/04/24 23:03:17.089
  STEP: Saw pod success @ 09/04/24 23:03:21.133
  I0904 23:03:21.136903 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-3b4b92d6-b069-449a-b46c-28cc66f5024d container test-container: <nil>
  STEP: delete the pod @ 09/04/24 23:03:21.151
  I0904 23:03:21.202012 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1144" for this suite. @ 09/04/24 23:03:21.207
• [4.194 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/04/24 23:03:21.221
  I0904 23:03:21.221841 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 23:03:21.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:21.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:21.256
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 23:03:21.26
  STEP: Saw pod success @ 09/04/24 23:03:25.301
  I0904 23:03:25.308492 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-2d1ecde4-ad1a-4de3-ba4d-a3aa01719bd4 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 23:03:25.317
  I0904 23:03:25.352886 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4681" for this suite. @ 09/04/24 23:03:25.362
• [4.151 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/04/24 23:03:25.374
  I0904 23:03:25.374374 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 23:03:25.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:25.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:25.426
  STEP: Creating configMap with name configmap-test-volume-map-3327c875-e88d-4512-916a-54b3e4161247 @ 09/04/24 23:03:25.429
  STEP: Creating a pod to test consume configMaps @ 09/04/24 23:03:25.441
  STEP: Saw pod success @ 09/04/24 23:03:31.481
  I0904 23:03:31.484893 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-316a776a-9ee6-432c-a36a-c72d007c073d container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 23:03:31.497
  I0904 23:03:31.542149 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5383" for this suite. @ 09/04/24 23:03:31.547
• [6.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/04/24 23:03:31.559
  I0904 23:03:31.560176 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 23:03:31.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:31.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:31.599
  STEP: Creating a ResourceQuota @ 09/04/24 23:03:31.602
  STEP: Getting a ResourceQuota @ 09/04/24 23:03:31.621
  STEP: Updating a ResourceQuota @ 09/04/24 23:03:31.631
  STEP: Verifying a ResourceQuota was modified @ 09/04/24 23:03:31.64
  STEP: Deleting a ResourceQuota @ 09/04/24 23:03:31.644
  STEP: Verifying the deleted ResourceQuota @ 09/04/24 23:03:31.671
  I0904 23:03:31.682787 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1963" for this suite. @ 09/04/24 23:03:31.696
• [0.147 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/04/24 23:03:31.708
  I0904 23:03:31.708137 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/24 23:03:31.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:31.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:31.761
  I0904 23:03:31.765043 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:03:34.841450 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3077" for this suite. @ 09/04/24 23:03:34.846
• [3.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/04/24 23:03:34.866
  I0904 23:03:34.866398 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 23:03:34.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:34.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:34.898
  STEP: Creating configMap with name configmap-test-upd-de9b058e-9bf5-44ed-9992-80f70f6cc0a7 @ 09/04/24 23:03:34.947
  STEP: Creating the pod @ 09/04/24 23:03:34.955
  STEP: Updating configmap configmap-test-upd-de9b058e-9bf5-44ed-9992-80f70f6cc0a7 @ 09/04/24 23:03:37.003
  STEP: waiting to observe update in volume @ 09/04/24 23:03:37.012
  I0904 23:03:39.034995 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4418" for this suite. @ 09/04/24 23:03:39.04
• [4.185 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 09/04/24 23:03:39.053
  I0904 23:03:39.053078 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 23:03:39.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:39.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:39.089
  STEP: creating the pod @ 09/04/24 23:03:39.091
  I0904 23:03:39.092163 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-8264 create -f -'
  I0904 23:03:39.318618 18 builder.go:146] stderr: ""
  I0904 23:03:39.318677 18 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/04/24 23:03:41.333
  I0904 23:03:41.333476 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-8264 label pods pause testing-label=testing-label-value'
  I0904 23:03:41.462339 18 builder.go:146] stderr: ""
  I0904 23:03:41.462922 18 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/04/24 23:03:41.463
  I0904 23:03:41.463894 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-8264 get pod pause -L testing-label'
  I0904 23:03:41.586624 18 builder.go:146] stderr: ""
  I0904 23:03:41.586679 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/04/24 23:03:41.586
  I0904 23:03:41.586796 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-8264 label pods pause testing-label-'
  I0904 23:03:41.719049 18 builder.go:146] stderr: ""
  I0904 23:03:41.719248 18 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/04/24 23:03:41.719
  I0904 23:03:41.719358 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-8264 get pod pause -L testing-label'
  I0904 23:03:41.810017 18 builder.go:146] stderr: ""
  I0904 23:03:41.810069 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/04/24 23:03:41.81
  I0904 23:03:41.810240 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-8264 delete --grace-period=0 --force -f -'
  I0904 23:03:41.946478 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 23:03:41.947163 18 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0904 23:03:41.947233 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-8264 get rc,svc -l name=pause --no-headers'
  I0904 23:03:42.073383 18 builder.go:146] stderr: "No resources found in kubectl-8264 namespace.\n"
  I0904 23:03:42.073968 18 builder.go:147] stdout: ""
  I0904 23:03:42.074063 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-8264 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0904 23:03:42.199474 18 builder.go:146] stderr: ""
  I0904 23:03:42.199549 18 builder.go:147] stdout: ""
  I0904 23:03:42.199835 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8264" for this suite. @ 09/04/24 23:03:42.213
• [3.177 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/04/24 23:03:42.231
  I0904 23:03:42.231433 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:03:42.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:42.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:42.295
  STEP: Setting up server cert @ 09/04/24 23:03:42.37
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:03:43.081
  STEP: Deploying the webhook pod @ 09/04/24 23:03:43.094
  STEP: Wait for the deployment to be ready @ 09/04/24 23:03:43.127
  I0904 23:03:43.194053 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 23:03:45.224513 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 23, 3, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 3, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 23, 3, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 3, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 23:03:47.228
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:03:47.258
  I0904 23:03:48.259702 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/04/24 23:03:48.267
  STEP: create a namespace for the webhook @ 09/04/24 23:03:48.3
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/04/24 23:03:48.325
  I0904 23:03:48.526715 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7585" for this suite. @ 09/04/24 23:03:48.55
  STEP: Destroying namespace "webhook-markers-8805" for this suite. @ 09/04/24 23:03:48.561
  STEP: Destroying namespace "fail-closed-namespace-9690" for this suite. @ 09/04/24 23:03:48.572
• [6.358 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 09/04/24 23:03:48.597
  I0904 23:03:48.597888 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/24 23:03:48.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:03:48.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:03:48.641
  I0904 23:03:48.673431 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0904 23:04:48.678800 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/04/24 23:04:48.682
  I0904 23:04:48.682745 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/04/24 23:04:48.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:04:48.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:04:48.73
  STEP: Finding an available node @ 09/04/24 23:04:48.736
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/24 23:04:48.736
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/24 23:04:52.778
  I0904 23:04:52.817692 18 preemption.go:585] found a healthy node: ip-172-31-8-12.us-east-2.compute.internal
  I0904 23:05:00.972799 18 preemption.go:708] pods created so far: [1 1 1]
  I0904 23:05:00.973038 18 preemption.go:709] length of pods created so far: 3
  I0904 23:05:02.994106 18 preemption.go:726] pods created so far: [2 2 1]
  I0904 23:05:10.228660 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3967" for this suite. @ 09/04/24 23:05:10.241
  I0904 23:05:10.268403 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8041" for this suite. @ 09/04/24 23:05:10.276
• [81.701 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/04/24 23:05:10.3
  I0904 23:05:10.300161 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:05:10.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:10.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:10.341
  STEP: Setting up server cert @ 09/04/24 23:05:10.434
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:05:11.557
  STEP: Deploying the webhook pod @ 09/04/24 23:05:11.575
  STEP: Wait for the deployment to be ready @ 09/04/24 23:05:11.608
  I0904 23:05:11.624387 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 23:05:13.644
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:05:13.669
  I0904 23:05:14.670364 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/04/24 23:05:14.856
  STEP: Creating a configMap that should be mutated @ 09/04/24 23:05:14.879
  STEP: Deleting the collection of validation webhooks @ 09/04/24 23:05:14.938
  STEP: Creating a configMap that should not be mutated @ 09/04/24 23:05:15.044
  I0904 23:05:15.184441 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9431" for this suite. @ 09/04/24 23:05:15.19
  STEP: Destroying namespace "webhook-markers-4484" for this suite. @ 09/04/24 23:05:15.227
• [4.958 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/04/24 23:05:15.258
  I0904 23:05:15.258794 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:05:15.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:15.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:15.303
  STEP: Creating projection with secret that has name projected-secret-test-map-df5c7200-da81-4ab5-b180-95d13bd564a7 @ 09/04/24 23:05:15.315
  STEP: Creating a pod to test consume secrets @ 09/04/24 23:05:15.327
  STEP: Saw pod success @ 09/04/24 23:05:21.399
  I0904 23:05:21.404322 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-secrets-fdda4e46-3fd6-4f98-8a54-8f212c6f39fe container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 23:05:21.429
  I0904 23:05:21.465769 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9991" for this suite. @ 09/04/24 23:05:21.47
• [6.225 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/04/24 23:05:21.483
  I0904 23:05:21.483728 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 23:05:21.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:21.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:21.538
  STEP: Creating secret with name secret-test-1b0fd307-cf8e-4529-9290-0f64cb3b8de0 @ 09/04/24 23:05:21.541
  STEP: Creating a pod to test consume secrets @ 09/04/24 23:05:21.552
  STEP: Saw pod success @ 09/04/24 23:05:25.6
  I0904 23:05:25.605598 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-secrets-9bf1d599-64b1-4288-92d1-7c9b0887034c container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 23:05:25.613
  I0904 23:05:25.649045 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7111" for this suite. @ 09/04/24 23:05:25.653
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/04/24 23:05:25.665
  I0904 23:05:25.666036 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 23:05:25.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:25.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:25.722
  STEP: Creating replication controller my-hostname-basic-4248583d-51ff-461b-a494-2701d4287c71 @ 09/04/24 23:05:25.725
  I0904 23:05:25.742065 18 resource.go:87] Pod name my-hostname-basic-4248583d-51ff-461b-a494-2701d4287c71: Found 0 pods out of 1
  I0904 23:05:30.748469 18 resource.go:87] Pod name my-hostname-basic-4248583d-51ff-461b-a494-2701d4287c71: Found 1 pods out of 1
  I0904 23:05:30.748525 18 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-4248583d-51ff-461b-a494-2701d4287c71" are running
  I0904 23:05:30.755873 18 rc.go:523] Pod "my-hostname-basic-4248583d-51ff-461b-a494-2701d4287c71-g27vb" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 23:05:27 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 23:05:25 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 23:05:27 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 23:05:27 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 23:05:25 +0000 UTC Reason: Message:}])
  I0904 23:05:30.755929 18 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/04/24 23:05:30.755
  I0904 23:05:30.774884 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3343" for this suite. @ 09/04/24 23:05:30.784
• [5.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 09/04/24 23:05:30.8
  I0904 23:05:30.800785 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename cronjob @ 09/04/24 23:05:30.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:30.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:30.841
  STEP: Creating a cronjob @ 09/04/24 23:05:30.844
  STEP: creating @ 09/04/24 23:05:30.844
  STEP: getting @ 09/04/24 23:05:30.855
  STEP: listing @ 09/04/24 23:05:30.858
  STEP: watching @ 09/04/24 23:05:30.861
  I0904 23:05:30.861869 18 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 09/04/24 23:05:30.863
  STEP: cluster-wide watching @ 09/04/24 23:05:30.866
  I0904 23:05:30.866546 18 cronjob.go:382] starting watch
  STEP: patching @ 09/04/24 23:05:30.867
  STEP: updating @ 09/04/24 23:05:30.894
  I0904 23:05:30.910291 18 cronjob.go:406] waiting for watch events with expected annotations
  I0904 23:05:30.910350 18 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 09/04/24 23:05:30.91
  STEP: updating /status @ 09/04/24 23:05:30.923
  STEP: get /status @ 09/04/24 23:05:30.934
  STEP: deleting @ 09/04/24 23:05:30.938
  STEP: deleting a collection @ 09/04/24 23:05:30.967
  I0904 23:05:30.987495 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-298" for this suite. @ 09/04/24 23:05:30.991
• [0.214 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/04/24 23:05:31.016
  I0904 23:05:31.016594 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 23:05:31.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:31.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:31.06
  STEP: Create a pod @ 09/04/24 23:05:31.063
  STEP: patching /status @ 09/04/24 23:05:35.094
  I0904 23:05:35.120244 18 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0904 23:05:35.121139 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4261" for this suite. @ 09/04/24 23:05:35.126
• [4.121 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/04/24 23:05:35.138
  I0904 23:05:35.138171 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename security-context-test @ 09/04/24 23:05:35.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:35.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:35.178
  I0904 23:05:39.251406 18 security_context.go:538] Got logs for pod "busybox-privileged-false-3447b19a-8f58-4e8a-938e-68cb4816fdae": "ip: RTNETLINK answers: Operation not permitted\n"
  I0904 23:05:39.251670 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9484" for this suite. @ 09/04/24 23:05:39.256
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/04/24 23:05:39.268
  I0904 23:05:39.268693 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sysctl @ 09/04/24 23:05:39.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:39.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:39.305
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/04/24 23:05:39.308
  STEP: Watching for error events or started pod @ 09/04/24 23:05:39.326
  STEP: Waiting for pod completion @ 09/04/24 23:05:41.33
  STEP: Checking that the pod succeeded @ 09/04/24 23:05:43.341
  STEP: Getting logs from the pod @ 09/04/24 23:05:43.341
  STEP: Checking that the sysctl is actually updated @ 09/04/24 23:05:43.348
  I0904 23:05:43.348601 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7841" for this suite. @ 09/04/24 23:05:43.353
• [4.096 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/04/24 23:05:43.365
  I0904 23:05:43.365047 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename gc @ 09/04/24 23:05:43.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:43.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:43.414
  I0904 23:05:43.503872 18 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"96ea2cfc-493c-4d66-866b-6e8ad35f09e1", Controller:(*bool)(0xc002397c6e), BlockOwnerDeletion:(*bool)(0xc002397c6f)}}
  I0904 23:05:43.526343 18 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"e991d75f-5845-47b0-94ed-9a1c42bcf8c5", Controller:(*bool)(0xc0016c35b6), BlockOwnerDeletion:(*bool)(0xc0016c35b7)}}
  I0904 23:05:43.542169 18 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"a67b3e0d-259c-4b9a-a294-32edf1dc7ab4", Controller:(*bool)(0xc002397e8a), BlockOwnerDeletion:(*bool)(0xc002397e8b)}}
  I0904 23:05:48.571158 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5733" for this suite. @ 09/04/24 23:05:48.58
• [5.237 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/04/24 23:05:48.602
  I0904 23:05:48.602490 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 23:05:48.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:48.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:48.654
  STEP: Creating secret with name secret-test-ae0af63b-ca8c-4e18-bd1d-0631b3710a4a @ 09/04/24 23:05:48.766
  STEP: Creating a pod to test consume secrets @ 09/04/24 23:05:48.778
  STEP: Saw pod success @ 09/04/24 23:05:52.838
  I0904 23:05:52.841741 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-secrets-3caf7d46-f2cd-4611-aa73-965d5663e395 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 23:05:52.849
  I0904 23:05:52.892263 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5294" for this suite. @ 09/04/24 23:05:52.897
  STEP: Destroying namespace "secret-namespace-8590" for this suite. @ 09/04/24 23:05:52.908
• [4.322 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/04/24 23:05:52.924
  I0904 23:05:52.925259 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 23:05:52.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:05:52.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:05:52.968
  I0904 23:05:53.016562 18 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0904 23:05:53.031626 18 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0904 23:05:53.141967 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:05:53.142033 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:05:54.050852 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:05:54.050908 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:05:55.046702 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 23:05:55.046745 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:05:56.043618 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 23:05:56.043671 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  I0904 23:05:56.043696 18 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0904 23:05:56.057849 18 daemon_set.go:102] Updating DaemonSet daemon-set
  I0904 23:05:59.075682 18 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0904 23:05:59.089497 18 daemon_set.go:102] Updating DaemonSet daemon-set
  I0904 23:05:59.090064 18 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0904 23:05:59.106061 18 daemon_set.go:1193] Wrong image for pod: daemon-set-8xxtw. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0904 23:05:59.106144 18 daemon_set.go:1198] Pod daemon-set-8xxtw is not available
  I0904 23:06:01.095191 18 daemon_set.go:1198] Pod daemon-set-9wlvk is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 23:06:01.107
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1156, will wait for the garbage collector to delete the pods @ 09/04/24 23:06:01.107
  I0904 23:06:01.177837 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.337019ms
  I0904 23:06:01.278753 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.914716ms
  I0904 23:06:03.583799 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:06:03.584290 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 23:06:03.590906 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22383"},"items":null}

  I0904 23:06:03.600638 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22383"},"items":null}

  I0904 23:06:03.639431 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1156" for this suite. @ 09/04/24 23:06:03.647
• [10.745 seconds]
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 09/04/24 23:06:03.671
  I0904 23:06:03.671239 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 23:06:03.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:03.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:03.712
  STEP: Creating a pod to test downward api env vars @ 09/04/24 23:06:03.715
  STEP: Saw pod success @ 09/04/24 23:06:07.773
  I0904 23:06:07.778023 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downward-api-1b761a5b-0777-4649-8294-556a4ffe61f9 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 23:06:07.787
  I0904 23:06:07.848474 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9519" for this suite. @ 09/04/24 23:06:07.855
• [4.195 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 09/04/24 23:06:07.867
  I0904 23:06:07.867961 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 23:06:07.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:07.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:07.902
  STEP: creating a collection of services @ 09/04/24 23:06:07.906
  I0904 23:06:07.906751 18 service.go:3655] Creating e2e-svc-a-r8fcj
  I0904 23:06:07.936250 18 service.go:3655] Creating e2e-svc-b-djlww
  I0904 23:06:07.965823 18 service.go:3655] Creating e2e-svc-c-bkrfg
  STEP: deleting service collection @ 09/04/24 23:06:08.006
  I0904 23:06:08.077624 18 service.go:3690] Collection of services has been deleted
  I0904 23:06:08.078197 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7554" for this suite. @ 09/04/24 23:06:08.084
• [0.233 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/04/24 23:06:08.101
  I0904 23:06:08.101570 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 23:06:08.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:08.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:08.146
  STEP: Counting existing ResourceQuota @ 09/04/24 23:06:08.151
  STEP: Creating a ResourceQuota @ 09/04/24 23:06:13.156
  STEP: Ensuring resource quota status is calculated @ 09/04/24 23:06:13.168
  I0904 23:06:15.172881 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9919" for this suite. @ 09/04/24 23:06:15.178
• [7.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/04/24 23:06:15.196
  I0904 23:06:15.196459 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:06:15.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:15.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:15.235
  STEP: Creating configMap with name projected-configmap-test-volume-map-11952189-46ac-47a3-8e2d-da4a26214309 @ 09/04/24 23:06:15.239
  STEP: Creating a pod to test consume configMaps @ 09/04/24 23:06:15.253
  STEP: Saw pod success @ 09/04/24 23:06:21.299
  I0904 23:06:21.310900 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-configmaps-990ca651-7ee0-4ff2-b0fc-6d0dafba1c6d container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 23:06:21.327
  I0904 23:06:21.358599 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6651" for this suite. @ 09/04/24 23:06:21.363
• [6.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/04/24 23:06:21.376
  I0904 23:06:21.376177 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename disruption @ 09/04/24 23:06:21.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:21.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:21.418
  STEP: creating the pdb @ 09/04/24 23:06:21.422
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:06:21.437
  STEP: updating the pdb @ 09/04/24 23:06:23.441
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:06:23.458
  STEP: patching the pdb @ 09/04/24 23:06:25.462
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:06:25.477
  STEP: Waiting for the pdb to be deleted @ 09/04/24 23:06:25.518
  I0904 23:06:25.521815 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7486" for this suite. @ 09/04/24 23:06:25.53
• [4.169 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/04/24 23:06:25.544
  I0904 23:06:25.544733 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 23:06:25.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:25.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:25.583
  STEP: Create a Replicaset @ 09/04/24 23:06:25.595
  STEP: Verify that the required pods have come up. @ 09/04/24 23:06:25.607
  I0904 23:06:25.623402 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0904 23:06:30.629462 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 23:06:30.629
  STEP: Getting /status @ 09/04/24 23:06:30.629
  I0904 23:06:30.634860 18 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/04/24 23:06:30.634
  I0904 23:06:30.650403 18 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/04/24 23:06:30.65
  I0904 23:06:30.653323 18 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0904 23:06:30.653668 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0904 23:06:30.654183 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0904 23:06:30.654463 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0904 23:06:30.654550 18 replica_set.go:682] Found replicaset test-rs in namespace replicaset-6752 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 23:06:30.654809 18 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/04/24 23:06:30.655
  I0904 23:06:30.655513 18 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0904 23:06:30.672768 18 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/04/24 23:06:30.672
  I0904 23:06:30.674938 18 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0904 23:06:30.675446 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0904 23:06:30.676049 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0904 23:06:30.676357 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0904 23:06:30.676410 18 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-6752 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 23:06:30.676600 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0904 23:06:30.676901 18 replica_set.go:718] Found replicaset test-rs in namespace replicaset-6752 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0904 23:06:30.677130 18 replica_set.go:729] Replicaset test-rs has a patched status
  I0904 23:06:30.677562 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6752" for this suite. @ 09/04/24 23:06:30.687
• [5.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/04/24 23:06:30.718
  I0904 23:06:30.718580 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:06:30.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:30.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:30.78
  STEP: Creating projection with secret that has name projected-secret-test-108c8191-fb9c-4748-90e5-12fbc2cd9364 @ 09/04/24 23:06:30.793
  STEP: Creating a pod to test consume secrets @ 09/04/24 23:06:30.816
  STEP: Saw pod success @ 09/04/24 23:06:34.843
  I0904 23:06:34.846987 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-secrets-5336491e-50b3-435d-b4e1-568465fc5dca container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 23:06:34.852
  I0904 23:06:34.886505 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9288" for this suite. @ 09/04/24 23:06:34.89
• [4.192 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/04/24 23:06:34.91
  I0904 23:06:34.911022 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 23:06:34.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:34.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:34.958
  STEP: Creating configMap that has name configmap-test-emptyKey-0a2a5f63-fbc6-4672-a4a3-8ceab23587bc @ 09/04/24 23:06:34.961
  I0904 23:06:34.964124 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6905" for this suite. @ 09/04/24 23:06:34.992
• [0.094 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/04/24 23:06:35.004
  I0904 23:06:35.004950 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/24 23:06:35.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:35.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:35.052
  STEP: Deleting RuntimeClass runtimeclass-9123-delete-me @ 09/04/24 23:06:35.068
  STEP: Waiting for the RuntimeClass to disappear @ 09/04/24 23:06:35.084
  I0904 23:06:35.094367 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9123" for this suite. @ 09/04/24 23:06:35.098
• [0.104 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/04/24 23:06:35.109
  I0904 23:06:35.109071 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-runtime @ 09/04/24 23:06:35.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:35.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:35.145
  STEP: create the container @ 09/04/24 23:06:35.148
  W0904 23:06:35.206817      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/04/24 23:06:35.207
  STEP: get the container status @ 09/04/24 23:06:39.25
  STEP: the container should be terminated @ 09/04/24 23:06:39.253
  STEP: the termination message should be set @ 09/04/24 23:06:39.253
  I0904 23:06:39.253167 18 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/04/24 23:06:39.253
  I0904 23:06:39.284124 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8343" for this suite. @ 09/04/24 23:06:39.288
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/04/24 23:06:39.299
  I0904 23:06:39.299706 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 23:06:39.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:39.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:39.345
  STEP: Saw pod success @ 09/04/24 23:06:45.473
  I0904 23:06:45.479336 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod client-envvars-341efd09-de9b-4c2c-a2a3-36d699d88dab container env3cont: <nil>
  STEP: delete the pod @ 09/04/24 23:06:45.491
  I0904 23:06:45.534092 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5650" for this suite. @ 09/04/24 23:06:45.539
• [6.257 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/04/24 23:06:45.564
  I0904 23:06:45.564945 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 23:06:45.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:45.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:45.61
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/04/24 23:06:45.615
  STEP: Saw pod success @ 09/04/24 23:06:49.65
  I0904 23:06:49.653418 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-7c91bd97-a77e-4b28-86f8-df7c35d76dcb container test-container: <nil>
  STEP: delete the pod @ 09/04/24 23:06:49.66
  I0904 23:06:49.700954 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8337" for this suite. @ 09/04/24 23:06:49.705
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 09/04/24 23:06:49.716
  I0904 23:06:49.716441 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename dns @ 09/04/24 23:06:49.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:49.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:49.75
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/04/24 23:06:49.754
  I0904 23:06:49.782318 18 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9191  521b772b-5728-41b6-a2fe-712d4f1d4122 22865 0 2024-09-04 23:06:49 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-09-04 23:06:49 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9gptx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9gptx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/04/24 23:06:53.814
  I0904 23:06:53.814676 18 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9191 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:06:53.814805 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:06:53.815697 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:06:53.815823 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-9191/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/04/24 23:06:53.993
  I0904 23:06:53.993059 18 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9191 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:06:53.993086 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:06:53.993978 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:06:53.994060 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-9191/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 23:06:54.191838 18 dns.go:423] Deleting pod test-dns-nameservers...
  I0904 23:06:54.235929 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9191" for this suite. @ 09/04/24 23:06:54.255
• [4.554 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/04/24 23:06:54.272
  I0904 23:06:54.272917 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename endpointslice @ 09/04/24 23:06:54.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:54.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:54.313
  I0904 23:06:56.490113 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4062" for this suite. @ 09/04/24 23:06:56.496
• [2.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/04/24 23:06:56.516
  I0904 23:06:56.516695 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename gc @ 09/04/24 23:06:56.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:06:56.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:06:56.553
  STEP: create the rc @ 09/04/24 23:06:56.597
  W0904 23:06:56.613474      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/04/24 23:07:02.618
  STEP: wait for the rc to be deleted @ 09/04/24 23:07:02.63
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/04/24 23:07:07.677
  STEP: Gathering metrics @ 09/04/24 23:07:37.694
  I0904 23:07:37.825479 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 23:07:37.825932 18 delete.go:95] Deleting pod "simpletest.rc-2dt6p" in namespace "gc-6128"
  I0904 23:07:37.861401 18 delete.go:95] Deleting pod "simpletest.rc-2ntfb" in namespace "gc-6128"
  I0904 23:07:37.894177 18 delete.go:95] Deleting pod "simpletest.rc-2sz2j" in namespace "gc-6128"
  I0904 23:07:37.969960 18 delete.go:95] Deleting pod "simpletest.rc-2w44f" in namespace "gc-6128"
  I0904 23:07:38.000320 18 delete.go:95] Deleting pod "simpletest.rc-4mtgl" in namespace "gc-6128"
  I0904 23:07:38.058934 18 delete.go:95] Deleting pod "simpletest.rc-4tgs4" in namespace "gc-6128"
  I0904 23:07:38.085919 18 delete.go:95] Deleting pod "simpletest.rc-5c47x" in namespace "gc-6128"
  I0904 23:07:38.137283 18 delete.go:95] Deleting pod "simpletest.rc-5x47g" in namespace "gc-6128"
  I0904 23:07:38.181328 18 delete.go:95] Deleting pod "simpletest.rc-66c5c" in namespace "gc-6128"
  I0904 23:07:38.228335 18 delete.go:95] Deleting pod "simpletest.rc-66cpl" in namespace "gc-6128"
  I0904 23:07:38.310947 18 delete.go:95] Deleting pod "simpletest.rc-6dkqj" in namespace "gc-6128"
  I0904 23:07:38.345946 18 delete.go:95] Deleting pod "simpletest.rc-6zldl" in namespace "gc-6128"
  I0904 23:07:38.379420 18 delete.go:95] Deleting pod "simpletest.rc-7cg5k" in namespace "gc-6128"
  I0904 23:07:38.440517 18 delete.go:95] Deleting pod "simpletest.rc-7lkg9" in namespace "gc-6128"
  I0904 23:07:38.496567 18 delete.go:95] Deleting pod "simpletest.rc-84x24" in namespace "gc-6128"
  I0904 23:07:38.544896 18 delete.go:95] Deleting pod "simpletest.rc-857df" in namespace "gc-6128"
  I0904 23:07:38.586418 18 delete.go:95] Deleting pod "simpletest.rc-8b25m" in namespace "gc-6128"
  I0904 23:07:38.641672 18 delete.go:95] Deleting pod "simpletest.rc-8kh72" in namespace "gc-6128"
  I0904 23:07:38.686237 18 delete.go:95] Deleting pod "simpletest.rc-8mxfk" in namespace "gc-6128"
  I0904 23:07:38.751024 18 delete.go:95] Deleting pod "simpletest.rc-8z2cm" in namespace "gc-6128"
  I0904 23:07:38.790010 18 delete.go:95] Deleting pod "simpletest.rc-959kc" in namespace "gc-6128"
  I0904 23:07:38.836264 18 delete.go:95] Deleting pod "simpletest.rc-9czrj" in namespace "gc-6128"
  I0904 23:07:38.864630 18 delete.go:95] Deleting pod "simpletest.rc-9mlfq" in namespace "gc-6128"
  I0904 23:07:38.908812 18 delete.go:95] Deleting pod "simpletest.rc-bklxc" in namespace "gc-6128"
  I0904 23:07:38.962510 18 delete.go:95] Deleting pod "simpletest.rc-bnzb2" in namespace "gc-6128"
  I0904 23:07:39.039312 18 delete.go:95] Deleting pod "simpletest.rc-c7rms" in namespace "gc-6128"
  I0904 23:07:39.075326 18 delete.go:95] Deleting pod "simpletest.rc-d8gqk" in namespace "gc-6128"
  I0904 23:07:39.111285 18 delete.go:95] Deleting pod "simpletest.rc-ddd75" in namespace "gc-6128"
  I0904 23:07:39.154482 18 delete.go:95] Deleting pod "simpletest.rc-dj4lj" in namespace "gc-6128"
  I0904 23:07:39.208834 18 delete.go:95] Deleting pod "simpletest.rc-drvpt" in namespace "gc-6128"
  I0904 23:07:39.282938 18 delete.go:95] Deleting pod "simpletest.rc-f24wh" in namespace "gc-6128"
  I0904 23:07:39.425044 18 delete.go:95] Deleting pod "simpletest.rc-fjclc" in namespace "gc-6128"
  I0904 23:07:39.480799 18 delete.go:95] Deleting pod "simpletest.rc-fpglg" in namespace "gc-6128"
  I0904 23:07:39.541283 18 delete.go:95] Deleting pod "simpletest.rc-g4pl9" in namespace "gc-6128"
  I0904 23:07:39.595229 18 delete.go:95] Deleting pod "simpletest.rc-gh5tv" in namespace "gc-6128"
  I0904 23:07:39.652667 18 delete.go:95] Deleting pod "simpletest.rc-gmpcm" in namespace "gc-6128"
  I0904 23:07:39.694659 18 delete.go:95] Deleting pod "simpletest.rc-gzhxs" in namespace "gc-6128"
  I0904 23:07:39.750872 18 delete.go:95] Deleting pod "simpletest.rc-h58n8" in namespace "gc-6128"
  I0904 23:07:39.787906 18 delete.go:95] Deleting pod "simpletest.rc-hfmmn" in namespace "gc-6128"
  I0904 23:07:39.833633 18 delete.go:95] Deleting pod "simpletest.rc-hmmsn" in namespace "gc-6128"
  I0904 23:07:39.887701 18 delete.go:95] Deleting pod "simpletest.rc-hsrtm" in namespace "gc-6128"
  I0904 23:07:39.931516 18 delete.go:95] Deleting pod "simpletest.rc-j7vxl" in namespace "gc-6128"
  I0904 23:07:39.984396 18 delete.go:95] Deleting pod "simpletest.rc-jgs5n" in namespace "gc-6128"
  I0904 23:07:40.040466 18 delete.go:95] Deleting pod "simpletest.rc-jh5fn" in namespace "gc-6128"
  I0904 23:07:40.122654 18 delete.go:95] Deleting pod "simpletest.rc-jm2tj" in namespace "gc-6128"
  I0904 23:07:40.153793 18 delete.go:95] Deleting pod "simpletest.rc-kbjv2" in namespace "gc-6128"
  I0904 23:07:40.222345 18 delete.go:95] Deleting pod "simpletest.rc-kvg6k" in namespace "gc-6128"
  I0904 23:07:40.253113 18 delete.go:95] Deleting pod "simpletest.rc-l4pts" in namespace "gc-6128"
  I0904 23:07:40.287467 18 delete.go:95] Deleting pod "simpletest.rc-m6ppn" in namespace "gc-6128"
  I0904 23:07:40.344355 18 delete.go:95] Deleting pod "simpletest.rc-m7dhg" in namespace "gc-6128"
  I0904 23:07:40.395150 18 delete.go:95] Deleting pod "simpletest.rc-m8sw9" in namespace "gc-6128"
  I0904 23:07:40.475437 18 delete.go:95] Deleting pod "simpletest.rc-m8zrt" in namespace "gc-6128"
  I0904 23:07:40.555318 18 delete.go:95] Deleting pod "simpletest.rc-mzqlc" in namespace "gc-6128"
  I0904 23:07:40.609800 18 delete.go:95] Deleting pod "simpletest.rc-n85gk" in namespace "gc-6128"
  I0904 23:07:40.669735 18 delete.go:95] Deleting pod "simpletest.rc-nkxtt" in namespace "gc-6128"
  I0904 23:07:40.712244 18 delete.go:95] Deleting pod "simpletest.rc-nnqf6" in namespace "gc-6128"
  I0904 23:07:40.775505 18 delete.go:95] Deleting pod "simpletest.rc-p94fg" in namespace "gc-6128"
  I0904 23:07:40.816116 18 delete.go:95] Deleting pod "simpletest.rc-pdjkn" in namespace "gc-6128"
  I0904 23:07:40.876778 18 delete.go:95] Deleting pod "simpletest.rc-pjxpc" in namespace "gc-6128"
  I0904 23:07:40.944961 18 delete.go:95] Deleting pod "simpletest.rc-plbmf" in namespace "gc-6128"
  I0904 23:07:40.975709 18 delete.go:95] Deleting pod "simpletest.rc-prlm5" in namespace "gc-6128"
  I0904 23:07:41.020747 18 delete.go:95] Deleting pod "simpletest.rc-qd6h4" in namespace "gc-6128"
  I0904 23:07:41.049321 18 delete.go:95] Deleting pod "simpletest.rc-qdzrq" in namespace "gc-6128"
  I0904 23:07:41.096214 18 delete.go:95] Deleting pod "simpletest.rc-qq48h" in namespace "gc-6128"
  I0904 23:07:41.158290 18 delete.go:95] Deleting pod "simpletest.rc-qqlzz" in namespace "gc-6128"
  I0904 23:07:41.202613 18 delete.go:95] Deleting pod "simpletest.rc-qr2qr" in namespace "gc-6128"
  I0904 23:07:41.243728 18 delete.go:95] Deleting pod "simpletest.rc-rnjhn" in namespace "gc-6128"
  I0904 23:07:41.282431 18 delete.go:95] Deleting pod "simpletest.rc-rq86d" in namespace "gc-6128"
  I0904 23:07:41.319662 18 delete.go:95] Deleting pod "simpletest.rc-rzntl" in namespace "gc-6128"
  I0904 23:07:41.391135 18 delete.go:95] Deleting pod "simpletest.rc-slqxw" in namespace "gc-6128"
  I0904 23:07:41.428099 18 delete.go:95] Deleting pod "simpletest.rc-svb2c" in namespace "gc-6128"
  I0904 23:07:41.477015 18 delete.go:95] Deleting pod "simpletest.rc-t6k87" in namespace "gc-6128"
  I0904 23:07:41.526078 18 delete.go:95] Deleting pod "simpletest.rc-t84zp" in namespace "gc-6128"
  I0904 23:07:41.580854 18 delete.go:95] Deleting pod "simpletest.rc-t8q8v" in namespace "gc-6128"
  I0904 23:07:41.621081 18 delete.go:95] Deleting pod "simpletest.rc-tbpmd" in namespace "gc-6128"
  I0904 23:07:41.676858 18 delete.go:95] Deleting pod "simpletest.rc-tqn9z" in namespace "gc-6128"
  I0904 23:07:41.743596 18 delete.go:95] Deleting pod "simpletest.rc-v62s6" in namespace "gc-6128"
  I0904 23:07:41.814679 18 delete.go:95] Deleting pod "simpletest.rc-v7hwr" in namespace "gc-6128"
  I0904 23:07:41.885654 18 delete.go:95] Deleting pod "simpletest.rc-vktzq" in namespace "gc-6128"
  I0904 23:07:41.972283 18 delete.go:95] Deleting pod "simpletest.rc-vwj9p" in namespace "gc-6128"
  I0904 23:07:42.051319 18 delete.go:95] Deleting pod "simpletest.rc-vxpjz" in namespace "gc-6128"
  I0904 23:07:42.095036 18 delete.go:95] Deleting pod "simpletest.rc-w6mvg" in namespace "gc-6128"
  I0904 23:07:42.146174 18 delete.go:95] Deleting pod "simpletest.rc-wnxtr" in namespace "gc-6128"
  I0904 23:07:42.189275 18 delete.go:95] Deleting pod "simpletest.rc-wpkvh" in namespace "gc-6128"
  I0904 23:07:42.239179 18 delete.go:95] Deleting pod "simpletest.rc-wpvpn" in namespace "gc-6128"
  I0904 23:07:42.284302 18 delete.go:95] Deleting pod "simpletest.rc-x59tq" in namespace "gc-6128"
  I0904 23:07:42.317984 18 delete.go:95] Deleting pod "simpletest.rc-xbhrx" in namespace "gc-6128"
  I0904 23:07:42.350656 18 delete.go:95] Deleting pod "simpletest.rc-xdzck" in namespace "gc-6128"
  I0904 23:07:42.428469 18 delete.go:95] Deleting pod "simpletest.rc-xkghq" in namespace "gc-6128"
  I0904 23:07:42.460967 18 delete.go:95] Deleting pod "simpletest.rc-xm4jv" in namespace "gc-6128"
  I0904 23:07:42.516615 18 delete.go:95] Deleting pod "simpletest.rc-xn7w9" in namespace "gc-6128"
  I0904 23:07:42.562834 18 delete.go:95] Deleting pod "simpletest.rc-xxw7w" in namespace "gc-6128"
  I0904 23:07:42.610330 18 delete.go:95] Deleting pod "simpletest.rc-xz84l" in namespace "gc-6128"
  I0904 23:07:42.636409 18 delete.go:95] Deleting pod "simpletest.rc-xzs82" in namespace "gc-6128"
  I0904 23:07:42.669401 18 delete.go:95] Deleting pod "simpletest.rc-zcl95" in namespace "gc-6128"
  I0904 23:07:42.720906 18 delete.go:95] Deleting pod "simpletest.rc-zkj2p" in namespace "gc-6128"
  I0904 23:07:42.764359 18 delete.go:95] Deleting pod "simpletest.rc-zpjmb" in namespace "gc-6128"
  I0904 23:07:42.818019 18 delete.go:95] Deleting pod "simpletest.rc-zqql9" in namespace "gc-6128"
  I0904 23:07:42.868270 18 delete.go:95] Deleting pod "simpletest.rc-zr86b" in namespace "gc-6128"
  I0904 23:07:42.903797 18 delete.go:95] Deleting pod "simpletest.rc-zsrmk" in namespace "gc-6128"
  I0904 23:07:42.961258 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6128" for this suite. @ 09/04/24 23:07:42.972
• [46.472 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/04/24 23:07:42.989
  I0904 23:07:42.992070 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 23:07:42.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:07:43.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:07:43.031
  STEP: Creating a pod to test substitution in volume subpath @ 09/04/24 23:07:43.041
  STEP: Saw pod success @ 09/04/24 23:07:55.134
  I0904 23:07:55.138016 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod var-expansion-689b1ebc-d55f-473f-9dd4-11cd31012a28 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 23:07:55.153
  I0904 23:07:55.196921 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1421" for this suite. @ 09/04/24 23:07:55.218
• [12.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/04/24 23:07:55.266
  I0904 23:07:55.266520 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 23:07:55.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:07:55.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:07:55.326
  STEP: creating service in namespace services-262 @ 09/04/24 23:07:55.33
  STEP: creating service affinity-nodeport in namespace services-262 @ 09/04/24 23:07:55.331
  STEP: creating replication controller affinity-nodeport in namespace services-262 @ 09/04/24 23:07:55.412
  I0904 23:07:55.435175      18 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-262, replica count: 3
  I0904 23:07:58.486126      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 23:08:01.486636      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 23:08:01.498327 18 resource.go:361] Creating new exec pod
  I0904 23:08:06.542838 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-262 exec execpod-affinitytgcmb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0904 23:08:06.777256 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0904 23:08:06.777321 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:08:06.777540 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-262 exec execpod-affinitytgcmb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.195.190 80'
  I0904 23:08:06.982680 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.195.190 80\nConnection to 10.43.195.190 80 port [tcp/http] succeeded!\n"
  I0904 23:08:06.982740 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:08:06.982833 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-262 exec execpod-affinitytgcmb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.55 31398'
  I0904 23:08:07.191345 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.55 31398\nConnection to 172.31.3.55 31398 port [tcp/*] succeeded!\n"
  I0904 23:08:07.191415 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:08:07.191513 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-262 exec execpod-affinitytgcmb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.12 31398'
  I0904 23:08:07.415507 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.12 31398\nConnection to 172.31.8.12 31398 port [tcp/*] succeeded!\n"
  I0904 23:08:07.415605 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:08:07.415711 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-262 exec execpod-affinitytgcmb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.0.215:31398/ ; done'
  I0904 23:08:07.748120 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31398/\n"
  I0904 23:08:07.748188 18 builder.go:147] stdout: "\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj\naffinity-nodeport-6mxqj"
  I0904 23:08:07.748215 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748233 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748248 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748265 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748280 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748294 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748308 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748321 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748335 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748348 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748360 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748374 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748387 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748401 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748415 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748428 18 service.go:242] Received response from host: affinity-nodeport-6mxqj
  I0904 23:08:07.748503 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-262, will wait for the garbage collector to delete the pods @ 09/04/24 23:08:07.795
  I0904 23:08:07.875348 18 resources.go:139] Deleting ReplicationController affinity-nodeport took: 12.725566ms
  I0904 23:08:07.978453 18 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 103.103757ms
  I0904 23:08:11.641818 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-262" for this suite. @ 09/04/24 23:08:11.648
• [16.396 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/04/24 23:08:11.663
  I0904 23:08:11.663216 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 23:08:11.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:08:11.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:08:11.714
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/04/24 23:08:11.719
  I0904 23:08:11.735333 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0904 23:08:16.745400 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 23:08:16.745
  STEP: getting scale subresource @ 09/04/24 23:08:16.745
  STEP: updating a scale subresource @ 09/04/24 23:08:16.759
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/04/24 23:08:16.778
  STEP: Patch a scale subresource @ 09/04/24 23:08:16.798
  I0904 23:08:16.832379 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7185" for this suite. @ 09/04/24 23:08:16.854
• [5.225 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/04/24 23:08:16.89
  I0904 23:08:16.890481 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 23:08:16.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:08:16.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:08:16.956
  STEP: Creating pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902 @ 09/04/24 23:08:16.959
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 23:08:18.996
  I0904 23:08:19.004253 18 container_probe.go:1749] Initial restart count of pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 is 0
  I0904 23:08:19.012597 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:21.018346 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:23.023529 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:25.027627 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:27.046498 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:29.053330 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:31.059389 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:33.063632 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:35.067791 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:37.071464 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:39.075680 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:41.079972 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:43.085347 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:45.090173 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:47.094287 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:49.097955 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:51.102158 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:53.106853 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:55.110826 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:57.115182 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:08:59.119584 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:01.123734 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:03.128516 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:05.133132 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:07.138176 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:09.143517 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:11.148362 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:13.154314 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:15.159502 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:17.165222 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:19.169009 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:21.175796 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:23.181360 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:25.187567 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:27.192714 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:29.196930 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:31.201366 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:33.206286 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:35.212777 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:37.219385 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:39.223184 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:41.226885 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:43.231611 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:45.235323 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:47.239485 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:49.246866 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:51.251336 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:53.257750 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:55.262826 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:57.273348 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:09:59.277442 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:01.282135 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:03.293282 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:05.299117 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:07.306433 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:09.311764 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:11.315970 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:13.321205 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:15.324847 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:17.327799 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:19.331734 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:21.346077 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:23.351821 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:25.355761 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:27.362283 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:29.367646 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:31.385244 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:33.392569 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:35.398109 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:37.402802 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:39.407887 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:41.412329 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:43.419837 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:45.424240 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:47.429548 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:49.435254 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:51.441486 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:53.446404 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:55.450519 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:57.454815 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:10:59.458778 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:01.462750 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:03.466590 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:05.470276 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:07.478007 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:09.482685 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:11.487270 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:13.491676 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:15.496456 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:17.500306 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:19.504941 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:21.510594 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:23.515463 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:25.519446 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:27.528051 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:29.533157 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:31.539571 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:33.555091 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:35.560283 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:37.564144 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:39.568833 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:41.574901 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:43.583019 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:45.587676 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:47.591375 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:49.595721 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:51.602721 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:53.639788 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:55.643501 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:57.649375 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:11:59.653892 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:12:01.661712 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:12:03.672602 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:12:05.676931 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:12:07.681201 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:12:09.685774 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:12:11.696625 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:12:13.703282 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:12:15.707919 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  I0904 23:12:17.712242 18 container_probe.go:1759] Get pod test-webserver-e658294f-075d-4ef5-8309-3baaaa1ceff2 in namespace container-probe-2902
  STEP: deleting the pod @ 09/04/24 23:12:19.713
  I0904 23:12:19.758952 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2902" for this suite. @ 09/04/24 23:12:19.763
• [242.885 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/04/24 23:12:19.777
  I0904 23:12:19.777970 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename subpath @ 09/04/24 23:12:19.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:12:19.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:12:19.828
  STEP: Setting up data @ 09/04/24 23:12:19.832
  STEP: Creating pod pod-subpath-test-downwardapi-mwsh @ 09/04/24 23:12:19.853
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/24 23:12:19.853
  STEP: Saw pod success @ 09/04/24 23:12:45.98
  I0904 23:12:45.987968 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-subpath-test-downwardapi-mwsh container test-container-subpath-downwardapi-mwsh: <nil>
  STEP: delete the pod @ 09/04/24 23:12:46.01
  STEP: Deleting pod pod-subpath-test-downwardapi-mwsh @ 09/04/24 23:12:46.045
  I0904 23:12:46.045553 18 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-mwsh" in namespace "subpath-6617"
  I0904 23:12:46.048444 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6617" for this suite. @ 09/04/24 23:12:46.052
• [26.291 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/04/24 23:12:46.069
  I0904 23:12:46.069136 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 23:12:46.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:12:46.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:12:46.107
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/04/24 23:12:46.112
  STEP: When a replication controller with a matching selector is created @ 09/04/24 23:12:48.149
  STEP: Then the orphan pod is adopted @ 09/04/24 23:12:48.16
  I0904 23:12:49.171724 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8866" for this suite. @ 09/04/24 23:12:49.176
• [3.126 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/04/24 23:12:49.195
  I0904 23:12:49.195733 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 23:12:49.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:12:49.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:12:49.235
  STEP: Creating a ResourceQuota @ 09/04/24 23:12:49.238
  STEP: Getting a ResourceQuota @ 09/04/24 23:12:49.248
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/04/24 23:12:49.251
  STEP: Patching the ResourceQuota @ 09/04/24 23:12:49.273
  STEP: Deleting a Collection of ResourceQuotas @ 09/04/24 23:12:49.285
  STEP: Verifying the deleted ResourceQuota @ 09/04/24 23:12:49.303
  I0904 23:12:49.306635 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3412" for this suite. @ 09/04/24 23:12:49.311
• [0.128 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/04/24 23:12:49.324
  I0904 23:12:49.324529 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:12:49.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:12:49.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:12:49.361
  STEP: Setting up server cert @ 09/04/24 23:12:49.46
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:12:49.841
  STEP: Deploying the webhook pod @ 09/04/24 23:12:49.854
  STEP: Wait for the deployment to be ready @ 09/04/24 23:12:49.885
  I0904 23:12:49.892274 18 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/04/24 23:12:51.903
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:12:51.932
  I0904 23:12:52.932205 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/04/24 23:12:52.939
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/04/24 23:12:52.972
  STEP: Creating a configMap that should not be mutated @ 09/04/24 23:12:52.988
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/04/24 23:12:53.009
  STEP: Creating a configMap that should be mutated @ 09/04/24 23:12:53.035
  I0904 23:12:53.179392 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-771" for this suite. @ 09/04/24 23:12:53.194
  STEP: Destroying namespace "webhook-markers-9886" for this suite. @ 09/04/24 23:12:53.214
• [3.906 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/04/24 23:12:53.231
  I0904 23:12:53.231265 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 23:12:53.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:12:53.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:12:53.285
  STEP: Creating resourceQuota "e2e-rq-status-trtj4" @ 09/04/24 23:12:53.339
  I0904 23:12:53.372818 18 resource_quota.go:1102] Resource quota "e2e-rq-status-trtj4" reports spec: hard cpu limit of 500m
  I0904 23:12:53.372877 18 resource_quota.go:1104] Resource quota "e2e-rq-status-trtj4" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-trtj4" /status @ 09/04/24 23:12:53.372
  STEP: Confirm /status for "e2e-rq-status-trtj4" resourceQuota via watch @ 09/04/24 23:12:53.392
  I0904 23:12:53.395208 18 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-trtj4" in namespace "resourcequota-1883" with hard status: v1.ResourceList(nil)
  I0904 23:12:53.395359 18 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-trtj4" in namespace "resourcequota-1883" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0904 23:12:53.395713 18 resource_quota.go:1141] ResourceQuota "e2e-rq-status-trtj4" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/04/24 23:12:53.399
  I0904 23:12:53.411738 18 resource_quota.go:1152] Resource quota "e2e-rq-status-trtj4" reports spec: hard cpu limit of 1
  I0904 23:12:53.411803 18 resource_quota.go:1153] Resource quota "e2e-rq-status-trtj4" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-trtj4" /status @ 09/04/24 23:12:53.411
  STEP: Confirm /status for "e2e-rq-status-trtj4" resourceQuota via watch @ 09/04/24 23:12:53.429
  I0904 23:12:53.431563 18 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-trtj4" in namespace "resourcequota-1883" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0904 23:12:53.431951 18 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-trtj4" in namespace "resourcequota-1883" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0904 23:12:53.432100 18 resource_quota.go:1185] ResourceQuota "e2e-rq-status-trtj4" /status was patched
  STEP: Get "e2e-rq-status-trtj4" /status @ 09/04/24 23:12:53.432
  I0904 23:12:53.438093 18 resource_quota.go:1196] Resourcequota "e2e-rq-status-trtj4" reports status: hard cpu of 1
  I0904 23:12:53.438152 18 resource_quota.go:1198] Resourcequota "e2e-rq-status-trtj4" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-trtj4" /status before checking Spec is unchanged @ 09/04/24 23:12:53.446
  I0904 23:12:53.464832 18 resource_quota.go:1218] Resourcequota "e2e-rq-status-trtj4" reports status: hard cpu of 2
  I0904 23:12:53.465349 18 resource_quota.go:1220] Resourcequota "e2e-rq-status-trtj4" reports status: hard memory of 2Gi
  I0904 23:12:53.474380 18 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-trtj4" in namespace "resourcequota-1883" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0904 23:12:53.481102 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a8ba28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a8ba58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a8baa0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:12:58.482841 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a8bc80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a8bce0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a8bd10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:03.481743 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a8bea8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a8bef0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a8bf38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:08.482342 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba870), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:13.483823 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e941b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e941e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e942a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:18.479409 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e944b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e945e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:23.482436 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e947f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e948e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:28.487354 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba9d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baa08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baa38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:33.481259 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94b88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94c78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:38.479690 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94fc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94ff0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e95080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:43.496115 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bab88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042babb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042babe8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:48.479461 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e940d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e941b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:53.479085 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e943f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e944b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:13:58.480126 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e947b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e947f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:03.480120 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94ab0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94b58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94b88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:08.479403 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94eb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94f00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e94f90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:13.479436 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e95188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e951e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e95230), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:18.478330 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e95530), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e955c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e95620), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:23.480834 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56138), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f561b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f561f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:28.479257 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:33.479162 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:38.478760 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f564f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:43.479590 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba4e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:48.479582 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f568d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:53.478981 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56a98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56b28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56b58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:14:58.480521 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba678), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba6c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:03.479447 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba8b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:08.480073 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baa68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baa98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:13.478484 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56d50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56d80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56dc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:18.480037 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56f30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56f60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56fc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:23.480555 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57200), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57230), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:28.478490 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f573c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57428), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57470), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:33.479395 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57620), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57680), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f576b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:38.479957 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bae28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bae58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bae88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:43.484130 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bafc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baff0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb020), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:48.479229 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f560d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:53.482065 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:15:58.479724 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:03.480685 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba4e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:08.479150 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba678), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba6c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:13.485541 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba8b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:18.479732 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baa20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baa50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baa80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:23.487074 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:28.478801 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042babb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042babe8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bac18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:33.479067 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bad38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bad68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bad98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:38.480094 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baf18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baf48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042baf90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:43.479549 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:48.479165 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56a50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:53.478708 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56cf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56d50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56d80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:16:58.479140 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb128), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb158), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb1b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:03.480052 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56f48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56fa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f56fd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:08.480221 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb2d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb308), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb338), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:13.479083 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb458), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb488), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb4b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:18.479358 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f571e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57218), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:23.479660 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57470), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f574a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:28.479954 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb698), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb6c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:33.479519 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb800), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb830), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb860), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:38.479330 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bb9c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042bba10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:43.483370 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57698), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f576c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f57740), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:48.478854 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-trtj4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-trtj4", GenerateName:"", Namespace:"resourcequota-1883", SelfLink:"", UID:"ce2eff8f-d207-4568-ba85-32a0879a91bc", ResourceVersion:"26646", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-trtj4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba0c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 12, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042ba0f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 23:17:53.479288 18 resource_quota.go:1260] ResourceQuota "e2e-rq-status-trtj4" Spec was unchanged and /status reset
  I0904 23:17:53.479445 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1883" for this suite. @ 09/04/24 23:17:53.484
• [300.264 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/04/24 23:17:53.494
  I0904 23:17:53.494907 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:17:53.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:17:53.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:17:53.545
  STEP: Creating configMap with name projected-configmap-test-volume-4ce75db8-f8b9-4f8e-b839-922d3bf1bc86 @ 09/04/24 23:17:53.549
  STEP: Creating a pod to test consume configMaps @ 09/04/24 23:17:53.561
  STEP: Saw pod success @ 09/04/24 23:17:57.602
  I0904 23:17:57.605905 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-configmaps-648c1b30-2a94-45af-a127-ebcdae139633 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 23:17:57.628
  I0904 23:17:57.654386 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2169" for this suite. @ 09/04/24 23:17:57.658
• [4.184 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/04/24 23:17:57.679
  I0904 23:17:57.679108 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 23:17:57.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:17:57.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:17:57.718
  STEP: Creating configMap with name cm-test-opt-del-0c0049c3-150a-4e31-86fa-4056ec49537f @ 09/04/24 23:17:57.76
  STEP: Creating configMap with name cm-test-opt-upd-9727e832-faa1-47b3-a22a-501193e88c63 @ 09/04/24 23:17:57.77
  STEP: Creating the pod @ 09/04/24 23:17:57.789
  STEP: Deleting configmap cm-test-opt-del-0c0049c3-150a-4e31-86fa-4056ec49537f @ 09/04/24 23:18:01.879
  STEP: Updating configmap cm-test-opt-upd-9727e832-faa1-47b3-a22a-501193e88c63 @ 09/04/24 23:18:01.89
  STEP: Creating configMap with name cm-test-opt-create-92fa5cdf-fede-4177-abb7-b0b78e31d670 @ 09/04/24 23:18:01.901
  STEP: waiting to observe update in volume @ 09/04/24 23:18:01.911
  I0904 23:18:03.960622 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-978" for this suite. @ 09/04/24 23:18:03.966
• [6.307 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 09/04/24 23:18:03.986
  I0904 23:18:03.986504 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 23:18:03.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:18:04.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:18:04.037
  STEP: creating service multiprotocol-test in namespace services-6999 @ 09/04/24 23:18:04.047
  STEP: creating pod pod1 in namespace services-6999 @ 09/04/24 23:18:04.076
  STEP: Creating pod pod1 in namespace services-6999 @ 09/04/24 23:18:04.076
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6999 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/04/24 23:18:06.134
  I0904 23:18:06.149506 18 service.go:4392] successfully validated that service multiprotocol-test in namespace services-6999 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/04/24 23:18:06.149
  I0904 23:18:06.149600 18 resource.go:361] Creating new exec pod
  I0904 23:18:08.170208 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.247.70 80'
  I0904 23:18:08.531921 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.247.70 80\nConnection to 10.43.247.70 80 port [tcp/http] succeeded!\n"
  I0904 23:18:08.531986 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:18:08.532076 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.247.70 80'
  I0904 23:18:12.772799 18 builder.go:146] stderr: "+ + ncecho hostName\n -v -u -w 2 10.43.247.70 80\nConnection to 10.43.247.70 80 port [udp/*] succeeded!\n"
  I0904 23:18:12.772912 18 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/04/24 23:18:12.772
  I0904 23:18:12.796725 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.247.70 80'
  I0904 23:18:13.017954 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.247.70 80\nConnection to 10.43.247.70 80 port [tcp/http] succeeded!\n"
  I0904 23:18:13.018016 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:18:13.018262 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.247.70 80'
  I0904 23:18:17.205192 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.247.70 80\nConnection to 10.43.247.70 80 port [udp/*] succeeded!\n"
  I0904 23:18:17.205263 18 builder.go:147] stdout: ""
  I0904 23:18:17.205529 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.247.70 80'
  I0904 23:18:21.407818 18 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.247.70 80\n+ echo hostName\nConnection to 10.43.247.70 80 port [udp/*] succeeded!\n"
  I0904 23:18:21.407884 18 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/04/24 23:18:21.407
  I0904 23:18:21.426907 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.247.70 80'
  I0904 23:18:25.700711 18 builder.go:146] stderr: "+ + nc -v -u -w 2 10.43.247.70 80\necho hostName\nConnection to 10.43.247.70 80 port [udp/*] succeeded!\n"
  I0904 23:18:25.700765 18 builder.go:147] stdout: "pod1"
  I0904 23:18:25.700871 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.247.70 80'
  I0904 23:18:27.957609 18 builder.go:135] rc: 1
  I0904 23:18:27.957707 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.247.70 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.247.70 80
  nc: connect to 10.43.247.70 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 23:18:27.958180 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.247.70 80'
  I0904 23:18:30.160899 18 builder.go:135] rc: 1
  I0904 23:18:30.160986 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.247.70 80:
  Command stdout:

  stderr:
  + + echonc hostName
   -v -t -w 2 10.43.247.70 80
  nc: connect to 10.43.247.70 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 23:18:30.161098 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.247.70 80'
  I0904 23:18:32.364724 18 builder.go:135] rc: 1
  I0904 23:18:32.364966 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-6999 exec execpodxb9r7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.247.70 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.247.70 80
  nc: connect to 10.43.247.70 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 23:18:32.365241 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6999" for this suite. @ 09/04/24 23:18:32.37
• [28.396 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/04/24 23:18:32.382
  I0904 23:18:32.382852 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:18:32.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:18:32.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:18:32.43
  STEP: Creating configMap with name projected-configmap-test-volume-148dc703-1c22-4a3f-b2c9-5de902ee029b @ 09/04/24 23:18:32.433
  STEP: Creating a pod to test consume configMaps @ 09/04/24 23:18:32.442
  STEP: Saw pod success @ 09/04/24 23:18:36.474
  I0904 23:18:36.477677 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-configmaps-79e97ae8-5d18-4f19-a9e1-55500d80a406 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 23:18:36.485
  I0904 23:18:36.535147 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5651" for this suite. @ 09/04/24 23:18:36.541
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 09/04/24 23:18:36.554
  I0904 23:18:36.554285 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/24 23:18:36.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:18:36.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:18:36.605
  I0904 23:18:36.649999 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0904 23:19:36.655869 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/04/24 23:19:36.659
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/04/24 23:19:36.687
  I0904 23:19:36.720149 18 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/04/24 23:19:36.72
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/04/24 23:19:38.748
  I0904 23:19:38.766251 18 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/04/24 23:19:38.766
  STEP: Verifying the pod has the pod disruption condition @ 09/04/24 23:19:40.792
  I0904 23:19:40.795710 18 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0904 23:19:41.323126 18 pod_client.go:173] Successfully updated pod "victim-pod"
  I0904 23:19:41.436976 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9469" for this suite. @ 09/04/24 23:19:41.442
• [64.900 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/04/24 23:19:41.454
  I0904 23:19:41.454787 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:19:41.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:19:41.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:19:41.498
  STEP: Creating configMap with name cm-test-opt-del-31ff1cd8-60f8-41aa-8fe2-f7ff53de73e2 @ 09/04/24 23:19:41.546
  STEP: Creating configMap with name cm-test-opt-upd-d29c4b6d-1cb6-4346-9c79-14739c347e37 @ 09/04/24 23:19:41.568
  STEP: Creating the pod @ 09/04/24 23:19:41.579
  STEP: Deleting configmap cm-test-opt-del-31ff1cd8-60f8-41aa-8fe2-f7ff53de73e2 @ 09/04/24 23:19:45.648
  STEP: Updating configmap cm-test-opt-upd-d29c4b6d-1cb6-4346-9c79-14739c347e37 @ 09/04/24 23:19:45.669
  STEP: Creating configMap with name cm-test-opt-create-c41dcb35-f5f9-44c8-a6c1-650f83174401 @ 09/04/24 23:19:45.684
  STEP: waiting to observe update in volume @ 09/04/24 23:19:45.693
  I0904 23:20:21.954002 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9512" for this suite. @ 09/04/24 23:20:21.96
• [40.524 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/04/24 23:20:21.979
  I0904 23:20:21.979090 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:20:21.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:20:22.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:20:22.037
  STEP: Setting up server cert @ 09/04/24 23:20:22.112
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:20:22.584
  STEP: Deploying the webhook pod @ 09/04/24 23:20:22.596
  STEP: Wait for the deployment to be ready @ 09/04/24 23:20:22.628
  I0904 23:20:22.652709 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 23:20:24.664820 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 23, 20, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 20, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 23, 20, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 20, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 23:20:26.669
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:20:26.7
  I0904 23:20:27.701143 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 23:20:27.721408 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/04/24 23:20:28.239
  STEP: Creating a custom resource that should be denied by the webhook @ 09/04/24 23:20:28.277
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/04/24 23:20:30.301
  STEP: Updating the custom resource with disallowed data should be denied @ 09/04/24 23:20:30.312
  STEP: Deleting the custom resource should be denied @ 09/04/24 23:20:30.322
  STEP: Remove the offending key and value from the custom resource data @ 09/04/24 23:20:30.33
  STEP: Deleting the updated custom resource should be successful @ 09/04/24 23:20:30.352
  I0904 23:20:31.054218 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9271" for this suite. @ 09/04/24 23:20:31.059
  STEP: Destroying namespace "webhook-markers-7052" for this suite. @ 09/04/24 23:20:31.078
• [9.131 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/04/24 23:20:31.109
  I0904 23:20:31.109829 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 23:20:31.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:20:31.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:20:31.146
  I0904 23:20:31.231769 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2687" for this suite. @ 09/04/24 23:20:31.239
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/04/24 23:20:31.252
  I0904 23:20:31.252554 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/24 23:20:31.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:20:31.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:20:31.309
  I0904 23:20:35.339938 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4432" for this suite. @ 09/04/24 23:20:35.346
• [4.112 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/04/24 23:20:35.365
  I0904 23:20:35.365626 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 23:20:35.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:20:35.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:20:35.403
  STEP: creating a Namespace @ 09/04/24 23:20:35.407
  STEP: patching the Namespace @ 09/04/24 23:20:35.5
  STEP: get the Namespace and ensuring it has the label @ 09/04/24 23:20:35.514
  I0904 23:20:35.525530 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4669" for this suite. @ 09/04/24 23:20:35.53
  STEP: Destroying namespace "nspatchtest-3a174033-3245-4e1e-9a32-b32ae930dedb-3796" for this suite. @ 09/04/24 23:20:35.542
• [0.193 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/04/24 23:20:35.558
  I0904 23:20:35.558808 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:20:35.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:20:35.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:20:35.641
  STEP: Setting up server cert @ 09/04/24 23:20:35.749
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:20:35.959
  STEP: Deploying the webhook pod @ 09/04/24 23:20:35.973
  STEP: Wait for the deployment to be ready @ 09/04/24 23:20:35.999
  I0904 23:20:36.036455 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 23:20:38.047457 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 23, 20, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 20, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 23, 20, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 20, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 23:20:40.055078 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 23, 20, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 20, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 23, 20, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 20, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 23:20:42.051
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:20:42.089
  I0904 23:20:43.089545 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/04/24 23:20:43.096
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/24 23:20:43.096
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/04/24 23:20:43.128
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/04/24 23:20:44.141
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/24 23:20:44.141
  STEP: Having no error when timeout is longer than webhook latency @ 09/04/24 23:20:45.201
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/24 23:20:45.201
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/04/24 23:20:50.267
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/24 23:20:50.268
  I0904 23:20:55.479244 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9091" for this suite. @ 09/04/24 23:20:55.493
  STEP: Destroying namespace "webhook-markers-5948" for this suite. @ 09/04/24 23:20:55.511
• [19.967 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 09/04/24 23:20:55.526
  I0904 23:20:55.526300 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename dns @ 09/04/24 23:20:55.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:20:55.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:20:55.567
  STEP: Creating a test headless service @ 09/04/24 23:20:55.572
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5432 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5432;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5432 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5432;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5432.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5432.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5432.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5432.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5432.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5432.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5432.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5432.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5432.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5432.svc;check="$$(dig +notcp +noall +answer +search 199.209.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.209.199_udp@PTR;check="$$(dig +tcp +noall +answer +search 199.209.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.209.199_tcp@PTR;sleep 1; done
   @ 09/04/24 23:20:55.647
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5432 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5432;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5432 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5432;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5432.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5432.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5432.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5432.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5432.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5432.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5432.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5432.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5432.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5432.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5432.svc;check="$$(dig +notcp +noall +answer +search 199.209.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.209.199_udp@PTR;check="$$(dig +tcp +noall +answer +search 199.209.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.209.199_tcp@PTR;sleep 1; done
   @ 09/04/24 23:20:55.647
  STEP: creating a pod to probe DNS @ 09/04/24 23:20:55.647
  STEP: submitting the pod to kubernetes @ 09/04/24 23:20:55.647
  STEP: retrieving the pod @ 09/04/24 23:20:59.691
  STEP: looking for the results for each expected name from probers @ 09/04/24 23:20:59.694
  I0904 23:20:59.701727 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.705721 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.709253 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.713030 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.716259 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.719321 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.722239 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.725313 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.741698 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.745787 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.749191 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.752391 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.757065 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.763398 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.768306 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.772604 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:20:59.787192 18 dns_common.go:489] Lookups using dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5432 wheezy_tcp@dns-test-service.dns-5432 wheezy_udp@dns-test-service.dns-5432.svc wheezy_tcp@dns-test-service.dns-5432.svc wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5432 jessie_tcp@dns-test-service.dns-5432 jessie_udp@dns-test-service.dns-5432.svc jessie_tcp@dns-test-service.dns-5432.svc jessie_udp@_http._tcp.dns-test-service.dns-5432.svc jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc]

  I0904 23:20:59.794790 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 23:20:59.801095 18 dns_common.go:495] Pod client logs for querier: 
  I0904 23:20:59.807252 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 23:21:04.700986 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.705388 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.709235 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.728189 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.733177 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.737321 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.742284 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.747602 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.783763 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.787567 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.793754 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.797892 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.801814 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.811124 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.816047 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.820108 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:04.843165 18 dns_common.go:489] Lookups using dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5432 wheezy_tcp@dns-test-service.dns-5432 wheezy_udp@dns-test-service.dns-5432.svc wheezy_tcp@dns-test-service.dns-5432.svc wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5432 jessie_tcp@dns-test-service.dns-5432 jessie_udp@dns-test-service.dns-5432.svc jessie_tcp@dns-test-service.dns-5432.svc jessie_udp@_http._tcp.dns-test-service.dns-5432.svc jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc]

  I0904 23:21:04.851555 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 23:21:04.859972 18 dns_common.go:495] Pod client logs for querier: 
  I0904 23:21:04.865754 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 23:21:09.699639 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.705187 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.710243 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.714053 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.718712 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.723008 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.728291 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.733733 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.756374 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.762945 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.766813 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.771750 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.776553 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.780934 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.785399 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.790636 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:09.807533 18 dns_common.go:489] Lookups using dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5432 wheezy_tcp@dns-test-service.dns-5432 wheezy_udp@dns-test-service.dns-5432.svc wheezy_tcp@dns-test-service.dns-5432.svc wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5432 jessie_tcp@dns-test-service.dns-5432 jessie_udp@dns-test-service.dns-5432.svc jessie_tcp@dns-test-service.dns-5432.svc jessie_udp@_http._tcp.dns-test-service.dns-5432.svc jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc]

  I0904 23:21:09.815739 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 23:21:09.823427 18 dns_common.go:495] Pod client logs for querier: 
  I0904 23:21:09.832134 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 23:21:14.710596 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.714844 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.719817 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.723878 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.727176 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.730700 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.734920 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.739896 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.765591 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.776996 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.783910 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.787627 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.794371 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.801940 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.806075 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.810045 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:14.828045 18 dns_common.go:489] Lookups using dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5432 wheezy_tcp@dns-test-service.dns-5432 wheezy_udp@dns-test-service.dns-5432.svc wheezy_tcp@dns-test-service.dns-5432.svc wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5432 jessie_tcp@dns-test-service.dns-5432 jessie_udp@dns-test-service.dns-5432.svc jessie_tcp@dns-test-service.dns-5432.svc jessie_udp@_http._tcp.dns-test-service.dns-5432.svc jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc]

  I0904 23:21:14.835081 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 23:21:14.842323 18 dns_common.go:495] Pod client logs for querier: 
  I0904 23:21:14.850030 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 23:21:19.699169 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.704355 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.708478 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.712755 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.716812 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.720833 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.724775 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.728462 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.748569 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.752422 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.757011 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.760302 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.763794 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.767907 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.771117 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.775621 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:19.789552 18 dns_common.go:489] Lookups using dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5432 wheezy_tcp@dns-test-service.dns-5432 wheezy_udp@dns-test-service.dns-5432.svc wheezy_tcp@dns-test-service.dns-5432.svc wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5432 jessie_tcp@dns-test-service.dns-5432 jessie_udp@dns-test-service.dns-5432.svc jessie_tcp@dns-test-service.dns-5432.svc jessie_udp@_http._tcp.dns-test-service.dns-5432.svc jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc]

  I0904 23:21:19.796177 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 23:21:19.804621 18 dns_common.go:495] Pod client logs for querier: 
  I0904 23:21:19.813674 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 23:21:24.699927 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.710214 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.717268 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.722360 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.728798 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.733398 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.739899 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.746472 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.780166 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.785748 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.792095 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.796116 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432 from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.802804 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.811778 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.823999 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.829580 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc from pod dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517: the server could not find the requested resource (get pods dns-test-74fb0656-e3e0-43fc-a571-f437cec29517)
  I0904 23:21:24.847169 18 dns_common.go:489] Lookups using dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5432 wheezy_tcp@dns-test-service.dns-5432 wheezy_udp@dns-test-service.dns-5432.svc wheezy_tcp@dns-test-service.dns-5432.svc wheezy_udp@_http._tcp.dns-test-service.dns-5432.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5432.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5432 jessie_tcp@dns-test-service.dns-5432 jessie_udp@dns-test-service.dns-5432.svc jessie_tcp@dns-test-service.dns-5432.svc jessie_udp@_http._tcp.dns-test-service.dns-5432.svc jessie_tcp@_http._tcp.dns-test-service.dns-5432.svc]

  I0904 23:21:24.869493 18 dns_common.go:495] Pod client logs for webserver: 
  I0904 23:21:24.877739 18 dns_common.go:495] Pod client logs for querier: 
  I0904 23:21:24.886008 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0904 23:21:29.817828 18 dns_common.go:527] DNS probes using dns-5432/dns-test-74fb0656-e3e0-43fc-a571-f437cec29517 succeeded

  STEP: deleting the pod @ 09/04/24 23:21:29.819
  STEP: deleting the test service @ 09/04/24 23:21:29.867
  STEP: deleting the test headless service @ 09/04/24 23:21:29.955
  I0904 23:21:30.007087 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5432" for this suite. @ 09/04/24 23:21:30.022
• [34.508 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/04/24 23:21:30.034
  I0904 23:21:30.034776 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:21:30.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:21:30.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:21:30.075
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 23:21:30.088
  STEP: Saw pod success @ 09/04/24 23:21:34.143
  I0904 23:21:34.146346 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-c1c0ce39-8457-4f5e-83ed-ca3fc8c5009f container client-container: <nil>
  STEP: delete the pod @ 09/04/24 23:21:34.153
  I0904 23:21:34.189906 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1136" for this suite. @ 09/04/24 23:21:34.197
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/04/24 23:21:34.221
  I0904 23:21:34.221483 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 23:21:34.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:21:34.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:21:34.273
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 23:21:34.276
  STEP: Saw pod success @ 09/04/24 23:21:38.301
  I0904 23:21:38.308520 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-206eedde-a876-495d-8e18-a91f0b803a45 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 23:21:38.323
  I0904 23:21:38.357965 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1298" for this suite. @ 09/04/24 23:21:38.362
• [4.163 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/04/24 23:21:38.384
  I0904 23:21:38.384597 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename disruption @ 09/04/24 23:21:38.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:21:38.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:21:38.419
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/04/24 23:21:38.422
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:21:38.432
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/04/24 23:21:40.452
  STEP: Waiting for all pods to be running @ 09/04/24 23:21:40.452
  I0904 23:21:40.458466 18 disruption.go:680] pods: 0 < 3
  I0904 23:21:42.467968 18 disruption.go:691] running pods: 1 < 3
  STEP: locating a running pod @ 09/04/24 23:21:44.459
  STEP: Updating the pdb to allow a pod to be evicted @ 09/04/24 23:21:44.472
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:21:44.491
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/04/24 23:21:46.495
  STEP: Waiting for all pods to be running @ 09/04/24 23:21:46.495
  STEP: Waiting for the pdb to observed all healthy pods @ 09/04/24 23:21:46.506
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/04/24 23:21:46.574
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:21:46.648
  STEP: Waiting for all pods to be running @ 09/04/24 23:21:48.652
  STEP: locating a running pod @ 09/04/24 23:21:48.656
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/04/24 23:21:48.666
  STEP: Waiting for the pdb to be deleted @ 09/04/24 23:21:48.676
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/04/24 23:21:48.679
  STEP: Waiting for all pods to be running @ 09/04/24 23:21:48.679
  I0904 23:21:48.795942 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4827" for this suite. @ 09/04/24 23:21:48.811
• [10.480 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/04/24 23:21:48.864
  I0904 23:21:48.864939 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pv @ 09/04/24 23:21:48.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:21:48.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:21:48.946
  STEP: Creating initial PV and PVC @ 09/04/24 23:21:48.95
  I0904 23:21:48.950275 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4664" @ 09/04/24 23:21:48.997
  STEP: Listing PVCs in namespace "pv-4664" @ 09/04/24 23:21:49.012
  STEP: Reading "pvc-zz84m" Status @ 09/04/24 23:21:49.041
  STEP: Reading "pv-4664-fzfzh" Status @ 09/04/24 23:21:49.053
  STEP: Patching "pvc-zz84m" Status @ 09/04/24 23:21:49.072
  STEP: Patching "pv-4664-fzfzh" Status @ 09/04/24 23:21:49.095
  STEP: Updating "pvc-zz84m" Status @ 09/04/24 23:21:49.111
  STEP: Updating "pv-4664-fzfzh" Status @ 09/04/24 23:21:49.13
  I0904 23:21:49.149301 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0904 23:21:49.149352 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-zz84m"
  I0904 23:21:49.165562 18 pv.go:193] Deleting PersistentVolume "pv-4664-fzfzh"
  I0904 23:21:49.185824 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4664" for this suite. @ 09/04/24 23:21:49.191
• [0.344 seconds]
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/04/24 23:21:49.208
  I0904 23:21:49.208511 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 23:21:49.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:21:49.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:21:49.271
  STEP: creating a secret @ 09/04/24 23:21:49.274
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/04/24 23:21:49.284
  STEP: patching the secret @ 09/04/24 23:21:49.288
  STEP: deleting the secret using a LabelSelector @ 09/04/24 23:21:49.303
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/04/24 23:21:49.315
  I0904 23:21:49.318673 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7246" for this suite. @ 09/04/24 23:21:49.322
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/04/24 23:21:49.352
  I0904 23:21:49.353196 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/24 23:21:49.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:21:49.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:21:49.403
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/24 23:21:49.424
  STEP: create the pod with lifecycle hook @ 09/04/24 23:21:51.46
  STEP: check poststart hook @ 09/04/24 23:21:53.489
  STEP: delete the pod with lifecycle hook @ 09/04/24 23:21:53.498
  I0904 23:21:57.531903 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-504" for this suite. @ 09/04/24 23:21:57.537
• [8.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/04/24 23:21:57.553
  I0904 23:21:57.553652 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename prestop @ 09/04/24 23:21:57.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:21:57.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:21:57.607
  STEP: Creating server pod server in namespace prestop-1475 @ 09/04/24 23:21:57.611
  STEP: Waiting for pods to come up. @ 09/04/24 23:21:57.627
  STEP: Creating tester pod tester in namespace prestop-1475 @ 09/04/24 23:21:59.645
  STEP: Deleting pre-stop pod @ 09/04/24 23:22:01.676
  I0904 23:22:06.703262 18 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/04/24 23:22:06.703
  I0904 23:22:06.755025 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1475" for this suite. @ 09/04/24 23:22:06.776
• [9.245 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/04/24 23:22:06.808
  I0904 23:22:06.808801 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename cronjob @ 09/04/24 23:22:06.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:22:06.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:22:06.849
  STEP: Creating a suspended cronjob @ 09/04/24 23:22:06.86
  STEP: Ensuring no jobs are scheduled @ 09/04/24 23:22:06.876
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/04/24 23:27:06.877
  STEP: Removing cronjob @ 09/04/24 23:27:06.881
  I0904 23:27:06.894970 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7212" for this suite. @ 09/04/24 23:27:06.9
• [300.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/04/24 23:27:06.914
  I0904 23:27:06.914500 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 23:27:06.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:06.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:06.962
  STEP: Creating configMap configmap-6690/configmap-test-944a49a3-e4e7-4004-8a2f-78ac274a0509 @ 09/04/24 23:27:06.966
  STEP: Creating a pod to test consume configMaps @ 09/04/24 23:27:06.976
  STEP: Saw pod success @ 09/04/24 23:27:11.003
  I0904 23:27:11.006625 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-98e2d23c-ba85-4062-a708-ac2a8c5ec9b3 container env-test: <nil>
  STEP: delete the pod @ 09/04/24 23:27:11.028
  I0904 23:27:11.067870 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6690" for this suite. @ 09/04/24 23:27:11.072
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/04/24 23:27:11.103
  I0904 23:27:11.103816 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-runtime @ 09/04/24 23:27:11.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:11.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:11.15
  STEP: create the container @ 09/04/24 23:27:11.154
  W0904 23:27:11.168663      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/04/24 23:27:11.17
  STEP: get the container status @ 09/04/24 23:27:15.196
  STEP: the container should be terminated @ 09/04/24 23:27:15.199
  STEP: the termination message should be set @ 09/04/24 23:27:15.199
  I0904 23:27:15.199825 18 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/04/24 23:27:15.199
  I0904 23:27:15.228952 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7182" for this suite. @ 09/04/24 23:27:15.234
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/04/24 23:27:15.252
  I0904 23:27:15.253065 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename disruption @ 09/04/24 23:27:15.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:15.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:15.298
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:27:15.31
  STEP: Updating PodDisruptionBudget status @ 09/04/24 23:27:15.331
  STEP: Waiting for all pods to be running @ 09/04/24 23:27:15.354
  I0904 23:27:15.384156 18 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 09/04/24 23:27:17.359
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:27:17.378
  STEP: Patching PodDisruptionBudget status @ 09/04/24 23:27:17.392
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:27:17.411
  I0904 23:27:17.436303 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5648" for this suite. @ 09/04/24 23:27:17.446
• [2.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/04/24 23:27:17.458
  I0904 23:27:17.458148 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/24 23:27:17.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:17.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:17.507
  I0904 23:27:17.580874 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2850" for this suite. @ 09/04/24 23:27:17.594
• [0.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/04/24 23:27:17.616
  I0904 23:27:17.616475 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename limitrange @ 09/04/24 23:27:17.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:17.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:17.665
  STEP: Creating a LimitRange @ 09/04/24 23:27:17.67
  STEP: Setting up watch @ 09/04/24 23:27:17.67
  STEP: Submitting a LimitRange @ 09/04/24 23:27:17.775
  STEP: Verifying LimitRange creation was observed @ 09/04/24 23:27:17.789
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/04/24 23:27:17.789
  I0904 23:27:17.792646 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0904 23:27:17.793117 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/04/24 23:27:17.793
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/04/24 23:27:17.803
  I0904 23:27:17.813674 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0904 23:27:17.813764 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/04/24 23:27:17.813
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/04/24 23:27:17.835
  I0904 23:27:17.849561 18 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0904 23:27:17.849634 18 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/04/24 23:27:17.849
  STEP: Failing to create a Pod with more than max resources @ 09/04/24 23:27:17.853
  STEP: Updating a LimitRange @ 09/04/24 23:27:17.856
  STEP: Verifying LimitRange updating is effective @ 09/04/24 23:27:17.871
  STEP: Creating a Pod with less than former min resources @ 09/04/24 23:27:19.885
  STEP: Failing to create a Pod with more than max resources @ 09/04/24 23:27:19.901
  STEP: Deleting a LimitRange @ 09/04/24 23:27:19.905
  STEP: Verifying the LimitRange was deleted @ 09/04/24 23:27:19.929
  I0904 23:27:24.934436 18 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/04/24 23:27:24.934
  I0904 23:27:24.946803 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5923" for this suite. @ 09/04/24 23:27:24.972
• [7.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/04/24 23:27:24.987
  I0904 23:27:24.987303 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 23:27:24.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:25.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:25.028
  STEP: creating service multi-endpoint-test in namespace services-7019 @ 09/04/24 23:27:25.032
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7019 to expose endpoints map[] @ 09/04/24 23:27:25.074
  I0904 23:27:25.099518 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7019 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7019 @ 09/04/24 23:27:25.1
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7019 to expose endpoints map[pod1:[100]] @ 09/04/24 23:27:29.142
  I0904 23:27:29.154035 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7019 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7019 @ 09/04/24 23:27:29.154
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7019 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/04/24 23:27:31.187
  I0904 23:27:31.204262 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7019 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/04/24 23:27:31.204
  I0904 23:27:31.204358 18 resource.go:361] Creating new exec pod
  I0904 23:27:34.247041 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-7019 exec execpodvrvbs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0904 23:27:34.470440 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0904 23:27:34.470506 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:27:34.470835 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-7019 exec execpodvrvbs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.121 80'
  I0904 23:27:34.700246 18 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.213.121 80\necho hostName\nConnection to 10.43.213.121 80 port [tcp/http] succeeded!\n"
  I0904 23:27:34.700303 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:27:34.700419 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-7019 exec execpodvrvbs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0904 23:27:34.946064 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0904 23:27:34.946130 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:27:34.946253 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-7019 exec execpodvrvbs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.121 81'
  I0904 23:27:35.144583 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.213.121 81\nConnection to 10.43.213.121 81 port [tcp/*] succeeded!\n"
  I0904 23:27:35.144651 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7019 @ 09/04/24 23:27:35.144
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7019 to expose endpoints map[pod2:[101]] @ 09/04/24 23:27:35.206
  I0904 23:27:35.249755 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7019 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7019 @ 09/04/24 23:27:35.249
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7019 to expose endpoints map[] @ 09/04/24 23:27:35.291
  I0904 23:27:35.313750 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-7019 exposes endpoints map[]
  I0904 23:27:35.352095 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7019" for this suite. @ 09/04/24 23:27:35.362
• [10.386 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/04/24 23:27:35.373
  I0904 23:27:35.373248 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/24 23:27:35.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:35.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:35.419
  STEP: creating a policy with variables @ 09/04/24 23:27:35.432
  STEP: waiting until the marker is denied @ 09/04/24 23:27:35.482
  STEP: testing a replicated Deployment to be allowed @ 09/04/24 23:27:35.899
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/04/24 23:27:35.964
  I0904 23:27:36.186103 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3858" for this suite. @ 09/04/24 23:27:36.202
• [0.842 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/04/24 23:27:36.215
  I0904 23:27:36.215848 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename podtemplate @ 09/04/24 23:27:36.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:36.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:36.259
  I0904 23:27:36.313445 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-680" for this suite. @ 09/04/24 23:27:36.317
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/04/24 23:27:36.337
  I0904 23:27:36.337373 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:27:36.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:36.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:36.37
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 23:27:36.373
  STEP: Saw pod success @ 09/04/24 23:27:40.414
  I0904 23:27:40.418210 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-ba853d32-f64c-4244-919b-2e9b562b74e4 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 23:27:40.428
  I0904 23:27:40.468226 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3610" for this suite. @ 09/04/24 23:27:40.473
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/04/24 23:27:40.485
  I0904 23:27:40.485563 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 23:27:40.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:40.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:40.567
  STEP: creating the pod @ 09/04/24 23:27:40.57
  STEP: submitting the pod to kubernetes @ 09/04/24 23:27:40.57
  STEP: verifying QOS class is set on the pod @ 09/04/24 23:27:40.616
  I0904 23:27:40.653966 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2212" for this suite. @ 09/04/24 23:27:40.676
• [0.222 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 09/04/24 23:27:40.707
  I0904 23:27:40.707771 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/24 23:27:40.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:40.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:40.758
  STEP: getting /apis @ 09/04/24 23:27:40.771
  STEP: getting /apis/admissionregistration.k8s.io @ 09/04/24 23:27:40.777
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/04/24 23:27:40.778
  STEP: creating @ 09/04/24 23:27:40.78
  STEP: getting @ 09/04/24 23:27:40.835
  STEP: listing @ 09/04/24 23:27:40.842
  STEP: watching @ 09/04/24 23:27:40.848
  I0904 23:27:40.848093 18 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 09/04/24 23:27:40.85
  STEP: updating @ 09/04/24 23:27:40.883
  I0904 23:27:40.918614 18 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I0904 23:27:40.918693 18 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/04/24 23:27:40.919
  STEP: patching /status @ 09/04/24 23:27:40.927
  STEP: updating /status @ 09/04/24 23:27:40.949
  STEP: deleting @ 09/04/24 23:27:41
  STEP: deleting a collection @ 09/04/24 23:27:41.033
  I0904 23:27:41.061934 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5603" for this suite. @ 09/04/24 23:27:41.069
• [0.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 09/04/24 23:27:41.082
  I0904 23:27:41.082876 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 23:27:41.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:41.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:41.173
  STEP: Creating a pod to test downward api env vars @ 09/04/24 23:27:41.177
  STEP: Saw pod success @ 09/04/24 23:27:45.222
  I0904 23:27:45.225877 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downward-api-ab0a5d58-2f60-4e7c-8cfd-e78e5189f85f container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 23:27:45.235
  I0904 23:27:45.269769 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7367" for this suite. @ 09/04/24 23:27:45.274
• [4.214 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/04/24 23:27:45.298
  I0904 23:27:45.298228 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/04/24 23:27:45.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:45.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:45.331
  STEP: Creating secret with name secret-test-map-913e3381-01e4-41c6-bd7a-5c698781d0b8 @ 09/04/24 23:27:45.337
  STEP: Creating a pod to test consume secrets @ 09/04/24 23:27:45.355
  STEP: Saw pod success @ 09/04/24 23:27:49.399
  I0904 23:27:49.403926 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-secrets-979c5f5f-e0f3-4c5e-ba79-40b3ee139a7d container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 23:27:49.411
  I0904 23:27:49.459827 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-15" for this suite. @ 09/04/24 23:27:49.464
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/04/24 23:27:49.49
  I0904 23:27:49.490091 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 23:27:49.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:49.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:49.533
  I0904 23:27:49.581545 18 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/04/24 23:27:49.593
  I0904 23:27:49.597152 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:49.597213 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/04/24 23:27:49.597
  I0904 23:27:49.703860 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:49.707122 18 fixtures.go:130] Node ip-172-31-8-12.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:27:50.697861 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:50.697913 18 fixtures.go:130] Node ip-172-31-8-12.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:27:51.696893 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 23:27:51.696949 18 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/04/24 23:27:51.7
  I0904 23:27:51.757169 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:51.759204 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/04/24 23:27:51.759
  I0904 23:27:51.804479 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:51.804907 18 fixtures.go:130] Node ip-172-31-8-12.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:27:52.797533 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:52.797605 18 fixtures.go:130] Node ip-172-31-8-12.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:27:53.798221 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:53.798509 18 fixtures.go:130] Node ip-172-31-8-12.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:27:54.797778 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:54.799674 18 fixtures.go:130] Node ip-172-31-8-12.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:27:55.797624 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:55.797674 18 fixtures.go:130] Node ip-172-31-8-12.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 23:27:56.800227 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 23:27:56.800282 18 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 23:27:56.81
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8956, will wait for the garbage collector to delete the pods @ 09/04/24 23:27:56.81
  I0904 23:27:56.880526 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.801383ms
  I0904 23:27:56.981405 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.876324ms
  I0904 23:27:59.386849 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 23:27:59.387011 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 23:27:59.389859 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31553"},"items":null}

  I0904 23:27:59.392795 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31553"},"items":null}

  I0904 23:27:59.443273 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8956" for this suite. @ 09/04/24 23:27:59.499
• [10.042 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/04/24 23:27:59.536
  I0904 23:27:59.537388 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 23:27:59.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:59.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:59.605
  STEP: apply creating a deployment @ 09/04/24 23:27:59.609
  I0904 23:27:59.636193 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7980" for this suite. @ 09/04/24 23:27:59.66
• [0.152 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 09/04/24 23:27:59.69
  I0904 23:27:59.690477 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 23:27:59.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:59.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:59.729
  I0904 23:27:59.732809 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3688 version'
  I0904 23:27:59.830305 18 builder.go:146] stderr: ""
  I0904 23:27:59.830357 18 builder.go:147] stdout: "Client Version: v1.31.0\nKustomize Version: v5.4.2\nServer Version: v1.31.0+rke2r1\n"
  I0904 23:27:59.830757 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3688" for this suite. @ 09/04/24 23:27:59.836
• [0.159 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/04/24 23:27:59.848
  I0904 23:27:59.848464 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/24 23:27:59.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:27:59.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:27:59.917
  STEP: Performing setup for networking test in namespace pod-network-test-6910 @ 09/04/24 23:27:59.924
  STEP: creating a selector @ 09/04/24 23:27:59.924
  STEP: Creating the service pods in kubernetes @ 09/04/24 23:27:59.924
  I0904 23:27:59.924364 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/04/24 23:28:22.16
  I0904 23:28:26.231388 18 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0904 23:28:26.231468 18 utils.go:496] Going to poll 10.42.0.61 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0904 23:28:26.234664 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.61 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6910 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:28:26.234723 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:28:26.235592 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:28:26.235677 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6910/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.61+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 23:28:27.383460 18 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0904 23:28:27.383870 18 utils.go:496] Going to poll 10.42.2.71 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0904 23:28:27.387591 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.71 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6910 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:28:27.387642 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:28:27.388343 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:28:27.388450 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6910/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.71+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 23:28:28.535239 18 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0904 23:28:28.535423 18 utils.go:496] Going to poll 10.42.1.65 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0904 23:28:28.539488 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.65 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6910 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:28:28.539541 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:28:28.540346 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:28:28.540429 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6910/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.65+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 23:28:29.673369 18 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0904 23:28:29.673430 18 utils.go:496] Going to poll 10.42.3.222 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0904 23:28:29.676486 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.222 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6910 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:28:29.676553 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:28:29.677327 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:28:29.677413 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6910/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.222+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 23:28:30.792393 18 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0904 23:28:30.792575 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6910" for this suite. @ 09/04/24 23:28:30.796
• [30.960 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/04/24 23:28:30.808
  I0904 23:28:30.808368 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/04/24 23:28:30.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:28:30.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:28:30.861
  STEP: Creating 50 configmaps @ 09/04/24 23:28:30.864
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/24 23:28:31.479
  I0904 23:28:31.508842 18 resource.go:87] Pod name wrapped-volume-race-a04d26c4-398f-4065-8143-15ee0e224add: Found 0 pods out of 5
  I0904 23:28:36.525246 18 resource.go:87] Pod name wrapped-volume-race-a04d26c4-398f-4065-8143-15ee0e224add: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/24 23:28:36.525
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/24 23:28:36.58
  I0904 23:28:36.646250 18 resource.go:87] Pod name wrapped-volume-race-33f40957-5ac9-44b8-99bf-649073317bd8: Found 0 pods out of 5
  I0904 23:28:41.654516 18 resource.go:87] Pod name wrapped-volume-race-33f40957-5ac9-44b8-99bf-649073317bd8: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/24 23:28:41.654
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/24 23:28:41.685
  I0904 23:28:41.754121 18 resource.go:87] Pod name wrapped-volume-race-4277fca7-a5b3-45c6-9b39-615f4f33fca4: Found 0 pods out of 5
  I0904 23:28:46.762476 18 resource.go:87] Pod name wrapped-volume-race-4277fca7-a5b3-45c6-9b39-615f4f33fca4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/24 23:28:46.762
  STEP: deleting ReplicationController wrapped-volume-race-4277fca7-a5b3-45c6-9b39-615f4f33fca4 in namespace emptydir-wrapper-2853, will wait for the garbage collector to delete the pods @ 09/04/24 23:28:46.79
  I0904 23:28:46.860282 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-4277fca7-a5b3-45c6-9b39-615f4f33fca4 took: 12.945916ms
  I0904 23:28:46.961483 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-4277fca7-a5b3-45c6-9b39-615f4f33fca4 pods took: 101.199569ms
  STEP: deleting ReplicationController wrapped-volume-race-33f40957-5ac9-44b8-99bf-649073317bd8 in namespace emptydir-wrapper-2853, will wait for the garbage collector to delete the pods @ 09/04/24 23:28:51.161
  I0904 23:28:51.228702 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-33f40957-5ac9-44b8-99bf-649073317bd8 took: 10.534011ms
  I0904 23:28:51.343688 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-33f40957-5ac9-44b8-99bf-649073317bd8 pods took: 114.984877ms
  STEP: deleting ReplicationController wrapped-volume-race-a04d26c4-398f-4065-8143-15ee0e224add in namespace emptydir-wrapper-2853, will wait for the garbage collector to delete the pods @ 09/04/24 23:28:54.344
  I0904 23:28:54.415696 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-a04d26c4-398f-4065-8143-15ee0e224add took: 12.135403ms
  I0904 23:28:54.516532 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-a04d26c4-398f-4065-8143-15ee0e224add pods took: 100.833035ms
  STEP: Cleaning up the configMaps @ 09/04/24 23:28:58.318
  I0904 23:28:59.056632 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2853" for this suite. @ 09/04/24 23:28:59.067
• [28.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/04/24 23:28:59.086
  I0904 23:28:59.086395 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename subpath @ 09/04/24 23:28:59.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:28:59.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:28:59.17
  STEP: Setting up data @ 09/04/24 23:28:59.185
  STEP: Creating pod pod-subpath-test-projected-jzhb @ 09/04/24 23:28:59.234
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/24 23:28:59.234
  STEP: Saw pod success @ 09/04/24 23:29:23.348
  I0904 23:29:23.351493 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-subpath-test-projected-jzhb container test-container-subpath-projected-jzhb: <nil>
  STEP: delete the pod @ 09/04/24 23:29:23.369
  STEP: Deleting pod pod-subpath-test-projected-jzhb @ 09/04/24 23:29:23.407
  I0904 23:29:23.407550 18 delete.go:62] Deleting pod "pod-subpath-test-projected-jzhb" in namespace "subpath-9259"
  I0904 23:29:23.411136 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9259" for this suite. @ 09/04/24 23:29:23.417
• [24.342 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/04/24 23:29:23.428
  I0904 23:29:23.428325 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 23:29:23.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:29:23.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:29:23.479
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9697 @ 09/04/24 23:29:23.483
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/04/24 23:29:23.515
  STEP: creating service externalsvc in namespace services-9697 @ 09/04/24 23:29:23.521
  STEP: creating replication controller externalsvc in namespace services-9697 @ 09/04/24 23:29:23.565
  I0904 23:29:23.597343      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9697, replica count: 2
  I0904 23:29:26.649314      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/04/24 23:29:26.652
  I0904 23:29:26.698154 18 resource.go:361] Creating new exec pod
  I0904 23:29:28.727623 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-9697 exec execpoddwwfm -- /bin/sh -x -c nslookup nodeport-service.services-9697.svc.cluster.local'
  I0904 23:29:29.027986 18 builder.go:146] stderr: "+ nslookup nodeport-service.services-9697.svc.cluster.local\n"
  I0904 23:29:29.028188 18 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-9697.svc.cluster.local\tcanonical name = externalsvc.services-9697.svc.cluster.local.\nName:\texternalsvc.services-9697.svc.cluster.local\nAddress: 10.43.52.183\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9697, will wait for the garbage collector to delete the pods @ 09/04/24 23:29:29.028
  I0904 23:29:29.096698 18 resources.go:139] Deleting ReplicationController externalsvc took: 11.476145ms
  I0904 23:29:29.198514 18 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.794992ms
  I0904 23:29:32.877421 18 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0904 23:29:32.906322 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9697" for this suite. @ 09/04/24 23:29:32.922
• [9.514 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/04/24 23:29:32.942
  I0904 23:29:32.942570 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename containers @ 09/04/24 23:29:32.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:29:32.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:29:32.977
  I0904 23:29:37.031401 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5612" for this suite. @ 09/04/24 23:29:37.039
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/04/24 23:29:37.061
  I0904 23:29:37.061469 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename discovery @ 09/04/24 23:29:37.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:29:37.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:29:37.103
  STEP: Setting up server cert @ 09/04/24 23:29:37.109
  STEP: Requesting APIResourceList from "/api/v1" @ 09/04/24 23:29:37.702
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/04/24 23:29:37.704
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/04/24 23:29:37.706
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/04/24 23:29:37.708
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/04/24 23:29:37.709
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/04/24 23:29:37.71
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/04/24 23:29:37.711
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/04/24 23:29:37.712
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/04/24 23:29:37.713
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/04/24 23:29:37.714
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/04/24 23:29:37.716
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/04/24 23:29:37.717
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/04/24 23:29:37.718
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/04/24 23:29:37.721
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/04/24 23:29:37.722
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/04/24 23:29:37.724
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/04/24 23:29:37.725
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/04/24 23:29:37.726
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/04/24 23:29:37.728
  I0904 23:29:37.729269 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9990" for this suite. @ 09/04/24 23:29:37.733
• [0.682 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 09/04/24 23:29:37.744
  I0904 23:29:37.744280 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename job @ 09/04/24 23:29:37.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:29:37.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:29:37.792
  STEP: Creating Indexed job @ 09/04/24 23:29:37.796
  STEP: Ensuring job reaches completions @ 09/04/24 23:29:37.806
  STEP: Ensuring pods with index for job exist @ 09/04/24 23:29:49.828
  I0904 23:29:49.832568 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2923" for this suite. @ 09/04/24 23:29:49.838
• [12.107 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/04/24 23:29:49.851
  I0904 23:29:49.851669 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename disruption @ 09/04/24 23:29:49.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:29:49.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:29:49.891
  STEP: Waiting for the pdb to be processed @ 09/04/24 23:29:49.909
  STEP: Waiting for all pods to be running @ 09/04/24 23:29:51.983
  I0904 23:29:52.027096 18 disruption.go:691] running pods: 0 < 3
  I0904 23:29:54.011486 18 disruption.go:691] running pods: 0 < 3
  I0904 23:29:55.991082 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9337" for this suite. @ 09/04/24 23:29:55.995
• [6.155 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/04/24 23:29:56.007
  I0904 23:29:56.007617 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 23:29:56.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:29:56.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:29:56.05
  STEP: Creating pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753 @ 09/04/24 23:29:56.057
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 23:29:58.097
  I0904 23:29:58.101177 18 container_probe.go:1749] Initial restart count of pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea is 0
  I0904 23:29:58.104456 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:00.112254 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:02.117873 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:04.130464 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:06.134836 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:08.139757 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:10.144992 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:12.153192 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:14.158335 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:16.161954 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:18.166397 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:20.177585 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:22.183090 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:24.187566 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:26.191391 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:28.195284 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:30.199776 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:32.204689 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:34.209218 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:36.213546 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:38.219442 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:40.227814 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:42.237443 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:44.245054 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:46.249832 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:48.254369 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:50.262354 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:52.267149 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:54.276494 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:56.282132 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:30:58.286069 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:00.290512 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:02.298170 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:04.302071 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:06.307289 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:08.311622 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:10.317161 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:12.332446 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:14.340984 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:16.344838 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:18.350216 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:20.354452 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:22.361005 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:24.369713 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:26.374136 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:28.378249 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:30.382464 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:32.385993 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:34.390682 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:36.395974 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:38.400798 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:40.407156 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:42.411049 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:44.415271 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:46.422994 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:48.428265 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:50.432199 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:52.436429 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:54.440863 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:56.444987 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:31:58.448902 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:00.453982 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:02.458776 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:04.463358 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:06.467924 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:08.472879 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:10.477743 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:12.482611 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:14.487694 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:16.492200 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:18.496648 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:20.500637 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:22.505121 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:24.510631 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:26.522165 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:28.526235 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:30.534262 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:32.544419 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:34.550216 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:36.554832 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:38.559418 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:40.563308 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:42.568510 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:44.572127 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:46.576079 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:48.584333 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:50.590196 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:52.595440 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:54.602975 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:56.606728 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:32:58.610776 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:00.617252 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:02.621279 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:04.627388 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:06.631154 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:08.635542 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:10.641120 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:12.649542 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:14.655414 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:16.659769 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:18.663707 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:20.675134 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:22.683882 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:24.688858 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:26.693478 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:28.698031 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:30.702629 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:32.706903 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:34.713705 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:36.717778 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:38.722077 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:40.727416 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:42.733225 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:44.740186 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:46.745724 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:48.749627 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:50.754205 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:52.759354 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:54.765138 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  I0904 23:33:56.769461 18 container_probe.go:1759] Get pod test-grpc-a7d7fcae-6a55-4dda-b5fa-81cdbb85e9ea in namespace container-probe-7753
  STEP: deleting the pod @ 09/04/24 23:33:58.77
  I0904 23:33:58.804897 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7753" for this suite. @ 09/04/24 23:33:58.814
• [242.822 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/04/24 23:33:58.829
  I0904 23:33:58.830037 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:33:58.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:33:58.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:33:58.886
  STEP: Setting up server cert @ 09/04/24 23:33:58.975
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:34:00.267
  STEP: Deploying the webhook pod @ 09/04/24 23:34:00.284
  STEP: Wait for the deployment to be ready @ 09/04/24 23:34:00.316
  I0904 23:34:00.334003 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 23:34:02.355
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:34:02.379
  I0904 23:34:03.381008 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/04/24 23:34:03.39
  STEP: verifying the validating webhook match conditions @ 09/04/24 23:34:03.406
  STEP: updating the validating webhook match conditions @ 09/04/24 23:34:03.409
  STEP: verifying the validating webhook match conditions @ 09/04/24 23:34:03.426
  I0904 23:34:03.561992 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8887" for this suite. @ 09/04/24 23:34:03.567
  STEP: Destroying namespace "webhook-markers-3555" for this suite. @ 09/04/24 23:34:03.589
• [4.783 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/04/24 23:34:03.613
  I0904 23:34:03.613527 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename init-container @ 09/04/24 23:34:03.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:34:03.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:34:03.664
  STEP: creating the pod @ 09/04/24 23:34:03.667
  I0904 23:34:03.667346 18 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0904 23:34:08.538418 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2837" for this suite. @ 09/04/24 23:34:08.549
• [4.953 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/04/24 23:34:08.567
  I0904 23:34:08.567231 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 23:34:08.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:34:08.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:34:08.611
  I0904 23:34:08.618880 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: creating the pod @ 09/04/24 23:34:08.62
  STEP: submitting the pod to kubernetes @ 09/04/24 23:34:08.62
  I0904 23:34:10.894242 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5417" for this suite. @ 09/04/24 23:34:10.899
• [2.347 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 09/04/24 23:34:10.915
  I0904 23:34:10.915569 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 23:34:10.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:34:10.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:34:10.964
  STEP: Creating service test in namespace statefulset-5730 @ 09/04/24 23:34:10.968
  STEP: Creating stateful set ss in namespace statefulset-5730 @ 09/04/24 23:34:10.984
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5730 @ 09/04/24 23:34:11.01
  I0904 23:34:11.016677 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I0904 23:34:21.015271 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/04/24 23:34:21.015
  I0904 23:34:21.019264 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-5730 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 23:34:21.263475 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 23:34:21.263532 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 23:34:21.263553 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 23:34:21.268280 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0904 23:34:31.268603 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 23:34:31.268660 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0904 23:34:31.298204 18 resource.go:168] POD   NODE                                       PHASE    GRACE  CONDITIONS
  I0904 23:34:31.298302 18 resource.go:175] ss-0  ip-172-31-8-12.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:13 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:11 +0000 UTC  }]
  I0904 23:34:31.298318 18 resource.go:178] 
  I0904 23:34:31.298433 18 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I0904 23:34:32.304521 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.993077829s
  I0904 23:34:33.309852 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.986428587s
  I0904 23:34:34.317282 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.981127128s
  I0904 23:34:35.323083 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.974284598s
  I0904 23:34:36.345767 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.968464539s
  I0904 23:34:37.350676 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.94571954s
  I0904 23:34:38.357175 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.940002089s
  I0904 23:34:39.363044 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.933796696s
  I0904 23:34:40.369406 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 927.999227ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5730 @ 09/04/24 23:34:41.369
  I0904 23:34:41.374229 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-5730 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 23:34:41.593661 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 23:34:41.593723 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 23:34:41.593745 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 23:34:41.593811 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-5730 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 23:34:41.798682 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0904 23:34:41.798757 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 23:34:41.798779 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 23:34:41.798839 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-5730 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 23:34:42.033743 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0904 23:34:42.033798 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 23:34:42.033817 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 23:34:42.038171 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0904 23:34:52.041524 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 23:34:52.041600 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 23:34:52.041625 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/04/24 23:34:52.041
  I0904 23:34:52.047301 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-5730 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 23:34:52.260993 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 23:34:52.261057 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 23:34:52.261076 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 23:34:52.261506 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-5730 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 23:34:52.465494 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 23:34:52.465548 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 23:34:52.465572 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 23:34:52.465651 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-5730 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 23:34:52.706413 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 23:34:52.706516 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 23:34:52.706586 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 23:34:52.706613 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0904 23:34:52.730401 18 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0904 23:35:02.721781 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 23:35:02.721852 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0904 23:35:02.721873 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0904 23:35:02.759604 18 resource.go:168] POD   NODE                                        PHASE    GRACE  CONDITIONS
  I0904 23:35:02.759713 18 resource.go:175] ss-0  ip-172-31-8-12.us-east-2.compute.internal   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:13 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:11 +0000 UTC  }]
  I0904 23:35:02.759777 18 resource.go:175] ss-1  ip-172-31-3-55.us-east-2.compute.internal   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:31 +0000 UTC  }]
  I0904 23:35:02.759817 18 resource.go:175] ss-2  ip-172-31-1-123.us-east-2.compute.internal  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:31 +0000 UTC  }]
  I0904 23:35:02.759831 18 resource.go:178] 
  I0904 23:35:02.759846 18 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I0904 23:35:03.779491 18 resource.go:168] POD   NODE                                       PHASE      GRACE  CONDITIONS
  I0904 23:35:03.779587 18 resource.go:175] ss-0  ip-172-31-8-12.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:35:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:11 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:52 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:52 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:11 +0000 UTC  }]
  I0904 23:35:03.779630 18 resource.go:175] ss-1  ip-172-31-3-55.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:35:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:31 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:52 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:52 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 23:34:31 +0000 UTC  }]
  I0904 23:35:03.779650 18 resource.go:178] 
  I0904 23:35:03.779664 18 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 2
  I0904 23:35:04.785058 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.961279538s
  I0904 23:35:05.790166 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.955774839s
  I0904 23:35:06.795631 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.950664298s
  I0904 23:35:07.801061 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.944918641s
  I0904 23:35:08.806591 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.93956209s
  I0904 23:35:09.816824 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.934235168s
  I0904 23:35:10.822825 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.923180003s
  I0904 23:35:11.831516 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 917.987061ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5730 @ 09/04/24 23:35:12.831
  I0904 23:35:12.838358 18 rest.go:150] Scaling statefulset ss to 0
  I0904 23:35:12.845607 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 23:35:12.849325 18 statefulset.go:138] Deleting all statefulset in ns statefulset-5730
  I0904 23:35:12.853570 18 rest.go:150] Scaling statefulset ss to 0
  I0904 23:35:12.860785 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 23:35:12.864807 18 rest.go:88] Deleting statefulset ss
  I0904 23:35:12.901630 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5730" for this suite. @ 09/04/24 23:35:12.91
• [62.007 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/04/24 23:35:12.923
  I0904 23:35:12.923987 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename deployment @ 09/04/24 23:35:12.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:35:12.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:35:12.968
  I0904 23:35:12.997720 18 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0904 23:35:18.011203 18 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 23:35:18.011
  I0904 23:35:18.011964 18 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/04/24 23:35:18.049
  I0904 23:35:18.087932 18 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9019",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a981a9e6-d973-4980-a387-1791a80d983f",
      ResourceVersion: (string) (len=5) "34526",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861089718,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 23:35:18.111064 18 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9019",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "042ef5f1-9e5c-4579-9e68-f15ce28b919f",
      ResourceVersion: (string) (len=5) "34531",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861089718,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "a981a9e6-d973-4980-a387-1791a80d983f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 39 38 31 61 39  65 36 2d 64 39 37 33 2d  |\"a981a9e6-d973-|
              00000120  34 39 38 30 2d 61 33 38  37 2d 31 37 39 31 61 38  |4980-a387-1791a8|
              00000130  30 64 39 38 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0d983f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 23:35:18.112307 18 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0904 23:35:18.114104 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9019",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc5eaac3-8877-4e13-b130-3aa00b703aed",
      ResourceVersion: (string) (len=5) "34529",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861089712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "a981a9e6-d973-4980-a387-1791a80d983f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 61 39 38 31 61 39 65  |"uid\":\"a981a9e|
              00000040  36 2d 64 39 37 33 2d 34  39 38 30 2d 61 33 38 37  |6-d973-4980-a387|
              00000050  2d 31 37 39 31 61 38 30  64 39 38 33 66 5c 22 7d  |-1791a80d983f\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 23:35:18.136898 18 deployment.go:67] Pod "test-cleanup-controller-4nf5k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-4nf5k",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-9019",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f4554d4-f3c8-4757-8525-d6e1a5df257b",
      ResourceVersion: (string) (len=5) "34514",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861089712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.250/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.250/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5962cfa6fc4a870ba7b4f45faebab48de698e368673f3913609fa57d02d38873"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "bc5eaac3-8877-4e13-b130-3aa00b703aed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  62 63 35 65 61 61 63 33  |uid\":\"bc5eaac3|
              00000080  2d 38 38 37 37 2d 34 65  31 33 2d 62 31 33 30 2d  |-8877-4e13-b130-|
              00000090  33 61 61 30 30 62 37 30  33 61 65 64 5c 22 7d 22  |3aa00b703aed\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 32 35  30 5c 22 7d 22 3a 7b 22  |.42.3.250\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-76jkt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-76jkt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) (len=11) "10.42.3.250",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.250"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861089713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861089714,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d5403cc0095c8610d6bb76a81df26f14001a5ed6169211d0427d79c9562eb061",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-76jkt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:35:18.143325 18 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-qq68w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-qq68w",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-9019",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81796698-e983-4919-b7d1-4ef82ef36842",
      ResourceVersion: (string) (len=5) "34532",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861089718,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "042ef5f1-9e5c-4579-9e68-f15ce28b919f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861089718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 34  32 65 66 35 66 31 2d 39  |d\":\"042ef5f1-9|
              00000090  65 35 63 2d 34 35 37 39  2d 39 65 36 38 2d 66 31  |e5c-4579-9e68-f1|
              000000a0  35 63 65 32 38 62 39 31  39 66 5c 22 7d 22 3a 7b  |5ce28b919f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-js8gw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-js8gw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:35:18.144722 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9019" for this suite. @ 09/04/24 23:35:18.177
• [5.290 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/04/24 23:35:18.217
  I0904 23:35:18.217483 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename gc @ 09/04/24 23:35:18.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:35:18.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:35:18.28
  STEP: create the deployment @ 09/04/24 23:35:18.288
  W0904 23:35:18.300955      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/04/24 23:35:18.301
  STEP: delete the deployment @ 09/04/24 23:35:18.32
  STEP: wait for all rs to be garbage collected @ 09/04/24 23:35:18.353
  STEP: expected 0 pods, got 2 pods @ 09/04/24 23:35:18.446
  STEP: Gathering metrics @ 09/04/24 23:35:18.912
  I0904 23:35:19.086080 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 23:35:19.087023 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8107" for this suite. @ 09/04/24 23:35:19.093
• [0.898 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/04/24 23:35:19.115
  I0904 23:35:19.115916 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename security-context-test @ 09/04/24 23:35:19.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:35:19.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:35:19.159
  I0904 23:35:23.203757 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8131" for this suite. @ 09/04/24 23:35:23.209
• [4.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 09/04/24 23:35:23.22
  I0904 23:35:23.220175 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/24 23:35:23.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:35:23.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:35:23.275
  STEP: getting /apis @ 09/04/24 23:35:23.29
  STEP: getting /apis/admissionregistration.k8s.io @ 09/04/24 23:35:23.306
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/04/24 23:35:23.312
  STEP: creating @ 09/04/24 23:35:23.315
  STEP: getting @ 09/04/24 23:35:23.358
  STEP: listing @ 09/04/24 23:35:23.363
  STEP: watching @ 09/04/24 23:35:23.37
  I0904 23:35:23.371057 18 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 09/04/24 23:35:23.373
  STEP: updating @ 09/04/24 23:35:23.384
  I0904 23:35:23.399484 18 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 09/04/24 23:35:23.399
  STEP: deleting a collection @ 09/04/24 23:35:23.429
  I0904 23:35:23.532687 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3993" for this suite. @ 09/04/24 23:35:23.556
• [0.357 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 09/04/24 23:35:23.578
  I0904 23:35:23.578900 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 23:35:23.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:35:23.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:35:23.62
  STEP: starting the proxy server @ 09/04/24 23:35:23.636
  I0904 23:35:23.637178 18 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-537 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/04/24 23:35:23.814
  I0904 23:35:23.833254 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0904 23:35:23.838647 18 kubectl.go:2229] kubectl proxy stderr: W0904 23:35:23.814250     529 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0904 23:35:23.838965 18 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:40529

  STEP: Destroying namespace "kubectl-537" for this suite. @ 09/04/24 23:35:23.84
• [0.278 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/04/24 23:35:23.856
  I0904 23:35:23.856404 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 23:35:23.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:35:23.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:35:23.924
  STEP: creating a replication controller @ 09/04/24 23:35:23.941
  I0904 23:35:23.941575 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 create -f -'
  I0904 23:35:24.214770 18 builder.go:146] stderr: ""
  I0904 23:35:24.214826 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/24 23:35:24.214
  I0904 23:35:24.214930 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 23:35:24.404221 18 builder.go:146] stderr: ""
  I0904 23:35:24.404288 18 builder.go:147] stdout: "update-demo-nautilus-5hshx update-demo-nautilus-8cq7c "
  I0904 23:35:24.404356 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 get pods update-demo-nautilus-5hshx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 23:35:24.494184 18 builder.go:146] stderr: ""
  I0904 23:35:24.494438 18 builder.go:147] stdout: ""
  I0904 23:35:24.494755 18 kubectl.go:2502] update-demo-nautilus-5hshx is created but not running
  I0904 23:35:29.495505 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 23:35:29.611160 18 builder.go:146] stderr: ""
  I0904 23:35:29.611219 18 builder.go:147] stdout: "update-demo-nautilus-5hshx update-demo-nautilus-8cq7c "
  I0904 23:35:29.611385 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 get pods update-demo-nautilus-5hshx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 23:35:29.711381 18 builder.go:146] stderr: ""
  I0904 23:35:29.711435 18 builder.go:147] stdout: "true"
  I0904 23:35:29.711768 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 get pods update-demo-nautilus-5hshx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 23:35:29.801914 18 builder.go:146] stderr: ""
  I0904 23:35:29.801976 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 23:35:29.802007 18 kubectl.go:2393] validating pod update-demo-nautilus-5hshx
  I0904 23:35:29.829304 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 23:35:29.829387 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 23:35:29.829407 18 kubectl.go:2520] update-demo-nautilus-5hshx is verified up and running
  I0904 23:35:29.829688 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 get pods update-demo-nautilus-8cq7c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 23:35:29.917058 18 builder.go:146] stderr: ""
  I0904 23:35:29.917118 18 builder.go:147] stdout: "true"
  I0904 23:35:29.917181 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 get pods update-demo-nautilus-8cq7c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 23:35:30.004930 18 builder.go:146] stderr: ""
  I0904 23:35:30.004989 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 23:35:30.005009 18 kubectl.go:2393] validating pod update-demo-nautilus-8cq7c
  I0904 23:35:30.014672 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 23:35:30.014762 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 23:35:30.014782 18 kubectl.go:2520] update-demo-nautilus-8cq7c is verified up and running
  STEP: using delete to clean up resources @ 09/04/24 23:35:30.014
  I0904 23:35:30.014945 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 delete --grace-period=0 --force -f -'
  I0904 23:35:30.106295 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 23:35:30.106667 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0904 23:35:30.106773 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 get rc,svc -l name=update-demo --no-headers'
  I0904 23:35:30.261946 18 builder.go:146] stderr: "No resources found in kubectl-1853 namespace.\n"
  I0904 23:35:30.262029 18 builder.go:147] stdout: ""
  I0904 23:35:30.262093 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-1853 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0904 23:35:30.366000 18 builder.go:146] stderr: ""
  I0904 23:35:30.366055 18 builder.go:147] stdout: ""
  I0904 23:35:30.366517 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1853" for this suite. @ 09/04/24 23:35:30.376
• [6.531 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/04/24 23:35:30.387
  I0904 23:35:30.387924 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename ingress @ 09/04/24 23:35:30.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:35:30.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:35:30.428
  STEP: getting /apis @ 09/04/24 23:35:30.431
  STEP: getting /apis/networking.k8s.io @ 09/04/24 23:35:30.436
  STEP: getting /apis/networking.k8s.iov1 @ 09/04/24 23:35:30.438
  STEP: creating @ 09/04/24 23:35:30.439
  STEP: getting @ 09/04/24 23:35:30.886
  STEP: listing @ 09/04/24 23:35:30.908
  STEP: watching @ 09/04/24 23:35:30.924
  I0904 23:35:30.924427 18 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/04/24 23:35:30.928
  STEP: cluster-wide watching @ 09/04/24 23:35:30.932
  I0904 23:35:30.932228 18 ingress.go:198] starting watch
  STEP: patching @ 09/04/24 23:35:30.934
  STEP: updating @ 09/04/24 23:35:30.982
  I0904 23:35:31.072674 18 ingress.go:221] waiting for watch events with expected annotations
  I0904 23:35:31.072993 18 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/04/24 23:35:31.073
  STEP: updating /status @ 09/04/24 23:35:31.099
  STEP: get /status @ 09/04/24 23:35:31.122
  STEP: deleting @ 09/04/24 23:35:31.138
  STEP: deleting a collection @ 09/04/24 23:35:31.179
  I0904 23:35:31.280275 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8808" for this suite. @ 09/04/24 23:35:31.284
• [0.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/04/24 23:35:31.3
  I0904 23:35:31.300424 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:35:31.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:35:31.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:35:31.348
  STEP: Setting up server cert @ 09/04/24 23:35:31.443
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:35:31.945
  STEP: Deploying the webhook pod @ 09/04/24 23:35:31.956
  STEP: Wait for the deployment to be ready @ 09/04/24 23:35:31.985
  I0904 23:35:32.012585 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 23:35:34.024
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:35:34.061
  I0904 23:35:35.062017 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/04/24 23:35:35.068
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/04/24 23:35:35.099
  I0904 23:35:35.100018 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:35:35.252614 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4841" for this suite. @ 09/04/24 23:35:35.263
  STEP: Destroying namespace "webhook-markers-998" for this suite. @ 09/04/24 23:35:35.293
• [4.006 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 09/04/24 23:35:35.308
  I0904 23:35:35.308734 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 23:35:35.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:35:35.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:35:35.345
  STEP: Creating service test in namespace statefulset-2313 @ 09/04/24 23:35:35.348
  STEP: Creating a new StatefulSet @ 09/04/24 23:35:35.363
  I0904 23:35:35.409284 18 wait.go:40] Found 0 stateful pods, waiting for 3
  I0904 23:35:45.400426 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 23:35:45.400493 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 23:35:45.400513 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0904 23:35:45.413363 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-2313 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 23:35:45.645918 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 23:35:45.645973 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 23:35:45.645994 18 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/04/24 23:35:55.658
  I0904 23:35:55.678917 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/04/24 23:35:55.679
  STEP: Updating Pods in reverse ordinal order @ 09/04/24 23:36:05.689
  I0904 23:36:05.697711 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-2313 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 23:36:05.906443 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 23:36:05.906559 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 23:36:05.906967 18 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 23:36:15.920528 18 wait.go:158] Waiting for StatefulSet statefulset-2313/ss2 to complete update
  STEP: Rolling back to a previous revision @ 09/04/24 23:36:25.923
  I0904 23:36:25.923498 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-2313 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 23:36:26.240366 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 23:36:26.240435 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 23:36:26.240745 18 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 23:36:36.283694 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/04/24 23:36:46.292
  I0904 23:36:46.296179 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=statefulset-2313 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 23:36:46.502397 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 23:36:46.502573 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 23:36:46.502599 18 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 23:36:56.520028 18 wait.go:158] Waiting for StatefulSet statefulset-2313/ss2 to complete update
  I0904 23:37:06.522104 18 statefulset.go:138] Deleting all statefulset in ns statefulset-2313
  I0904 23:37:06.524555 18 rest.go:150] Scaling statefulset ss2 to 0
  I0904 23:37:16.541884 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 23:37:16.545318 18 rest.go:88] Deleting statefulset ss2
  I0904 23:37:16.575985 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2313" for this suite. @ 09/04/24 23:37:16.586
• [101.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 09/04/24 23:37:16.628
  I0904 23:37:16.628338 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename dns @ 09/04/24 23:37:16.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:37:16.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:37:16.67
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6341.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6341.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/04/24 23:37:16.674
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6341.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6341.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/04/24 23:37:16.674
  STEP: creating a pod to probe /etc/hosts @ 09/04/24 23:37:16.674
  STEP: submitting the pod to kubernetes @ 09/04/24 23:37:16.674
  STEP: retrieving the pod @ 09/04/24 23:37:18.713
  STEP: looking for the results for each expected name from probers @ 09/04/24 23:37:18.716
  I0904 23:37:18.748578 18 dns_common.go:527] DNS probes using dns-6341/dns-test-4855f99a-e74a-4f0a-82dc-c57c5abe7631 succeeded

  STEP: deleting the pod @ 09/04/24 23:37:18.748
  I0904 23:37:18.782698 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6341" for this suite. @ 09/04/24 23:37:18.798
• [2.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/04/24 23:37:18.815
  I0904 23:37:18.815602 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 23:37:18.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:37:18.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:37:18.853
  STEP: creating service nodeport-test with type=NodePort in namespace services-1530 @ 09/04/24 23:37:18.857
  STEP: creating replication controller nodeport-test in namespace services-1530 @ 09/04/24 23:37:18.92
  I0904 23:37:18.963897      18 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1530, replica count: 2
  I0904 23:37:22.014301      18 runners.go:193] nodeport-test Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 23:37:25.014733      18 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 23:37:25.014793 18 resource.go:361] Creating new exec pod
  I0904 23:37:28.083885 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-1530 exec execpodn478g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0904 23:37:28.327801 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0904 23:37:28.327889 18 builder.go:147] stdout: "nodeport-test-zg47z"
  I0904 23:37:28.327987 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-1530 exec execpodn478g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.186.182 80'
  I0904 23:37:28.548137 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.186.182 80\nConnection to 10.43.186.182 80 port [tcp/http] succeeded!\n"
  I0904 23:37:28.548198 18 builder.go:147] stdout: "nodeport-test-zg47z"
  I0904 23:37:28.548536 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-1530 exec execpodn478g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.12 31601'
  I0904 23:37:28.748387 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.12 31601\nConnection to 172.31.8.12 31601 port [tcp/*] succeeded!\n"
  I0904 23:37:28.748449 18 builder.go:147] stdout: "nodeport-test-hdh6f"
  I0904 23:37:28.748565 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-1530 exec execpodn478g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.1.123 31601'
  I0904 23:37:29.016874 18 builder.go:146] stderr: "+ nc -v -t -w+ echo hostName\n 2 172.31.1.123 31601\nConnection to 172.31.1.123 31601 port [tcp/*] succeeded!\n"
  I0904 23:37:29.017053 18 builder.go:147] stdout: "nodeport-test-zg47z"
  I0904 23:37:29.017720 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1530" for this suite. @ 09/04/24 23:37:29.038
• [10.235 seconds]
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/04/24 23:37:29.051
  I0904 23:37:29.051132 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 23:37:29.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:37:29.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:37:29.095
  STEP: Creating Pod @ 09/04/24 23:37:29.099
  STEP: Reading file content from the nginx-container @ 09/04/24 23:37:31.129
  I0904 23:37:31.129737 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4685 PodName:pod-sharedvolume-6090cdb4-221e-4d31-bce4-e9a9b7724113 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 23:37:31.129764 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:37:31.130411 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 23:37:31.130493 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-4685/pods/pod-sharedvolume-6090cdb4-221e-4d31-bce4-e9a9b7724113/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0904 23:37:31.232790 18 exec_util.go:111] Exec stderr: ""
  I0904 23:37:31.233681 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4685" for this suite. @ 09/04/24 23:37:31.24
• [2.210 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/04/24 23:37:31.261
  I0904 23:37:31.261627 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 23:37:31.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:37:31.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:37:31.326
  STEP: Counting existing ResourceQuota @ 09/04/24 23:37:48.34
  STEP: Creating a ResourceQuota @ 09/04/24 23:37:53.344
  STEP: Ensuring resource quota status is calculated @ 09/04/24 23:37:53.354
  STEP: Creating a ConfigMap @ 09/04/24 23:37:55.359
  STEP: Ensuring resource quota status captures configMap creation @ 09/04/24 23:37:55.383
  STEP: Deleting a ConfigMap @ 09/04/24 23:37:57.39
  STEP: Ensuring resource quota status released usage @ 09/04/24 23:37:57.401
  I0904 23:37:59.405772 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5875" for this suite. @ 09/04/24 23:37:59.411
• [28.161 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 09/04/24 23:37:59.424
  I0904 23:37:59.424213 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 23:37:59.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:37:59.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:37:59.475
  STEP: creating an Endpoint @ 09/04/24 23:37:59.482
  STEP: waiting for available Endpoint @ 09/04/24 23:37:59.491
  STEP: listing all Endpoints @ 09/04/24 23:37:59.493
  STEP: updating the Endpoint @ 09/04/24 23:37:59.497
  STEP: fetching the Endpoint @ 09/04/24 23:37:59.511
  STEP: patching the Endpoint @ 09/04/24 23:37:59.524
  STEP: fetching the Endpoint @ 09/04/24 23:37:59.562
  STEP: deleting the Endpoint by Collection @ 09/04/24 23:37:59.568
  STEP: waiting for Endpoint deletion @ 09/04/24 23:37:59.584
  STEP: fetching the Endpoint @ 09/04/24 23:37:59.588
  I0904 23:37:59.592621 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9292" for this suite. @ 09/04/24 23:37:59.6
• [0.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/04/24 23:37:59.617
  I0904 23:37:59.617044 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 23:37:59.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:37:59.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:37:59.656
  STEP: creating all guestbook components @ 09/04/24 23:37:59.666
  I0904 23:37:59.666648 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0904 23:37:59.668129 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 create -f -'
  I0904 23:37:59.973485 18 builder.go:146] stderr: ""
  I0904 23:37:59.973546 18 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0904 23:37:59.973600 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0904 23:37:59.973720 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 create -f -'
  I0904 23:38:00.220812 18 builder.go:146] stderr: ""
  I0904 23:38:00.220868 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0904 23:38:00.220924 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0904 23:38:00.221050 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 create -f -'
  I0904 23:38:00.510395 18 builder.go:146] stderr: ""
  I0904 23:38:00.510449 18 builder.go:147] stdout: "service/frontend created\n"
  I0904 23:38:00.510560 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0904 23:38:00.510851 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 create -f -'
  I0904 23:38:00.713508 18 builder.go:146] stderr: ""
  I0904 23:38:00.713577 18 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0904 23:38:00.713654 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0904 23:38:00.713831 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 create -f -'
  I0904 23:38:00.942702 18 builder.go:146] stderr: ""
  I0904 23:38:00.942754 18 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0904 23:38:00.942828 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0904 23:38:00.943000 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 create -f -'
  I0904 23:38:01.153766 18 builder.go:146] stderr: ""
  I0904 23:38:01.153816 18 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/04/24 23:38:01.153
  I0904 23:38:01.153868 18 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I0904 23:38:06.206720 18 kubectl.go:2276] Waiting for frontend to serve content.
  I0904 23:38:06.220681 18 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0904 23:38:06.243617 18 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/04/24 23:38:06.255
  I0904 23:38:06.256087 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 delete --grace-period=0 --force -f -'
  I0904 23:38:06.402679 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 23:38:06.402728 18 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 23:38:06.402
  I0904 23:38:06.402961 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 delete --grace-period=0 --force -f -'
  I0904 23:38:06.525331 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 23:38:06.525395 18 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 23:38:06.525
  I0904 23:38:06.525584 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 delete --grace-period=0 --force -f -'
  I0904 23:38:06.684708 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 23:38:06.684775 18 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 23:38:06.684
  I0904 23:38:06.685036 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 delete --grace-period=0 --force -f -'
  I0904 23:38:06.798200 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 23:38:06.798260 18 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 23:38:06.798
  I0904 23:38:06.798481 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 delete --grace-period=0 --force -f -'
  I0904 23:38:06.962983 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 23:38:06.963037 18 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 23:38:06.963
  I0904 23:38:06.963184 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3638 delete --grace-period=0 --force -f -'
  I0904 23:38:07.238719 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 23:38:07.238770 18 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0904 23:38:07.238891 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3638" for this suite. @ 09/04/24 23:38:07.246
• [7.674 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/04/24 23:38:07.291
  I0904 23:38:07.291247 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename subpath @ 09/04/24 23:38:07.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:38:07.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:38:07.366
  STEP: Setting up data @ 09/04/24 23:38:07.37
  STEP: Creating pod pod-subpath-test-secret-kj5x @ 09/04/24 23:38:07.397
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/24 23:38:07.397
  STEP: Saw pod success @ 09/04/24 23:38:31.51
  I0904 23:38:31.514104 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-subpath-test-secret-kj5x container test-container-subpath-secret-kj5x: <nil>
  STEP: delete the pod @ 09/04/24 23:38:31.53
  STEP: Deleting pod pod-subpath-test-secret-kj5x @ 09/04/24 23:38:31.568
  I0904 23:38:31.569006 18 delete.go:62] Deleting pod "pod-subpath-test-secret-kj5x" in namespace "subpath-244"
  I0904 23:38:31.571808 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-244" for this suite. @ 09/04/24 23:38:31.576
• [24.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/04/24 23:38:31.592
  I0904 23:38:31.592563 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/24 23:38:31.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:38:31.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:38:31.65
  I0904 23:38:31.661435 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-104" for this suite. @ 09/04/24 23:38:31.677
• [0.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/04/24 23:38:31.689
  I0904 23:38:31.689982 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:38:31.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:38:31.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:38:31.759
  STEP: Setting up server cert @ 09/04/24 23:38:31.839
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:38:32.513
  STEP: Deploying the webhook pod @ 09/04/24 23:38:32.525
  STEP: Wait for the deployment to be ready @ 09/04/24 23:38:32.566
  I0904 23:38:32.583888 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 23:38:34.601128 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 23, 38, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 38, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 23, 38, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 38, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 23:38:36.609
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:38:36.639
  I0904 23:38:37.639859 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/04/24 23:38:37.648
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 23:38:37.699
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/04/24 23:38:37.717
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 23:38:37.738
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/04/24 23:38:37.77
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 23:38:37.789
  I0904 23:38:37.905448 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-323" for this suite. @ 09/04/24 23:38:37.911
  STEP: Destroying namespace "webhook-markers-6366" for this suite. @ 09/04/24 23:38:37.946
• [6.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/04/24 23:38:37.958
  I0904 23:38:37.958740 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:38:37.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:38:37.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:38:38.002
  STEP: Setting up server cert @ 09/04/24 23:38:38.099
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:38:39.152
  STEP: Deploying the webhook pod @ 09/04/24 23:38:39.166
  STEP: Wait for the deployment to be ready @ 09/04/24 23:38:39.196
  I0904 23:38:39.214154 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 23:38:41.223
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:38:41.247
  I0904 23:38:42.247708 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/04/24 23:38:42.253
  I0904 23:38:42.355471 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-900" for this suite. @ 09/04/24 23:38:42.363
  STEP: Destroying namespace "webhook-markers-5305" for this suite. @ 09/04/24 23:38:42.399
• [4.460 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 09/04/24 23:38:42.423
  I0904 23:38:42.423737 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 23:38:42.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:38:42.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:38:42.494
  STEP: create deployment with httpd image @ 09/04/24 23:38:42.498
  I0904 23:38:42.498866 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3595 create -f -'
  I0904 23:38:42.657579 18 builder.go:146] stderr: ""
  I0904 23:38:42.657624 18 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/04/24 23:38:42.657
  I0904 23:38:42.657710 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3595 diff -f -'
  I0904 23:38:47.478160 18 builder.go:135] rc: 1
  I0904 23:38:47.478289 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-3595 delete -f -'
  I0904 23:38:47.601069 18 builder.go:146] stderr: ""
  I0904 23:38:47.601157 18 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0904 23:38:47.601286 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3595" for this suite. @ 09/04/24 23:38:47.622
• [5.222 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/04/24 23:38:47.645
  I0904 23:38:47.645796 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/24 23:38:47.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:38:47.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:38:47.721
  I0904 23:38:47.725922 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:38:54.168943 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9252" for this suite. @ 09/04/24 23:38:54.174
• [6.542 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/04/24 23:38:54.187
  I0904 23:38:54.187871 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename chunking @ 09/04/24 23:38:54.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:38:54.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:38:54.255
  STEP: creating a large number of resources @ 09/04/24 23:38:54.258
  STEP: retrieving the first page @ 09/04/24 23:39:11.899
  I0904 23:39:11.945528 18 chunking.go:163] Retrieved 40/40 results with rv 37240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/04/24 23:39:11.945
  I0904 23:39:31.953176 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:39:51.952076 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:40:11.955496 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:40:31.951677 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:40:51.952026 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:41:11.952532 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:41:31.952501 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:41:51.957736 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:42:11.952316 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:42:31.951767 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:42:51.951463 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:43:11.960623 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:43:31.954904 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:43:51.952370 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:44:11.952310 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:44:31.952518 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:44:51.956307 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:45:11.953721 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:45:31.951776 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:45:51.951888 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:46:11.952996 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:46:31.956674 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:46:51.953173 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:47:11.959323 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:47:31.951974 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNDAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0904 23:47:51.951221 18 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0904 23:47:51.951313 18 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/04/24 23:47:51.951
  STEP: retrieving all remaining pages @ 09/04/24 23:47:51.955
  I0904 23:47:51.960623 18 chunking.go:221] Retrieved 40/40 results with rv 39235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0904 23:47:51.965408 18 chunking.go:221] Retrieved 40/40 results with rv 39235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0904 23:47:51.970278 18 chunking.go:221] Retrieved 40/40 results with rv 39235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0904 23:47:51.975098 18 chunking.go:221] Retrieved 40/40 results with rv 39235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0904 23:47:51.980048 18 chunking.go:221] Retrieved 40/40 results with rv 39235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0904 23:47:51.995687 18 chunking.go:221] Retrieved 40/40 results with rv 39235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0904 23:47:52.005219 18 chunking.go:221] Retrieved 40/40 results with rv 39235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0904 23:47:52.010721 18 chunking.go:221] Retrieved 40/40 results with rv 39235 and continue 
  I0904 23:47:52.011226 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3966" for this suite. @ 09/04/24 23:47:52.018
• [537.842 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/04/24 23:47:52.032
  I0904 23:47:52.032887 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename containers @ 09/04/24 23:47:52.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:47:52.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:47:52.076
  STEP: Creating a pod to test override arguments @ 09/04/24 23:47:52.08
  STEP: Saw pod success @ 09/04/24 23:47:56.113
  I0904 23:47:56.117061 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod client-containers-a351652d-aa45-42de-956a-b15e343e2c64 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 23:47:56.133
  I0904 23:47:56.160142 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4452" for this suite. @ 09/04/24 23:47:56.165
• [4.148 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 09/04/24 23:47:56.18
  I0904 23:47:56.180842 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 23:47:56.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:47:56.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:47:56.215
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/24 23:47:56.219
  I0904 23:47:56.219195 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-2488 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0904 23:47:56.343653 18 builder.go:146] stderr: ""
  I0904 23:47:56.343706 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/04/24 23:47:56.343
  I0904 23:47:56.343836 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-2488 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0904 23:47:56.446919 18 builder.go:146] stderr: ""
  I0904 23:47:56.446983 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/24 23:47:56.447
  I0904 23:47:56.451042 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-2488 delete pods e2e-test-httpd-pod'
  I0904 23:47:58.356757 18 builder.go:146] stderr: ""
  I0904 23:47:58.356809 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0904 23:47:58.356936 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2488" for this suite. @ 09/04/24 23:47:58.367
• [2.212 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/04/24 23:47:58.393
  I0904 23:47:58.393625 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename endpointslice @ 09/04/24 23:47:58.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:47:58.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:47:58.445
  I0904 23:47:58.464573 18 endpointslice.go:1045] Endpoints addresses: [18.116.42.252 3.143.0.252 3.17.155.49] , ports: [6443]
  I0904 23:47:58.464637 18 endpointslice.go:1075] EndpointSlices addresses: [18.116.42.252 3.143.0.252 3.17.155.49] , ports: [6443]
  I0904 23:47:58.464802 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5498" for this suite. @ 09/04/24 23:47:58.474
• [0.103 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 09/04/24 23:47:58.496
  I0904 23:47:58.496965 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 23:47:58.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:47:58.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:47:58.55
  STEP: Creating service test in namespace statefulset-1327 @ 09/04/24 23:47:58.556
  STEP: Creating statefulset ss in namespace statefulset-1327 @ 09/04/24 23:47:58.61
  I0904 23:47:58.642667 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I0904 23:48:08.630824 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/04/24 23:48:08.637
  STEP: Getting /status @ 09/04/24 23:48:08.659
  I0904 23:48:08.664703 18 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/04/24 23:48:08.665
  I0904 23:48:08.678478 18 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/04/24 23:48:08.678
  I0904 23:48:08.680689 18 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0904 23:48:08.680753 18 statefulset.go:1111] Found Statefulset ss in namespace statefulset-1327 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 23:48:08.680933 18 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/04/24 23:48:08.68
  I0904 23:48:08.680998 18 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0904 23:48:08.705729 18 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/04/24 23:48:08.705
  I0904 23:48:08.708162 18 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0904 23:48:08.708229 18 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-1327 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 23:48:08.708473 18 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I0904 23:48:08.708570 18 statefulset.go:138] Deleting all statefulset in ns statefulset-1327
  I0904 23:48:08.711344 18 rest.go:150] Scaling statefulset ss to 0
  I0904 23:48:18.735311 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 23:48:18.740043 18 rest.go:88] Deleting statefulset ss
  I0904 23:48:18.769414 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1327" for this suite. @ 09/04/24 23:48:18.793
• [20.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/04/24 23:48:18.812
  I0904 23:48:18.812659 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 23:48:18.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:48:18.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:48:18.864
  I0904 23:48:18.868507 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/24 23:48:20.872
  I0904 23:48:20.872437 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-9409 --namespace=crd-publish-openapi-9409 create -f -'
  I0904 23:48:21.020435 18 builder.go:146] stderr: ""
  I0904 23:48:21.020500 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4917-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0904 23:48:21.020568 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-9409 --namespace=crd-publish-openapi-9409 delete e2e-test-crd-publish-openapi-4917-crds test-cr'
  I0904 23:48:21.124939 18 builder.go:146] stderr: ""
  I0904 23:48:21.125405 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4917-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0904 23:48:21.125478 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-9409 --namespace=crd-publish-openapi-9409 apply -f -'
  I0904 23:48:21.234456 18 builder.go:146] stderr: ""
  I0904 23:48:21.234519 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4917-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0904 23:48:21.234797 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-9409 --namespace=crd-publish-openapi-9409 delete e2e-test-crd-publish-openapi-4917-crds test-cr'
  I0904 23:48:21.351530 18 builder.go:146] stderr: ""
  I0904 23:48:21.351691 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4917-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/04/24 23:48:21.351
  I0904 23:48:21.351946 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-9409 explain e2e-test-crd-publish-openapi-4917-crds'
  I0904 23:48:21.500147 18 builder.go:146] stderr: ""
  I0904 23:48:21.500233 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4917-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0904 23:48:23.778252 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9409" for this suite. @ 09/04/24 23:48:23.8
• [5.001 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/04/24 23:48:23.813
  I0904 23:48:23.814040 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/24 23:48:23.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:48:23.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:48:23.874
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/24 23:48:23.911
  STEP: create the pod with lifecycle hook @ 09/04/24 23:48:27.952
  STEP: delete the pod with lifecycle hook @ 09/04/24 23:48:29.987
  STEP: check prestop hook @ 09/04/24 23:48:34.04
  I0904 23:48:34.056524 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-650" for this suite. @ 09/04/24 23:48:34.061
• [10.264 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/04/24 23:48:34.078
  I0904 23:48:34.078696 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename init-container @ 09/04/24 23:48:34.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:48:34.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:48:34.119
  STEP: creating the pod @ 09/04/24 23:48:34.124
  I0904 23:48:34.124666 18 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0904 23:49:18.572278 18 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-c0075279-34e4-414f-ada0-2f0806cf044b", GenerateName:"", Namespace:"init-container-5167", SelfLink:"", UID:"50a6a572-5c69-47ab-a0b2-b57a3a100702", ResourceVersion:"40193", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 23, 48, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"124656057"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"b0457daa87d14ed0ce5939097340a73647cd23e7e6a1e4ae1197558d2930490e", "cni.projectcalico.org/podIP":"10.42.3.21/32", "cni.projectcalico.org/podIPs":"10.42.3.21/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 48, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b3bd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 48, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b3c38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 23, 49, 18, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b3c68), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-b8vql", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0014a9860), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-b8vql", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-b8vql", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-b8vql", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0049e2af8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-8-12.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003953180), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0049e2e80)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0049e2ee0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0049e2ee8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0049e2eec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000f01a80), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 23, 48, 35, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 23, 48, 34, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 23, 48, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 23, 48, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 23, 48, 34, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.8.12", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.8.12"}}, PodIP:"10.42.3.21", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.3.21"}}, StartTime:time.Date(2024, time.September, 4, 23, 48, 34, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bfe9a0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bfea80)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://e4d79b2a07502066a451a48686b6e7be4d38d21f9c8ac0a13aaeeae2b7f0f697", Started:(*bool)(0xc0049e30da), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-b8vql", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000f01aa0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0014a9d60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0049e31dd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-b8vql", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000f01ad0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0014a9b60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0049e300f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-b8vql", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000f01a90)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0904 23:49:18.572457 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5167" for this suite. @ 09/04/24 23:49:18.584
• [44.525 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/04/24 23:49:18.604
  I0904 23:49:18.604814 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename deployment @ 09/04/24 23:49:18.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:49:18.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:49:18.644
  I0904 23:49:18.647479 18 deployment.go:1645] Creating simple deployment test-new-deployment
  I0904 23:49:18.675937 18 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 09/04/24 23:49:20.69
  STEP: updating a scale subresource @ 09/04/24 23:49:20.698
  STEP: verifying the deployment Spec.Replicas was modified @ 09/04/24 23:49:20.718
  STEP: Patch a scale subresource @ 09/04/24 23:49:20.729
  I0904 23:49:20.808473 18 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6928",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "53ce51f2-104e-4d86-8278-2417d6737531",
      ResourceVersion: (string) (len=5) "40229",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861090558,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 23:49:20.825074 18 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6928",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0f801ba-f225-47ce-8b84-8d897f040125",
      ResourceVersion: (string) (len=5) "40232",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861090558,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "53ce51f2-104e-4d86-8278-2417d6737531",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 63 65 35 31  66 32 2d 31 30 34 65 2d  |\"53ce51f2-104e-|
              00000120  34 64 38 36 2d 38 32 37  38 2d 32 34 31 37 64 36  |4d86-8278-2417d6|
              00000130  37 33 37 35 33 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |737531\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 23:49:20.863646 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-27x7d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-27x7d",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6928",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccba00ac-8833-471b-b5ec-3506c08c7523",
      ResourceVersion: (string) (len=5) "40223",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861090558,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b0c851a15d4f54c6efb997a3ddf83bdbb755b25cb3e2f24f44bab938a29be480",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.22/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0f801ba-f225-47ce-8b84-8d897f040125",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  66 38 30 31 62 61 2d 66  |d\":\"f0f801ba-f|
              00000090  32 32 35 2d 34 37 63 65  2d 38 62 38 34 2d 38 64  |225-47ce-8b84-8d|
              000000a0  38 39 37 66 30 34 30 31  32 35 5c 22 7d 22 3a 7b  |897f040125\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 32 32  5c 22 7d 22 3a 7b 22 2e  |.42.3.22\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hc52d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hc52d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) (len=10) "10.42.3.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861090558,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861090559,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a4dcfcc556d52d42b9a0550f2008c35436f21eb445e36a69573fa98cd6f488f3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hc52d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:49:20.870358 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-lkjfl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-lkjfl",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6928",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c1b9641-e1f0-456b-bcca-57974ac0aae0",
      ResourceVersion: (string) (len=5) "40233",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861090560,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0f801ba-f225-47ce-8b84-8d897f040125",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  66 38 30 31 62 61 2d 66  |d\":\"f0f801ba-f|
              00000090  32 32 35 2d 34 37 63 65  2d 38 62 38 34 2d 38 64  |225-47ce-8b84-8d|
              000000a0  38 39 37 66 30 34 30 31  32 35 5c 22 7d 22 3a 7b  |897f040125\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-52nnd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-52nnd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-1-123.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:49:20.872106 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-zrps6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-zrps6",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6928",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04793487-a7e8-4181-9dd6-1ed97ffbd6fc",
      ResourceVersion: (string) (len=5) "40240",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861090560,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "f0f801ba-f225-47ce-8b84-8d897f040125",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861090560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  66 38 30 31 62 61 2d 66  |d\":\"f0f801ba-f|
              00000090  32 32 35 2d 34 37 63 65  2d 38 62 38 34 2d 38 64  |225-47ce-8b84-8d|
              000000a0  38 39 37 66 30 34 30 31  32 35 5c 22 7d 22 3a 7b  |897f040125\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j5v2m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j5v2m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 23:49:20.873544 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6928" for this suite. @ 09/04/24 23:49:20.891
• [2.376 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/04/24 23:49:20.983
  I0904 23:49:20.983359 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 23:49:20.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:49:21.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:49:21.037
  STEP: creating service in namespace services-2740 @ 09/04/24 23:49:21.042
  STEP: creating service affinity-nodeport-transition in namespace services-2740 @ 09/04/24 23:49:21.043
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2740 @ 09/04/24 23:49:21.096
  I0904 23:49:21.123860      18 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-2740, replica count: 3
  I0904 23:49:24.176073      18 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 23:49:24.206217 18 resource.go:361] Creating new exec pod
  I0904 23:49:27.271617 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2740 exec execpod-affinityww44w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0904 23:49:27.458337 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0904 23:49:27.458411 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:49:27.458506 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2740 exec execpod-affinityww44w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.62.140 80'
  I0904 23:49:27.705452 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.62.140 80\nConnection to 10.43.62.140 80 port [tcp/http] succeeded!\n"
  I0904 23:49:27.705517 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:49:27.705621 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2740 exec execpod-affinityww44w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.12 31687'
  I0904 23:49:27.914077 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.12 31687\nConnection to 172.31.8.12 31687 port [tcp/*] succeeded!\n"
  I0904 23:49:27.914145 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:49:27.914238 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2740 exec execpod-affinityww44w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.0.215 31687'
  I0904 23:49:28.170740 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.0.215 31687\nConnection to 172.31.0.215 31687 port [tcp/*] succeeded!\n"
  I0904 23:49:28.170807 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 23:49:28.185866 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2740 exec execpod-affinityww44w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.0.215:31687/ ; done'
  I0904 23:49:28.532800 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n"
  I0904 23:49:28.532889 18 builder.go:147] stdout: "\naffinity-nodeport-transition-9kmjl\naffinity-nodeport-transition-v6wcj\naffinity-nodeport-transition-v6wcj\naffinity-nodeport-transition-9kmjl\naffinity-nodeport-transition-9kmjl\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-v6wcj\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-9kmjl\naffinity-nodeport-transition-9kmjl\naffinity-nodeport-transition-9kmjl\naffinity-nodeport-transition-9kmjl\naffinity-nodeport-transition-9kmjl\naffinity-nodeport-transition-9kmjl\naffinity-nodeport-transition-v6wcj"
  I0904 23:49:28.532915 18 service.go:242] Received response from host: affinity-nodeport-transition-9kmjl
  I0904 23:49:28.533025 18 service.go:242] Received response from host: affinity-nodeport-transition-v6wcj
  I0904 23:49:28.533074 18 service.go:242] Received response from host: affinity-nodeport-transition-v6wcj
  I0904 23:49:28.533143 18 service.go:242] Received response from host: affinity-nodeport-transition-9kmjl
  I0904 23:49:28.533159 18 service.go:242] Received response from host: affinity-nodeport-transition-9kmjl
  I0904 23:49:28.533173 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.533187 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.533218 18 service.go:242] Received response from host: affinity-nodeport-transition-v6wcj
  I0904 23:49:28.533236 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.533249 18 service.go:242] Received response from host: affinity-nodeport-transition-9kmjl
  I0904 23:49:28.533263 18 service.go:242] Received response from host: affinity-nodeport-transition-9kmjl
  I0904 23:49:28.533442 18 service.go:242] Received response from host: affinity-nodeport-transition-9kmjl
  I0904 23:49:28.533464 18 service.go:242] Received response from host: affinity-nodeport-transition-9kmjl
  I0904 23:49:28.533477 18 service.go:242] Received response from host: affinity-nodeport-transition-9kmjl
  I0904 23:49:28.533488 18 service.go:242] Received response from host: affinity-nodeport-transition-9kmjl
  I0904 23:49:28.533529 18 service.go:242] Received response from host: affinity-nodeport-transition-v6wcj
  I0904 23:49:28.556665 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2740 exec execpod-affinityww44w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.0.215:31687/ ; done'
  I0904 23:49:28.901007 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.215:31687/\n"
  I0904 23:49:28.901082 18 builder.go:147] stdout: "\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp\naffinity-nodeport-transition-k6xmp"
  I0904 23:49:28.901115 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901132 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901148 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901163 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901179 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901192 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901313 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901339 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901355 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901655 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901678 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901763 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901783 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901797 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901843 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901858 18 service.go:242] Received response from host: affinity-nodeport-transition-k6xmp
  I0904 23:49:28.901944 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2740, will wait for the garbage collector to delete the pods @ 09/04/24 23:49:28.964
  I0904 23:49:29.043718 18 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 11.685773ms
  I0904 23:49:29.144764 18 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.044677ms
  I0904 23:49:32.842280 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2740" for this suite. @ 09/04/24 23:49:32.852
• [11.901 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/04/24 23:49:32.883
  I0904 23:49:32.883529 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename proxy @ 09/04/24 23:49:32.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:49:32.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:49:32.948
  STEP: starting an echo server on multiple ports @ 09/04/24 23:49:32.987
  STEP: creating replication controller proxy-service-2gq6l in namespace proxy-4255 @ 09/04/24 23:49:32.988
  I0904 23:49:33.022209      18 runners.go:193] Created replication controller with name: proxy-service-2gq6l, namespace: proxy-4255, replica count: 1
  I0904 23:49:34.074134      18 runners.go:193] proxy-service-2gq6l Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 23:49:35.075026      18 runners.go:193] proxy-service-2gq6l Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0904 23:49:36.075227      18 runners.go:193] proxy-service-2gq6l Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 23:49:36.079711 18 proxy.go:230] setup took 3.127786889s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/04/24 23:49:36.079
  I0904 23:49:36.111989 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 31.791895ms)
  I0904 23:49:36.118457 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 37.916822ms)
  I0904 23:49:36.118826 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 38.043347ms)
  I0904 23:49:36.124551 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 44.169474ms)
  I0904 23:49:36.125201 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 44.519176ms)
  I0904 23:49:36.125258 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 44.773036ms)
  I0904 23:49:36.125482 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 44.749124ms)
  I0904 23:49:36.134890 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 55.011564ms)
  I0904 23:49:36.135025 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 54.381551ms)
  I0904 23:49:36.135066 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 54.996664ms)
  I0904 23:49:36.135103 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 54.658821ms)
  I0904 23:49:36.135128 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 54.88896ms)
  I0904 23:49:36.138694 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 58.383009ms)
  I0904 23:49:36.142158 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 61.316068ms)
  I0904 23:49:36.142914 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 62.75078ms)
  I0904 23:49:36.143675 18 proxy.go:558] (0) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 63.065892ms)
  I0904 23:49:36.155570 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 11.067909ms)
  I0904 23:49:36.158834 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 13.729858ms)
  I0904 23:49:36.158901 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 14.07872ms)
  I0904 23:49:36.159192 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 14.631461ms)
  I0904 23:49:36.159625 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 14.927172ms)
  I0904 23:49:36.159687 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 14.688063ms)
  I0904 23:49:36.159872 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 15.010045ms)
  I0904 23:49:36.160014 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 15.234343ms)
  I0904 23:49:36.160227 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 15.169711ms)
  I0904 23:49:36.159912 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 14.961683ms)
  I0904 23:49:36.163010 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 18.097929ms)
  I0904 23:49:36.163963 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 19.753541ms)
  I0904 23:49:36.163969 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 19.582834ms)
  I0904 23:49:36.163997 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 19.343485ms)
  I0904 23:49:36.164292 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 19.695399ms)
  I0904 23:49:36.164489 18 proxy.go:558] (1) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 20.053782ms)
  I0904 23:49:36.177738 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 12.913138ms)
  I0904 23:49:36.177760 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 12.249743ms)
  I0904 23:49:36.177794 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 12.200381ms)
  I0904 23:49:36.177817 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 11.510476ms)
  I0904 23:49:36.178194 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 12.187751ms)
  I0904 23:49:36.178511 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 13.530251ms)
  I0904 23:49:36.178571 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 12.69207ms)
  I0904 23:49:36.178579 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 12.384198ms)
  I0904 23:49:36.178603 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 13.334353ms)
  I0904 23:49:36.178706 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 12.998201ms)
  I0904 23:49:36.181271 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 15.479243ms)
  I0904 23:49:36.181301 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 16.194839ms)
  I0904 23:49:36.181846 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 15.756323ms)
  I0904 23:49:36.181887 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 16.700278ms)
  I0904 23:49:36.181922 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 16.48751ms)
  I0904 23:49:36.181989 18 proxy.go:558] (2) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 16.635425ms)
  I0904 23:49:36.201516 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 17.976665ms)
  I0904 23:49:36.202908 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 19.623036ms)
  I0904 23:49:36.203411 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 19.619076ms)
  I0904 23:49:36.203630 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 19.72618ms)
  I0904 23:49:36.203699 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 19.707209ms)
  I0904 23:49:36.203726 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 20.56418ms)
  I0904 23:49:36.203731 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 20.285121ms)
  I0904 23:49:36.203835 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 20.81421ms)
  I0904 23:49:36.204157 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 19.924047ms)
  I0904 23:49:36.204207 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 19.857584ms)
  I0904 23:49:36.205975 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 21.900419ms)
  I0904 23:49:36.207904 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 24.190045ms)
  I0904 23:49:36.207904 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 24.536618ms)
  I0904 23:49:36.208497 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 24.342871ms)
  I0904 23:49:36.208526 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 24.894891ms)
  I0904 23:49:36.208835 18 proxy.go:558] (3) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 24.400352ms)
  I0904 23:49:36.223525 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 13.580352ms)
  I0904 23:49:36.223572 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 13.964017ms)
  I0904 23:49:36.224493 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 14.164864ms)
  I0904 23:49:36.224576 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 14.3193ms)
  I0904 23:49:36.224600 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 14.513197ms)
  I0904 23:49:36.225106 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 15.385329ms)
  I0904 23:49:36.227789 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 17.877971ms)
  I0904 23:49:36.228378 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 18.608818ms)
  I0904 23:49:36.228500 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 18.285176ms)
  I0904 23:49:36.228583 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 18.571917ms)
  I0904 23:49:36.229517 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 19.568293ms)
  I0904 23:49:36.229647 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 19.821553ms)
  I0904 23:49:36.230454 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 20.298161ms)
  I0904 23:49:36.230516 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 20.463086ms)
  I0904 23:49:36.230841 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 20.54823ms)
  I0904 23:49:36.232980 18 proxy.go:558] (4) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 22.807003ms)
  I0904 23:49:36.245580 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 11.979803ms)
  I0904 23:49:36.245580 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 12.154519ms)
  I0904 23:49:36.247337 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 13.80478ms)
  I0904 23:49:36.247791 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 14.293718ms)
  I0904 23:49:36.249661 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 16.282092ms)
  I0904 23:49:36.249661 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 15.908528ms)
  I0904 23:49:36.249914 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 16.125497ms)
  I0904 23:49:36.252286 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 19.069445ms)
  I0904 23:49:36.252333 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 18.874258ms)
  I0904 23:49:36.253229 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 19.914246ms)
  I0904 23:49:36.253237 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 19.565694ms)
  I0904 23:49:36.253251 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 19.689718ms)
  I0904 23:49:36.253260 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 20.209707ms)
  I0904 23:49:36.253265 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 19.99376ms)
  I0904 23:49:36.255592 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 21.954362ms)
  I0904 23:49:36.256941 18 proxy.go:558] (5) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 23.220208ms)
  I0904 23:49:36.267603 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 10.152145ms)
  I0904 23:49:36.267767 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 10.163076ms)
  I0904 23:49:36.268653 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 11.635421ms)
  I0904 23:49:36.287727 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 30.465527ms)
  I0904 23:49:36.288168 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 29.942567ms)
  I0904 23:49:36.288694 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 31.070229ms)
  I0904 23:49:36.289642 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 32.291884ms)
  I0904 23:49:36.290578 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 32.707689ms)
  I0904 23:49:36.290627 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 32.324485ms)
  I0904 23:49:36.290709 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 32.920457ms)
  I0904 23:49:36.290787 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 32.842014ms)
  I0904 23:49:36.291010 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 32.926637ms)
  I0904 23:49:36.293146 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 35.435491ms)
  I0904 23:49:36.293810 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 35.672729ms)
  I0904 23:49:36.293861 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 35.404049ms)
  I0904 23:49:36.293890 18 proxy.go:558] (6) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 35.510103ms)
  I0904 23:49:36.313771 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 18.960981ms)
  I0904 23:49:36.314316 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 20.27474ms)
  I0904 23:49:36.314283 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 19.831953ms)
  I0904 23:49:36.314345 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 19.668767ms)
  I0904 23:49:36.314347 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 19.643696ms)
  I0904 23:49:36.314362 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 19.560363ms)
  I0904 23:49:36.314371 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 19.598555ms)
  I0904 23:49:36.314377 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 19.717709ms)
  I0904 23:49:36.314579 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 20.405004ms)
  I0904 23:49:36.314614 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 19.895816ms)
  I0904 23:49:36.317188 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 22.910937ms)
  I0904 23:49:36.317776 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 22.943039ms)
  I0904 23:49:36.318394 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 23.621214ms)
  I0904 23:49:36.318824 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 24.455305ms)
  I0904 23:49:36.319557 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 24.717735ms)
  I0904 23:49:36.319991 18 proxy.go:558] (7) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 25.253364ms)
  I0904 23:49:36.328020 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 6.416877ms)
  I0904 23:49:36.330513 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 10.172096ms)
  I0904 23:49:36.331516 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 10.27309ms)
  I0904 23:49:36.331516 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 10.042402ms)
  I0904 23:49:36.333916 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 12.756591ms)
  I0904 23:49:36.334142 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 13.143496ms)
  I0904 23:49:36.334674 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 14.03908ms)
  I0904 23:49:36.334678 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 13.327603ms)
  I0904 23:49:36.335178 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 14.099121ms)
  I0904 23:49:36.335298 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 13.866713ms)
  I0904 23:49:36.337497 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 17.02411ms)
  I0904 23:49:36.339046 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 18.329749ms)
  I0904 23:49:36.340160 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 18.600348ms)
  I0904 23:49:36.340382 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 19.549253ms)
  I0904 23:49:36.340543 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 19.627846ms)
  I0904 23:49:36.340754 18 proxy.go:558] (8) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 20.200548ms)
  I0904 23:49:36.348242 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 7.30222ms)
  I0904 23:49:36.352720 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 11.823517ms)
  I0904 23:49:36.355116 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 12.889307ms)
  I0904 23:49:36.355116 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 13.803801ms)
  I0904 23:49:36.355368 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 13.966836ms)
  I0904 23:49:36.355828 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 13.987457ms)
  I0904 23:49:36.355848 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 14.184945ms)
  I0904 23:49:36.355868 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 14.122763ms)
  I0904 23:49:36.355877 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 13.947816ms)
  I0904 23:49:36.357197 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 15.698731ms)
  I0904 23:49:36.358902 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 17.773527ms)
  I0904 23:49:36.361110 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 19.074485ms)
  I0904 23:49:36.361138 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 18.980002ms)
  I0904 23:49:36.361737 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 20.522959ms)
  I0904 23:49:36.361843 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 20.2602ms)
  I0904 23:49:36.361897 18 proxy.go:558] (9) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 19.587505ms)
  I0904 23:49:36.375152 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 11.993694ms)
  I0904 23:49:36.375256 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 12.580845ms)
  I0904 23:49:36.375989 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 12.350767ms)
  I0904 23:49:36.376286 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 12.732461ms)
  I0904 23:49:36.376338 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 13.575722ms)
  I0904 23:49:36.376368 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 13.132046ms)
  I0904 23:49:36.376395 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 12.918448ms)
  I0904 23:49:36.379370 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 15.93691ms)
  I0904 23:49:36.379453 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 15.658299ms)
  I0904 23:49:36.379734 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 17.368502ms)
  I0904 23:49:36.380001 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 17.071961ms)
  I0904 23:49:36.379480 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 16.433838ms)
  I0904 23:49:36.381685 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 19.175529ms)
  I0904 23:49:36.382405 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 18.689681ms)
  I0904 23:49:36.382972 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 19.648046ms)
  I0904 23:49:36.382972 18 proxy.go:558] (10) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 20.126844ms)
  I0904 23:49:36.394809 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 11.237646ms)
  I0904 23:49:36.395364 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 11.36481ms)
  I0904 23:49:36.395483 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 12.027055ms)
  I0904 23:49:36.395776 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 12.172201ms)
  I0904 23:49:36.395840 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 12.115728ms)
  I0904 23:49:36.395973 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 12.210002ms)
  I0904 23:49:36.395776 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 11.846989ms)
  I0904 23:49:36.396805 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 12.842715ms)
  I0904 23:49:36.397337 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 13.647145ms)
  I0904 23:49:36.398940 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 15.468643ms)
  I0904 23:49:36.400033 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 16.379856ms)
  I0904 23:49:36.400090 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 16.290412ms)
  I0904 23:49:36.400522 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 16.999879ms)
  I0904 23:49:36.400992 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 16.920966ms)
  I0904 23:49:36.401056 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 17.166845ms)
  I0904 23:49:36.401288 18 proxy.go:558] (11) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 17.250859ms)
  I0904 23:49:36.418002 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 15.253674ms)
  I0904 23:49:36.419048 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 16.77644ms)
  I0904 23:49:36.421735 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 19.7298ms)
  I0904 23:49:36.422677 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 20.172827ms)
  I0904 23:49:36.422750 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 20.306431ms)
  I0904 23:49:36.423460 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 21.688513ms)
  I0904 23:49:36.423489 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 21.386291ms)
  I0904 23:49:36.423646 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 21.021558ms)
  I0904 23:49:36.425254 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 22.914148ms)
  I0904 23:49:36.425254 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 23.322553ms)
  I0904 23:49:36.425300 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 23.120745ms)
  I0904 23:49:36.425521 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 23.727298ms)
  I0904 23:49:36.425662 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 23.695797ms)
  I0904 23:49:36.425955 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 24.428544ms)
  I0904 23:49:36.426043 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 23.276171ms)
  I0904 23:49:36.426267 18 proxy.go:558] (12) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 23.591562ms)
  I0904 23:49:36.435761 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 9.058615ms)
  I0904 23:49:36.438502 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 11.158593ms)
  I0904 23:49:36.439203 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 12.009204ms)
  I0904 23:49:36.441183 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 14.158933ms)
  I0904 23:49:36.441548 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 14.465815ms)
  I0904 23:49:36.441624 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 15.032896ms)
  I0904 23:49:36.441849 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 14.618161ms)
  I0904 23:49:36.442017 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 15.210053ms)
  I0904 23:49:36.442128 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 15.185182ms)
  I0904 23:49:36.442204 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 15.161491ms)
  I0904 23:49:36.443986 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 16.865604ms)
  I0904 23:49:36.446030 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 19.148268ms)
  I0904 23:49:36.446692 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 19.282873ms)
  I0904 23:49:36.446691 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 19.389177ms)
  I0904 23:49:36.446805 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 19.962138ms)
  I0904 23:49:36.447042 18 proxy.go:558] (13) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 19.777942ms)
  I0904 23:49:36.469173 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 21.262226ms)
  I0904 23:49:36.469896 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 22.634527ms)
  I0904 23:49:36.470410 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 21.853838ms)
  I0904 23:49:36.470418 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 22.924018ms)
  I0904 23:49:36.470839 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 22.642397ms)
  I0904 23:49:36.470889 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 22.601516ms)
  I0904 23:49:36.470915 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 22.535734ms)
  I0904 23:49:36.470964 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 22.968ms)
  I0904 23:49:36.471006 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 23.222469ms)
  I0904 23:49:36.471226 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 22.572065ms)
  I0904 23:49:36.474246 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 25.40729ms)
  I0904 23:49:36.474247 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 26.643675ms)
  I0904 23:49:36.475094 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 26.999318ms)
  I0904 23:49:36.477292 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 28.823256ms)
  I0904 23:49:36.477354 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 28.609888ms)
  I0904 23:49:36.477773 18 proxy.go:558] (14) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 30.080572ms)
  I0904 23:49:36.527691 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 49.45631ms)
  I0904 23:49:36.527762 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 48.576027ms)
  I0904 23:49:36.528690 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 50.5462ms)
  I0904 23:49:36.529026 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 50.339402ms)
  I0904 23:49:36.528690 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 50.211558ms)
  I0904 23:49:36.529568 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 50.142275ms)
  I0904 23:49:36.530158 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 50.957555ms)
  I0904 23:49:36.529648 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 51.821127ms)
  I0904 23:49:36.529671 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 51.689242ms)
  I0904 23:49:36.529919 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 50.890592ms)
  I0904 23:49:36.529949 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 51.63996ms)
  I0904 23:49:36.532651 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 53.875143ms)
  I0904 23:49:36.533463 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 54.596629ms)
  I0904 23:49:36.534292 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 55.899468ms)
  I0904 23:49:36.536330 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 57.376592ms)
  I0904 23:49:36.540582 18 proxy.go:558] (15) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 61.976992ms)
  I0904 23:49:36.556033 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 14.663443ms)
  I0904 23:49:36.560105 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 19.106276ms)
  I0904 23:49:36.560410 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 19.092816ms)
  I0904 23:49:36.564472 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 23.062233ms)
  I0904 23:49:36.565872 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 24.33982ms)
  I0904 23:49:36.566412 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 24.85826ms)
  I0904 23:49:36.566884 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 25.372558ms)
  I0904 23:49:36.566899 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 25.125829ms)
  I0904 23:49:36.566918 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 25.222713ms)
  I0904 23:49:36.566933 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 25.274105ms)
  I0904 23:49:36.585719 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 44.467965ms)
  I0904 23:49:36.586446 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 44.585979ms)
  I0904 23:49:36.586518 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 44.699924ms)
  I0904 23:49:36.586596 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 45.152511ms)
  I0904 23:49:36.586068 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 44.443644ms)
  I0904 23:49:36.587467 18 proxy.go:558] (16) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 45.881287ms)
  I0904 23:49:36.605042 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 16.480629ms)
  I0904 23:49:36.605537 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 17.29937ms)
  I0904 23:49:36.606659 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 18.197763ms)
  I0904 23:49:36.606905 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 17.888371ms)
  I0904 23:49:36.619450 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 30.137304ms)
  I0904 23:49:36.622411 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 32.936368ms)
  I0904 23:49:36.622661 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 33.007711ms)
  I0904 23:49:36.623698 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 35.336337ms)
  I0904 23:49:36.624146 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 34.935702ms)
  I0904 23:49:36.624451 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 35.339337ms)
  I0904 23:49:36.624514 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 34.563219ms)
  I0904 23:49:36.624709 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 35.321016ms)
  I0904 23:49:36.625255 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 35.476712ms)
  I0904 23:49:36.625983 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 36.118556ms)
  I0904 23:49:36.626920 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 37.362362ms)
  I0904 23:49:36.627310 18 proxy.go:558] (17) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 39.2124ms)
  I0904 23:49:36.639430 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 12.000594ms)
  I0904 23:49:36.642251 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 14.07975ms)
  I0904 23:49:36.642828 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 14.574069ms)
  I0904 23:49:36.642911 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 14.833168ms)
  I0904 23:49:36.642894 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 15.246303ms)
  I0904 23:49:36.643493 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 14.59544ms)
  I0904 23:49:36.644610 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 16.823472ms)
  I0904 23:49:36.646295 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 17.57807ms)
  I0904 23:49:36.646348 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 17.810769ms)
  I0904 23:49:36.646406 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 17.782298ms)
  I0904 23:49:36.647635 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 18.831957ms)
  I0904 23:49:36.671194 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 43.284771ms)
  I0904 23:49:36.671679 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 43.248009ms)
  I0904 23:49:36.671742 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 43.401256ms)
  I0904 23:49:36.672073 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 44.04486ms)
  I0904 23:49:36.675239 18 proxy.go:558] (18) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 47.687554ms)
  I0904 23:49:36.692655 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:462/proxy/: tls qux (200; 17.353242ms)
  I0904 23:49:36.706820 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f/proxy/rewriteme">test</a> (200; 28.546516ms)
  I0904 23:49:36.710756 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">... (200; 33.489418ms)
  I0904 23:49:36.710785 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:460/proxy/: tls baz (200; 32.349097ms)
  I0904 23:49:36.710752 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:1080/proxy/rewriteme">test<... (200; 32.399468ms)
  I0904 23:49:36.710816 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname1/proxy/: foo (200; 33.664515ms)
  I0904 23:49:36.710826 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 33.196647ms)
  I0904 23:49:36.717367 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname2/proxy/: bar (200; 39.911416ms)
  I0904 23:49:36.718115 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/: <a href="/api/v1/namespaces/proxy-4255/pods/https:proxy-service-2gq6l-d6m9f:443/proxy/tlsrewritem... (200; 40.028931ms)
  I0904 23:49:36.726081 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/services/proxy-service-2gq6l:portname1/proxy/: foo (200; 47.894221ms)
  I0904 23:49:36.727044 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/services/http:proxy-service-2gq6l:portname2/proxy/: bar (200; 49.328364ms)
  I0904 23:49:36.727114 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 49.758101ms)
  I0904 23:49:36.727300 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/http:proxy-service-2gq6l-d6m9f:160/proxy/: foo (200; 49.399408ms)
  I0904 23:49:36.727412 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname2/proxy/: tls qux (200; 49.602115ms)
  I0904 23:49:36.728092 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/services/https:proxy-service-2gq6l:tlsportname1/proxy/: tls baz (200; 50.54986ms)
  I0904 23:49:36.735406 18 proxy.go:558] (19) /api/v1/namespaces/proxy-4255/pods/proxy-service-2gq6l-d6m9f:162/proxy/: bar (200; 57.407623ms)
  STEP: deleting ReplicationController proxy-service-2gq6l in namespace proxy-4255, will wait for the garbage collector to delete the pods @ 09/04/24 23:49:36.735
  I0904 23:49:36.821309 18 resources.go:139] Deleting ReplicationController proxy-service-2gq6l took: 17.803758ms
  I0904 23:49:36.921554 18 resources.go:163] Terminating ReplicationController proxy-service-2gq6l pods took: 100.242268ms
  I0904 23:49:39.722337 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4255" for this suite. @ 09/04/24 23:49:39.727
• [6.860 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/04/24 23:49:39.744
  I0904 23:49:39.744407 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:49:39.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:49:39.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:49:39.783
  STEP: Setting up server cert @ 09/04/24 23:49:39.88
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:49:40.88
  STEP: Deploying the webhook pod @ 09/04/24 23:49:40.899
  STEP: Wait for the deployment to be ready @ 09/04/24 23:49:40.933
  I0904 23:49:40.976656 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 23:49:42.993
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:49:43.023
  I0904 23:49:44.023962 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/04/24 23:49:44.039
  STEP: create a configmap that should be updated by the webhook @ 09/04/24 23:49:44.073
  I0904 23:49:44.231305 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8097" for this suite. @ 09/04/24 23:49:44.245
  STEP: Destroying namespace "webhook-markers-8253" for this suite. @ 09/04/24 23:49:44.265
• [4.538 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/04/24 23:49:44.283
  I0904 23:49:44.283391 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 23:49:44.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:49:44.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:49:44.325
  STEP: set up a multi version CRD @ 09/04/24 23:49:44.329
  I0904 23:49:44.329989 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: mark a version not serverd @ 09/04/24 23:49:48.658
  STEP: check the unserved version gets removed @ 09/04/24 23:49:48.691
  STEP: check the other version is not changed @ 09/04/24 23:49:50.301
  I0904 23:49:53.788860 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4312" for this suite. @ 09/04/24 23:49:53.796
• [9.525 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/04/24 23:49:53.809
  I0904 23:49:53.809734 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:49:53.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:49:53.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:49:53.865
  STEP: Setting up server cert @ 09/04/24 23:49:53.95
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:49:54.476
  STEP: Deploying the webhook pod @ 09/04/24 23:49:54.49
  STEP: Wait for the deployment to be ready @ 09/04/24 23:49:54.521
  I0904 23:49:54.549427 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 23:49:56.576536 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 23, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 49, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 23, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 49, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 23:49:58.58
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:49:58.605
  I0904 23:49:59.606841 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/04/24 23:49:59.616
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/04/24 23:49:59.618
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/04/24 23:49:59.618
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/04/24 23:49:59.618
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/04/24 23:49:59.62
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/04/24 23:49:59.62
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/04/24 23:49:59.621
  I0904 23:49:59.728814 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6438" for this suite. @ 09/04/24 23:49:59.735
  STEP: Destroying namespace "webhook-markers-3241" for this suite. @ 09/04/24 23:49:59.766
• [6.001 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/04/24 23:49:59.812
  I0904 23:49:59.812913 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 23:49:59.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:49:59.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:49:59.857
  STEP: Given a ReplicationController is created @ 09/04/24 23:49:59.866
  STEP: When the matched label of one of its pods change @ 09/04/24 23:49:59.878
  I0904 23:49:59.886186 18 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0904 23:50:04.891379 18 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/04/24 23:50:04.916
  I0904 23:50:05.941693 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-550" for this suite. @ 09/04/24 23:50:05.948
• [6.154 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/04/24 23:50:05.966
  I0904 23:50:05.966824 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename tables @ 09/04/24 23:50:05.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:06.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:06.014
  I0904 23:50:06.081532 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7880" for this suite. @ 09/04/24 23:50:06.096
• [0.145 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/04/24 23:50:06.113
  I0904 23:50:06.113667 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 23:50:06.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:06.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:06.156
  STEP: creating the pod @ 09/04/24 23:50:06.159
  STEP: submitting the pod to kubernetes @ 09/04/24 23:50:06.16
  STEP: verifying the pod is in kubernetes @ 09/04/24 23:50:10.21
  STEP: updating the pod @ 09/04/24 23:50:10.213
  I0904 23:50:10.758290 18 pod_client.go:173] Successfully updated pod "pod-update-7815da06-bb41-4d68-9d40-1f13e84001ea"
  STEP: verifying the updated pod is in kubernetes @ 09/04/24 23:50:10.767
  I0904 23:50:10.772787 18 pods.go:391] Pod update OK
  I0904 23:50:10.773002 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6223" for this suite. @ 09/04/24 23:50:10.78
• [4.685 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/04/24 23:50:10.825
  I0904 23:50:10.825572 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 23:50:10.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:10.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:10.872
  I0904 23:50:10.894442 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  W0904 23:50:13.474263      18 warnings.go:70] unknown field "alpha"
  W0904 23:50:13.474300      18 warnings.go:70] unknown field "beta"
  W0904 23:50:13.474314      18 warnings.go:70] unknown field "delta"
  W0904 23:50:13.474322      18 warnings.go:70] unknown field "epsilon"
  W0904 23:50:13.474330      18 warnings.go:70] unknown field "gamma"
  I0904 23:50:14.061253 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-813" for this suite. @ 09/04/24 23:50:14.069
• [3.256 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/04/24 23:50:14.083
  I0904 23:50:14.083455 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/04/24 23:50:14.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:14.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:14.125
  STEP: creating @ 09/04/24 23:50:14.131
  STEP: getting @ 09/04/24 23:50:14.175
  STEP: listing in namespace @ 09/04/24 23:50:14.186
  STEP: patching @ 09/04/24 23:50:14.196
  STEP: deleting @ 09/04/24 23:50:14.247
  I0904 23:50:14.267675 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4183" for this suite. @ 09/04/24 23:50:14.272
• [0.200 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/04/24 23:50:14.283
  I0904 23:50:14.283222 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:50:14.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:14.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:14.339
  STEP: Creating the pod @ 09/04/24 23:50:14.343
  I0904 23:50:16.940006 18 pod_client.go:173] Successfully updated pod "labelsupdate8c8d432e-8034-42d9-8ef6-04dc1598a177"
  I0904 23:50:20.972545 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9572" for this suite. @ 09/04/24 23:50:20.976
• [6.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/04/24 23:50:20.989
  I0904 23:50:20.989929 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 23:50:20.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:21.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:21.04
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/04/24 23:50:21.043
  STEP: Saw pod success @ 09/04/24 23:50:25.088
  I0904 23:50:25.093520 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-831cefde-b351-4967-bb3f-b54b6b9f9603 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 23:50:25.1
  I0904 23:50:25.139013 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1544" for this suite. @ 09/04/24 23:50:25.143
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/04/24 23:50:25.155
  I0904 23:50:25.155331 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/04/24 23:50:25.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:25.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:25.188
  STEP: Cleaning up the secret @ 09/04/24 23:50:27.28
  STEP: Cleaning up the configmap @ 09/04/24 23:50:27.293
  STEP: Cleaning up the pod @ 09/04/24 23:50:27.305
  I0904 23:50:27.353281 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4809" for this suite. @ 09/04/24 23:50:27.364
• [2.221 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 09/04/24 23:50:27.376
  I0904 23:50:27.377018 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/04/24 23:50:27.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:27.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:27.432
  STEP: creating a Service @ 09/04/24 23:50:27.44
  STEP: watching for the Service to be added @ 09/04/24 23:50:27.499
  I0904 23:50:27.503665 18 service.go:3445] Found Service test-service-qmwd2 in namespace services-4350 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32250}]
  I0904 23:50:27.504369 18 service.go:3452] Service test-service-qmwd2 created
  STEP: Getting /status @ 09/04/24 23:50:27.505
  I0904 23:50:27.513581 18 service.go:3463] Service test-service-qmwd2 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/04/24 23:50:27.513
  STEP: watching for the Service to be patched @ 09/04/24 23:50:27.532
  I0904 23:50:27.535202 18 service.go:3486] observed Service test-service-qmwd2 in namespace services-4350 with annotations: map[] & LoadBalancer: {[]}
  I0904 23:50:27.535460 18 service.go:3489] Found Service test-service-qmwd2 in namespace services-4350 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc001151ce0 []}]}
  I0904 23:50:27.536336 18 service.go:3496] Service test-service-qmwd2 has service status patched
  STEP: updating the ServiceStatus @ 09/04/24 23:50:27.537
  I0904 23:50:27.560895 18 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/04/24 23:50:27.561
  I0904 23:50:27.564115 18 service.go:3527] Observed Service test-service-qmwd2 in namespace services-4350 with annotations: map[] & Conditions: []
  I0904 23:50:27.564550 18 service.go:3538] Observed Service test-service-qmwd2 in namespace services-4350 with annotations: map[patchedstatus:true] & Conditions: []
  I0904 23:50:27.564613 18 service.go:3534] Found Service test-service-qmwd2 in namespace services-4350 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 23:50:27.564636 18 service.go:3545] Service test-service-qmwd2 has service status updated
  STEP: patching the service @ 09/04/24 23:50:27.564
  STEP: watching for the Service to be patched @ 09/04/24 23:50:27.592
  I0904 23:50:27.596164 18 service.go:3568] observed Service test-service-qmwd2 in namespace services-4350 with labels: map[test-service-static:true]
  I0904 23:50:27.596841 18 service.go:3568] observed Service test-service-qmwd2 in namespace services-4350 with labels: map[test-service-static:true]
  I0904 23:50:27.597604 18 service.go:3568] observed Service test-service-qmwd2 in namespace services-4350 with labels: map[test-service-static:true]
  I0904 23:50:27.597810 18 service.go:3571] Found Service test-service-qmwd2 in namespace services-4350 with labels: map[test-service:patched test-service-static:true]
  I0904 23:50:27.597902 18 service.go:3578] Service test-service-qmwd2 patched
  STEP: deleting the service @ 09/04/24 23:50:27.597
  STEP: watching for the Service to be deleted @ 09/04/24 23:50:27.668
  I0904 23:50:27.670151 18 service.go:3602] Observed event: ADDED
  I0904 23:50:27.670337 18 service.go:3602] Observed event: MODIFIED
  I0904 23:50:27.670416 18 service.go:3602] Observed event: MODIFIED
  I0904 23:50:27.670661 18 service.go:3602] Observed event: MODIFIED
  I0904 23:50:27.670745 18 service.go:3598] Found Service test-service-qmwd2 in namespace services-4350 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0904 23:50:27.670866 18 service.go:3607] Service test-service-qmwd2 deleted
  I0904 23:50:27.671104 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4350" for this suite. @ 09/04/24 23:50:27.678
• [0.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/04/24 23:50:27.702
  I0904 23:50:27.702628 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:50:27.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:27.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:27.749
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 23:50:27.756
  STEP: Saw pod success @ 09/04/24 23:50:31.803
  I0904 23:50:31.806659 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-e7ac7a32-59f2-4fe9-93ae-eeeddef95c7f container client-container: <nil>
  STEP: delete the pod @ 09/04/24 23:50:31.818
  I0904 23:50:31.879058 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7816" for this suite. @ 09/04/24 23:50:31.883
• [4.194 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 09/04/24 23:50:31.896
  I0904 23:50:31.896998 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/24 23:50:31.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:50:31.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:50:31.939
  I0904 23:50:31.976708 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0904 23:51:31.983324 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/04/24 23:51:31.986
  I0904 23:51:31.986662 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/04/24 23:51:31.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:51:32.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:51:32.03
  I0904 23:51:32.149223 18 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0904 23:51:32.152619 18 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0904 23:51:32.337947 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8813" for this suite. @ 09/04/24 23:51:32.341
  I0904 23:51:32.357864 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-892" for this suite. @ 09/04/24 23:51:32.363
• [60.484 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/04/24 23:51:32.381
  I0904 23:51:32.381545 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename watch @ 09/04/24 23:51:32.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:51:32.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:51:32.428
  STEP: creating a watch on configmaps with label A @ 09/04/24 23:51:32.431
  STEP: creating a watch on configmaps with label B @ 09/04/24 23:51:32.432
  STEP: creating a watch on configmaps with label A or B @ 09/04/24 23:51:32.434
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/04/24 23:51:32.435
  I0904 23:51:32.445964 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6079  927c5494-c0f8-4a04-8ba3-30373d235482 41390 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:51:32.446289 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6079  927c5494-c0f8-4a04-8ba3-30373d235482 41390 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/04/24 23:51:32.446
  I0904 23:51:32.460328 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6079  927c5494-c0f8-4a04-8ba3-30373d235482 41391 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:51:32.460507 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6079  927c5494-c0f8-4a04-8ba3-30373d235482 41391 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/04/24 23:51:32.46
  I0904 23:51:32.479487 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6079  927c5494-c0f8-4a04-8ba3-30373d235482 41392 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:51:32.479644 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6079  927c5494-c0f8-4a04-8ba3-30373d235482 41392 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/04/24 23:51:32.479
  I0904 23:51:32.490810 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6079  927c5494-c0f8-4a04-8ba3-30373d235482 41393 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:51:32.491057 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6079  927c5494-c0f8-4a04-8ba3-30373d235482 41393 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/04/24 23:51:32.491
  I0904 23:51:32.501220 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6079  7edb5679-c50d-4461-bcae-580e0bb1841e 41394 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:51:32.501848 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6079  7edb5679-c50d-4461-bcae-580e0bb1841e 41394 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/04/24 23:51:42.502
  I0904 23:51:42.515451 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6079  7edb5679-c50d-4461-bcae-580e0bb1841e 41442 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:51:42.515568 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6079  7edb5679-c50d-4461-bcae-580e0bb1841e 41442 0 2024-09-04 23:51:32 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-04 23:51:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:51:52.518794 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6079" for this suite. @ 09/04/24 23:51:52.523
• [20.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/04/24 23:51:52.537
  I0904 23:51:52.537730 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:51:52.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:51:52.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:51:52.573
  STEP: Setting up server cert @ 09/04/24 23:51:52.674
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:51:53.067
  STEP: Deploying the webhook pod @ 09/04/24 23:51:53.088
  STEP: Wait for the deployment to be ready @ 09/04/24 23:51:53.125
  I0904 23:51:53.144049 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 23:51:55.167444 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 23, 51, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 51, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 23, 51, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 51, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 23:51:57.178
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:51:57.213
  I0904 23:51:58.213663 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 23:51:58.221359 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3380-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/24 23:51:58.741
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/04/24 23:51:58.778
  I0904 23:52:01.534139 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7039" for this suite. @ 09/04/24 23:52:01.55
  STEP: Destroying namespace "webhook-markers-2736" for this suite. @ 09/04/24 23:52:01.56
• [9.041 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 09/04/24 23:52:01.579
  I0904 23:52:01.579808 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 23:52:01.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:52:01.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:52:01.63
  STEP: Creating service test in namespace statefulset-6475 @ 09/04/24 23:52:01.635
  STEP: Looking for a node to schedule stateful set and pod @ 09/04/24 23:52:01.646
  STEP: Creating pod with conflicting port in namespace statefulset-6475 @ 09/04/24 23:52:01.683
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6475 @ 09/04/24 23:52:01.708
  STEP: Creating statefulset with conflicting port in namespace statefulset-6475 @ 09/04/24 23:52:03.722
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6475 @ 09/04/24 23:52:03.737
  I0904 23:52:03.773845 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-6475, name: ss-0, uid: 19f1aef9-ab90-4365-8706-6066bb3b9775, status phase: Pending. Waiting for statefulset controller to delete.
  I0904 23:52:03.839010 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-6475, name: ss-0, uid: 19f1aef9-ab90-4365-8706-6066bb3b9775, status phase: Failed. Waiting for statefulset controller to delete.
  I0904 23:52:03.881575 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-6475, name: ss-0, uid: 19f1aef9-ab90-4365-8706-6066bb3b9775, status phase: Failed. Waiting for statefulset controller to delete.
  I0904 23:52:03.899318 18 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-6475
  STEP: Removing pod with conflicting port in namespace statefulset-6475 @ 09/04/24 23:52:03.899
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6475 and will be in running state @ 09/04/24 23:52:03.946
  I0904 23:52:05.991089 18 statefulset.go:138] Deleting all statefulset in ns statefulset-6475
  I0904 23:52:05.994210 18 rest.go:150] Scaling statefulset ss to 0
  I0904 23:52:16.019065 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 23:52:16.022334 18 rest.go:88] Deleting statefulset ss
  I0904 23:52:16.041239 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6475" for this suite. @ 09/04/24 23:52:16.048
• [14.484 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/04/24 23:52:16.064
  I0904 23:52:16.064625 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:52:16.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:52:16.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:52:16.104
  STEP: Setting up server cert @ 09/04/24 23:52:16.198
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:52:17.275
  STEP: Deploying the webhook pod @ 09/04/24 23:52:17.289
  STEP: Wait for the deployment to be ready @ 09/04/24 23:52:17.321
  I0904 23:52:17.364193 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 23:52:19.389
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:52:19.436
  I0904 23:52:20.437196 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/04/24 23:52:20.446
  STEP: create a pod that should be denied by the webhook @ 09/04/24 23:52:20.478
  STEP: create a pod that causes the webhook to hang @ 09/04/24 23:52:20.495
  STEP: create a configmap that should be denied by the webhook @ 09/04/24 23:52:30.503
  STEP: create a configmap that should be admitted by the webhook @ 09/04/24 23:52:30.523
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/04/24 23:52:30.544
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/04/24 23:52:30.563
  STEP: create a namespace that bypass the webhook @ 09/04/24 23:52:30.577
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/04/24 23:52:30.612
  I0904 23:52:30.767449 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4583" for this suite. @ 09/04/24 23:52:30.791
  STEP: Destroying namespace "webhook-markers-2546" for this suite. @ 09/04/24 23:52:30.802
  STEP: Destroying namespace "exempted-namespace-8724" for this suite. @ 09/04/24 23:52:30.833
• [14.788 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/04/24 23:52:30.863
  I0904 23:52:30.863074 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/24 23:52:30.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:52:30.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:52:30.922
  I0904 23:52:30.946058 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0904 23:52:31.550350 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6219" for this suite. @ 09/04/24 23:52:31.567
• [0.737 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/04/24 23:52:31.6
  I0904 23:52:31.600835 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 23:52:31.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:52:31.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:52:31.639
  STEP: creating a ReplicationController @ 09/04/24 23:52:31.653
  STEP: waiting for RC to be added @ 09/04/24 23:52:31.671
  STEP: waiting for available Replicas @ 09/04/24 23:52:31.671
  STEP: patching ReplicationController @ 09/04/24 23:52:33.305
  STEP: waiting for RC to be modified @ 09/04/24 23:52:33.348
  STEP: patching ReplicationController status @ 09/04/24 23:52:33.349
  STEP: waiting for RC to be modified @ 09/04/24 23:52:33.379
  STEP: waiting for available Replicas @ 09/04/24 23:52:33.38
  STEP: fetching ReplicationController status @ 09/04/24 23:52:33.403
  STEP: patching ReplicationController scale @ 09/04/24 23:52:33.423
  STEP: waiting for RC to be modified @ 09/04/24 23:52:33.441
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/04/24 23:52:33.441
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/04/24 23:52:35.393
  STEP: updating ReplicationController status @ 09/04/24 23:52:35.399
  STEP: waiting for RC to be modified @ 09/04/24 23:52:35.415
  STEP: listing all ReplicationControllers @ 09/04/24 23:52:35.416
  STEP: checking that ReplicationController has expected values @ 09/04/24 23:52:35.42
  STEP: deleting ReplicationControllers by collection @ 09/04/24 23:52:35.42
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/04/24 23:52:35.448
  I0904 23:52:35.525086 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 23:52:35.525191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3234" for this suite. @ 09/04/24 23:52:35.531
• [3.956 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/04/24 23:52:35.557
  I0904 23:52:35.557689 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename watch @ 09/04/24 23:52:35.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:52:35.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:52:35.606
  STEP: creating a watch on configmaps with a certain label @ 09/04/24 23:52:35.609
  STEP: creating a new configmap @ 09/04/24 23:52:35.611
  STEP: modifying the configmap once @ 09/04/24 23:52:35.623
  STEP: changing the label value of the configmap @ 09/04/24 23:52:35.64
  STEP: Expecting to observe a delete notification for the watched object @ 09/04/24 23:52:35.665
  I0904 23:52:35.666100 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4225  4b3c2698-7453-456d-b63f-ec53f60fe968 41921 0 2024-09-04 23:52:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 23:52:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:52:35.666428 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4225  4b3c2698-7453-456d-b63f-ec53f60fe968 41922 0 2024-09-04 23:52:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 23:52:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:52:35.666939 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4225  4b3c2698-7453-456d-b63f-ec53f60fe968 41923 0 2024-09-04 23:52:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 23:52:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/04/24 23:52:35.666
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/04/24 23:52:35.683
  E0904 23:52:36.525673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:37.525951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:38.526471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:39.526798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:40.526933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:41.527729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:42.528233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:43.528256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:44.528441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:45.528636      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/04/24 23:52:45.684
  STEP: modifying the configmap a third time @ 09/04/24 23:52:45.702
  STEP: deleting the configmap @ 09/04/24 23:52:45.721
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/04/24 23:52:45.736
  I0904 23:52:45.736547 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4225  4b3c2698-7453-456d-b63f-ec53f60fe968 42011 0 2024-09-04 23:52:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 23:52:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:52:45.736900 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4225  4b3c2698-7453-456d-b63f-ec53f60fe968 42012 0 2024-09-04 23:52:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 23:52:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:52:45.737044 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4225  4b3c2698-7453-456d-b63f-ec53f60fe968 42013 0 2024-09-04 23:52:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 23:52:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 23:52:45.737163 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4225" for this suite. @ 09/04/24 23:52:45.742
• [10.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/04/24 23:52:45.777
  I0904 23:52:45.777315 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:52:45.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:52:45.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:52:45.818
  STEP: Creating configMap with name projected-configmap-test-volume-map-f0f8619b-3358-4304-bcc6-308dc5f85a78 @ 09/04/24 23:52:45.821
  STEP: Creating a pod to test consume configMaps @ 09/04/24 23:52:45.832
  E0904 23:52:46.528722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:47.533356      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:48.534440      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:49.534796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 23:52:49.871
  I0904 23:52:49.875429 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-configmaps-5922de9c-200c-44fc-b09d-0d13ccfed572 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 23:52:49.892
  I0904 23:52:49.930004 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8016" for this suite. @ 09/04/24 23:52:49.937
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 09/04/24 23:52:49.961
  I0904 23:52:49.962054 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename volumeattachment @ 09/04/24 23:52:49.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:52:49.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:52:50.005
  STEP: Create VolumeAttachment "va-e2e-qhv6s" on node "ip-172-31-1-123.us-east-2.compute.internal" @ 09/04/24 23:52:50.039
  STEP: Get VolumeAttachment "va-e2e-qhv6s" on node "ip-172-31-1-123.us-east-2.compute.internal" @ 09/04/24 23:52:50.05
  STEP: Patch VolumeAttachment "va-e2e-qhv6s" on node "ip-172-31-1-123.us-east-2.compute.internal" @ 09/04/24 23:52:50.06
  STEP: List VolumeAttachments with "va-e2e-qhv6s=patched" label @ 09/04/24 23:52:50.07
  STEP: Delete VolumeAttachment "va-e2e-qhv6s" on node "ip-172-31-1-123.us-east-2.compute.internal" @ 09/04/24 23:52:50.073
  STEP: Confirm deletion of VolumeAttachment "va-e2e-qhv6s" on node "ip-172-31-1-123.us-east-2.compute.internal" @ 09/04/24 23:52:50.084
  STEP: Create VolumeAttachment "va-e2e-q7pnv" on node "ip-172-31-1-123.us-east-2.compute.internal" @ 09/04/24 23:52:50.139
  STEP: Update the VolumeAttachment "va-e2e-q7pnv" on node "ip-172-31-1-123.us-east-2.compute.internal" with label "va-e2e=updated" @ 09/04/24 23:52:50.149
  STEP: Create VolumeAttachment "va-e2e-j7gcp" on node "ip-172-31-1-123.us-east-2.compute.internal" @ 09/04/24 23:52:50.236
  STEP: Update the VolumeAttachment "va-e2e-j7gcp" on node "ip-172-31-1-123.us-east-2.compute.internal" with label "va-e2e=updated" @ 09/04/24 23:52:50.248
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/04/24 23:52:50.261
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/04/24 23:52:50.282
  I0904 23:52:50.286075 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8044" for this suite. @ 09/04/24 23:52:50.337
• [0.389 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 09/04/24 23:52:50.348
  I0904 23:52:50.348256 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename job @ 09/04/24 23:52:50.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:52:50.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:52:50.401
  STEP: Creating a job @ 09/04/24 23:52:50.404
  STEP: Ensuring active pods == parallelism @ 09/04/24 23:52:50.415
  E0904 23:52:50.535114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:51.539750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/04/24 23:52:52.422
  STEP: deleting Job.batch foo in namespace job-424, will wait for the garbage collector to delete the pods @ 09/04/24 23:52:52.422
  I0904 23:52:52.499506 18 resources.go:139] Deleting Job.batch foo took: 19.164247ms
  E0904 23:52:52.540148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:52:52.600144 18 resources.go:163] Terminating Job.batch foo pods took: 100.636898ms
  E0904 23:52:53.540618      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:54.543239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:55.543649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/04/24 23:52:55.701
  I0904 23:52:55.705772 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-424" for this suite. @ 09/04/24 23:52:55.711
• [5.375 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/04/24 23:52:55.723
  I0904 23:52:55.723858 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 23:52:55.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:52:55.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:52:55.778
  I0904 23:52:55.784145 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  E0904 23:52:56.544738      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:52:57.545317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/24 23:52:58.09
  I0904 23:52:58.091057 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-8488 --namespace=crd-publish-openapi-8488 create -f -'
  I0904 23:52:58.246086 18 builder.go:146] stderr: ""
  I0904 23:52:58.246148 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4491-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0904 23:52:58.246616 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-8488 --namespace=crd-publish-openapi-8488 delete e2e-test-crd-publish-openapi-4491-crds test-cr'
  I0904 23:52:58.384970 18 builder.go:146] stderr: ""
  I0904 23:52:58.385124 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4491-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0904 23:52:58.385592 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-8488 --namespace=crd-publish-openapi-8488 apply -f -'
  I0904 23:52:58.512810 18 builder.go:146] stderr: ""
  I0904 23:52:58.512990 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4491-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0904 23:52:58.513056 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-8488 --namespace=crd-publish-openapi-8488 delete e2e-test-crd-publish-openapi-4491-crds test-cr'
  E0904 23:52:58.546420      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:52:58.650247 18 builder.go:146] stderr: ""
  I0904 23:52:58.650313 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4491-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/04/24 23:52:58.65
  I0904 23:52:58.650847 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-8488 explain e2e-test-crd-publish-openapi-4491-crds'
  I0904 23:52:58.737380 18 builder.go:146] stderr: ""
  I0904 23:52:58.737463 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4491-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0904 23:52:59.547117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:00.547986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:00.695294 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8488" for this suite. @ 09/04/24 23:53:00.704
• [4.999 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/04/24 23:53:00.724
  I0904 23:53:00.724361 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/04/24 23:53:00.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:00.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:00.772
  STEP: creating the pod @ 09/04/24 23:53:00.775
  STEP: submitting the pod to kubernetes @ 09/04/24 23:53:00.775
  W0904 23:53:00.797785      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0904 23:53:01.548595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:02.549306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/04/24 23:53:02.816
  STEP: updating the pod @ 09/04/24 23:53:02.821
  I0904 23:53:03.349224 18 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-34cf1e95-5b0e-4aa4-807d-5dbeffc0c089"
  E0904 23:53:03.550108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:04.551065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:05.551866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:06.552187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:07.377549 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8659" for this suite. @ 09/04/24 23:53:07.382
• [6.669 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/04/24 23:53:07.396
  I0904 23:53:07.396240 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/04/24 23:53:07.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:07.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:07.444
  STEP: Creating projection with secret that has name projected-secret-test-map-34bffb5d-1f93-4fe8-b385-137996c2468b @ 09/04/24 23:53:07.45
  STEP: Creating a pod to test consume secrets @ 09/04/24 23:53:07.46
  E0904 23:53:07.552688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:08.553756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:09.554309      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:10.554774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 23:53:11.518
  I0904 23:53:11.523159 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-secrets-314e3f4f-f5e9-4e9a-a61e-63763db9d309 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 23:53:11.548
  E0904 23:53:11.555165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:11.608930 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9946" for this suite. @ 09/04/24 23:53:11.613
• [4.229 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/04/24 23:53:11.626
  I0904 23:53:11.627297 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename init-container @ 09/04/24 23:53:11.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:11.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:11.681
  STEP: creating the pod @ 09/04/24 23:53:11.684
  I0904 23:53:11.685020 18 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0904 23:53:12.556235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:13.558706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:14.561129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:15.562033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:16.564394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:16.921108 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8220" for this suite. @ 09/04/24 23:53:16.954
• [5.342 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/04/24 23:53:16.968
  I0904 23:53:16.969111 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/04/24 23:53:16.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:17.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:17.02
  STEP: creating a ConfigMap @ 09/04/24 23:53:17.024
  STEP: fetching the ConfigMap @ 09/04/24 23:53:17.033
  STEP: patching the ConfigMap @ 09/04/24 23:53:17.046
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/04/24 23:53:17.057
  STEP: deleting the ConfigMap by collection with a label selector @ 09/04/24 23:53:17.061
  STEP: listing all ConfigMaps in test namespace @ 09/04/24 23:53:17.079
  I0904 23:53:17.083289 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4227" for this suite. @ 09/04/24 23:53:17.088
• [0.131 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/04/24 23:53:17.1
  I0904 23:53:17.100618 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/24 23:53:17.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:17.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:17.219
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/24 23:53:17.234
  E0904 23:53:17.565317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:18.565325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:19.565926      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:20.566164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/24 23:53:21.316
  E0904 23:53:21.566645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:22.568042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:23.568608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:24.569183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/04/24 23:53:25.372
  STEP: delete the pod with lifecycle hook @ 09/04/24 23:53:25.393
  E0904 23:53:25.569995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:26.570309      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:27.431394 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4701" for this suite. @ 09/04/24 23:53:27.439
• [10.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/04/24 23:53:27.467
  I0904 23:53:27.467676 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/04/24 23:53:27.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:27.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:27.538
  E0904 23:53:27.571256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/04/24 23:53:27.621
  E0904 23:53:28.572253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 23:53:28.602
  STEP: Deploying the webhook pod @ 09/04/24 23:53:28.616
  STEP: Wait for the deployment to be ready @ 09/04/24 23:53:28.646
  I0904 23:53:28.683868 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 23:53:29.572636      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:30.573057      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:30.710057 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 23, 53, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 53, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 23, 53, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 23, 53, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 23:53:31.573271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:32.573571      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 23:53:32.715
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:53:32.745
  E0904 23:53:33.574084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:33.745772 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 23:53:33.766952 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5949-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/24 23:53:34.295
  STEP: Creating a custom resource while v1 is storage version @ 09/04/24 23:53:34.327
  E0904 23:53:34.574763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:35.575270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/04/24 23:53:36.382
  STEP: Patching the custom resource while v2 is storage version @ 09/04/24 23:53:36.406
  E0904 23:53:36.576012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:37.146457 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4342" for this suite. @ 09/04/24 23:53:37.157
  STEP: Destroying namespace "webhook-markers-4450" for this suite. @ 09/04/24 23:53:37.174
• [9.723 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/04/24 23:53:37.192
  I0904 23:53:37.192433 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename conformance-tests @ 09/04/24 23:53:37.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:37.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:37.269
  STEP: Getting node addresses @ 09/04/24 23:53:37.273
  I0904 23:53:37.274208 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0904 23:53:37.283484 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-9502" for this suite. @ 09/04/24 23:53:37.288
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/04/24 23:53:37.313
  I0904 23:53:37.314020 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename server-version @ 09/04/24 23:53:37.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:37.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:37.363
  STEP: Request ServerVersion @ 09/04/24 23:53:37.373
  STEP: Confirm major version @ 09/04/24 23:53:37.375
  I0904 23:53:37.375229 18 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/04/24 23:53:37.375
  I0904 23:53:37.375599 18 server_version.go:58] cleanMinorVersion: 31
  I0904 23:53:37.375625 18 server_version.go:62] Minor version: 31
  I0904 23:53:37.376248 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8762" for this suite. @ 09/04/24 23:53:37.387
• [0.095 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/04/24 23:53:37.409
  I0904 23:53:37.409550 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-pred @ 09/04/24 23:53:37.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:37.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:37.473
  I0904 23:53:37.479643 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 23:53:37.496424 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 23:53:37.501007 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-0-215.us-east-2.compute.internal before test
  I0904 23:53:37.516236 18 predicates.go:957] cloud-controller-manager-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:46 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516323 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0904 23:53:37.516349 18 predicates.go:957] etcd-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:16 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516444 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0904 23:53:37.516512 18 predicates.go:957] helm-install-rke2-canal-259hd from kube-system started at 2024-09-04 22:17:59 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516531 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 23:53:37.516550 18 predicates.go:957] helm-install-rke2-coredns-5v24h from kube-system started at 2024-09-04 22:17:59 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516563 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 23:53:37.516626 18 predicates.go:957] helm-install-rke2-ingress-nginx-m9msd from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516644 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 23:53:37.516659 18 predicates.go:957] helm-install-rke2-metrics-server-mg5p9 from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516721 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 23:53:37.516741 18 predicates.go:957] helm-install-rke2-snapshot-controller-6fxtw from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516753 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 23:53:37.516767 18 predicates.go:957] helm-install-rke2-snapshot-controller-crd-86mvl from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516828 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 23:53:37.516845 18 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-m6729 from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516858 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 23:53:37.516905 18 predicates.go:957] kube-apiserver-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:38 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.516924 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0904 23:53:37.516941 18 predicates.go:957] kube-controller-manager-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:44 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.517002 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0904 23:53:37.517020 18 predicates.go:957] kube-proxy-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:16 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.517032 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 23:53:37.517082 18 predicates.go:957] kube-scheduler-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:44 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.517101 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0904 23:53:37.517116 18 predicates.go:957] rke2-canal-25pbv from kube-system started at 2024-09-04 22:18:07 +0000 UTC (2 container statuses recorded)
  I0904 23:53:37.517128 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 23:53:37.517140 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 23:53:37.517227 18 predicates.go:957] rke2-coredns-rke2-coredns-787bc4b7b7-k62mw from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.517245 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 23:53:37.517259 18 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-6dc69d7b97-mv7fg from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.517307 18 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0904 23:53:37.517326 18 predicates.go:957] rke2-ingress-nginx-controller-klr4x from kube-system started at 2024-09-04 22:19:01 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.517339 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 23:53:37.517352 18 predicates.go:957] rke2-metrics-server-6d99b6d454-bmgqg from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.517401 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0904 23:53:37.517419 18 predicates.go:957] rke2-snapshot-controller-658d97fccc-jjrmm from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.517430 18 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0904 23:53:37.517444 18 predicates.go:957] rke2-snapshot-validation-webhook-784bcc6c8-nlsh4 from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.517455 18 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0904 23:53:37.517511 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-nh7cj from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 23:53:37.517526 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 23:53:37.517538 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 23:53:37.517550 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-1-123.us-east-2.compute.internal before test
  I0904 23:53:37.534256 18 predicates.go:957] cloud-controller-manager-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.534506 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0904 23:53:37.534814 18 predicates.go:957] etcd-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:04 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.534946 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0904 23:53:37.535070 18 predicates.go:957] kube-apiserver-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:30 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.535218 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0904 23:53:37.535531 18 predicates.go:957] kube-controller-manager-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.535671 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0904 23:53:37.535835 18 predicates.go:957] kube-proxy-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:54 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.535974 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 23:53:37.536130 18 predicates.go:957] kube-scheduler-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.539101 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0904 23:53:37.539229 18 predicates.go:957] rke2-canal-dxxtw from kube-system started at 2024-09-04 22:22:03 +0000 UTC (2 container statuses recorded)
  I0904 23:53:37.539361 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 23:53:37.539485 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 23:53:37.539616 18 predicates.go:957] rke2-ingress-nginx-controller-vgzvt from kube-system started at 2024-09-04 22:22:15 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.541994 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 23:53:37.542321 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-t5zl8 from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 23:53:37.542455 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 23:53:37.542473 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 23:53:37.542487 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-3-55.us-east-2.compute.internal before test
  I0904 23:53:37.548278 18 predicates.go:957] cloud-controller-manager-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.548328 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0904 23:53:37.548346 18 predicates.go:957] etcd-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:53 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.548361 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0904 23:53:37.548375 18 predicates.go:957] kube-apiserver-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:04 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.548387 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0904 23:53:37.548401 18 predicates.go:957] kube-controller-manager-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.548838 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0904 23:53:37.548975 18 predicates.go:957] kube-proxy-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:53 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.548992 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 23:53:37.549006 18 predicates.go:957] kube-scheduler-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.549018 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0904 23:53:37.549032 18 predicates.go:957] rke2-canal-4t7bp from kube-system started at 2024-09-04 22:21:14 +0000 UTC (2 container statuses recorded)
  I0904 23:53:37.549044 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 23:53:37.549058 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 23:53:37.549072 18 predicates.go:957] rke2-coredns-rke2-coredns-787bc4b7b7-6sq7l from kube-system started at 2024-09-04 22:21:28 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.549084 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 23:53:37.549097 18 predicates.go:957] rke2-ingress-nginx-controller-hq7pq from kube-system started at 2024-09-04 22:21:28 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.549108 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 23:53:37.549122 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-dbjgz from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 23:53:37.549133 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 23:53:37.549145 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 23:53:37.549157 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-12.us-east-2.compute.internal before test
  I0904 23:53:37.557379 18 predicates.go:957] kube-proxy-ip-172-31-8-12.us-east-2.compute.internal from kube-system started at 2024-09-04 22:25:15 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.557436 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0904 23:53:37.557453 18 predicates.go:957] rke2-canal-9dmlp from kube-system started at 2024-09-04 22:25:15 +0000 UTC (2 container statuses recorded)
  I0904 23:53:37.557678 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0904 23:53:37.558160 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0904 23:53:37.558322 18 predicates.go:957] rke2-ingress-nginx-controller-hg8dq from kube-system started at 2024-09-04 22:58:41 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.558523 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0904 23:53:37.558605 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-04 22:31:31 +0000 UTC (1 container statuses recorded)
  I0904 23:53:37.558734 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 23:53:37.558756 18 predicates.go:957] sonobuoy-e2e-job-110b92c570fb4a51 from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0904 23:53:37.558768 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0904 23:53:37.558779 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 23:53:37.558794 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-l6z47 from sonobuoy started at 2024-09-04 22:31:36 +0000 UTC (2 container statuses recorded)
  I0904 23:53:37.558805 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 23:53:37.559006 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/24 23:53:37.559
  E0904 23:53:37.576774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:38.577225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:39.577399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/24 23:53:39.586
  STEP: Trying to apply a random label on the found node. @ 09/04/24 23:53:39.629
  STEP: verifying the node has the label kubernetes.io/e2e-de4d0d1c-b4fe-46a9-8f1b-d65b5590f4a8 42 @ 09/04/24 23:53:39.653
  STEP: Trying to relaunch the pod, now with labels. @ 09/04/24 23:53:39.662
  E0904 23:53:40.582719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:41.591364      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-de4d0d1c-b4fe-46a9-8f1b-d65b5590f4a8 off the node ip-172-31-8-12.us-east-2.compute.internal @ 09/04/24 23:53:41.713
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-de4d0d1c-b4fe-46a9-8f1b-d65b5590f4a8 @ 09/04/24 23:53:41.749
  I0904 23:53:41.755254 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1903" for this suite. @ 09/04/24 23:53:41.767
• [4.375 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/04/24 23:53:41.793
  I0904 23:53:41.793380 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-webhook @ 09/04/24 23:53:41.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:41.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:41.859
  STEP: Setting up server cert @ 09/04/24 23:53:41.866
  E0904 23:53:42.592424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/04/24 23:53:43.051
  STEP: Deploying the custom resource conversion webhook pod @ 09/04/24 23:53:43.067
  STEP: Wait for the deployment to be ready @ 09/04/24 23:53:43.112
  I0904 23:53:43.163806 18 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0904 23:53:43.598920      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:44.598941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 23:53:45.176
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 23:53:45.206
  E0904 23:53:45.599688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:46.206677 18 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0904 23:53:46.214686 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  E0904 23:53:46.600221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:47.600877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:48.601215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/04/24 23:53:48.835
  STEP: Create a v2 custom resource @ 09/04/24 23:53:48.891
  STEP: List CRs in v1 @ 09/04/24 23:53:48.96
  STEP: List CRs in v2 @ 09/04/24 23:53:48.966
  E0904 23:53:49.601749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:49.622064 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8114" for this suite. @ 09/04/24 23:53:49.639
• [7.863 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/04/24 23:53:49.657
  I0904 23:53:49.657634 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 23:53:49.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:49.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:49.709
  STEP: Creating the pod @ 09/04/24 23:53:49.713
  E0904 23:53:50.602767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:51.603285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:52.316768 18 pod_client.go:173] Successfully updated pod "annotationupdated6154b17-522c-4950-b708-e452477e5825"
  E0904 23:53:52.603897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:53.604018      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:53:54.348915 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6466" for this suite. @ 09/04/24 23:53:54.358
• [4.725 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/04/24 23:53:54.382
  I0904 23:53:54.382652 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-runtime @ 09/04/24 23:53:54.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:53:54.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:53:54.452
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/04/24 23:53:54.48
  E0904 23:53:54.605114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:55.605423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:56.605580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:57.606568      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:58.607759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:53:59.614228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:00.614250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:01.614603      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:02.615334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:03.616925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:04.617319      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:05.617413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:06.618223      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:07.618872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:08.619909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:09.620665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:10.621630      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:11.622234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/04/24 23:54:12.602
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/04/24 23:54:12.616
  E0904 23:54:12.622413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/04/24 23:54:12.624
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/04/24 23:54:12.624
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/04/24 23:54:12.711
  E0904 23:54:13.623326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:14.623907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:15.625025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/04/24 23:54:15.752
  E0904 23:54:16.625696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:17.626510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/04/24 23:54:17.772
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/04/24 23:54:17.779
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/04/24 23:54:17.779
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/04/24 23:54:17.857
  E0904 23:54:18.627502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/04/24 23:54:18.874
  E0904 23:54:19.627583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:20.628113      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:21.628240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/04/24 23:54:21.911
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/04/24 23:54:21.923
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/04/24 23:54:21.923
  I0904 23:54:21.969148 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8019" for this suite. @ 09/04/24 23:54:21.973
• [27.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 09/04/24 23:54:21.996
  I0904 23:54:21.996195 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename job @ 09/04/24 23:54:21.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:54:22.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:54:22.041
  STEP: Looking for a node to schedule job pod @ 09/04/24 23:54:22.045
  STEP: Creating a job @ 09/04/24 23:54:22.081
  STEP: Ensuring job fails @ 09/04/24 23:54:22.103
  E0904 23:54:22.628375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:23.633914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:24.635047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:25.635959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:26.636559      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:27.636645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:28.637352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:29.638056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:54:30.116202 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-94" for this suite. @ 09/04/24 23:54:30.122
• [8.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/04/24 23:54:30.138
  I0904 23:54:30.138511 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 23:54:30.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:54:30.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:54:30.191
  E0904 23:54:30.638675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:31.638766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/04/24 23:54:32.243
  I0904 23:54:32.243483 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8967 pod-service-account-63393519-2674-44ff-961b-eaa2bd1c1f45 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/04/24 23:54:32.438
  I0904 23:54:32.438272 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8967 pod-service-account-63393519-2674-44ff-961b-eaa2bd1c1f45 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0904 23:54:32.638871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/04/24 23:54:32.647
  I0904 23:54:32.647586 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8967 pod-service-account-63393519-2674-44ff-961b-eaa2bd1c1f45 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0904 23:54:32.881370 18 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-8967"
  I0904 23:54:32.884440 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8967" for this suite. @ 09/04/24 23:54:32.89
• [2.766 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 09/04/24 23:54:32.904
  I0904 23:54:32.904906 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 23:54:32.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:54:32.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:54:32.967
  STEP: Creating service test in namespace statefulset-7977 @ 09/04/24 23:54:32.974
  STEP: Creating statefulset ss in namespace statefulset-7977 @ 09/04/24 23:54:32.985
  I0904 23:54:33.022025 18 wait.go:40] Found 0 stateful pods, waiting for 1
  E0904 23:54:33.639812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:34.640018      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:35.640391      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:36.641199      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:37.641306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:38.641424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:39.641636      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:40.642369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:41.642641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:42.642947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:54:43.018949 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/04/24 23:54:43.026
  STEP: updating a scale subresource @ 09/04/24 23:54:43.029
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/04/24 23:54:43.046
  STEP: Patch a scale subresource @ 09/04/24 23:54:43.049
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/04/24 23:54:43.089
  I0904 23:54:43.095484 18 statefulset.go:138] Deleting all statefulset in ns statefulset-7977
  I0904 23:54:43.121031 18 rest.go:150] Scaling statefulset ss to 0
  E0904 23:54:43.643499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:44.643660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:45.643836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:46.644051      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:47.644187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:48.644533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:49.645174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:50.645610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:51.645857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:52.646065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:54:53.171485 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 23:54:53.175587 18 rest.go:88] Deleting statefulset ss
  I0904 23:54:53.212290 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7977" for this suite. @ 09/04/24 23:54:53.217
• [20.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/04/24 23:54:53.234
  I0904 23:54:53.234881 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 23:54:53.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:54:53.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:54:53.277
  STEP: Creating pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526 @ 09/04/24 23:54:53.29
  E0904 23:54:53.646090      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:54.646711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 23:54:55.354
  I0904 23:54:55.362330 18 container_probe.go:1749] Initial restart count of pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 is 0
  I0904 23:54:55.369941 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:54:55.647156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:56.647281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:54:57.374050 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:54:57.647540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:54:58.648460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:54:59.378383 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:54:59.648697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:00.648857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:01.383064 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:01.649641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:02.649806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:03.392609 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:03.650044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:04.650477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:05.399858 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:05.651586      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:06.652120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:07.405729 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:07.653108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:08.653737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:09.418481 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:09.653867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:10.654105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:11.422984 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:11.654256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:12.654639      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:13.428885 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:13.655599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:14.656028      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:15.434965 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:15.656304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:16.656399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:17.449687 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:17.657119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:18.657426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:19.454396 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:19.657617      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:20.658046      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:21.459704 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:21.659132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:22.659325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:23.465379 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:23.659911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:24.660089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:25.472277 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:25.660660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:26.661234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:27.478430 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:27.661815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:28.662830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:29.484315 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:29.664402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:30.664900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:31.490157 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:31.665484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:32.665741      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:33.496299 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:33.665855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:34.666691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:35.500273 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:35.667591      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:36.667810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:37.504440 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:37.668841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:38.669707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:39.670221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:40.670337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:40.751909 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:41.670779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:42.671006      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:42.762398 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:43.671869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:44.672106      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:44.768000 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:45.672267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:46.672636      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:46.773539 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:47.673385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:48.673605      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:48.778747 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:49.673714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:50.673882      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:50.783990 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:51.674043      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:52.674227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:52.789191 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:53.674264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:54.674707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:54.795384 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:55.674762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:56.675837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:56.800166 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:57.676068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:55:58.676762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:55:58.811114 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:55:59.677723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:00.677864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:00.816274 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:01.678098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:02.678259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:02.826216 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:03.679277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:04.679994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:04.832541 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:05.680522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:06.680833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:06.839124 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:07.681333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:08.681846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:08.844884 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:09.683063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:10.683120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:10.851195 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:11.683431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:12.683574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:12.860148 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:13.684380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:14.684534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:14.865998 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:15.686728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:16.687313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:16.873038 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:17.687898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:18.688637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:18.882874 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:19.689404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:20.689520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:20.888376 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:21.689745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:22.689933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:22.894357 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:23.690703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:24.691839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:24.900440 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:25.692495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:26.692948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:26.905748 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:27.693990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:28.694677      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:28.910797 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:29.696139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:30.697089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:30.917591 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:31.697463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:32.697645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:32.923107 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:33.697959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:34.698355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:34.929224 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:35.698756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:36.699989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:36.934760 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:37.700557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:38.701691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:38.944442 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:39.702350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:40.703554      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:40.949107 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:41.703945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:42.704267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:42.956301 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:43.704992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:44.706054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:44.964380 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:45.705563      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:46.705804      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:46.969920 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:47.706724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:48.707552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:48.976901 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:49.707708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:50.707831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:50.981183 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:51.707960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:52.708467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:52.986228 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:53.709601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:54.710341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:54.992765 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:55.710454      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:56.711380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:56.997561 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:57.711598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:56:58.712145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:56:59.004628 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:56:59.713239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:00.713724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:01.009508 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:01.714492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:02.714849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:03.020350 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:03.716985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:04.717599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:05.026591 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:05.717726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:06.717876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:07.031835 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:07.718074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:08.718850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:09.036953 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:09.719991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:10.720259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:11.049496 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:11.720910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:12.721258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:13.057083 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:13.722723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:14.723037      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:15.063662 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:15.723186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:16.723342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:17.068450 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:17.723884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:18.724609      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:19.073721 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:19.725537      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:20.725686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:21.079385 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:21.726139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:22.726413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:23.085889 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:23.726761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:24.727911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:25.091487 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:25.728180      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:26.728619      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:27.098499 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:27.729336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:28.729660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:29.106419 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:29.730230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:30.730424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:31.111595 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:31.731409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:32.731585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:33.116457 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:33.731815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:34.732019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:35.121013 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:35.732848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:36.732993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:37.125729 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:37.733317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:38.733796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:39.131160 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:39.733974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:40.734255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:41.136372 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:41.735175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:42.735402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:43.140894 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:43.735486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:44.736286      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:45.146214 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:45.736950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:46.737635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:47.152909 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:47.738726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:48.739330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:49.158803 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:49.739494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:50.739664      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:51.163165 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:51.739803      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:52.739927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:53.167501 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:53.740086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:54.740225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:55.172771 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:55.740539      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:56.740692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:57.177931 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:57.741772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:57:58.742632      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:57:59.182392 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:57:59.743007      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:00.743887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:01.187956 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:01.744514      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:02.746451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:03.192811 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:03.746717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:04.747245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:05.198680 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:05.747963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:06.748152      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:07.209730 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:07.748612      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:08.748731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:09.216463 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:09.749034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:10.749171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:11.230265 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:11.749774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:12.750275      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:13.236426 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:13.750969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:14.751917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:15.254753 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:15.753746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:16.752594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:17.260621 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:17.752983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:18.753806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:19.265777 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:19.754384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:20.754588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:21.270232 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:21.754754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:22.754839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:23.275073 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:23.756018      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:24.757054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:25.280458 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:25.757069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:26.757178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:27.285965 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:27.757355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:28.757497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:29.290294 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:29.757759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:30.757960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:31.294253 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:31.758884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:32.759817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:33.298444 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:33.760877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:34.761057      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:35.308869 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:35.761857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:36.762313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:37.314624 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:37.763247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:38.763538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:39.319766 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:39.763799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:40.764238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:41.324463 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:41.765099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:42.765209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:43.329216 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:43.766277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:44.766582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:45.335020 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:45.767431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:46.767649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:47.342366 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:47.767795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:48.768413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:49.347515 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:49.769334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:50.769913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:51.352571 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:51.770000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:52.770257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 23:58:53.364805 18 container_probe.go:1759] Get pod busybox-5a21a07b-ac8a-4bb7-b546-31fbc66d0207 in namespace container-probe-1526
  E0904 23:58:53.771113      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:54.771679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/04/24 23:58:55.365
  I0904 23:58:55.430880 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1526" for this suite. @ 09/04/24 23:58:55.437
• [242.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/04/24 23:58:55.458
  I0904 23:58:55.458309 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 23:58:55.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:58:55.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:58:55.512
  STEP: apply creating a deployment @ 09/04/24 23:58:55.516
  I0904 23:58:55.547764 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2901" for this suite. @ 09/04/24 23:58:55.553
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/04/24 23:58:55.57
  I0904 23:58:55.570574 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename cronjob @ 09/04/24 23:58:55.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 23:58:55.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 23:58:55.623
  STEP: Creating a cronjob @ 09/04/24 23:58:55.626
  STEP: Ensuring more than one job is running at a time @ 09/04/24 23:58:55.652
  E0904 23:58:55.772482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:56.772808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:57.773323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:58.774071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:58:59.775146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:00.776105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:01.776626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:02.776776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:03.777231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:04.777417      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:05.778475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:06.778722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:07.779154      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:08.779662      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:09.780038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:10.780243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:11.781228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:12.782045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:13.782849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:14.783686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:15.783638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:16.783785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:17.784849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:18.785745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:19.786630      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:20.788074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:21.789180      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:22.790048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:23.789917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:24.790076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:25.790750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:26.791857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:27.791935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:28.792528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:29.793225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:30.793477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:31.794359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:32.794584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:33.795421      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:34.796435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:35.797045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:36.797689      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:37.797842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:38.798317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:39.799032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:40.799136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:41.799699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:42.799938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:43.800705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:44.800841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:45.801518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:46.801717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:47.801780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:48.802473      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:49.803207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:50.803838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:51.804626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:52.804782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:53.805227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:54.805346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:55.805432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:56.805713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:57.813143      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:58.813896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 23:59:59.814069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:00.816359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/05/24 00:00:01.666
  STEP: Removing cronjob @ 09/05/24 00:00:01.674
  I0905 00:00:01.687245 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7250" for this suite. @ 09/05/24 00:00:01.693
• [66.143 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/05/24 00:00:01.713
  I0905 00:00:01.713737 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/05/24 00:00:01.714
  E0905 00:00:01.819561      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:00:01.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:00:01.843
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/05/24 00:00:01.849
  E0905 00:00:02.819718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:03.819779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:04.819905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:05.820530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:06.820620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:07.821057      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:00:07.995
  I0905 00:00:08.009514 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-c70035b7-dd6e-424b-8d5c-7f36b2046014 container test-container: <nil>
  STEP: delete the pod @ 09/05/24 00:00:08.053
  I0905 00:00:08.105053 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4207" for this suite. @ 09/05/24 00:00:08.111
• [6.410 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/05/24 00:00:08.124
  I0905 00:00:08.124288 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename events @ 09/05/24 00:00:08.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:00:08.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:00:08.179
  STEP: Create set of events @ 09/05/24 00:00:08.183
  STEP: get a list of Events with a label in the current namespace @ 09/05/24 00:00:08.263
  STEP: delete a list of events @ 09/05/24 00:00:08.269
  I0905 00:00:08.269593 18 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/05/24 00:00:08.36
  I0905 00:00:08.374633 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-499" for this suite. @ 09/05/24 00:00:08.381
• [0.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/05/24 00:00:08.4
  I0905 00:00:08.400574 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replicaset @ 09/05/24 00:00:08.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:00:08.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:00:08.451
  STEP: Create a ReplicaSet @ 09/05/24 00:00:08.455
  STEP: Verify that the required pods have come up @ 09/05/24 00:00:08.471
  I0905 00:00:08.476198 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0905 00:00:08.821948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:09.826932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:10.827856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:11.828013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:12.828136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:00:13.484069 18 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/05/24 00:00:13.484
  I0905 00:00:13.489915 18 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/05/24 00:00:13.49
  STEP: DeleteCollection of the ReplicaSets @ 09/05/24 00:00:13.496
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/05/24 00:00:13.515
  I0905 00:00:13.522343 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6713" for this suite. @ 09/05/24 00:00:13.533
• [5.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/05/24 00:00:13.599
  I0905 00:00:13.603273 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename endpointslice @ 09/05/24 00:00:13.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:00:13.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:00:13.714
  E0905 00:00:13.828883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:14.834750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:15.834736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:16.836469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:17.836430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/05/24 00:00:18.27
  STEP: referencing matching pods with named port @ 09/05/24 00:00:18.281
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/05/24 00:00:18.291
  STEP: recreating EndpointSlices after they've been deleted @ 09/05/24 00:00:18.3
  I0905 00:00:18.360852 18 endpointslice.go:938] EndpointSlice for Service endpointslice-4492/example-named-port not found
  E0905 00:00:18.837256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:19.837701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:00:20.389066 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4492" for this suite. @ 09/05/24 00:00:20.411
• [6.838 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/05/24 00:00:20.439
  I0905 00:00:20.439052 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/05/24 00:00:20.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:00:20.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:00:20.527
  STEP: Creating configMap with name configmap-test-volume-map-a04e971c-4cec-43a9-a4ba-6ca8c8a4114e @ 09/05/24 00:00:20.532
  STEP: Creating a pod to test consume configMaps @ 09/05/24 00:00:20.547
  E0905 00:00:20.837898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:21.838271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:22.838842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:23.839365      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:00:24.671
  I0905 00:00:24.676099 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-5b3f1552-b8d7-49fa-9a9d-abc75c3e4c2b container agnhost-container: <nil>
  STEP: delete the pod @ 09/05/24 00:00:24.684
  I0905 00:00:24.733766 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6679" for this suite. @ 09/05/24 00:00:24.738
• [4.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/05/24 00:00:24.79
  I0905 00:00:24.790503 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename endpointslice @ 09/05/24 00:00:24.791
  E0905 00:00:24.840150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:00:24.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:00:24.897
  STEP: getting /apis @ 09/05/24 00:00:24.901
  STEP: getting /apis/discovery.k8s.io @ 09/05/24 00:00:24.916
  STEP: getting /apis/discovery.k8s.iov1 @ 09/05/24 00:00:24.919
  STEP: creating @ 09/05/24 00:00:24.921
  STEP: getting @ 09/05/24 00:00:24.962
  STEP: listing @ 09/05/24 00:00:24.966
  STEP: watching @ 09/05/24 00:00:24.98
  I0905 00:00:24.980700 18 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/05/24 00:00:24.982
  STEP: cluster-wide watching @ 09/05/24 00:00:24.986
  I0905 00:00:24.986246 18 endpointslice.go:459] starting watch
  STEP: patching @ 09/05/24 00:00:24.987
  STEP: updating @ 09/05/24 00:00:24.999
  I0905 00:00:25.029997 18 endpointslice.go:482] waiting for watch events with expected annotations
  I0905 00:00:25.030059 18 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/05/24 00:00:25.03
  STEP: deleting a collection @ 09/05/24 00:00:25.059
  I0905 00:00:25.107987 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2173" for this suite. @ 09/05/24 00:00:25.112
• [0.334 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/05/24 00:00:25.125
  I0905 00:00:25.125287 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename var-expansion @ 09/05/24 00:00:25.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:00:25.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:00:25.18
  STEP: Creating a pod to test env composition @ 09/05/24 00:00:25.186
  E0905 00:00:25.840582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:26.846153      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:27.846722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:28.847283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:29.848663      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:30.848931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:00:31.25
  I0905 00:00:31.257104 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod var-expansion-2947519e-8d23-482f-86cd-e7d47ede3a97 container dapi-container: <nil>
  STEP: delete the pod @ 09/05/24 00:00:31.267
  I0905 00:00:31.304175 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3702" for this suite. @ 09/05/24 00:00:31.313
• [6.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/05/24 00:00:31.334
  I0905 00:00:31.334524 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-pred @ 09/05/24 00:00:31.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:00:31.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:00:31.399
  I0905 00:00:31.402210 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0905 00:00:31.413824 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0905 00:00:31.417993 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-0-215.us-east-2.compute.internal before test
  I0905 00:00:31.427343 18 predicates.go:957] cloud-controller-manager-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:46 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427505 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0905 00:00:31.427576 18 predicates.go:957] etcd-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:16 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427594 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0905 00:00:31.427612 18 predicates.go:957] helm-install-rke2-canal-259hd from kube-system started at 2024-09-04 22:17:59 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427625 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0905 00:00:31.427654 18 predicates.go:957] helm-install-rke2-coredns-5v24h from kube-system started at 2024-09-04 22:17:59 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427666 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0905 00:00:31.427681 18 predicates.go:957] helm-install-rke2-ingress-nginx-m9msd from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427692 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0905 00:00:31.427706 18 predicates.go:957] helm-install-rke2-metrics-server-mg5p9 from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427718 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0905 00:00:31.427731 18 predicates.go:957] helm-install-rke2-snapshot-controller-6fxtw from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427742 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0905 00:00:31.427756 18 predicates.go:957] helm-install-rke2-snapshot-controller-crd-86mvl from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427767 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0905 00:00:31.427783 18 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-m6729 from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427794 18 predicates.go:959] 	Container helm ready: false, restart count 0
  I0905 00:00:31.427807 18 predicates.go:957] kube-apiserver-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:38 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427818 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0905 00:00:31.427832 18 predicates.go:957] kube-controller-manager-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:44 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427843 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0905 00:00:31.427856 18 predicates.go:957] kube-proxy-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:16 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427867 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0905 00:00:31.427880 18 predicates.go:957] kube-scheduler-ip-172-31-0-215.us-east-2.compute.internal from kube-system started at 2024-09-04 22:17:44 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.427891 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0905 00:00:31.427904 18 predicates.go:957] rke2-canal-25pbv from kube-system started at 2024-09-04 22:18:07 +0000 UTC (2 container statuses recorded)
  I0905 00:00:31.427921 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0905 00:00:31.428068 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0905 00:00:31.428084 18 predicates.go:957] rke2-coredns-rke2-coredns-787bc4b7b7-k62mw from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.428096 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0905 00:00:31.428111 18 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-6dc69d7b97-mv7fg from kube-system started at 2024-09-04 22:18:19 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.428185 18 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0905 00:00:31.428205 18 predicates.go:957] rke2-ingress-nginx-controller-klr4x from kube-system started at 2024-09-04 22:19:01 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.428218 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0905 00:00:31.428233 18 predicates.go:957] rke2-metrics-server-6d99b6d454-bmgqg from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.428245 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0905 00:00:31.428258 18 predicates.go:957] rke2-snapshot-controller-658d97fccc-jjrmm from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.428270 18 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0905 00:00:31.428283 18 predicates.go:957] rke2-snapshot-validation-webhook-784bcc6c8-nlsh4 from kube-system started at 2024-09-04 22:18:47 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.428294 18 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0905 00:00:31.428311 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-nh7cj from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0905 00:00:31.428322 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0905 00:00:31.428333 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0905 00:00:31.428345 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-1-123.us-east-2.compute.internal before test
  I0905 00:00:31.433761 18 predicates.go:957] cloud-controller-manager-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.433938 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0905 00:00:31.434031 18 predicates.go:957] etcd-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:04 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.434112 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0905 00:00:31.434196 18 predicates.go:957] kube-apiserver-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:30 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.434280 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0905 00:00:31.434366 18 predicates.go:957] kube-controller-manager-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.434448 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0905 00:00:31.434612 18 predicates.go:957] kube-proxy-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:54 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.434706 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0905 00:00:31.434789 18 predicates.go:957] kube-scheduler-ip-172-31-1-123.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:39 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.434873 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0905 00:00:31.434957 18 predicates.go:957] rke2-canal-dxxtw from kube-system started at 2024-09-04 22:22:03 +0000 UTC (2 container statuses recorded)
  I0905 00:00:31.435039 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0905 00:00:31.435182 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0905 00:00:31.435272 18 predicates.go:957] rke2-ingress-nginx-controller-vgzvt from kube-system started at 2024-09-04 22:22:15 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.435354 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0905 00:00:31.435434 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-t5zl8 from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0905 00:00:31.435509 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0905 00:00:31.435587 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0905 00:00:31.435708 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-3-55.us-east-2.compute.internal before test
  I0905 00:00:31.440967 18 predicates.go:957] cloud-controller-manager-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.442798 18 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0905 00:00:31.443667 18 predicates.go:957] etcd-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:53 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.444358 18 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0905 00:00:31.444961 18 predicates.go:957] kube-apiserver-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:04 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.445520 18 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0905 00:00:31.446119 18 predicates.go:957] kube-controller-manager-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.446711 18 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0905 00:00:31.447273 18 predicates.go:957] kube-proxy-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:20:53 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.447962 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0905 00:00:31.448783 18 predicates.go:957] kube-scheduler-ip-172-31-3-55.us-east-2.compute.internal from kube-system started at 2024-09-04 22:21:13 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.449329 18 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0905 00:00:31.450180 18 predicates.go:957] rke2-canal-4t7bp from kube-system started at 2024-09-04 22:21:14 +0000 UTC (2 container statuses recorded)
  I0905 00:00:31.450606 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0905 00:00:31.450756 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0905 00:00:31.451261 18 predicates.go:957] rke2-coredns-rke2-coredns-787bc4b7b7-6sq7l from kube-system started at 2024-09-04 22:21:28 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.451520 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0905 00:00:31.451856 18 predicates.go:957] rke2-ingress-nginx-controller-hq7pq from kube-system started at 2024-09-04 22:21:28 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.451998 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0905 00:00:31.452519 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-dbjgz from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0905 00:00:31.453062 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0905 00:00:31.453607 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0905 00:00:31.454124 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-12.us-east-2.compute.internal before test
  I0905 00:00:31.476045 18 predicates.go:957] concurrent-28758239-c5hbp from cronjob-7250 started at 2024-09-04 23:59:00 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.476092 18 predicates.go:959] 	Container c ready: true, restart count 0
  I0905 00:00:31.476110 18 predicates.go:957] concurrent-28758240-t9s5c from cronjob-7250 started at 2024-09-05 00:00:00 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.476122 18 predicates.go:959] 	Container c ready: true, restart count 0
  I0905 00:00:31.476136 18 predicates.go:957] kube-proxy-ip-172-31-8-12.us-east-2.compute.internal from kube-system started at 2024-09-04 22:25:15 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.476147 18 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0905 00:00:31.476435 18 predicates.go:957] rke2-canal-9dmlp from kube-system started at 2024-09-04 22:25:15 +0000 UTC (2 container statuses recorded)
  I0905 00:00:31.476452 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0905 00:00:31.476465 18 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0905 00:00:31.476619 18 predicates.go:957] rke2-ingress-nginx-controller-hg8dq from kube-system started at 2024-09-04 22:58:41 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.476657 18 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0905 00:00:31.476675 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-04 22:31:31 +0000 UTC (1 container statuses recorded)
  I0905 00:00:31.476686 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0905 00:00:31.476700 18 predicates.go:957] sonobuoy-e2e-job-110b92c570fb4a51 from sonobuoy started at 2024-09-04 22:31:35 +0000 UTC (2 container statuses recorded)
  I0905 00:00:31.476711 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0905 00:00:31.476724 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0905 00:00:31.476737 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-dd4841b2f4684130-l6z47 from sonobuoy started at 2024-09-04 22:31:36 +0000 UTC (2 container statuses recorded)
  I0905 00:00:31.476748 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0905 00:00:31.476760 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/05/24 00:00:31.476
  E0905 00:00:31.849059      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:32.849402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:33.850086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:34.850648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/05/24 00:00:35.545
  STEP: Trying to apply a random label on the found node. @ 09/05/24 00:00:35.588
  STEP: verifying the node has the label kubernetes.io/e2e-de5bd151-4884-4cbe-905f-e017e59edd2a 95 @ 09/05/24 00:00:35.66
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/05/24 00:00:35.666
  E0905 00:00:35.851048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:36.852165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:37.852708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:38.853552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.8.12 on the node which pod4 resides and expect not scheduled @ 09/05/24 00:00:39.712
  E0905 00:00:39.854628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:40.854757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:41.855031      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:42.856655      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:43.857331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:44.857758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:45.858999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:46.859214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:47.860290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:48.861282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:49.862569      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:50.862796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:51.863013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:52.863839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:53.864762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:54.864578      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:55.866624      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:56.866739      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:57.867058      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:58.867207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:00:59.867863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:00.868042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:01.868412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:02.868572      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:03.869099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:04.869255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:05.869491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:06.869732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:07.870408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:08.870851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:09.871411      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:10.871661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:11.871783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:12.872187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:13.872713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:14.872823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:15.873768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:16.874094      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:17.874756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:18.875399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:19.876437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:20.876634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:21.877224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:22.877200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:23.877660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:24.877971      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:25.878355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:26.878838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:27.879887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:28.880830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:29.880986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:30.881219      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:31.881667      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:32.881673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:33.882943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:34.883239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:35.883507      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:36.884083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:37.884418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:38.884518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:39.884696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:40.884852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:41.885021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:42.885186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:43.885348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:44.885578      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:45.885932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:46.885893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:47.886495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:48.887377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:49.887510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:50.887775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:51.887938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:52.888027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:53.888188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:54.888495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:55.888801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:56.888989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:57.889128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:58.889433      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:01:59.889594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:00.890204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:01.890410      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:02.890511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:03.890685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:04.890745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:05.890874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:06.891950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:07.892446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:08.892855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:09.892950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:10.893512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:11.893705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:12.894814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:13.896147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:14.896711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:15.896907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:16.897509      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:17.897949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:18.897817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:19.898019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:20.899147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:21.899299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:22.899837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:23.899996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:24.901247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:25.901389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:26.901582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:27.902327      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:28.902519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:29.902873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:30.902948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:31.903965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:32.904900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:33.905082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:34.905066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:35.905583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:36.905808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:37.905974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:38.906157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:39.906271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:40.906988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:41.907814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:42.908960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:43.909990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:44.910959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:45.911903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:46.912469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:47.912590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:48.913482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:49.913611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:50.913810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:51.914014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:52.915035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:53.915822      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:54.916266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:55.916512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:56.916655      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:57.916814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:58.917284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:02:59.917665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:00.918121      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:01.919612      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:02.920266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:03.921339      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:04.921896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:05.922238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:06.923129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:07.923751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:08.923934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:09.924500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:10.925427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:11.925732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:12.926350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:13.927308      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:14.928267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:15.928431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:16.929426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:17.929581      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:18.930116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:19.930276      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:20.931302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:21.931469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:22.932343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:23.932422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:24.932638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:25.932792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:26.933525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:27.933758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:28.933960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:29.934236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:30.934939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:31.935413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:32.936162      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:33.936323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:34.936538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:35.936745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:36.937693      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:37.937849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:38.938936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:39.939826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:40.940054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:41.940629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:42.941178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:43.942144      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:44.943082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:45.943508      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:46.944148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:47.944569      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:48.944942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:49.945083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:50.946327      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:51.946135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:52.946695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:53.946742      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:54.947674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:55.947807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:56.948317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:57.948482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:58.948906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:03:59.949247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:00.949947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:01.950506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:02.950638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:03.950674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:04.951417      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:05.952479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:06.952557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:07.952798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:08.953840      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:09.954149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:10.955438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:11.955772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:12.956862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:13.957322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:14.958023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:15.958247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:16.958416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:17.958752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:18.958996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:19.959121      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:20.959541      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:21.959709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:22.960561      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:23.960615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:24.961352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:25.961468      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:26.961591      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:27.961897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:28.962505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:29.963139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:30.963692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:31.963799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:32.964314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:33.964460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:34.964824      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:35.965200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:36.965710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:37.965886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:38.966235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:39.966728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:40.966907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:41.967253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:42.968010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:43.968090      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:44.968238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:45.968370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:46.968501      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:47.968705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:48.969531      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:49.969753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:50.969986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:51.970209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:52.970321      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:53.970399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:54.971100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:55.971796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:56.972036      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:57.972211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:58.972678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:04:59.973220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:00.973596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:01.974146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:02.974498      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:03.974710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:04.974890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:05.975048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:06.975352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:07.975944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:08.979651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:09.979959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:10.980156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:11.980505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:12.980627      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:13.981590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:14.981835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:15.982010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:16.982145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:17.982773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:18.982884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:19.983042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:20.983455      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:21.983682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:22.984156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:23.985245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:24.985476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:25.985792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:26.986757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:27.986905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:28.986977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:29.987431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:30.987556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:31.987970      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:32.988076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:33.988194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:34.988483      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:35.989073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:36.989602      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:37.990455      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:38.990720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-de5bd151-4884-4cbe-905f-e017e59edd2a off the node ip-172-31-8-12.us-east-2.compute.internal @ 09/05/24 00:05:39.736
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-de5bd151-4884-4cbe-905f-e017e59edd2a @ 09/05/24 00:05:39.772
  I0905 00:05:39.794243 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-527" for this suite. @ 09/05/24 00:05:39.812
• [308.509 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 09/05/24 00:05:39.844
  I0905 00:05:39.844954 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/05/24 00:05:39.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:05:39.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:05:39.892
  STEP: Creating a pod to test downward api env vars @ 09/05/24 00:05:39.896
  E0905 00:05:39.992000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:40.993160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:41.994092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:42.994416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:43.995527      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:05:43.997
  I0905 00:05:44.016493 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downward-api-0781f6bb-0c1c-4169-9e41-44b6865ece8e container dapi-container: <nil>
  STEP: delete the pod @ 09/05/24 00:05:44.035
  I0905 00:05:44.079428 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4836" for this suite. @ 09/05/24 00:05:44.085
• [4.258 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 09/05/24 00:05:44.103
  I0905 00:05:44.103823 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename svcaccounts @ 09/05/24 00:05:44.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:05:44.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:05:44.141
  I0905 00:05:44.187779 18 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0905 00:05:44.187840 18 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0905 00:05:44.212539 18 service_accounts.go:253] created pod pod-service-account-mountsa
  I0905 00:05:44.212596 18 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0905 00:05:44.243001 18 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0905 00:05:44.243176 18 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0905 00:05:44.272125 18 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0905 00:05:44.272364 18 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0905 00:05:44.315415 18 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0905 00:05:44.315658 18 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0905 00:05:44.344163 18 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0905 00:05:44.344219 18 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0905 00:05:44.382858 18 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0905 00:05:44.382914 18 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0905 00:05:44.421303 18 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0905 00:05:44.421373 18 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0905 00:05:44.446449 18 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0905 00:05:44.446506 18 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0905 00:05:44.446738 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3717" for this suite. @ 09/05/24 00:05:44.474
• [0.404 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/05/24 00:05:44.507
  I0905 00:05:44.507533 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/05/24 00:05:44.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:05:44.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:05:44.639
  STEP: Counting existing ResourceQuota @ 09/05/24 00:05:44.642
  E0905 00:05:44.996359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:45.997216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:46.997287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:47.998145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:48.999096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/05/24 00:05:49.662
  STEP: Ensuring resource quota status is calculated @ 09/05/24 00:05:49.678
  E0905 00:05:50.001336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:51.010908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/05/24 00:05:51.684
  STEP: Creating a NodePort Service @ 09/05/24 00:05:51.782
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/05/24 00:05:51.899
  E0905 00:05:52.010899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures service creation @ 09/05/24 00:05:52.026
  E0905 00:05:53.012010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:54.012215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/05/24 00:05:54.031
  STEP: Ensuring resource quota status released usage @ 09/05/24 00:05:54.149
  E0905 00:05:55.012317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:56.012572      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:05:56.158738 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3766" for this suite. @ 09/05/24 00:05:56.163
• [11.675 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/05/24 00:05:56.183
  I0905 00:05:56.183462 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/05/24 00:05:56.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:05:56.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:05:56.232
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/05/24 00:05:56.238
  E0905 00:05:57.012652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:58.012763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:05:59.013765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:00.013922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:06:00.31
  I0905 00:06:00.316503 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-00acc7c6-aa89-4bd7-8f1b-cede71dc45f6 container test-container: <nil>
  STEP: delete the pod @ 09/05/24 00:06:00.329
  I0905 00:06:00.388408 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-945" for this suite. @ 09/05/24 00:06:00.408
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/05/24 00:06:00.423
  I0905 00:06:00.424024 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/05/24 00:06:00.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:00.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:00.469
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/05/24 00:06:00.475
  E0905 00:06:01.014730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:02.016629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:03.016234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:04.017479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:06:04.531
  I0905 00:06:04.537174 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-736afedc-a722-4c56-8450-4726c54d4e9d container test-container: <nil>
  STEP: delete the pod @ 09/05/24 00:06:04.551
  I0905 00:06:04.586237 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5938" for this suite. @ 09/05/24 00:06:04.592
• [4.188 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/05/24 00:06:04.612
  I0905 00:06:04.612186 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename watch @ 09/05/24 00:06:04.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:04.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:04.673
  STEP: getting a starting resourceVersion @ 09/05/24 00:06:04.677
  STEP: starting a background goroutine to produce watch events @ 09/05/24 00:06:04.681
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/05/24 00:06:04.682
  E0905 00:06:05.017621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:06.017653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:07.018092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:06:07.426686 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2612" for this suite. @ 09/05/24 00:06:07.475
• [2.924 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/05/24 00:06:07.537
  I0905 00:06:07.537807 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename apf @ 09/05/24 00:06:07.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:07.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:07.621
  STEP: getting /apis @ 09/05/24 00:06:07.625
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/05/24 00:06:07.631
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/05/24 00:06:07.633
  STEP: creating @ 09/05/24 00:06:07.635
  STEP: getting @ 09/05/24 00:06:07.697
  STEP: listing @ 09/05/24 00:06:07.704
  STEP: watching @ 09/05/24 00:06:07.709
  I0905 00:06:07.709774 18 flowcontrol.go:620] starting watch
  STEP: patching @ 09/05/24 00:06:07.711
  STEP: updating @ 09/05/24 00:06:07.742
  I0905 00:06:07.775594 18 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/05/24 00:06:07.776
  STEP: patching /status @ 09/05/24 00:06:07.785
  STEP: updating /status @ 09/05/24 00:06:07.811
  STEP: deleting @ 09/05/24 00:06:07.866
  STEP: deleting a collection @ 09/05/24 00:06:07.888
  I0905 00:06:07.968764 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5803" for this suite. @ 09/05/24 00:06:07.993
• [0.481 seconds]
------------------------------
SSS
------------------------------
  E0905 00:06:08.018397      18 retrywatcher.go:131] "Watch failed" err="context canceled"
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/05/24 00:06:08.02
  I0905 00:06:08.020047 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/05/24 00:06:08.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:08.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:08.079
  STEP: Creating a pod to test downward API volume plugin @ 09/05/24 00:06:08.086
  E0905 00:06:09.019525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:10.019669      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:11.019772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:12.020291      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:06:12.175
  I0905 00:06:12.179824 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-28a98091-171c-4e5f-9baf-a3887eb607c2 container client-container: <nil>
  STEP: delete the pod @ 09/05/24 00:06:12.187
  I0905 00:06:12.245459 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-331" for this suite. @ 09/05/24 00:06:12.251
• [4.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/05/24 00:06:12.269
  I0905 00:06:12.269658 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename lease-test @ 09/05/24 00:06:12.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:12.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:12.319
  I0905 00:06:12.467185 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1280" for this suite. @ 09/05/24 00:06:12.475
• [0.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/05/24 00:06:12.488
  I0905 00:06:12.488129 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/05/24 00:06:12.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:12.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:12.532
  STEP: Creating a ResourceQuota with terminating scope @ 09/05/24 00:06:12.537
  STEP: Ensuring ResourceQuota status is calculated @ 09/05/24 00:06:12.547
  E0905 00:06:13.020520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:14.020805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/05/24 00:06:14.554
  STEP: Ensuring ResourceQuota status is calculated @ 09/05/24 00:06:14.566
  E0905 00:06:15.021638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:16.022749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/05/24 00:06:16.571
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/05/24 00:06:16.6
  E0905 00:06:17.023345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:18.023526      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/05/24 00:06:18.604
  E0905 00:06:19.023686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:20.023992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/05/24 00:06:20.611
  STEP: Ensuring resource quota status released the pod usage @ 09/05/24 00:06:20.664
  E0905 00:06:21.024342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:22.024572      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/05/24 00:06:22.669
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/05/24 00:06:22.701
  E0905 00:06:23.025338      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:24.025500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/05/24 00:06:24.706
  E0905 00:06:25.027164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:26.028496      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/05/24 00:06:26.71
  STEP: Ensuring resource quota status released the pod usage @ 09/05/24 00:06:26.746
  E0905 00:06:27.028382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:28.028519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:06:28.751884 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4035" for this suite. @ 09/05/24 00:06:28.757
• [16.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/05/24 00:06:28.772
  I0905 00:06:28.772843 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename var-expansion @ 09/05/24 00:06:28.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:28.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:28.853
  E0905 00:06:29.028665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:30.028839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:06:30.920608 18 delete.go:62] Deleting pod "var-expansion-897a1b6d-aff6-4c9b-9d88-d390a153580e" in namespace "var-expansion-7653"
  I0905 00:06:30.952847 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-897a1b6d-aff6-4c9b-9d88-d390a153580e" to be fully deleted
  E0905 00:06:31.029855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:32.030208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:33.030738      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:34.031020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:06:34.978478 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7653" for this suite. @ 09/05/24 00:06:34.983
• [6.229 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/05/24 00:06:35.002
  I0905 00:06:35.002665 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/05/24 00:06:35.003
  E0905 00:06:35.031573      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:35.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:35.047
  STEP: Creating the pod @ 09/05/24 00:06:35.054
  E0905 00:06:36.031885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:37.032038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:06:37.664139 18 pod_client.go:173] Successfully updated pod "labelsupdateee2f153a-3589-4591-aca8-90c0c12a77eb"
  E0905 00:06:38.033030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:39.033853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:06:39.685466 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-742" for this suite. @ 09/05/24 00:06:39.69
• [4.701 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/05/24 00:06:39.703
  I0905 00:06:39.703368 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/05/24 00:06:39.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:39.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:39.748
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/05/24 00:06:39.751
  E0905 00:06:40.034331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:41.034715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:42.035830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:43.036016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:06:43.806
  I0905 00:06:43.811047 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-568288a1-df84-4c2d-b53a-075ed5fdb950 container test-container: <nil>
  STEP: delete the pod @ 09/05/24 00:06:43.822
  I0905 00:06:43.868109 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9741" for this suite. @ 09/05/24 00:06:43.875
• [4.185 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/05/24 00:06:43.889
  I0905 00:06:43.889340 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/05/24 00:06:43.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:43.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:43.936
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2505 @ 09/05/24 00:06:43.939
  STEP: changing the ExternalName service to type=ClusterIP @ 09/05/24 00:06:43.949
  STEP: creating replication controller externalname-service in namespace services-2505 @ 09/05/24 00:06:43.988
  I0905 00:06:44.011262      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2505, replica count: 2
  E0905 00:06:44.036818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:45.036961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:46.037936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:47.038305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:06:47.063629      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0905 00:06:47.063673 18 resource.go:361] Creating new exec pod
  E0905 00:06:48.038438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:49.038659      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:50.039716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:06:50.165434 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2505 exec execpodqlcb5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0905 00:06:50.368866 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0905 00:06:50.368933 18 builder.go:147] stdout: "externalname-service-pqvsl"
  I0905 00:06:50.369031 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2505 exec execpodqlcb5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.169.108 80'
  I0905 00:06:50.597377 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.169.108 80\nConnection to 10.43.169.108 80 port [tcp/http] succeeded!\n"
  I0905 00:06:50.597430 18 builder.go:147] stdout: "externalname-service-hmvwr"
  I0905 00:06:50.597609 18 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0905 00:06:50.706099 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2505" for this suite. @ 09/05/24 00:06:50.723
• [6.847 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 09/05/24 00:06:50.737
  I0905 00:06:50.737159 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename job @ 09/05/24 00:06:50.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:06:50.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:06:50.78
  STEP: Creating a suspended job @ 09/05/24 00:06:50.788
  STEP: Patching the Job @ 09/05/24 00:06:50.809
  STEP: Watching for Job to be patched @ 09/05/24 00:06:50.858
  I0905 00:06:50.869058 18 job.go:1330] Event ADDED observed for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-job-label:e2e-4s26g] and annotations: map[]
  I0905 00:06:50.869352 18 job.go:1330] Event MODIFIED observed for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-job-label:e2e-4s26g] and annotations: map[]
  I0905 00:06:50.869542 18 job.go:1333] Event MODIFIED found for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-4s26g:patched e2e-job-label:e2e-4s26g] and annotations: map[]
  STEP: Updating the job @ 09/05/24 00:06:50.869
  STEP: Watching for Job to be updated @ 09/05/24 00:06:50.896
  I0905 00:06:50.903425 18 job.go:1333] Event MODIFIED found for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-4s26g:patched e2e-job-label:e2e-4s26g] and annotations: map[updated:true]
  I0905 00:06:50.903499 18 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/05/24 00:06:50.903
  I0905 00:06:50.917268 18 job.go:1233] Job: e2e-4s26g as labels: map[e2e-4s26g:patched e2e-job-label:e2e-4s26g]
  STEP: Waiting for job to complete @ 09/05/24 00:06:50.917
  E0905 00:06:51.040499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:52.040639      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:53.041116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:54.042141      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:55.048770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:56.045542      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:57.049009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:58.049337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:06:59.050903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:00.051009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:01.051339      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:02.051971      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/05/24 00:07:02.928
  STEP: Watching for Job to be deleted @ 09/05/24 00:07:02.942
  I0905 00:07:02.945351 18 job.go:1330] Event MODIFIED observed for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-4s26g:patched e2e-job-label:e2e-4s26g] and annotations: map[updated:true]
  I0905 00:07:02.945446 18 job.go:1330] Event MODIFIED observed for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-4s26g:patched e2e-job-label:e2e-4s26g] and annotations: map[updated:true]
  I0905 00:07:02.945473 18 job.go:1330] Event MODIFIED observed for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-4s26g:patched e2e-job-label:e2e-4s26g] and annotations: map[updated:true]
  I0905 00:07:02.945727 18 job.go:1330] Event MODIFIED observed for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-4s26g:patched e2e-job-label:e2e-4s26g] and annotations: map[updated:true]
  I0905 00:07:02.945840 18 job.go:1330] Event MODIFIED observed for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-4s26g:patched e2e-job-label:e2e-4s26g] and annotations: map[updated:true]
  I0905 00:07:02.946257 18 job.go:1333] Event DELETED found for Job e2e-4s26g in namespace job-1483 with labels: map[e2e-4s26g:patched e2e-job-label:e2e-4s26g] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/05/24 00:07:02.946
  I0905 00:07:02.958553 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1483" for this suite. @ 09/05/24 00:07:02.975
• [12.310 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/05/24 00:07:03.047
  I0905 00:07:03.049358 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename proxy @ 09/05/24 00:07:03.05
  E0905 00:07:03.052978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:07:03.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:07:03.111
  I0905 00:07:03.114821 18 proxy.go:387] Creating pod...
  E0905 00:07:04.055838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:05.053856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:06.054063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:07.054387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:07:07.149627 18 proxy.go:411] Creating service...
  I0905 00:07:07.176353 18 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/pods/agnhost/proxy?method=DELETE
  I0905 00:07:07.190963 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0905 00:07:07.191738 18 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/pods/agnhost/proxy?method=OPTIONS
  I0905 00:07:07.208275 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0905 00:07:07.208347 18 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/pods/agnhost/proxy?method=PATCH
  I0905 00:07:07.227569 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0905 00:07:07.228419 18 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/pods/agnhost/proxy?method=POST
  I0905 00:07:07.235513 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0905 00:07:07.239594 18 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/pods/agnhost/proxy?method=PUT
  I0905 00:07:07.244669 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0905 00:07:07.244864 18 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/services/e2e-proxy-test-service/proxy?method=DELETE
  I0905 00:07:07.251250 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0905 00:07:07.251317 18 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0905 00:07:07.260986 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0905 00:07:07.261049 18 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/services/e2e-proxy-test-service/proxy?method=PATCH
  I0905 00:07:07.284136 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0905 00:07:07.284204 18 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/services/e2e-proxy-test-service/proxy?method=POST
  I0905 00:07:07.293337 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0905 00:07:07.293411 18 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/services/e2e-proxy-test-service/proxy?method=PUT
  I0905 00:07:07.309809 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0905 00:07:07.309882 18 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/pods/agnhost/proxy?method=GET
  I0905 00:07:07.313574 18 proxy.go:487] http.Client request:GET StatusCode:301
  I0905 00:07:07.313641 18 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/services/e2e-proxy-test-service/proxy?method=GET
  I0905 00:07:07.318873 18 proxy.go:487] http.Client request:GET StatusCode:301
  I0905 00:07:07.318945 18 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/pods/agnhost/proxy?method=HEAD
  I0905 00:07:07.322526 18 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0905 00:07:07.322608 18 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2856/services/e2e-proxy-test-service/proxy?method=HEAD
  I0905 00:07:07.327634 18 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0905 00:07:07.327987 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2856" for this suite. @ 09/05/24 00:07:07.335
• [4.304 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/05/24 00:07:07.351
  I0905 00:07:07.351786 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/05/24 00:07:07.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:07:07.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:07:07.402
  STEP: Creating a pod to test downward API volume plugin @ 09/05/24 00:07:07.406
  E0905 00:07:08.054720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:09.054957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:10.055867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:11.056039      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:07:11.465
  I0905 00:07:11.469926 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-e7d7895c-0aef-43aa-a8d7-038379e30168 container client-container: <nil>
  STEP: delete the pod @ 09/05/24 00:07:11.484
  I0905 00:07:11.526189 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-761" for this suite. @ 09/05/24 00:07:11.533
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/05/24 00:07:11.567
  I0905 00:07:11.567122 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename subjectreview @ 09/05/24 00:07:11.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:07:11.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:07:11.638
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7002" @ 09/05/24 00:07:11.642
  I0905 00:07:11.665687 18 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-7002:e2e"
  I0905 00:07:11.665764 18 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7002"}
  I0905 00:07:11.665783 18 subjectreviews.go:71] saUID: "f0bd4340-0878-4b0b-be1a-01086fdd8671"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7002:e2e" @ 09/05/24 00:07:11.665
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7002:e2e" @ 09/05/24 00:07:11.666
  I0905 00:07:11.669733 18 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7002:e2e" api 'list' configmaps in "subjectreview-7002" namespace @ 09/05/24 00:07:11.669
  I0905 00:07:11.679059 18 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7002:e2e" @ 09/05/24 00:07:11.679
  I0905 00:07:11.687772 18 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0905 00:07:11.687843 18 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0905 00:07:11.687964 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7002" for this suite. @ 09/05/24 00:07:11.694
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 09/05/24 00:07:11.711
  I0905 00:07:11.711128 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sched-preemption @ 09/05/24 00:07:11.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:07:11.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:07:11.769
  I0905 00:07:11.817196 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0905 00:07:12.056081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:13.056230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:14.057119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:15.057302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:16.057871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:17.058033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:18.058836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:19.059886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:20.060550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:21.060958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:22.061048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:23.061359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:24.062277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:25.062597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:26.063539      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:27.063803      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:28.064929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:29.065858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:30.066017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:31.066781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:32.067429      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:33.067565      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:34.068731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:35.068916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:36.069416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:37.069638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:38.070416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:39.070758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:40.071744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:41.071990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:42.072873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:43.073192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:44.073784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:45.073980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:46.077820      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:47.078045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:48.079017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:49.079541      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:50.080626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:51.080858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:52.080958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:53.081559      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:54.081999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:55.082213      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:56.082632      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:57.083386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:58.084083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:07:59.084569      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:00.085432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:01.085607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:02.087095      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:03.087842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:04.088877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:05.089129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:06.089677      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:07.089893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:08.090966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:09.091848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:10.092845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:11.093099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:08:11.823053 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/05/24 00:08:11.828
  I0905 00:08:11.888412 18 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0905 00:08:11.910967 18 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0905 00:08:11.960517 18 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0905 00:08:11.999100 18 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I0905 00:08:12.082777 18 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  E0905 00:08:12.094908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:08:12.123219 18 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  I0905 00:08:12.205969 18 preemption.go:175] Created pod: pod3-0-sched-preemption-medium-priority
  I0905 00:08:12.243312 18 preemption.go:175] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/05/24 00:08:12.243
  E0905 00:08:13.095802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:14.095972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:15.096773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:16.096991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/05/24 00:08:16.303
  E0905 00:08:17.097598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:18.097813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:19.098507      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:20.098722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:08:20.616951 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9136" for this suite. @ 09/05/24 00:08:20.631
• [68.953 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/05/24 00:08:20.665
  I0905 00:08:20.665575 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/05/24 00:08:20.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:08:20.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:08:20.741
  STEP: Creating secret with name secret-test-e8546bad-68e2-44fa-bcbe-71d115d14327 @ 09/05/24 00:08:20.747
  STEP: Creating a pod to test consume secrets @ 09/05/24 00:08:20.771
  E0905 00:08:21.100828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:22.101214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:23.101416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:24.101986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:08:24.869
  I0905 00:08:24.873826 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-secrets-675cdc1f-c8b2-4e62-94d4-837aa8feaf62 container secret-env-test: <nil>
  STEP: delete the pod @ 09/05/24 00:08:24.887
  I0905 00:08:24.927712 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1784" for this suite. @ 09/05/24 00:08:24.932
• [4.290 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/05/24 00:08:24.955
  I0905 00:08:24.956101 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/05/24 00:08:24.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:08:25.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:08:25.008
  STEP: Creating a pod to test downward API volume plugin @ 09/05/24 00:08:25.012
  E0905 00:08:25.102759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:26.102871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:27.103080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:28.103216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:08:29.063
  I0905 00:08:29.075962 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-3daeb395-370c-4577-bdb1-ec2c079bb4f2 container client-container: <nil>
  STEP: delete the pod @ 09/05/24 00:08:29.095
  E0905 00:08:29.104207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:08:29.163449 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6696" for this suite. @ 09/05/24 00:08:29.168
• [4.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/05/24 00:08:29.189
  I0905 00:08:29.189441 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename events @ 09/05/24 00:08:29.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:08:29.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:08:29.242
  STEP: creating a test event @ 09/05/24 00:08:29.245
  STEP: listing all events in all namespaces @ 09/05/24 00:08:29.259
  STEP: patching the test event @ 09/05/24 00:08:29.264
  STEP: fetching the test event @ 09/05/24 00:08:29.284
  STEP: updating the test event @ 09/05/24 00:08:29.291
  STEP: getting the test event @ 09/05/24 00:08:29.314
  STEP: deleting the test event @ 09/05/24 00:08:29.318
  STEP: listing all events in all namespaces @ 09/05/24 00:08:29.339
  I0905 00:08:29.344340 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5904" for this suite. @ 09/05/24 00:08:29.349
• [0.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/05/24 00:08:29.363
  I0905 00:08:29.363550 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/05/24 00:08:29.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:08:29.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:08:29.411
  STEP: Creating secret with name secret-test-map-d5f44ba8-fa95-4834-8d67-53e373b5b93d @ 09/05/24 00:08:29.414
  STEP: Creating a pod to test consume secrets @ 09/05/24 00:08:29.426
  E0905 00:08:30.104362      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:31.104946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:32.105105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:33.105844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:08:33.472
  I0905 00:08:33.476498 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-secrets-b2ef6fb5-dfc6-4216-979c-446178aa78f2 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/05/24 00:08:33.496
  I0905 00:08:33.534143 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5445" for this suite. @ 09/05/24 00:08:33.541
• [4.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/05/24 00:08:33.558
  I0905 00:08:33.558375 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/05/24 00:08:33.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:08:33.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:08:33.616
  I0905 00:08:33.623353 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  E0905 00:08:34.106708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:08:34.673736 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9515" for this suite. @ 09/05/24 00:08:34.683
• [1.146 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 09/05/24 00:08:34.704
  I0905 00:08:34.704357 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/05/24 00:08:34.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:08:34.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:08:34.781
  STEP: Starting the proxy @ 09/05/24 00:08:34.787
  I0905 00:08:34.792221 18 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-6422 proxy --unix-socket=/tmp/kubectl-proxy-unix2175632825/test'
  STEP: retrieving proxy /api/ output @ 09/05/24 00:08:34.863
  I0905 00:08:34.865183 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6422" for this suite. @ 09/05/24 00:08:34.873
• [0.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/05/24 00:08:34.901
  I0905 00:08:34.902028 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename runtimeclass @ 09/05/24 00:08:34.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:08:34.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:08:34.931
  STEP: getting /apis @ 09/05/24 00:08:34.934
  STEP: getting /apis/node.k8s.io @ 09/05/24 00:08:34.94
  STEP: getting /apis/node.k8s.io/v1 @ 09/05/24 00:08:34.942
  STEP: creating @ 09/05/24 00:08:34.943
  STEP: watching @ 09/05/24 00:08:34.984
  I0905 00:08:34.984413 18 runtimeclass.go:275] starting watch
  STEP: getting @ 09/05/24 00:08:34.997
  STEP: listing @ 09/05/24 00:08:35.001
  STEP: patching @ 09/05/24 00:08:35.006
  STEP: updating @ 09/05/24 00:08:35.017
  I0905 00:08:35.028171 18 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/05/24 00:08:35.028
  STEP: deleting a collection @ 09/05/24 00:08:35.057
  I0905 00:08:35.092217 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1888" for this suite. @ 09/05/24 00:08:35.096
  E0905 00:08:35.106941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
• [0.211 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 09/05/24 00:08:35.113
  I0905 00:08:35.113186 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename statefulset @ 09/05/24 00:08:35.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:08:35.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:08:35.157
  STEP: Creating service test in namespace statefulset-8064 @ 09/05/24 00:08:35.16
  I0905 00:08:35.213908 18 wait.go:40] Found 0 stateful pods, waiting for 1
  E0905 00:08:36.106971      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:37.107884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:38.108058      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:39.108251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:40.108777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:41.109120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:42.109465      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:43.109858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:44.110731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:45.111087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:08:45.203327 18 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/05/24 00:08:45.304
  I0905 00:08:45.357050 18 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0905 00:08:45.357126 18 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0905 00:08:46.111623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:47.111780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:48.111964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:49.112847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:50.113325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:51.113717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:52.113844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:53.114188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:54.114868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:55.114840      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:08:55.338731 18 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0905 00:08:55.338800 18 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/05/24 00:08:55.349
  STEP: Delete all of the StatefulSets @ 09/05/24 00:08:55.359
  STEP: Verify that StatefulSets have been deleted @ 09/05/24 00:08:55.47
  I0905 00:08:55.477067 18 statefulset.go:138] Deleting all statefulset in ns statefulset-8064
  I0905 00:08:55.582795 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8064" for this suite. @ 09/05/24 00:08:55.589
• [20.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/05/24 00:08:55.614
  I0905 00:08:55.614178 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename subpath @ 09/05/24 00:08:55.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:08:55.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:08:55.664
  STEP: Setting up data @ 09/05/24 00:08:55.667
  STEP: Creating pod pod-subpath-test-configmap-fhn5 @ 09/05/24 00:08:55.707
  STEP: Creating a pod to test atomic-volume-subpath @ 09/05/24 00:08:55.707
  E0905 00:08:56.115435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:57.116494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:58.116656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:08:59.116850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:00.117479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:01.117643      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:02.119029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:03.119159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:04.119382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:05.120268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:06.121106      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:07.121253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:08.121919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:09.122197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:10.122887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:11.123217      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:12.124630      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:13.124737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:14.124947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:15.125127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:16.125967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:17.126989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:18.127849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:19.127952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:20.128428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:21.128609      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:09:21.825
  I0905 00:09:21.830198 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-subpath-test-configmap-fhn5 container test-container-subpath-configmap-fhn5: <nil>
  STEP: delete the pod @ 09/05/24 00:09:21.84
  STEP: Deleting pod pod-subpath-test-configmap-fhn5 @ 09/05/24 00:09:21.886
  I0905 00:09:21.886999 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-fhn5" in namespace "subpath-5553"
  I0905 00:09:21.891301 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5553" for this suite. @ 09/05/24 00:09:21.896
• [26.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/05/24 00:09:21.916
  I0905 00:09:21.916259 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename apf @ 09/05/24 00:09:21.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:21.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:21.961
  STEP: getting /apis @ 09/05/24 00:09:21.964
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/05/24 00:09:21.97
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/05/24 00:09:21.971
  STEP: creating @ 09/05/24 00:09:21.973
  STEP: getting @ 09/05/24 00:09:22.041
  STEP: listing @ 09/05/24 00:09:22.07
  STEP: watching @ 09/05/24 00:09:22.074
  I0905 00:09:22.074777 18 flowcontrol.go:394] starting watch
  STEP: patching @ 09/05/24 00:09:22.076
  STEP: updating @ 09/05/24 00:09:22.091
  I0905 00:09:22.115840 18 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 09/05/24 00:09:22.116
  STEP: patching /status @ 09/05/24 00:09:22.12
  E0905 00:09:22.129640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating /status @ 09/05/24 00:09:22.132
  STEP: deleting @ 09/05/24 00:09:22.2
  STEP: deleting a collection @ 09/05/24 00:09:22.229
  I0905 00:09:22.259520 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7715" for this suite. @ 09/05/24 00:09:22.264
• [0.366 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/05/24 00:09:22.283
  I0905 00:09:22.283034 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/05/24 00:09:22.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:22.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:22.329
  STEP: Setting up server cert @ 09/05/24 00:09:22.417
  E0905 00:09:23.130596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/05/24 00:09:23.155
  STEP: Deploying the webhook pod @ 09/05/24 00:09:23.178
  STEP: Wait for the deployment to be ready @ 09/05/24 00:09:23.211
  I0905 00:09:23.221895 18 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0905 00:09:24.130733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:25.130963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/05/24 00:09:25.235
  STEP: Verifying the service has paired with the endpoint @ 09/05/24 00:09:25.272
  E0905 00:09:26.131978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:09:26.273297 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/05/24 00:09:26.284
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/05/24 00:09:26.323
  STEP: Creating a dummy validating-webhook-configuration object @ 09/05/24 00:09:26.361
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/05/24 00:09:26.388
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/05/24 00:09:26.401
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/05/24 00:09:26.417
  I0905 00:09:26.616037 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7843" for this suite. @ 09/05/24 00:09:26.627
  STEP: Destroying namespace "webhook-markers-807" for this suite. @ 09/05/24 00:09:26.659
• [4.396 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/05/24 00:09:26.678
  I0905 00:09:26.678938 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pods @ 09/05/24 00:09:26.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:26.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:26.75
  STEP: creating pod @ 09/05/24 00:09:26.755
  E0905 00:09:27.132957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:28.133070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:09:28.806500 18 pods.go:83] Pod pod-hostip-fa9ba16a-2535-4a06-afc9-a3662285b6c1 has hostIP: 172.31.8.12
  I0905 00:09:28.806913 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6339" for this suite. @ 09/05/24 00:09:28.82
• [2.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/05/24 00:09:28.835
  I0905 00:09:28.835845 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename sysctl @ 09/05/24 00:09:28.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:28.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:28.897
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/05/24 00:09:28.9
  I0905 00:09:28.907450 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1191" for this suite. @ 09/05/24 00:09:28.919
• [0.107 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/05/24 00:09:28.941
  I0905 00:09:28.941397 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename podtemplate @ 09/05/24 00:09:28.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:29.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:29.004
  STEP: Create a pod template @ 09/05/24 00:09:29.008
  STEP: Replace a pod template @ 09/05/24 00:09:29.024
  I0905 00:09:29.040433 18 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0905 00:09:29.040731 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7654" for this suite. @ 09/05/24 00:09:29.046
• [0.122 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/05/24 00:09:29.065
  I0905 00:09:29.065142 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename discovery @ 09/05/24 00:09:29.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:29.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:29.117
  STEP: Setting up server cert @ 09/05/24 00:09:29.121
  E0905 00:09:29.133549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:09:29.479410 18 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0905 00:09:29.480519 18 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0905 00:09:29.480936 18 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0905 00:09:29.481041 18 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0905 00:09:29.481057 18 discovery.go:139] Checking APIGroup: apps
  I0905 00:09:29.482254 18 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0905 00:09:29.482304 18 discovery.go:148] Versions found [{apps/v1 v1}]
  I0905 00:09:29.482319 18 discovery.go:154] apps/v1 matches apps/v1
  I0905 00:09:29.482461 18 discovery.go:139] Checking APIGroup: events.k8s.io
  I0905 00:09:29.484084 18 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0905 00:09:29.484133 18 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0905 00:09:29.484146 18 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0905 00:09:29.484160 18 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0905 00:09:29.485222 18 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0905 00:09:29.485581 18 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0905 00:09:29.485865 18 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0905 00:09:29.486605 18 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0905 00:09:29.488814 18 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0905 00:09:29.488869 18 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0905 00:09:29.488882 18 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0905 00:09:29.488896 18 discovery.go:139] Checking APIGroup: autoscaling
  I0905 00:09:29.490267 18 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0905 00:09:29.490310 18 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0905 00:09:29.490471 18 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0905 00:09:29.490489 18 discovery.go:139] Checking APIGroup: batch
  I0905 00:09:29.491782 18 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0905 00:09:29.491818 18 discovery.go:148] Versions found [{batch/v1 v1}]
  I0905 00:09:29.491832 18 discovery.go:154] batch/v1 matches batch/v1
  I0905 00:09:29.491844 18 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0905 00:09:29.492854 18 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0905 00:09:29.492886 18 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0905 00:09:29.492898 18 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0905 00:09:29.492909 18 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0905 00:09:29.494076 18 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0905 00:09:29.494121 18 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0905 00:09:29.494133 18 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0905 00:09:29.494145 18 discovery.go:139] Checking APIGroup: policy
  I0905 00:09:29.495132 18 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0905 00:09:29.496275 18 discovery.go:148] Versions found [{policy/v1 v1}]
  I0905 00:09:29.497362 18 discovery.go:154] policy/v1 matches policy/v1
  I0905 00:09:29.497943 18 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0905 00:09:29.500181 18 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0905 00:09:29.500834 18 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0905 00:09:29.501940 18 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0905 00:09:29.502586 18 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0905 00:09:29.504980 18 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0905 00:09:29.505473 18 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0905 00:09:29.506094 18 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0905 00:09:29.506932 18 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0905 00:09:29.508877 18 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0905 00:09:29.508930 18 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0905 00:09:29.508945 18 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0905 00:09:29.509629 18 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0905 00:09:29.510808 18 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0905 00:09:29.510851 18 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0905 00:09:29.511048 18 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0905 00:09:29.511109 18 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0905 00:09:29.512351 18 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0905 00:09:29.512392 18 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0905 00:09:29.512406 18 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0905 00:09:29.512724 18 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0905 00:09:29.513982 18 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0905 00:09:29.514024 18 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0905 00:09:29.514038 18 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0905 00:09:29.514195 18 discovery.go:139] Checking APIGroup: node.k8s.io
  I0905 00:09:29.515607 18 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0905 00:09:29.515860 18 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0905 00:09:29.515896 18 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0905 00:09:29.515985 18 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0905 00:09:29.517189 18 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0905 00:09:29.517230 18 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0905 00:09:29.517244 18 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0905 00:09:29.517256 18 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0905 00:09:29.519423 18 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0905 00:09:29.519470 18 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0905 00:09:29.519484 18 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0905 00:09:29.519497 18 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0905 00:09:29.521160 18 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0905 00:09:29.521209 18 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0905 00:09:29.521222 18 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0905 00:09:29.521235 18 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0905 00:09:29.523215 18 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0905 00:09:29.523586 18 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0905 00:09:29.523602 18 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0905 00:09:29.523613 18 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0905 00:09:29.524627 18 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0905 00:09:29.524669 18 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0905 00:09:29.524682 18 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0905 00:09:29.524730 18 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0905 00:09:29.526785 18 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0905 00:09:29.526855 18 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
  I0905 00:09:29.526869 18 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0905 00:09:29.526916 18 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0905 00:09:29.528282 18 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0905 00:09:29.528325 18 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0905 00:09:29.528339 18 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0905 00:09:29.528683 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2037" for this suite. @ 09/05/24 00:09:29.548
• [0.495 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 09/05/24 00:09:29.561
  I0905 00:09:29.561352 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename job @ 09/05/24 00:09:29.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:29.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:29.616
  STEP: Creating a job @ 09/05/24 00:09:29.619
  STEP: Ensuring job reaches completions @ 09/05/24 00:09:29.63
  E0905 00:09:30.133672      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:31.134741      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:32.135934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:33.136393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:34.136698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:35.136934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:36.137052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:37.137110      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:38.137648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:39.137872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:40.137922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:41.138494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:42.139427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:43.139445      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:09:43.640001 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-364" for this suite. @ 09/05/24 00:09:43.645
• [14.097 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 09/05/24 00:09:43.661
  I0905 00:09:43.661425 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl @ 09/05/24 00:09:43.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:43.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:43.71
  STEP: creating Agnhost RC @ 09/05/24 00:09:43.713
  I0905 00:09:43.714483 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-6213 create -f -'
  I0905 00:09:43.943415 18 builder.go:146] stderr: ""
  I0905 00:09:43.943641 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/05/24 00:09:43.943
  E0905 00:09:44.139851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:09:44.948355 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0905 00:09:44.948404 18 framework.go:733] Found 0 / 1
  E0905 00:09:45.140652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:09:45.957110 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0905 00:09:45.957169 18 framework.go:733] Found 1 / 1
  I0905 00:09:45.957196 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/05/24 00:09:45.957
  I0905 00:09:45.963329 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0905 00:09:45.963391 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0905 00:09:45.963449 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-6213 patch pod agnhost-primary-r82tw -p {"metadata":{"annotations":{"x":"y"}}}'
  I0905 00:09:46.079597 18 builder.go:146] stderr: ""
  I0905 00:09:46.079652 18 builder.go:147] stdout: "pod/agnhost-primary-r82tw patched\n"
  STEP: checking annotations @ 09/05/24 00:09:46.079
  I0905 00:09:46.084774 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0905 00:09:46.084832 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0905 00:09:46.084958 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6213" for this suite. @ 09/05/24 00:09:46.091
• [2.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/05/24 00:09:46.104
  I0905 00:09:46.104615 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/05/24 00:09:46.105
  E0905 00:09:46.141449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:46.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:46.144
  STEP: Creating a pod to test downward api env vars @ 09/05/24 00:09:46.147
  E0905 00:09:47.141605      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:48.142308      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:49.142791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:50.143825      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:51.144239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:52.145366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:09:52.22
  I0905 00:09:52.227268 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downward-api-a28d8bca-fa69-42a7-9ea9-ebd5fbd41876 container dapi-container: <nil>
  STEP: delete the pod @ 09/05/24 00:09:52.245
  I0905 00:09:52.276997 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5790" for this suite. @ 09/05/24 00:09:52.283
• [6.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/05/24 00:09:52.304
  I0905 00:09:52.304658 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/05/24 00:09:52.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:52.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:52.346
  STEP: Creating a pod to test downward API volume plugin @ 09/05/24 00:09:52.355
  E0905 00:09:53.146229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:54.146572      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:55.147642      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:56.147800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:09:56.399
  I0905 00:09:56.408101 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-84e8bf30-f0b5-4b41-a018-dfd8ea0fd4cb container client-container: <nil>
  STEP: delete the pod @ 09/05/24 00:09:56.416
  I0905 00:09:56.467314 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3747" for this suite. @ 09/05/24 00:09:56.476
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/05/24 00:09:56.504
  I0905 00:09:56.504539 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubelet-test @ 09/05/24 00:09:56.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:09:56.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:09:56.561
  STEP: Waiting for pod completion @ 09/05/24 00:09:56.586
  E0905 00:09:57.148077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:58.148393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:09:59.149074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:00.149320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:10:00.651340 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1594" for this suite. @ 09/05/24 00:10:00.666
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/05/24 00:10:00.694
  I0905 00:10:00.694823 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/05/24 00:10:00.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:10:00.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:10:00.763
  STEP: Discovering how many secrets are in namespace by default @ 09/05/24 00:10:00.781
  E0905 00:10:01.149923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:02.150884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:03.151400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:04.152235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:05.153386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/05/24 00:10:05.787
  E0905 00:10:06.154711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:07.154668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:08.154749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:09.155373      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:10.155492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/05/24 00:10:10.793
  STEP: Ensuring resource quota status is calculated @ 09/05/24 00:10:10.817
  E0905 00:10:11.155969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:12.156703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/05/24 00:10:12.822
  STEP: Ensuring resource quota status captures secret creation @ 09/05/24 00:10:12.856
  E0905 00:10:13.157728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:14.157929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/05/24 00:10:14.864
  STEP: Ensuring resource quota status released usage @ 09/05/24 00:10:14.876
  E0905 00:10:15.158999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:16.159105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:10:16.882933 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4303" for this suite. @ 09/05/24 00:10:16.889
• [16.206 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/05/24 00:10:16.9
  I0905 00:10:16.900997 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/05/24 00:10:16.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:10:16.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:10:16.938
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9380 @ 09/05/24 00:10:16.942
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/05/24 00:10:16.969
  STEP: creating service externalsvc in namespace services-9380 @ 09/05/24 00:10:16.97
  STEP: creating replication controller externalsvc in namespace services-9380 @ 09/05/24 00:10:17.013
  I0905 00:10:17.042698      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9380, replica count: 2
  E0905 00:10:17.159485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:18.162689      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:19.162828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:10:20.093375      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/05/24 00:10:20.099
  I0905 00:10:20.130473 18 resource.go:361] Creating new exec pod
  E0905 00:10:20.163097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:21.163903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:10:22.153108 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-9380 exec execpodvx8vc -- /bin/sh -x -c nslookup clusterip-service.services-9380.svc.cluster.local'
  E0905 00:10:22.164783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:10:22.420567 18 builder.go:146] stderr: "+ nslookup clusterip-service.services-9380.svc.cluster.local\n"
  I0905 00:10:22.420633 18 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-9380.svc.cluster.local\tcanonical name = externalsvc.services-9380.svc.cluster.local.\nName:\texternalsvc.services-9380.svc.cluster.local\nAddress: 10.43.209.47\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9380, will wait for the garbage collector to delete the pods @ 09/05/24 00:10:22.42
  I0905 00:10:22.494359 18 resources.go:139] Deleting ReplicationController externalsvc took: 11.913916ms
  I0905 00:10:22.595381 18 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.023028ms
  E0905 00:10:23.165888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:24.165863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:25.165880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:26.165978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:10:26.169917 18 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0905 00:10:26.207217 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9380" for this suite. @ 09/05/24 00:10:26.215
• [9.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/05/24 00:10:26.237
  I0905 00:10:26.237084 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename resourcequota @ 09/05/24 00:10:26.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:10:26.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:10:26.3
  STEP: Counting existing ResourceQuota @ 09/05/24 00:10:26.304
  E0905 00:10:27.166711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:28.167864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:29.168925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:30.169448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:31.170124      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/05/24 00:10:31.313
  STEP: Ensuring resource quota status is calculated @ 09/05/24 00:10:31.33
  E0905 00:10:32.170448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:33.170810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/05/24 00:10:33.335
  STEP: Ensuring resource quota status captures replication controller creation @ 09/05/24 00:10:33.363
  E0905 00:10:34.171856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:35.172090      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/05/24 00:10:35.367
  STEP: Ensuring resource quota status released usage @ 09/05/24 00:10:35.38
  E0905 00:10:36.172220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:37.172388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:10:37.389399 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9593" for this suite. @ 09/05/24 00:10:37.394
• [11.170 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/05/24 00:10:37.408
  I0905 00:10:37.408714 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename cronjob @ 09/05/24 00:10:37.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:10:37.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:10:37.465
  STEP: Creating a ReplaceConcurrent cronjob @ 09/05/24 00:10:37.469
  STEP: Ensuring a job is scheduled @ 09/05/24 00:10:37.485
  E0905 00:10:38.173385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:39.173462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:40.173587      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:41.174763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:42.175086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:43.175324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:44.176384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:45.177077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:46.177283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:47.177419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:48.177718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:49.178369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:50.179315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:51.179857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:52.180058      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:53.180273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:54.180437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:55.180876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:56.181377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:57.181193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:58.182082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:10:59.182299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:00.182723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:01.183022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/05/24 00:11:01.491
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/05/24 00:11:01.495
  STEP: Ensuring the job is replaced with a new one @ 09/05/24 00:11:01.501
  E0905 00:11:02.183322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:03.183629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:04.183801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:05.183891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:06.184461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:07.184606      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:08.185616      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:09.186482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:10.186628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:11.186755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:12.186830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:13.186952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:14.187345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:15.187476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:16.188644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:17.188864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:18.189042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:19.189588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:20.190611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:21.190746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:22.190958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:23.191117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:24.191862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:25.192497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:26.192612      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:27.193061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:28.193274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:29.194102      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:30.194938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:31.195922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:32.196747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:33.196948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:34.197064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:35.198156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:36.198176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:37.198692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:38.198728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:39.198780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:40.199532      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:41.199799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:42.200011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:43.200170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:44.201002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:45.201675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:46.202097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:47.202191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:48.202364      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:49.202725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:50.202816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:51.203059      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:52.203202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:53.203356      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:54.203546      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:55.203683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:56.204835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:57.204692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:58.204745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:11:59.205515      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:00.206699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:01.207489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/05/24 00:12:01.509
  I0905 00:12:01.525438 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8488" for this suite. @ 09/05/24 00:12:01.531
• [84.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/05/24 00:12:01.564
  I0905 00:12:01.564407 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename var-expansion @ 09/05/24 00:12:01.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:12:01.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:12:01.633
  E0905 00:12:02.207614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:03.208176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:03.687827 18 delete.go:62] Deleting pod "var-expansion-0c89aee1-664f-4750-96d7-6bee37b5c0d1" in namespace "var-expansion-4937"
  I0905 00:12:03.719793 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-0c89aee1-664f-4750-96d7-6bee37b5c0d1" to be fully deleted
  E0905 00:12:04.209032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:05.209334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:06.210076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:07.210707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:07.749658 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4937" for this suite. @ 09/05/24 00:12:07.756
• [6.209 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/05/24 00:12:07.774
  I0905 00:12:07.774995 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/05/24 00:12:07.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:12:07.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:12:07.817
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-2d71632f-9d87-4e3f-bf74-f97d6ed25b0a @ 09/05/24 00:12:07.857
  STEP: Creating the pod @ 09/05/24 00:12:07.868
  E0905 00:12:08.211637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:09.211803      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-2d71632f-9d87-4e3f-bf74-f97d6ed25b0a @ 09/05/24 00:12:09.932
  STEP: waiting to observe update in volume @ 09/05/24 00:12:09.951
  E0905 00:12:10.212607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:11.212917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:11.973988 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4092" for this suite. @ 09/05/24 00:12:11.979
• [4.219 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 09/05/24 00:12:11.994
  I0905 00:12:11.994495 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename svcaccounts @ 09/05/24 00:12:11.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:12:12.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:12:12.065
  STEP: Creating ServiceAccount "e2e-sa-jjqlz"  @ 09/05/24 00:12:12.073
  I0905 00:12:12.092187 18 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-jjqlz"  @ 09/05/24 00:12:12.092
  I0905 00:12:12.109925 18 service_accounts.go:839] AutomountServiceAccountToken: true
  I0905 00:12:12.110073 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8885" for this suite. @ 09/05/24 00:12:12.116
• [0.141 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/05/24 00:12:12.135
  I0905 00:12:12.135526 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/05/24 00:12:12.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:12:12.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:12:12.207
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/05/24 00:12:12.21
  E0905 00:12:12.213606      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:13.213924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:14.214654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:15.214848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:16.215382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:12:16.256
  I0905 00:12:16.260900 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-b538339e-4bda-45a4-bde3-758f51c65215 container test-container: <nil>
  STEP: delete the pod @ 09/05/24 00:12:16.269
  I0905 00:12:16.307249 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9741" for this suite. @ 09/05/24 00:12:16.313
• [4.200 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/05/24 00:12:16.335
  I0905 00:12:16.335507 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-webhook @ 09/05/24 00:12:16.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:12:16.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:12:16.385
  STEP: Setting up server cert @ 09/05/24 00:12:16.394
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/05/24 00:12:16.908
  STEP: Deploying the custom resource conversion webhook pod @ 09/05/24 00:12:16.931
  STEP: Wait for the deployment to be ready @ 09/05/24 00:12:16.964
  I0905 00:12:16.981885 18 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0905 00:12:17.216318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:18.216467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:19.004049 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-5b599d56fc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0905 00:12:19.217414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:20.218005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/05/24 00:12:21.019
  STEP: Verifying the service has paired with the endpoint @ 09/05/24 00:12:21.047
  E0905 00:12:21.218699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:22.047772 18 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0905 00:12:22.056562 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  E0905 00:12:22.219415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:23.220187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:24.220256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/05/24 00:12:24.651
  STEP: v2 custom resource should be converted @ 09/05/24 00:12:24.665
  E0905 00:12:25.222884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:25.307079 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8010" for this suite. @ 09/05/24 00:12:25.312
• [9.006 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/05/24 00:12:25.347
  I0905 00:12:25.347983 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename runtimeclass @ 09/05/24 00:12:25.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:12:25.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:12:25.416
  I0905 00:12:25.511011 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7796" for this suite. @ 09/05/24 00:12:25.517
• [0.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/05/24 00:12:25.53
  I0905 00:12:25.530820 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename deployment @ 09/05/24 00:12:25.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:12:25.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:12:25.575
  I0905 00:12:25.599601 18 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0905 00:12:26.223913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:27.224028      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:28.224363      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:29.224952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:30.225208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:30.614985 18 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/05/24 00:12:30.615
  I0905 00:12:30.615402 18 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0905 00:12:31.225696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:32.226372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:32.620062 18 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0905 00:12:32.634678 18 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0905 00:12:33.227060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:34.227819      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:34.646553 18 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0905 00:12:34.655629 18 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0905 00:12:34.757085 18 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0905 00:12:34.778331 18 deployment.go:313] Updating deployment test-rollover-deployment
  I0905 00:12:34.778407 18 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0905 00:12:35.228676      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:36.228746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:36.791972 18 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0905 00:12:36.803022 18 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0905 00:12:36.903824 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0905 00:12:36.904034 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0905 00:12:37.229793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:38.229943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:38.917405 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0905 00:12:38.917496 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0905 00:12:39.231065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:40.231063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:40.915322 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0905 00:12:40.915417 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0905 00:12:41.231666      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:42.231839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:42.912873 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0905 00:12:42.913144 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0905 00:12:43.232117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:44.232692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:44.919212 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0905 00:12:44.919430 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0905 00:12:45.232817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:46.232973      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:46.912475 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0905 00:12:46.912943 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 12, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 12, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0905 00:12:47.233858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:48.234312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:12:48.933717 18 deployment.go:94] 
  I0905 00:12:48.933791 18 deployment.go:974] Ensure that both old replica sets have no replicas
  I0905 00:12:48.961274 18 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-24",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5bd3881-6678-4b0c-9525-fd9765b575d4",
      ResourceVersion: (string) (len=5) "49876",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861091952,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091952,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091952,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091952,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0905 00:12:48.972966 18 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-24",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "081cd695-3f79-4b5e-acba-5f44a578f3e5",
      ResourceVersion: (string) (len=5) "49866",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861091954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f5bd3881-6678-4b0c-9525-fd9765b575d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 35 62 64 33 38  38 31 2d 36 36 37 38 2d  |\"f5bd3881-6678-|
              00000120  34 62 30 63 2d 39 35 32  35 2d 66 64 39 37 36 35  |4b0c-9525-fd9765|
              00000130  62 35 37 35 64 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b575d4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0905 00:12:48.974328 18 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0905 00:12:48.974838 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-24",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f65b2aa4-f781-416a-93a2-0878116ebed5",
      ResourceVersion: (string) (len=5) "49875",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861091945,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f5bd3881-6678-4b0c-9525-fd9765b575d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091945,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 35 62 64 33 38 38 31  2d 36 36 37 38 2d 34 62  |f5bd3881-6678-4b|
              000000c0  30 63 2d 39 35 32 35 2d  66 64 39 37 36 35 62 35  |0c-9525-fd9765b5|
              000000d0  37 35 64 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |75d4\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0905 00:12:48.979106 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-24",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c201f78-1cc7-4d46-ae0b-fe5bbb38d106",
      ResourceVersion: (string) (len=5) "49800",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861091952,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f5bd3881-6678-4b0c-9525-fd9765b575d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 35 62 64 33 38  38 31 2d 36 36 37 38 2d  |\"f5bd3881-6678-|
              00000120  34 62 30 63 2d 39 35 32  35 2d 66 64 39 37 36 35  |4b0c-9525-fd9765|
              00000130  62 35 37 35 64 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b575d4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0905 00:12:48.992157 18 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-txbg4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-txbg4",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=13) "deployment-24",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78b8e8b0-169e-40db-a1fd-e558f7d49c29",
      ResourceVersion: (string) (len=5) "49821",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861091954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d43e78f895424c7024a14a3a14fc362196aef22b6c4896de5c8bdf275a52e227",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.114/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.114/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "081cd695-3f79-4b5e-acba-5f44a578f3e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 38  31 63 64 36 39 35 2d 33  |d\":\"081cd695-3|
              00000090  66 37 39 2d 34 62 35 65  2d 61 63 62 61 2d 35 66  |f79-4b5e-acba-5f|
              000000a0  34 34 61 35 37 38 66 33  65 35 5c 22 7d 22 3a 7b  |44a578f3e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 31  34 5c 22 7d 22 3a 7b 22  |.42.3.114\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vdvvm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vdvvm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-12.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861091954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.12",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.12"
        }
      },
      PodIP: (string) (len=11) "10.42.3.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861091954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861091956,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://db0030bd987850b727f58b5b95e385d140d348e32a25030d9ebc59d1b8173642",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vdvvm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0905 00:12:48.996239 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-24" for this suite. @ 09/05/24 00:12:49.001
• [23.502 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/05/24 00:12:49.033
  I0905 00:12:49.033149 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/05/24 00:12:49.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:12:49.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:12:49.089
  E0905 00:12:49.235332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:50.235454      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:51.238801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:52.240874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:53.240948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:54.246842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:55.247172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:56.247585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:57.248035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:58.248175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:12:59.248811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:00.248993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:01.249829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:02.250278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:03.250735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:04.250984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:05.251472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:06.251598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:07.252449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:08.253079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:09.253969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:10.254261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:13:11.235675 18 container_probe.go:92] Container started at 2024-09-05 00:12:50 +0000 UTC, pod became ready at 2024-09-05 00:13:09 +0000 UTC
  I0905 00:13:11.235885 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5803" for this suite. @ 09/05/24 00:13:11.24
  E0905 00:13:11.255034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
• [22.224 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/05/24 00:13:11.259
  I0905 00:13:11.260701 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/05/24 00:13:11.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:11.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:13:11.321
  STEP: Setting up server cert @ 09/05/24 00:13:11.417
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/05/24 00:13:12.213
  STEP: Deploying the webhook pod @ 09/05/24 00:13:12.229
  E0905 00:13:12.255905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/05/24 00:13:12.277
  I0905 00:13:12.312557 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0905 00:13:13.256359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:14.257051      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:13:14.333577 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 5, 0, 13, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 13, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 5, 0, 13, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 5, 0, 13, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0905 00:13:15.257164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:16.257615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/05/24 00:13:16.343
  STEP: Verifying the service has paired with the endpoint @ 09/05/24 00:13:16.382
  E0905 00:13:17.258050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:13:17.382307 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0905 00:13:17.389527 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8417-crds.webhook.example.com via the AdmissionRegistration API @ 09/05/24 00:13:17.904
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/05/24 00:13:17.933
  E0905 00:13:18.259270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:19.260048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:20.261114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:13:20.697547 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5771" for this suite. @ 09/05/24 00:13:20.703
  STEP: Destroying namespace "webhook-markers-2994" for this suite. @ 09/05/24 00:13:20.715
• [9.475 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/05/24 00:13:20.734
  I0905 00:13:20.734634 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename namespaces @ 09/05/24 00:13:20.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:20.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:13:20.802
  STEP: Creating namespace "e2e-ns-8c59k" @ 09/05/24 00:13:20.805
  I0905 00:13:20.908176 18 namespace.go:411] Namespace "e2e-ns-8c59k-9956" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-8c59k-9956" @ 09/05/24 00:13:20.908
  I0905 00:13:20.926014 18 namespace.go:434] Namespace "e2e-ns-8c59k-9956" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-8c59k-9956" @ 09/05/24 00:13:20.926
  I0905 00:13:20.945817 18 namespace.go:463] Namespace "e2e-ns-8c59k-9956" has []v1.FinalizerName{"kubernetes"}
  I0905 00:13:20.946233 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9882" for this suite. @ 09/05/24 00:13:20.959
  STEP: Destroying namespace "e2e-ns-8c59k-9956" for this suite. @ 09/05/24 00:13:20.978
• [0.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/05/24 00:13:21.007
  I0905 00:13:21.008001 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/05/24 00:13:21.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:21.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:13:21.089
  STEP: Creating configMap with name configmap-test-volume-c84fc58f-b987-4743-a9b1-dd432f6bc2e0 @ 09/05/24 00:13:21.101
  STEP: Creating a pod to test consume configMaps @ 09/05/24 00:13:21.114
  E0905 00:13:21.261808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:22.266583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:23.266929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:24.267076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:13:25.159
  I0905 00:13:25.164197 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-d1307a5b-ddcd-40e8-84d0-4ef581182b57 container agnhost-container: <nil>
  STEP: delete the pod @ 09/05/24 00:13:25.184
  I0905 00:13:25.239047 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2663" for this suite. @ 09/05/24 00:13:25.245
• [4.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/05/24 00:13:25.264
  I0905 00:13:25.265256 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  E0905 00:13:25.271558      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/05/24 00:13:25.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:25.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:13:25.333
  STEP: fetching the /apis discovery document @ 09/05/24 00:13:25.336
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/05/24 00:13:25.338
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/05/24 00:13:25.338
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/05/24 00:13:25.339
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/05/24 00:13:25.341
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/05/24 00:13:25.341
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/05/24 00:13:25.342
  I0905 00:13:25.342790 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2412" for this suite. @ 09/05/24 00:13:25.347
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/05/24 00:13:25.372
  I0905 00:13:25.372202 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename downward-api @ 09/05/24 00:13:25.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:25.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:13:25.426
  STEP: Creating a pod to test downward API volume plugin @ 09/05/24 00:13:25.43
  E0905 00:13:26.291809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:27.291961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:28.292065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:29.292588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:13:29.48
  I0905 00:13:29.484173 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod downwardapi-volume-1f0a2d7f-81f8-446f-916a-450f2b2ee8fa container client-container: <nil>
  STEP: delete the pod @ 09/05/24 00:13:29.492
  I0905 00:13:29.534330 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7349" for this suite. @ 09/05/24 00:13:29.539
• [4.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/05/24 00:13:29.559
  I0905 00:13:29.559543 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replication-controller @ 09/05/24 00:13:29.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:29.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:13:29.612
  STEP: Creating ReplicationController "e2e-rc-czmkx" @ 09/05/24 00:13:29.626
  I0905 00:13:29.645472 18 rc.go:792] Get Replication Controller "e2e-rc-czmkx" to confirm replicas
  E0905 00:13:30.293390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:13:30.646252 18 rc.go:792] Get Replication Controller "e2e-rc-czmkx" to confirm replicas
  I0905 00:13:30.663910 18 rc.go:801] Found 1 replicas for "e2e-rc-czmkx" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-czmkx" @ 09/05/24 00:13:30.664
  STEP: Updating a scale subresource @ 09/05/24 00:13:30.678
  STEP: Verifying replicas where modified for replication controller "e2e-rc-czmkx" @ 09/05/24 00:13:30.7
  I0905 00:13:30.700908 18 rc.go:792] Get Replication Controller "e2e-rc-czmkx" to confirm replicas
  E0905 00:13:31.296142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:13:31.701933 18 rc.go:792] Get Replication Controller "e2e-rc-czmkx" to confirm replicas
  I0905 00:13:31.706074 18 rc.go:801] Found 2 replicas for "e2e-rc-czmkx" replication controller
  I0905 00:13:31.706420 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7182" for this suite. @ 09/05/24 00:13:31.721
• [2.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/05/24 00:13:31.744
  I0905 00:13:31.744897 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/05/24 00:13:31.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:31.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:13:31.781
  I0905 00:13:31.868343 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5483" for this suite. @ 09/05/24 00:13:31.879
• [0.146 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/05/24 00:13:31.891
  I0905 00:13:31.891735 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename namespaces @ 09/05/24 00:13:31.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:31.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:13:31.947
  STEP: Creating a test namespace @ 09/05/24 00:13:31.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:32.094
  STEP: Creating a pod in the namespace @ 09/05/24 00:13:32.1
  STEP: Waiting for the pod to have running status @ 09/05/24 00:13:32.12
  E0905 00:13:32.296913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:33.297243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/05/24 00:13:34.139
  STEP: Waiting for the namespace to be removed. @ 09/05/24 00:13:34.16
  E0905 00:13:34.298367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:35.298671      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:36.299249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:37.300067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:38.300677      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:39.301040      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:40.301853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:41.301936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:42.303157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:43.303860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:44.304057      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/05/24 00:13:45.165
  STEP: Verifying there are no pods in the namespace @ 09/05/24 00:13:45.217
  I0905 00:13:45.220721 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9034" for this suite. @ 09/05/24 00:13:45.237
  STEP: Destroying namespace "nsdeletetest-1797" for this suite. @ 09/05/24 00:13:45.281
  I0905 00:13:45.295131 18 framework.go:370] Namespace nsdeletetest-1797 was already deleted
  STEP: Destroying namespace "nsdeletetest-5244" for this suite. @ 09/05/24 00:13:45.295
  E0905 00:13:45.304983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
• [13.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/05/24 00:13:45.334
  I0905 00:13:45.334083 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pod-network-test @ 09/05/24 00:13:45.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:13:45.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:13:45.398
  STEP: Performing setup for networking test in namespace pod-network-test-224 @ 09/05/24 00:13:45.401
  STEP: creating a selector @ 09/05/24 00:13:45.401
  STEP: Creating the service pods in kubernetes @ 09/05/24 00:13:45.401
  I0905 00:13:45.401671 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0905 00:13:46.313701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:47.313794      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:48.313948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:49.314206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:50.314387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:51.314759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:52.314993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:53.315278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:54.315310      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:55.315484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:56.316109      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:57.316984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:58.317413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:13:59.318192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:00.319160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:01.319316      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:02.320008      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:03.320482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:04.320772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:05.320897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:06.321042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:07.321210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/05/24 00:14:07.691
  E0905 00:14:08.322110      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:09.322289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:09.730234 18 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0905 00:14:09.730521 18 networking.go:42] Breadth first check of 10.42.0.69 on host 172.31.0.215...
  I0905 00:14:09.736689 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.122:9080/dial?request=hostname&protocol=http&host=10.42.0.69&port=8083&tries=1'] Namespace:pod-network-test-224 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:14:09.736743 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:14:09.737620 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:14:09.737735 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-224/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.69%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0905 00:14:09.871838 18 utils.go:356] Waiting for responses: map[]
  I0905 00:14:09.872059 18 utils.go:360] reached 10.42.0.69 after 0/1 tries
  I0905 00:14:09.872099 18 networking.go:42] Breadth first check of 10.42.2.93 on host 172.31.1.123...
  I0905 00:14:09.877345 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.122:9080/dial?request=hostname&protocol=http&host=10.42.2.93&port=8083&tries=1'] Namespace:pod-network-test-224 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:14:09.877400 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:14:09.878046 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:14:09.878126 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-224/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.93%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0905 00:14:10.000122 18 utils.go:356] Waiting for responses: map[]
  I0905 00:14:10.000198 18 utils.go:360] reached 10.42.2.93 after 0/1 tries
  I0905 00:14:10.000228 18 networking.go:42] Breadth first check of 10.42.1.81 on host 172.31.3.55...
  I0905 00:14:10.005684 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.122:9080/dial?request=hostname&protocol=http&host=10.42.1.81&port=8083&tries=1'] Namespace:pod-network-test-224 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:14:10.006097 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:14:10.007016 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:14:10.007143 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-224/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.81%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0905 00:14:10.134993 18 utils.go:356] Waiting for responses: map[]
  I0905 00:14:10.135085 18 utils.go:360] reached 10.42.1.81 after 0/1 tries
  I0905 00:14:10.135139 18 networking.go:42] Breadth first check of 10.42.3.121 on host 172.31.8.12...
  I0905 00:14:10.140644 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.122:9080/dial?request=hostname&protocol=http&host=10.42.3.121&port=8083&tries=1'] Namespace:pod-network-test-224 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:14:10.140692 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:14:10.141833 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:14:10.141920 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-224/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.121%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0905 00:14:10.252127 18 utils.go:356] Waiting for responses: map[]
  I0905 00:14:10.252280 18 utils.go:360] reached 10.42.3.121 after 0/1 tries
  I0905 00:14:10.252303 18 networking.go:53] Going to retry 0 out of 4 pods....
  I0905 00:14:10.252425 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-224" for this suite. @ 09/05/24 00:14:10.257
• [24.936 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/05/24 00:14:10.271
  I0905 00:14:10.272176 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename chunking @ 09/05/24 00:14:10.273
  E0905 00:14:10.322396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:14:10.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:14:10.328
  STEP: creating a large number of resources @ 09/05/24 00:14:10.332
  E0905 00:14:11.322774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:12.323720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:13.324653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:14.325658      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:15.326683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:16.326923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:17.327654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:18.328287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:19.328657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:20.329222      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:21.329968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:22.331279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:23.331790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:24.332723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:25.333155      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:26.333336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:27.334243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/05/24 00:14:27.989
  I0905 00:14:28.029069 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0905 00:14:28.085997 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0905 00:14:28.130282 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0905 00:14:28.179134 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0905 00:14:28.230074 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0905 00:14:28.279952 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0905 00:14:28.329155 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E0905 00:14:28.335926      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:28.379561 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0905 00:14:28.429284 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0905 00:14:28.481086 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0905 00:14:28.530863 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0905 00:14:28.579016 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0905 00:14:28.632690 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0905 00:14:28.679456 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0905 00:14:28.731310 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0905 00:14:28.779992 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0905 00:14:28.834098 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0905 00:14:28.879199 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0905 00:14:28.930765 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0905 00:14:28.985257 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0905 00:14:29.029677 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0905 00:14:29.079100 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0905 00:14:29.128929 18 chunking.go:98] Retrieved 17/17 results with rv 51085 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0905 00:14:29.179048 18 chunking.go:98] Retrieved 9/17 results with rv 51085 and continue 
  I0905 00:14:29.229891 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0905 00:14:29.279609 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0905 00:14:29.329886 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  E0905 00:14:29.336878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:29.380326 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0905 00:14:29.429825 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0905 00:14:29.479074 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0905 00:14:29.538020 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0905 00:14:29.582741 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0905 00:14:29.629177 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0905 00:14:29.678900 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0905 00:14:29.729904 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0905 00:14:29.779505 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0905 00:14:29.835684 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0905 00:14:29.880626 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0905 00:14:29.937721 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0905 00:14:29.979169 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0905 00:14:30.032778 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0905 00:14:30.080596 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0905 00:14:30.133891 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0905 00:14:30.179423 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0905 00:14:30.229693 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0905 00:14:30.282900 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0905 00:14:30.328797 18 chunking.go:98] Retrieved 17/17 results with rv 51087 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwODcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  E0905 00:14:30.337812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:30.378820 18 chunking.go:98] Retrieved 9/17 results with rv 51087 and continue 
  I0905 00:14:30.429116 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0905 00:14:30.484202 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0905 00:14:30.534876 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0905 00:14:30.580658 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0905 00:14:30.630360 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0905 00:14:30.685791 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0905 00:14:30.729275 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0905 00:14:30.779512 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0905 00:14:30.829128 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0905 00:14:30.881014 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0905 00:14:30.930158 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0905 00:14:30.979490 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0905 00:14:31.029440 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0905 00:14:31.079868 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0905 00:14:31.129914 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0905 00:14:31.180800 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0905 00:14:31.229924 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0905 00:14:31.279776 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0905 00:14:31.331361 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  E0905 00:14:31.338455      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:31.379978 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0905 00:14:31.428895 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0905 00:14:31.484298 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0905 00:14:31.533170 18 chunking.go:98] Retrieved 17/17 results with rv 51095 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTEwOTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0905 00:14:31.579721 18 chunking.go:98] Retrieved 9/17 results with rv 51095 and continue 
  STEP: retrieving those results all at once @ 09/05/24 00:14:31.579
  I0905 00:14:31.636814 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1013" for this suite. @ 09/05/24 00:14:31.68
• [21.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/05/24 00:14:31.744
  I0905 00:14:31.744943 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename projected @ 09/05/24 00:14:31.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:14:31.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:14:31.81
  STEP: Creating secret with name projected-secret-test-61e22da1-8ee6-40f1-a806-79892837bcf2 @ 09/05/24 00:14:31.815
  STEP: Creating a pod to test consume secrets @ 09/05/24 00:14:31.838
  E0905 00:14:32.339693      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:33.342724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:34.342910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:35.343162      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:14:35.872
  I0905 00:14:35.877340 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-projected-secrets-e98e97f2-4588-4663-8535-09cd8d2d9972 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/05/24 00:14:35.885
  I0905 00:14:35.925283 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9264" for this suite. @ 09/05/24 00:14:35.929
• [4.196 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/05/24 00:14:35.942
  I0905 00:14:35.942735 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename replicaset @ 09/05/24 00:14:35.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:14:35.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:14:35.987
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/05/24 00:14:35.99
  E0905 00:14:36.343929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:37.344080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/05/24 00:14:38.041
  STEP: Then the orphan pod is adopted @ 09/05/24 00:14:38.053
  E0905 00:14:38.344225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/05/24 00:14:39.075
  I0905 00:14:39.095195 18 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/05/24 00:14:39.121
  I0905 00:14:39.136742 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2321" for this suite. @ 09/05/24 00:14:39.151
• [3.239 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/05/24 00:14:39.182
  I0905 00:14:39.182164 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-runtime @ 09/05/24 00:14:39.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:14:39.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:14:39.269
  STEP: create the container @ 09/05/24 00:14:39.278
  W0905 00:14:39.317574      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/05/24 00:14:39.317
  E0905 00:14:39.344663      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:40.345225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:41.345629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:42.346828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/05/24 00:14:42.365
  STEP: the container should be terminated @ 09/05/24 00:14:42.375
  STEP: the termination message should be set @ 09/05/24 00:14:42.375
  I0905 00:14:42.375463 18 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/05/24 00:14:42.375
  I0905 00:14:42.433241 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4866" for this suite. @ 09/05/24 00:14:42.439
• [3.283 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/05/24 00:14:42.465
  I0905 00:14:42.465341 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/05/24 00:14:42.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:14:42.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:14:42.522
  STEP: Creating configMap with name configmap-test-upd-751bee40-c04c-489a-bdaf-1faae342b848 @ 09/05/24 00:14:42.539
  STEP: Creating the pod @ 09/05/24 00:14:42.56
  E0905 00:14:43.347869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:44.348261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:45.348574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:46.349504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/05/24 00:14:46.605
  STEP: Waiting for pod with binary data @ 09/05/24 00:14:46.614
  I0905 00:14:46.624002 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5823" for this suite. @ 09/05/24 00:14:46.629
• [4.181 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/05/24 00:14:46.647
  I0905 00:14:46.648662 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/05/24 00:14:46.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:14:46.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:14:46.713
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/05/24 00:14:46.724
  E0905 00:14:47.351070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:48.350730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:49.350913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:50.351021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:14:50.763
  I0905 00:14:50.767143 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-b3cdc193-e5dc-49b8-b131-a7800ba1ddd4 container test-container: <nil>
  STEP: delete the pod @ 09/05/24 00:14:50.779
  I0905 00:14:50.828251 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1933" for this suite. @ 09/05/24 00:14:50.833
• [4.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/05/24 00:14:50.846
  I0905 00:14:50.846945 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/05/24 00:14:50.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:14:50.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:14:50.895
  I0905 00:14:50.900256 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  E0905 00:14:51.352334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:52.356101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/05/24 00:14:53.123
  I0905 00:14:53.123587 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 create -f -'
  I0905 00:14:53.264151 18 builder.go:146] stderr: ""
  I0905 00:14:53.264323 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9421-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0905 00:14:53.264395 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 delete e2e-test-crd-publish-openapi-9421-crds test-foo'
  E0905 00:14:53.356836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:53.409795 18 builder.go:146] stderr: ""
  I0905 00:14:53.409863 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9421-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0905 00:14:53.409923 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 apply -f -'
  I0905 00:14:53.591949 18 builder.go:146] stderr: ""
  I0905 00:14:53.592014 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9421-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0905 00:14:53.592091 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 delete e2e-test-crd-publish-openapi-9421-crds test-foo'
  I0905 00:14:53.726280 18 builder.go:146] stderr: ""
  I0905 00:14:53.726337 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9421-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/05/24 00:14:53.726
  I0905 00:14:53.726629 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 create -f -'
  I0905 00:14:53.823749 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/05/24 00:14:53.823
  I0905 00:14:53.824017 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 create -f -'
  I0905 00:14:53.923342 18 builder.go:135] rc: 1
  I0905 00:14:53.923455 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 apply -f -'
  I0905 00:14:54.047096 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/05/24 00:14:54.047
  I0905 00:14:54.047423 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 create -f -'
  I0905 00:14:54.146952 18 builder.go:135] rc: 1
  I0905 00:14:54.147072 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 apply -f -'
  I0905 00:14:54.251783 18 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/05/24 00:14:54.251
  I0905 00:14:54.251973 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 explain e2e-test-crd-publish-openapi-9421-crds'
  I0905 00:14:54.346385 18 builder.go:146] stderr: ""
  I0905 00:14:54.347278 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9421-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/05/24 00:14:54.347
  I0905 00:14:54.347672 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 explain e2e-test-crd-publish-openapi-9421-crds.metadata'
  E0905 00:14:54.357046      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:54.439494 18 builder.go:146] stderr: ""
  I0905 00:14:54.439866 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9421-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0905 00:14:54.440373 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 explain e2e-test-crd-publish-openapi-9421-crds.spec'
  I0905 00:14:54.548026 18 builder.go:146] stderr: ""
  I0905 00:14:54.548094 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9421-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0905 00:14:54.548225 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 explain e2e-test-crd-publish-openapi-9421-crds.spec.bars'
  I0905 00:14:54.652926 18 builder.go:146] stderr: ""
  I0905 00:14:54.653135 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9421-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/05/24 00:14:54.653
  I0905 00:14:54.653795 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-6080 explain e2e-test-crd-publish-openapi-9421-crds.spec.bars2'
  I0905 00:14:54.747870 18 builder.go:135] rc: 1
  E0905 00:14:55.357462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:56.358075      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:56.690743 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6080" for this suite. @ 09/05/24 00:14:56.699
• [5.870 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/05/24 00:14:56.718
  I0905 00:14:56.718358 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename kubectl-logs @ 09/05/24 00:14:56.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:14:56.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:14:56.758
  STEP: creating a pod @ 09/05/24 00:14:56.764
  I0905 00:14:56.764647 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-logs-2943 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0905 00:14:56.950443 18 builder.go:146] stderr: ""
  I0905 00:14:56.950495 18 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/05/24 00:14:56.95
  I0905 00:14:56.950665 18 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0905 00:14:57.358912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:14:58.359063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:58.962733 18 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/05/24 00:14:58.962
  I0905 00:14:58.962844 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-logs-2943 logs logs-generator logs-generator'
  I0905 00:14:59.118436 18 builder.go:146] stderr: ""
  I0905 00:14:59.118742 18 builder.go:147] stdout: "I0905 00:14:58.200695       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/cdjn 551\nI0905 00:14:58.400823       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/xvr4 312\nI0905 00:14:58.601480       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/j8kj 467\nI0905 00:14:58.800797       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/kgv 234\nI0905 00:14:59.001424       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/2s5 284\n"
  STEP: limiting log lines @ 09/05/24 00:14:59.118
  I0905 00:14:59.118902 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-logs-2943 logs logs-generator logs-generator --tail=1'
  I0905 00:14:59.216627 18 builder.go:146] stderr: ""
  I0905 00:14:59.216892 18 builder.go:147] stdout: "I0905 00:14:59.201061       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/lks 283\n"
  I0905 00:14:59.217041 18 logs.go:180] got output "I0905 00:14:59.201061       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/lks 283\n"
  STEP: limiting log bytes @ 09/05/24 00:14:59.217
  I0905 00:14:59.217353 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-logs-2943 logs logs-generator logs-generator --limit-bytes=1'
  I0905 00:14:59.346001 18 builder.go:146] stderr: ""
  I0905 00:14:59.346060 18 builder.go:147] stdout: "I"
  I0905 00:14:59.346079 18 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/05/24 00:14:59.346
  I0905 00:14:59.346185 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-logs-2943 logs logs-generator logs-generator --tail=1 --timestamps'
  E0905 00:14:59.360036      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:14:59.457728 18 builder.go:146] stderr: ""
  I0905 00:14:59.457901 18 builder.go:147] stdout: "2024-09-05T00:14:59.401555656Z I0905 00:14:59.401416       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/sks 296\n"
  I0905 00:14:59.457925 18 logs.go:192] got output "2024-09-05T00:14:59.401555656Z I0905 00:14:59.401416       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/sks 296\n"
  STEP: restricting to a time range @ 09/05/24 00:14:59.457
  E0905 00:15:00.360632      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:01.360770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:01.958825 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-logs-2943 logs logs-generator logs-generator --since=1s'
  I0905 00:15:02.101032 18 builder.go:146] stderr: ""
  I0905 00:15:02.101101 18 builder.go:147] stdout: "I0905 00:15:01.201597       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/bvm 483\nI0905 00:15:01.400822       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/78c 508\nI0905 00:15:01.601191       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/qbz 463\nI0905 00:15:01.801775       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/zswg 549\nI0905 00:15:02.001215       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/wdwv 533\n"
  I0905 00:15:02.101362 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-logs-2943 logs logs-generator logs-generator --since=24h'
  I0905 00:15:02.276360 18 builder.go:146] stderr: ""
  I0905 00:15:02.276450 18 builder.go:147] stdout: "I0905 00:14:58.200695       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/cdjn 551\nI0905 00:14:58.400823       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/xvr4 312\nI0905 00:14:58.601480       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/j8kj 467\nI0905 00:14:58.800797       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/kgv 234\nI0905 00:14:59.001424       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/2s5 284\nI0905 00:14:59.201061       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/lks 283\nI0905 00:14:59.401416       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/sks 296\nI0905 00:14:59.600803       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/6c5 362\nI0905 00:14:59.801144       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/zz6 506\nI0905 00:15:00.001522       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/ggs4 420\nI0905 00:15:00.200805       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/8dmg 582\nI0905 00:15:00.401161       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/56h5 313\nI0905 00:15:00.601562       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/bzfl 565\nI0905 00:15:00.800887       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/hjkh 284\nI0905 00:15:01.001245       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/xptk 209\nI0905 00:15:01.201597       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/bvm 483\nI0905 00:15:01.400822       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/78c 508\nI0905 00:15:01.601191       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/qbz 463\nI0905 00:15:01.801775       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/zswg 549\nI0905 00:15:02.001215       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/wdwv 533\nI0905 00:15:02.201747       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/zgtp 512\n"
  I0905 00:15:02.276567 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=kubectl-logs-2943 delete pod logs-generator'
  E0905 00:15:02.361672      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:03.362091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:03.991435 18 builder.go:146] stderr: ""
  I0905 00:15:03.991575 18 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0905 00:15:03.991709 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2943" for this suite. @ 09/05/24 00:15:04.005
• [7.298 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/05/24 00:15:04.016
  I0905 00:15:04.016486 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/05/24 00:15:04.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:15:04.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:15:04.08
  I0905 00:15:04.084180 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  E0905 00:15:04.362868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:05.362701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:06.363430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/05/24 00:15:06.371
  I0905 00:15:06.371321 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-3902 --namespace=crd-publish-openapi-3902 create -f -'
  I0905 00:15:06.547622 18 builder.go:146] stderr: ""
  I0905 00:15:06.547701 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9384-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0905 00:15:06.547766 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-3902 --namespace=crd-publish-openapi-3902 delete e2e-test-crd-publish-openapi-9384-crds test-cr'
  I0905 00:15:06.656165 18 builder.go:146] stderr: ""
  I0905 00:15:06.656408 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9384-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0905 00:15:06.656510 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-3902 --namespace=crd-publish-openapi-3902 apply -f -'
  I0905 00:15:06.765477 18 builder.go:146] stderr: ""
  I0905 00:15:06.765789 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9384-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0905 00:15:06.765859 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-3902 --namespace=crd-publish-openapi-3902 delete e2e-test-crd-publish-openapi-9384-crds test-cr'
  I0905 00:15:06.891805 18 builder.go:146] stderr: ""
  I0905 00:15:06.891861 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9384-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/05/24 00:15:06.891
  I0905 00:15:06.891986 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=crd-publish-openapi-3902 explain e2e-test-crd-publish-openapi-9384-crds'
  I0905 00:15:07.003510 18 builder.go:146] stderr: ""
  I0905 00:15:07.003832 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9384-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0905 00:15:07.364485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:08.364967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:08.865530 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3902" for this suite. @ 09/05/24 00:15:08.877
• [4.877 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 09/05/24 00:15:08.893
  I0905 00:15:08.893997 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename dns @ 09/05/24 00:15:08.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:15:08.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:15:08.962
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/05/24 00:15:08.968
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/05/24 00:15:08.968
  STEP: creating a pod to probe DNS @ 09/05/24 00:15:08.968
  STEP: submitting the pod to kubernetes @ 09/05/24 00:15:08.968
  E0905 00:15:09.365559      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:10.365703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/05/24 00:15:11.018
  STEP: looking for the results for each expected name from probers @ 09/05/24 00:15:11.021
  I0905 00:15:11.051497 18 dns_common.go:527] DNS probes using dns-4671/dns-test-e6af605a-4623-42bd-851a-91a848fbb0d5 succeeded

  STEP: deleting the pod @ 09/05/24 00:15:11.051
  I0905 00:15:11.085667 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4671" for this suite. @ 09/05/24 00:15:11.1
• [2.221 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/05/24 00:15:11.115
  I0905 00:15:11.115878 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/05/24 00:15:11.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:15:11.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:15:11.157
  STEP: Setting up server cert @ 09/05/24 00:15:11.269
  E0905 00:15:11.366619      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/05/24 00:15:12.037
  STEP: Deploying the webhook pod @ 09/05/24 00:15:12.06
  STEP: Wait for the deployment to be ready @ 09/05/24 00:15:12.106
  I0905 00:15:12.153836 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0905 00:15:12.367185      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:13.367896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/05/24 00:15:14.175
  STEP: Verifying the service has paired with the endpoint @ 09/05/24 00:15:14.219
  E0905 00:15:14.368340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:15.220177 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/05/24 00:15:15.228
  STEP: create a pod that should be updated by the webhook @ 09/05/24 00:15:15.269
  E0905 00:15:15.373306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:15.498940 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2211" for this suite. @ 09/05/24 00:15:15.507
  STEP: Destroying namespace "webhook-markers-640" for this suite. @ 09/05/24 00:15:15.546
• [4.451 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/05/24 00:15:15.568
  I0905 00:15:15.568564 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename services @ 09/05/24 00:15:15.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:15:15.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:15:15.606
  STEP: creating service in namespace services-2430 @ 09/05/24 00:15:15.61
  STEP: creating service affinity-clusterip-transition in namespace services-2430 @ 09/05/24 00:15:15.61
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2430 @ 09/05/24 00:15:15.647
  I0905 00:15:15.678874      18 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2430, replica count: 3
  E0905 00:15:16.373381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:17.374236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:18.374933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:18.730028      18 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0905 00:15:18.746947 18 resource.go:361] Creating new exec pod
  E0905 00:15:19.375087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:20.376022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:21.376244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:21.781229 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2430 exec execpod-affinity469jw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0905 00:15:22.085053 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0905 00:15:22.085130 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0905 00:15:22.085239 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2430 exec execpod-affinity469jw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.63.138 80'
  I0905 00:15:22.317814 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.63.138 80\nConnection to 10.43.63.138 80 port [tcp/http] succeeded!\n"
  I0905 00:15:22.317874 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0905 00:15:22.335559 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2430 exec execpod-affinity469jw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.63.138:80/ ; done'
  E0905 00:15:22.377345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:22.698219 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n"
  I0905 00:15:22.698412 18 builder.go:147] stdout: "\naffinity-clusterip-transition-hqk9l\naffinity-clusterip-transition-hqk9l\naffinity-clusterip-transition-zjlk6\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-zjlk6\naffinity-clusterip-transition-hqk9l\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-hqk9l\naffinity-clusterip-transition-zjlk6\naffinity-clusterip-transition-hqk9l\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-hqk9l\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-zjlk6"
  I0905 00:15:22.698443 18 service.go:242] Received response from host: affinity-clusterip-transition-hqk9l
  I0905 00:15:22.698472 18 service.go:242] Received response from host: affinity-clusterip-transition-hqk9l
  I0905 00:15:22.698488 18 service.go:242] Received response from host: affinity-clusterip-transition-zjlk6
  I0905 00:15:22.698502 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:22.698516 18 service.go:242] Received response from host: affinity-clusterip-transition-zjlk6
  I0905 00:15:22.698601 18 service.go:242] Received response from host: affinity-clusterip-transition-hqk9l
  I0905 00:15:22.698623 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:22.698637 18 service.go:242] Received response from host: affinity-clusterip-transition-hqk9l
  I0905 00:15:22.698673 18 service.go:242] Received response from host: affinity-clusterip-transition-zjlk6
  I0905 00:15:22.698690 18 service.go:242] Received response from host: affinity-clusterip-transition-hqk9l
  I0905 00:15:22.698704 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:22.698718 18 service.go:242] Received response from host: affinity-clusterip-transition-hqk9l
  I0905 00:15:22.698732 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:22.698746 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:22.698759 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:22.698773 18 service.go:242] Received response from host: affinity-clusterip-transition-zjlk6
  I0905 00:15:22.725357 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-481350403 --namespace=services-2430 exec execpod-affinity469jw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.63.138:80/ ; done'
  I0905 00:15:23.053087 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.63.138:80/\n"
  I0905 00:15:23.053193 18 builder.go:147] stdout: "\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79\naffinity-clusterip-transition-t6m79"
  I0905 00:15:23.053222 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053240 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053254 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053269 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053283 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053296 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053309 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053322 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053337 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053350 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053367 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053380 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053393 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053406 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053419 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.053432 18 service.go:242] Received response from host: affinity-clusterip-transition-t6m79
  I0905 00:15:23.054884 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2430, will wait for the garbage collector to delete the pods @ 09/05/24 00:15:23.11
  I0905 00:15:23.176285 18 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 11.803588ms
  I0905 00:15:23.276805 18 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.518145ms
  E0905 00:15:23.377563      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:24.378559      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:25.378656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:26.378868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:27.138102 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2430" for this suite. @ 09/05/24 00:15:27.146
• [11.598 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 09/05/24 00:15:27.166
  I0905 00:15:27.167004 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename dns @ 09/05/24 00:15:27.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:15:27.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:15:27.216
  STEP: Creating a test headless service @ 09/05/24 00:15:27.221
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local;sleep 1; done
   @ 09/05/24 00:15:27.232
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local;sleep 1; done
   @ 09/05/24 00:15:27.236
  STEP: creating a pod to probe DNS @ 09/05/24 00:15:27.236
  STEP: submitting the pod to kubernetes @ 09/05/24 00:15:27.236
  E0905 00:15:27.379847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:28.380086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:29.381119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:30.381370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/05/24 00:15:31.307
  STEP: looking for the results for each expected name from probers @ 09/05/24 00:15:31.31
  I0905 00:15:31.319145 18 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:31.324235 18 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:31.328025 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:31.332613 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:31.336696 18 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:31.341652 18 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:31.346633 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:31.351970 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:31.352043 18 dns_common.go:489] Lookups using dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local]

  I0905 00:15:31.361329 18 dns_common.go:495] Pod client logs for webserver: 
  I0905 00:15:31.369075 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:15:31.377435 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:15:31.381680      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:32.382019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:33.382692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:34.382953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:35.383872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:36.315970 18 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:36.320064 18 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:36.324019 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:36.327808 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:36.332479 18 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:36.336455 18 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:36.340350 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:36.344602 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:36.344664 18 dns_common.go:489] Lookups using dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local]

  I0905 00:15:36.352161 18 dns_common.go:495] Pod client logs for webserver: 
  I0905 00:15:36.375482 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:15:36.383719 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:15:36.383933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:37.384178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:38.390452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:39.388223      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:40.388850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:41.317043 18 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:41.321527 18 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:41.326844 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:41.334006 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:41.338242 18 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:41.342958 18 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:41.350431 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:41.356019 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:41.356099 18 dns_common.go:489] Lookups using dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local]

  I0905 00:15:41.365189 18 dns_common.go:495] Pod client logs for webserver: 
  I0905 00:15:41.376429 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:15:41.385111 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:15:41.389416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:42.389713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:43.389977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:44.390169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:45.390320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:46.317272 18 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:46.338095 18 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:46.346201 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:46.350691 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:46.362055 18 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:46.367000 18 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:46.371289 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:46.375375 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:46.375442 18 dns_common.go:489] Lookups using dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local]

  I0905 00:15:46.383884 18 dns_common.go:495] Pod client logs for webserver: 
  E0905 00:15:46.391144      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:46.392532 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:15:46.401264 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:15:47.391991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:48.392108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:49.392335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:50.392459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:51.317022 18 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:51.322966 18 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:51.329368 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:51.335996 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:51.341967 18 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:51.355900 18 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:51.366101 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:51.371370 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:51.371430 18 dns_common.go:489] Lookups using dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local]

  I0905 00:15:51.384124 18 dns_common.go:495] Pod client logs for webserver: 
  E0905 00:15:51.394867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:51.398765 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:15:51.418330 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:15:52.395833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:53.396156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:54.396608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:55.396913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:56.317028 18 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:56.324764 18 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:56.332400 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:56.344141 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:56.350103 18 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:56.356523 18 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:56.360803 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:56.365886 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local from pod dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8: the server could not find the requested resource (get pods dns-test-2022483e-0f30-4b89-a629-14666deaf7b8)
  I0905 00:15:56.366640 18 dns_common.go:489] Lookups using dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3950.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3950.svc.cluster.local jessie_udp@dns-test-service-2.dns-3950.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3950.svc.cluster.local]

  I0905 00:15:56.378988 18 dns_common.go:495] Pod client logs for webserver: 
  E0905 00:15:56.397415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:15:56.401878 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:15:56.428772 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:15:57.397605      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:58.397734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:15:59.398298      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:00.398713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:16:01.383048 18 dns_common.go:527] DNS probes using dns-3950/dns-test-2022483e-0f30-4b89-a629-14666deaf7b8 succeeded

  STEP: deleting the pod @ 09/05/24 00:16:01.383
  E0905 00:16:01.399279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 09/05/24 00:16:01.42
  I0905 00:16:01.490506 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3950" for this suite. @ 09/05/24 00:16:01.499
• [34.361 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/05/24 00:16:01.528
  I0905 00:16:01.528645 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename var-expansion @ 09/05/24 00:16:01.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:16:01.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:16:01.591
  STEP: creating the pod @ 09/05/24 00:16:01.599
  STEP: waiting for pod running @ 09/05/24 00:16:01.626
  E0905 00:16:02.399864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:03.400294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/05/24 00:16:03.659
  I0905 00:16:03.662820 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1771 PodName:var-expansion-e27bfe19-c36b-41f6-8f87-566bbda0fdaa ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:16:03.663026 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:16:03.663872 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:16:03.664108 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-1771/pods/var-expansion-e27bfe19-c36b-41f6-8f87-566bbda0fdaa/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/05/24 00:16:03.857
  I0905 00:16:03.861601 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1771 PodName:var-expansion-e27bfe19-c36b-41f6-8f87-566bbda0fdaa ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:16:03.861779 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:16:03.862772 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:16:03.862963 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-1771/pods/var-expansion-e27bfe19-c36b-41f6-8f87-566bbda0fdaa/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/05/24 00:16:03.988
  E0905 00:16:04.400388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:16:04.515678 18 pod_client.go:173] Successfully updated pod "var-expansion-e27bfe19-c36b-41f6-8f87-566bbda0fdaa"
  STEP: waiting for annotated pod running @ 09/05/24 00:16:04.515
  STEP: deleting the pod gracefully @ 09/05/24 00:16:04.526
  I0905 00:16:04.527263 18 delete.go:62] Deleting pod "var-expansion-e27bfe19-c36b-41f6-8f87-566bbda0fdaa" in namespace "var-expansion-1771"
  I0905 00:16:04.558276 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-e27bfe19-c36b-41f6-8f87-566bbda0fdaa" to be fully deleted
  E0905 00:16:05.400546      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:06.400690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:07.401739      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:08.402125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:09.403156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:10.403813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:11.403962      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:12.404455      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:13.405601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:14.405750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:15.406582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:16.406893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:17.406886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:18.407049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:19.407787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:20.407984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:21.409093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:22.409750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:23.409941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:24.410704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:25.411378      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:26.411225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:27.411365      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:28.411929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:29.412374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:30.412553      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:31.412629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:32.413138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:33.412931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:34.413585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:35.414039      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:36.414254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:37.414815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:38.415041      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:16:38.706372 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1771" for this suite. @ 09/05/24 00:16:38.714
• [37.228 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/05/24 00:16:38.756
  I0905 00:16:38.756594 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/05/24 00:16:38.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:16:38.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:16:38.813
  STEP: Setting up server cert @ 09/05/24 00:16:38.979
  E0905 00:16:39.415415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/05/24 00:16:40.384
  STEP: Deploying the webhook pod @ 09/05/24 00:16:40.399
  E0905 00:16:40.416327      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/05/24 00:16:40.445
  I0905 00:16:40.468760 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0905 00:16:41.416650      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:42.416698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/05/24 00:16:42.495
  STEP: Verifying the service has paired with the endpoint @ 09/05/24 00:16:42.523
  E0905 00:16:43.417656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:16:43.526600 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/05/24 00:16:43.545
  STEP: verifying the mutating webhook match conditions @ 09/05/24 00:16:43.575
  STEP: updating the mutating webhook match conditions @ 09/05/24 00:16:43.58
  STEP: verifying the mutating webhook match conditions @ 09/05/24 00:16:43.599
  I0905 00:16:43.764664 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5973" for this suite. @ 09/05/24 00:16:43.781
  STEP: Destroying namespace "webhook-markers-9432" for this suite. @ 09/05/24 00:16:43.794
• [5.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/05/24 00:16:43.815
  I0905 00:16:43.815362 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename podtemplate @ 09/05/24 00:16:43.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:16:43.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:16:43.865
  STEP: Create set of pod templates @ 09/05/24 00:16:43.873
  I0905 00:16:43.889117 18 podtemplates.go:143] created test-podtemplate-1
  I0905 00:16:43.908071 18 podtemplates.go:143] created test-podtemplate-2
  I0905 00:16:43.923379 18 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/05/24 00:16:43.923
  STEP: delete collection of pod templates @ 09/05/24 00:16:43.929
  I0905 00:16:43.929527 18 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/05/24 00:16:43.965
  I0905 00:16:43.965857 18 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0905 00:16:43.988526 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8171" for this suite. @ 09/05/24 00:16:43.996
• [0.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/05/24 00:16:44.021
  I0905 00:16:44.023079 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/05/24 00:16:44.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:16:44.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:16:44.082
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/05/24 00:16:44.085
  E0905 00:16:44.417864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:45.418116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:46.418220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:47.418299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:16:48.14
  I0905 00:16:48.145738 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-f8a49745-b6bc-4b70-ae65-daebc6993930 container test-container: <nil>
  STEP: delete the pod @ 09/05/24 00:16:48.154
  I0905 00:16:48.220442 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3996" for this suite. @ 09/05/24 00:16:48.225
• [4.216 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/05/24 00:16:48.237
  I0905 00:16:48.238042 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/05/24 00:16:48.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:16:48.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:16:48.287
  I0905 00:16:48.353195 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-907" for this suite. @ 09/05/24 00:16:48.366
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/05/24 00:16:48.391
  I0905 00:16:48.391262 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename security-context-test @ 09/05/24 00:16:48.392
  E0905 00:16:48.419371      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:16:48.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:16:48.455
  E0905 00:16:49.419644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:50.419820      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:51.420426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:52.420494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:53.420601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:54.421103      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:16:54.532637 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4838" for this suite. @ 09/05/24 00:16:54.542
• [6.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/05/24 00:16:54.563
  I0905 00:16:54.563863 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename gc @ 09/05/24 00:16:54.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:16:54.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:16:54.612
  STEP: create the rc1 @ 09/05/24 00:16:54.64
  STEP: create the rc2 @ 09/05/24 00:16:54.652
  E0905 00:16:55.421399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:56.423049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:57.425317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:58.426172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:16:59.438727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:00.439842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/05/24 00:17:00.681
  E0905 00:17:01.451389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/05/24 00:17:02.234
  STEP: wait for the rc to be deleted @ 09/05/24 00:17:02.248
  E0905 00:17:02.462713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:03.463510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:04.467276      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:05.467373      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:06.474709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:07.359129 18 garbage_collector.go:762] 69 pods remaining
  I0905 00:17:07.359175 18 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I0905 00:17:07.359190 18 garbage_collector.go:770] 
  E0905 00:17:07.479995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:08.500474      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:09.502229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:10.502369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:11.502699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/05/24 00:17:12.262
  E0905 00:17:12.503773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:12.652000 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0905 00:17:12.652141 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-22t2x" in namespace "gc-1627"
  I0905 00:17:12.704732 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2brqf" in namespace "gc-1627"
  I0905 00:17:12.806077 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2hdkk" in namespace "gc-1627"
  I0905 00:17:12.911758 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2w2rz" in namespace "gc-1627"
  I0905 00:17:12.958793 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-446h8" in namespace "gc-1627"
  I0905 00:17:13.053830 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lxmr" in namespace "gc-1627"
  I0905 00:17:13.143081 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5c92h" in namespace "gc-1627"
  I0905 00:17:13.203015 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5cg7p" in namespace "gc-1627"
  I0905 00:17:13.240247 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5cn9n" in namespace "gc-1627"
  I0905 00:17:13.324242 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5mcdm" in namespace "gc-1627"
  I0905 00:17:13.396930 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62zh7" in namespace "gc-1627"
  I0905 00:17:13.446878 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-66dkv" in namespace "gc-1627"
  E0905 00:17:13.512373      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:13.512634 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6dl4s" in namespace "gc-1627"
  I0905 00:17:13.564109 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7c6s8" in namespace "gc-1627"
  I0905 00:17:13.621881 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7cq4c" in namespace "gc-1627"
  I0905 00:17:13.662167 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7gw5l" in namespace "gc-1627"
  I0905 00:17:13.706299 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lghq" in namespace "gc-1627"
  I0905 00:17:13.783723 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nzlq" in namespace "gc-1627"
  I0905 00:17:13.819609 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87ntk" in namespace "gc-1627"
  I0905 00:17:13.886101 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8j9fj" in namespace "gc-1627"
  I0905 00:17:13.922865 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8lsz4" in namespace "gc-1627"
  I0905 00:17:13.986925 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8qbt5" in namespace "gc-1627"
  I0905 00:17:14.038920 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8r98m" in namespace "gc-1627"
  I0905 00:17:14.110932 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-947rf" in namespace "gc-1627"
  I0905 00:17:14.210813 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9779k" in namespace "gc-1627"
  I0905 00:17:14.258866 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9b8ll" in namespace "gc-1627"
  I0905 00:17:14.338896 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dglb" in namespace "gc-1627"
  I0905 00:17:14.398843 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9qs9r" in namespace "gc-1627"
  I0905 00:17:14.451341 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bdghc" in namespace "gc-1627"
  I0905 00:17:14.491145 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bj9lf" in namespace "gc-1627"
  E0905 00:17:14.517844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:14.547457 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmrkr" in namespace "gc-1627"
  I0905 00:17:14.586485 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bp27v" in namespace "gc-1627"
  I0905 00:17:14.613694 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cb8wm" in namespace "gc-1627"
  I0905 00:17:14.656781 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cgwdp" in namespace "gc-1627"
  I0905 00:17:14.707090 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqpxm" in namespace "gc-1627"
  I0905 00:17:14.743312 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-csp7k" in namespace "gc-1627"
  I0905 00:17:14.804421 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cvj2k" in namespace "gc-1627"
  I0905 00:17:14.875766 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-czn8t" in namespace "gc-1627"
  I0905 00:17:14.930349 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-db2dm" in namespace "gc-1627"
  I0905 00:17:14.970174 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dwgmg" in namespace "gc-1627"
  I0905 00:17:15.059074 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f2p2c" in namespace "gc-1627"
  I0905 00:17:15.123601 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f8bjz" in namespace "gc-1627"
  I0905 00:17:15.179707 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fhxqb" in namespace "gc-1627"
  I0905 00:17:15.288589 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmsvn" in namespace "gc-1627"
  I0905 00:17:15.382749 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fnqtf" in namespace "gc-1627"
  I0905 00:17:15.452643 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g8k6t" in namespace "gc-1627"
  I0905 00:17:15.515235 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gfzmb" in namespace "gc-1627"
  E0905 00:17:15.522463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:15.622447 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gkpqw" in namespace "gc-1627"
  I0905 00:17:15.681847 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzzgp" in namespace "gc-1627"
  I0905 00:17:15.755596 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hg764" in namespace "gc-1627"
  I0905 00:17:15.807494 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1627" for this suite. @ 09/05/24 00:17:15.838
• [21.308 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/05/24 00:17:15.872
  I0905 00:17:15.872247 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename configmap @ 09/05/24 00:17:15.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:17:15.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:17:15.951
  STEP: Creating configMap with name configmap-test-volume-5d2ce2ca-b3bc-4e92-800b-9717ffb0cce9 @ 09/05/24 00:17:15.954
  STEP: Creating a pod to test consume configMaps @ 09/05/24 00:17:15.98
  E0905 00:17:16.522890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:17.526729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:18.527398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:19.527506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:20.527803      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:21.527908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:22.530783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:23.532172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:24.532618      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:25.532869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:26.536786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:27.537727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:17:28.074
  I0905 00:17:28.078304 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-configmaps-da931bef-5f41-4cd8-ae56-a268573dbdaf container agnhost-container: <nil>
  STEP: delete the pod @ 09/05/24 00:17:28.091
  I0905 00:17:28.137736 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2386" for this suite. @ 09/05/24 00:17:28.142
• [12.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 09/05/24 00:17:28.159
  I0905 00:17:28.159920 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename dns @ 09/05/24 00:17:28.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:17:28.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:17:28.21
  STEP: Creating a test headless service @ 09/05/24 00:17:28.214
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1163.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1163.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1163.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1163.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1163.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1163.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1163.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1163.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1163.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 110.164.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.164.110_udp@PTR;check="$$(dig +tcp +noall +answer +search 110.164.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.164.110_tcp@PTR;sleep 1; done
   @ 09/05/24 00:17:28.276
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1163.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1163.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1163.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1163.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1163.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1163.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1163.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1163.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1163.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1163.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 110.164.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.164.110_udp@PTR;check="$$(dig +tcp +noall +answer +search 110.164.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.164.110_tcp@PTR;sleep 1; done
   @ 09/05/24 00:17:28.276
  STEP: creating a pod to probe DNS @ 09/05/24 00:17:28.276
  STEP: submitting the pod to kubernetes @ 09/05/24 00:17:28.277
  E0905 00:17:28.538667      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:29.538779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:30.539521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:31.540133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/05/24 00:17:32.355
  STEP: looking for the results for each expected name from probers @ 09/05/24 00:17:32.36
  I0905 00:17:32.369484 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:32.375390 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:32.380382 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:32.402757 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:32.438314 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:32.444576 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:32.449291 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:32.458960 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:32.502723 18 dns_common.go:489] Lookups using dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463 failed for: [wheezy_udp@dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_udp@dns-test-service.dns-1163.svc.cluster.local jessie_tcp@dns-test-service.dns-1163.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local]

  I0905 00:17:32.511480 18 dns_common.go:495] Pod client logs for webserver: 
  I0905 00:17:32.521388 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:17:32.531401 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:17:32.540795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:33.541550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:34.541723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:35.542031      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:36.542186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:37.370055 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:37.376186 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:37.381431 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:37.391781 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:37.425928 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:37.430879 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:37.437425 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:37.442798 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:37.463302 18 dns_common.go:489] Lookups using dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463 failed for: [wheezy_udp@dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_udp@dns-test-service.dns-1163.svc.cluster.local jessie_tcp@dns-test-service.dns-1163.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local]

  I0905 00:17:37.474132 18 dns_common.go:495] Pod client logs for webserver: 
  I0905 00:17:37.483987 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:17:37.497284 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:17:37.542651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:38.543002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:39.543257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:40.544045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:41.544290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:42.366366 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:42.373961 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:42.379392 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:42.385076 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:42.412322 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:42.416741 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:42.421053 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:42.425654 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:42.448680 18 dns_common.go:489] Lookups using dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463 failed for: [wheezy_udp@dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_udp@dns-test-service.dns-1163.svc.cluster.local jessie_tcp@dns-test-service.dns-1163.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local]

  I0905 00:17:42.457933 18 dns_common.go:495] Pod client logs for webserver: 
  I0905 00:17:42.466966 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:17:42.481470 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:17:42.545352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:43.545492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:44.545705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:45.545919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:46.546069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:47.365215 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:47.369234 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:47.379606 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:47.384424 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:47.407288 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:47.411657 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:47.415627 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:47.419665 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:47.436573 18 dns_common.go:489] Lookups using dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463 failed for: [wheezy_udp@dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_udp@dns-test-service.dns-1163.svc.cluster.local jessie_tcp@dns-test-service.dns-1163.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local]

  I0905 00:17:47.446082 18 dns_common.go:495] Pod client logs for webserver: 
  I0905 00:17:47.459588 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:17:47.477947 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:17:47.546456      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:48.547189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:49.547305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:50.547562      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:51.547732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:52.367091 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:52.373871 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:52.378799 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:52.384289 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:52.407204 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:52.412290 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:52.417130 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:52.422100 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:52.439375 18 dns_common.go:489] Lookups using dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463 failed for: [wheezy_udp@dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_udp@dns-test-service.dns-1163.svc.cluster.local jessie_tcp@dns-test-service.dns-1163.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local]

  I0905 00:17:52.448533 18 dns_common.go:495] Pod client logs for webserver: 
  I0905 00:17:52.456964 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:17:52.465745 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:17:52.548354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:53.550939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:54.552716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:55.553016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:56.553259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:17:57.365271 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:57.373324 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:57.379244 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:57.385180 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:57.417416 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:57.425304 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:57.430396 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:57.436555 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local from pod dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463: the server could not find the requested resource (get pods dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463)
  I0905 00:17:57.461405 18 dns_common.go:489] Lookups using dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463 failed for: [wheezy_udp@dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@dns-test-service.dns-1163.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_udp@dns-test-service.dns-1163.svc.cluster.local jessie_tcp@dns-test-service.dns-1163.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc.cluster.local]

  I0905 00:17:57.471430 18 dns_common.go:495] Pod client logs for webserver: 
  I0905 00:17:57.485346 18 dns_common.go:495] Pod client logs for querier: 
  I0905 00:17:57.494447 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0905 00:17:57.554016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:58.554343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:17:59.554490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:00.555206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:01.555431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:02.445023 18 dns_common.go:527] DNS probes using dns-1163/dns-test-ccfc9efa-dc4d-4371-b03b-3e6cdd934463 succeeded

  STEP: deleting the pod @ 09/05/24 00:18:02.445
  STEP: deleting the test service @ 09/05/24 00:18:02.506
  E0905 00:18:02.562810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 09/05/24 00:18:02.582
  I0905 00:18:02.622920 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1163" for this suite. @ 09/05/24 00:18:02.635
• [34.507 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/05/24 00:18:02.674
  I0905 00:18:02.674362 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename gc @ 09/05/24 00:18:02.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:18:02.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:18:02.718
  STEP: create the rc @ 09/05/24 00:18:02.735
  W0905 00:18:02.745273      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0905 00:18:03.563707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:04.564467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:05.566694      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:06.567019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:07.567585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:08.570512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/05/24 00:18:08.766
  STEP: wait for the rc to be deleted @ 09/05/24 00:18:08.807
  E0905 00:18:09.570711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:09.854872 18 garbage_collector.go:670] 80 pods remaining
  I0905 00:18:09.854934 18 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0905 00:18:09.854950 18 garbage_collector.go:678] 
  E0905 00:18:10.571630      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:10.913913 18 garbage_collector.go:670] 70 pods remaining
  I0905 00:18:10.960522 18 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0905 00:18:10.966627 18 garbage_collector.go:678] 
  E0905 00:18:11.572524      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:11.851978 18 garbage_collector.go:670] 59 pods remaining
  I0905 00:18:11.852027 18 garbage_collector.go:677] 59 pods has nil DeletionTimestamp
  I0905 00:18:11.852043 18 garbage_collector.go:678] 
  E0905 00:18:12.579873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:12.840854 18 garbage_collector.go:670] 40 pods remaining
  I0905 00:18:12.841023 18 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0905 00:18:12.841043 18 garbage_collector.go:678] 
  E0905 00:18:13.573903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:13.916568 18 garbage_collector.go:670] 31 pods remaining
  I0905 00:18:13.916812 18 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0905 00:18:13.916980 18 garbage_collector.go:678] 
  E0905 00:18:14.575013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:14.842057 18 garbage_collector.go:670] 19 pods remaining
  I0905 00:18:14.842803 18 garbage_collector.go:677] 19 pods has nil DeletionTimestamp
  I0905 00:18:14.842973 18 garbage_collector.go:678] 
  E0905 00:18:15.575889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/05/24 00:18:15.849
  I0905 00:18:16.200564 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0905 00:18:16.297712 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7393" for this suite. @ 09/05/24 00:18:16.329
• [13.693 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/05/24 00:18:16.367
  I0905 00:18:16.367201 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename daemonsets @ 09/05/24 00:18:16.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:18:16.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:18:16.456
  E0905 00:18:16.584612      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 09/05/24 00:18:16.702
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/05/24 00:18:16.727
  I0905 00:18:16.756256 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:16.756318 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:17.595797      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:17.741384 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:17.741646 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:18.596719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:18.746881 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:18.747127 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:19.597264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:19.807002 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:19.807294 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:20.598893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:20.745222 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:20.745410 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:21.600333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:21.772581 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:21.772769 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:22.600919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:22.776903 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:22.777082 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:23.600963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:23.746293 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:23.746491 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:24.601074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:24.749657 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:24.749924 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:25.602771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:25.751005 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0905 00:18:25.751065 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:26.604168      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:26.739305 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0905 00:18:26.739360 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:27.604889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:27.740861 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0905 00:18:27.740907 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:28.606756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:28.747065 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0905 00:18:28.747292 18 fixtures.go:130] Node ip-172-31-0-215.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:29.610321      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:29.740899 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0905 00:18:29.741131 18 fixtures.go:130] Node ip-172-31-3-55.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0905 00:18:30.610696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:30.737090 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0905 00:18:30.737369 18 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 09/05/24 00:18:30.741
  I0905 00:18:30.745194 18 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/05/24 00:18:30.745
  I0905 00:18:30.760584 18 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/05/24 00:18:30.76
  I0905 00:18:30.763328 18 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0905 00:18:30.763767 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.764095 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.764749 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.765071 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.765540 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.766013 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.766216 18 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-3879 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0905 00:18:30.766460 18 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/05/24 00:18:30.766
  STEP: watching for the daemon set status to be patched @ 09/05/24 00:18:30.788
  I0905 00:18:30.793549 18 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0905 00:18:30.793696 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.794084 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.795372 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.795517 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.795633 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.796605 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.796898 18 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-3879 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0905 00:18:30.797228 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0905 00:18:30.797489 18 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-3879 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0905 00:18:30.797683 18 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/05/24 00:18:30.805
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3879, will wait for the garbage collector to delete the pods @ 09/05/24 00:18:30.805
  I0905 00:18:30.881132 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 20.614851ms
  I0905 00:18:30.990670 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 109.510194ms
  E0905 00:18:31.611503      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:32.611767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:33.612472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:34.612822      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:35.613299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:36.613843      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:37.614747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:38.096656 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0905 00:18:38.096713 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0905 00:18:38.107995 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"56071"},"items":null}

  I0905 00:18:38.111549 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"56071"},"items":null}

  I0905 00:18:38.151969 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3879" for this suite. @ 09/05/24 00:18:38.165
• [21.818 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 09/05/24 00:18:38.186
  I0905 00:18:38.186065 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename dns @ 09/05/24 00:18:38.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:18:38.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:18:38.229
  STEP: Creating a test headless service @ 09/05/24 00:18:38.233
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5833.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5833.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/05/24 00:18:38.242
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5833.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5833.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/05/24 00:18:38.243
  STEP: creating a pod to probe DNS @ 09/05/24 00:18:38.243
  STEP: submitting the pod to kubernetes @ 09/05/24 00:18:38.243
  E0905 00:18:38.615706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:39.615808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:40.616362      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:41.617364      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/05/24 00:18:42.336
  STEP: looking for the results for each expected name from probers @ 09/05/24 00:18:42.35
  I0905 00:18:42.390359 18 dns_common.go:527] DNS probes using dns-5833/dns-test-7953ff99-4449-430b-bd12-1490791f89df succeeded

  STEP: deleting the pod @ 09/05/24 00:18:42.39
  STEP: deleting the test headless service @ 09/05/24 00:18:42.434
  I0905 00:18:42.483311 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5833" for this suite. @ 09/05/24 00:18:42.488
• [4.315 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/05/24 00:18:42.502
  I0905 00:18:42.502435 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/05/24 00:18:42.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:18:42.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:18:42.551
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/05/24 00:18:42.556
  I0905 00:18:42.557411 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  E0905 00:18:42.619101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:43.620079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:44.620188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:45.053757 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  E0905 00:18:45.620520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:46.620785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:47.621847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:48.626948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:49.627939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:50.629057      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:51.629227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:52.629526      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:18:52.954407 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8955" for this suite. @ 09/05/24 00:18:52.961
• [10.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/05/24 00:18:52.98
  I0905 00:18:52.981011 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename pod-network-test @ 09/05/24 00:18:52.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:18:53.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:18:53.047
  STEP: Performing setup for networking test in namespace pod-network-test-856 @ 09/05/24 00:18:53.052
  STEP: creating a selector @ 09/05/24 00:18:53.052
  STEP: Creating the service pods in kubernetes @ 09/05/24 00:18:53.052
  I0905 00:18:53.052472 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0905 00:18:53.630610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:54.630762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:55.631633      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:56.631753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:57.632086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:58.632889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:18:59.633072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:00.633323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:01.633459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:02.633807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:03.634456      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:04.634838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:05.635045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:06.635820      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:07.636029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:08.636387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:09.637476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:10.637628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:11.637827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:12.638134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:13.638158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:14.639242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/05/24 00:19:15.275
  E0905 00:19:15.640249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:16.640375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:17.353658 18 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0905 00:19:17.353722 18 utils.go:496] Going to poll 10.42.0.114 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0905 00:19:17.359570 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.114:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-856 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:19:17.359618 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:19:17.360570 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:19:17.360682 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-856/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.114%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0905 00:19:17.465951 18 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0905 00:19:17.466012 18 utils.go:496] Going to poll 10.42.2.145 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0905 00:19:17.476511 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.145:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-856 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:19:17.476569 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:19:17.477444 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:19:17.477536 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-856/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.145%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0905 00:19:17.618384 18 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0905 00:19:17.619136 18 utils.go:496] Going to poll 10.42.1.134 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0905 00:19:17.624381 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.134:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-856 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:19:17.624433 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:19:17.625046 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:19:17.625135 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-856/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.134%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0905 00:19:17.641445      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:17.783735 18 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0905 00:19:17.783782 18 utils.go:496] Going to poll 10.42.3.190 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0905 00:19:17.787232 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.190:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-856 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0905 00:19:17.787306 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  I0905 00:19:17.787964 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0905 00:19:17.788039 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-856/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.190%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0905 00:19:17.890806 18 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0905 00:19:17.890979 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-856" for this suite. @ 09/05/24 00:19:17.895
• [24.932 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/05/24 00:19:17.913
  I0905 00:19:17.913614 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename container-probe @ 09/05/24 00:19:17.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:19:17.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:19:17.949
  STEP: Creating pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575 @ 09/05/24 00:19:17.952
  E0905 00:19:18.641500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:19.641594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/05/24 00:19:19.997
  I0905 00:19:20.000303 18 container_probe.go:1749] Initial restart count of pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 is 0
  I0905 00:19:20.014074 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:20.642277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:21.642669      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:22.026431 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:22.643666      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:23.644288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:24.046138 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:24.645222      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:25.645328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:26.051517 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:26.645635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:27.647166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:28.056024 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:28.646606      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:29.646762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:30.063000 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:30.647846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:31.648057      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:32.070309 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:32.648517      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:33.649412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:34.075479 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:34.650350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:35.650594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:36.080566 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:36.651574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:37.651802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:38.089267 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:38.651996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:39.652727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:40.093993 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:40.652813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:41.652977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:42.099064 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:42.653660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:43.655463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:44.108429 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:44.655909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:45.656015      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:46.113044 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:46.656034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:47.656086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:48.117876 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:48.656165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:49.656330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:50.127964 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:50.656541      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:51.656781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:52.131774 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:52.656968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:53.658013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:54.139997 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:54.658375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:55.658580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:56.145605 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:56.659315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:57.659745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:19:58.150794 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:19:58.660449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:19:59.660588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:00.155129 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:00.660737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:01.660982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:02.160354 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:02.662290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:03.662811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:04.164405 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:04.663158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:05.663473      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:06.169572 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:06.663833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:07.663992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:08.177325 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:08.664136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:09.664706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:10.181651 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:10.665235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:11.665470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:12.186881 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:12.666353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:13.667458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:14.191945 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:14.667614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:15.668189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:16.197755 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:16.668208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:17.668626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:18.201893 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:18.669131      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:19.669546      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:20.206614 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:20.670855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:21.671044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:22.210150 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:22.671799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:23.672004      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:24.214443 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:24.673176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:25.673800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:26.218397 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:26.673967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:27.674108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:28.225922 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:28.674352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:29.674789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:30.231604 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:30.675138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:31.675486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:32.236580 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:32.676252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:33.677117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:34.240409 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:34.677873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:35.678155      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:36.244765 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:36.679236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:37.680007      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:38.252075 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:38.681074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:39.681203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:40.255713 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:40.682234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:41.682761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:42.259941 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:42.683462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:43.684806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:44.264034 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:44.684631      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:45.684801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:46.273750 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:46.685385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:47.685594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:48.277462 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:48.686282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:49.686398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:50.282068 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:50.686703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:51.686868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:52.288723 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:52.687122      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:53.687928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:54.294513 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:54.688621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:55.688947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:56.298960 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:56.689046      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:57.689192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:20:58.303693 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:20:58.690278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:20:59.690659      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:00.309617 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:00.690801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:01.693529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:02.313223 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:02.693774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:03.694650      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:04.318699 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:04.695267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:05.695434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:06.323718 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:06.696239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:07.696343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:08.328843 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:08.696492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:09.697155      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:10.333033 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:10.697336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:11.698129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:12.337572 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:12.699127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:13.699235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:14.342389 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:14.699936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:15.700674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:16.349634 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:16.700938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:17.701116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:18.353379 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:18.702099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:19.703016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:20.357699 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:20.703064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:21.703448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:22.361551 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:22.704052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:23.704723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:24.366658 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:24.705008      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:25.705331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:26.373011 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:26.705568      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:27.705975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:28.377890 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:28.706129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:29.706172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:30.381737 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:30.707118      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:31.707795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:32.386506 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:32.707949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:33.709119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:34.390045 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:34.709756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:35.710416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:36.398303 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:36.710581      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:37.710768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:38.405441 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:38.711621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:39.711835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:40.416473 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:40.712890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:41.713099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:42.420591 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:42.714079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:43.714266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:44.425503 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:44.714917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:45.715941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:46.430308 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:46.716799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:47.717854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:48.439426 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:48.718889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:49.719002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:50.443246 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:50.719871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:51.719972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:52.446769 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:52.721119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:53.721626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:54.451138 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:54.722514      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:55.723356      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:56.461795 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:56.724324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:57.725002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:21:58.467217 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:21:58.726052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:21:59.726173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:00.470902 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:00.727271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:01.727484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:02.474618 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:02.727848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:03.728793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:04.484019 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:04.729659      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:05.729951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:06.488196 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:06.730714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:07.731264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:08.495527 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:08.731952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:09.732084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:10.501855 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:10.732988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:11.733107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:12.505706 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:12.733198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:13.733764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:14.516195 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:14.734596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:15.734791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:16.520981 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:16.735296      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:17.736287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:18.524804 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:18.737214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:19.737337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:20.528967 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:20.738112      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:21.738267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:22.532752 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:22.739197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:23.739315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:24.537022 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:24.739486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:25.739652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:26.541376 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:26.740709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:27.740885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:28.546254 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:28.742027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:29.742320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:30.550970 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:30.743389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:31.743871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:32.554998 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:32.744073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:33.744505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:34.560031 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:34.745328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:35.745495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:36.564071 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:36.746283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:37.746375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:38.568392 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:38.746735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:39.746917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:40.576337 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:40.747691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:41.747852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:42.580873 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:42.748010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:43.748675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:44.584939 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:44.749212      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:45.749382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:46.589244 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:46.749537      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:47.749673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:48.750727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:49.750877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:50.072438 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:50.751929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:51.752216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:52.077992 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:52.752404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:53.753417      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:54.082753 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:54.754128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:55.754479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:56.086719 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:56.755514      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:57.755774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:22:58.091511 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:22:58.756748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:22:59.757431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:00.106092 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:00.757557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:01.759476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:02.110678 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:02.759929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:03.760067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:04.117542 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:04.761709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:05.762143      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:06.122437 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:06.763241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:07.764728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:08.126364 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:08.764103      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:09.764826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:10.130465 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:10.764993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:11.765407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:12.135360 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:12.766041      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:13.766605      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:14.140908 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:14.767557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:15.767725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:16.145661 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:16.769009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:17.768866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:18.151246 18 container_probe.go:1759] Get pod liveness-20207d3d-b0c3-4602-8a10-1cd74ec836e2 in namespace container-probe-9575
  E0905 00:23:18.770091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:19.770277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/05/24 00:23:20.151
  I0905 00:23:20.199752 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9575" for this suite. @ 09/05/24 00:23:20.228
• [242.338 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/05/24 00:23:20.252
  I0905 00:23:20.252341 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename runtimeclass @ 09/05/24 00:23:20.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:23:20.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:23:20.293
  E0905 00:23:20.771066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:21.771406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:22.356926 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-273" for this suite. @ 09/05/24 00:23:22.362
• [2.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/05/24 00:23:22.372
  I0905 00:23:22.373018 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename webhook @ 09/05/24 00:23:22.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:23:22.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:23:22.412
  STEP: Setting up server cert @ 09/05/24 00:23:22.512
  E0905 00:23:22.772367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/05/24 00:23:23.28
  STEP: Deploying the webhook pod @ 09/05/24 00:23:23.293
  STEP: Wait for the deployment to be ready @ 09/05/24 00:23:23.33
  I0905 00:23:23.371557 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0905 00:23:23.773179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:24.774416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/05/24 00:23:25.397
  STEP: Verifying the service has paired with the endpoint @ 09/05/24 00:23:25.433
  E0905 00:23:25.774660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0905 00:23:26.433630 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/05/24 00:23:26.44
  I0905 00:23:26.588845 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3434" for this suite. @ 09/05/24 00:23:26.596
  STEP: Destroying namespace "webhook-markers-7274" for this suite. @ 09/05/24 00:23:26.635
• [4.282 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/05/24 00:23:26.656
  I0905 00:23:26.656595 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename events @ 09/05/24 00:23:26.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:23:26.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:23:26.706
  STEP: creating a test event @ 09/05/24 00:23:26.711
  STEP: listing events in all namespaces @ 09/05/24 00:23:26.72
  STEP: listing events in test namespace @ 09/05/24 00:23:26.724
  STEP: listing events with field selection filtering on source @ 09/05/24 00:23:26.727
  STEP: listing events with field selection filtering on reportingController @ 09/05/24 00:23:26.741
  STEP: getting the test event @ 09/05/24 00:23:26.745
  STEP: patching the test event @ 09/05/24 00:23:26.748
  STEP: getting the test event @ 09/05/24 00:23:26.765
  STEP: updating the test event @ 09/05/24 00:23:26.767
  E0905 00:23:26.774875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting the test event @ 09/05/24 00:23:26.778
  STEP: deleting the test event @ 09/05/24 00:23:26.781
  STEP: listing events in all namespaces @ 09/05/24 00:23:26.793
  STEP: listing events in test namespace @ 09/05/24 00:23:26.798
  I0905 00:23:26.801893 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-360" for this suite. @ 09/05/24 00:23:26.806
• [0.160 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/05/24 00:23:26.816
  I0905 00:23:26.816923 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename secrets @ 09/05/24 00:23:26.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:23:26.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:23:26.862
  STEP: Creating secret with name secret-test-281ac86d-8a84-4e46-a4d9-97d035b1a9ad @ 09/05/24 00:23:26.868
  STEP: Creating a pod to test consume secrets @ 09/05/24 00:23:26.879
  E0905 00:23:27.775398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:28.776735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:29.776853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:30.777123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:31.777237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:32.777402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:23:32.926
  I0905 00:23:32.929722 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-secrets-80a85196-2672-47d6-8100-857fccd3c16e container secret-volume-test: <nil>
  STEP: delete the pod @ 09/05/24 00:23:32.948
  I0905 00:23:32.981239 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-954" for this suite. @ 09/05/24 00:23:32.989
• [6.182 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/05/24 00:23:33
  I0905 00:23:33.000697 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-481350403
  STEP: Building a namespace api object, basename emptydir @ 09/05/24 00:23:33.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/05/24 00:23:33.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/05/24 00:23:33.06
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/05/24 00:23:33.066
  E0905 00:23:33.777937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:34.778084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:35.778893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0905 00:23:36.779129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/05/24 00:23:37.137
  I0905 00:23:37.142175 18 output.go:196] Trying to get logs from node ip-172-31-8-12.us-east-2.compute.internal pod pod-62ff3b07-98b2-451b-8925-79a5f3887d97 container test-container: <nil>
  STEP: delete the pod @ 09/05/24 00:23:37.155
  I0905 00:23:37.189626 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5725" for this suite. @ 09/05/24 00:23:37.195
• [4.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0905 00:23:37.220378 18 suites.go:34] Running AfterSuite actions on node 1
  I0905 00:23:37.220522 18 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.074 seconds]
------------------------------

Ran 404 of 6603 Specs in 6708.235 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6199 Skipped
PASS

Ginkgo ran 1 suite in 1h51m50.48894151s
Test Suite Passed
