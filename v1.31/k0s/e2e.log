  I0930 11:57:28.262554      20 e2e.go:109] Starting e2e run "2aca82b5-56eb-43c6-80d4-e62520b40630" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1727697447 - will randomize all specs

Will run 404 of 6603 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0930 11:57:28.397464 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 11:57:28.398407 20 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0930 11:58:12.696510 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0930 11:58:12.701351 20 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'konnectivity-agent' (0 seconds elapsed)
  I0930 11:58:12.701404 20 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0930 11:58:12.701414 20 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-router' (0 seconds elapsed)
  I0930 11:58:12.701429 20 e2e.go:245] e2e test version: v1.31.1
  I0930 11:58:12.702260 20 e2e.go:254] kube-apiserver version: v1.31.1+k0s
  I0930 11:58:12.702355 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 11:58:12.704995 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [44.308 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/30/24 11:58:12.814
  I0930 11:58:12.815006 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename disruption @ 09/30/24 11:58:12.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 11:58:12.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 11:58:12.824
  STEP: Waiting for the pdb to be processed @ 09/30/24 11:58:12.829
  STEP: Waiting for all pods to be running @ 09/30/24 11:58:14.845
  I0930 11:58:14.849776 20 disruption.go:691] running pods: 0 < 3
  I0930 11:58:16.849991 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1218" for this suite. @ 09/30/24 11:58:16.851
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/30/24 11:58:16.854
  I0930 11:58:16.854998 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 11:58:16.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 11:58:16.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 11:58:16.864
  STEP: Setting up server cert @ 09/30/24 11:58:16.965
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 11:58:17.534
  STEP: Deploying the webhook pod @ 09/30/24 11:58:17.538
  STEP: Wait for the deployment to be ready @ 09/30/24 11:58:17.546
  I0930 11:58:17.550339 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0930 11:58:19.558161 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 11, 58, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 11, 58, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 11, 58, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 11, 58, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/30/24 11:58:21.561
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 11:58:21.567
  I0930 11:58:22.567295 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/30/24 11:58:22.571
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/30/24 11:58:22.571
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/30/24 11:58:22.583
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/30/24 11:58:23.59
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/30/24 11:58:23.59
  STEP: Having no error when timeout is longer than webhook latency @ 09/30/24 11:58:24.608
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/30/24 11:58:24.608
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/30/24 11:58:29.631
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/30/24 11:58:29.631
  I0930 11:58:34.676508 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5725" for this suite. @ 09/30/24 11:58:34.679
  STEP: Destroying namespace "webhook-markers-2308" for this suite. @ 09/30/24 11:58:34.682
• [17.831 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 09/30/24 11:58:34.686
  I0930 11:58:34.686505 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename dns @ 09/30/24 11:58:34.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 11:58:34.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 11:58:34.697
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7127.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-7127.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/30/24 11:58:34.699
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7127.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7127.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/30/24 11:58:34.699
  STEP: creating a pod to probe /etc/hosts @ 09/30/24 11:58:34.699
  STEP: submitting the pod to kubernetes @ 09/30/24 11:58:34.699
  STEP: retrieving the pod @ 09/30/24 11:58:40.719
  STEP: looking for the results for each expected name from probers @ 09/30/24 11:58:40.721
  I0930 11:58:40.732820 20 dns_common.go:527] DNS probes using dns-7127/dns-test-014605ad-3161-4290-bcd6-a9d69abc4a2e succeeded

  STEP: deleting the pod @ 09/30/24 11:58:40.732
  I0930 11:58:40.739704 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7127" for this suite. @ 09/30/24 11:58:40.741
• [6.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/30/24 11:58:40.744
  I0930 11:58:40.744806 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 11:58:40.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 11:58:40.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 11:58:40.753
  STEP: Creating secret with name secret-test-map-3c4c2a03-3cad-4d9d-a010-bc0bd83ab1be @ 09/30/24 11:58:40.755
  STEP: Creating a pod to test consume secrets @ 09/30/24 11:58:40.758
  STEP: Saw pod success @ 09/30/24 11:58:46.774
  I0930 11:58:46.776207 20 output.go:196] Trying to get logs from node worker-0 pod pod-secrets-dca5cd72-ddd8-406f-94aa-4910719fd66d container secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 11:58:46.785
  I0930 11:58:46.793803 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1491" for this suite. @ 09/30/24 11:58:46.795
• [6.054 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/30/24 11:58:46.798
  I0930 11:58:46.798827 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-pred @ 09/30/24 11:58:46.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 11:58:46.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 11:58:46.808
  I0930 11:58:46.810092 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0930 11:58:46.897884 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0930 11:58:46.899725 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0930 11:58:46.901990 20 predicates.go:957] coredns-679c655b6f-fcf5x from kube-system started at 2024-09-30 11:57:06 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.902024 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0930 11:58:46.902033 20 predicates.go:957] konnectivity-agent-spbtv from kube-system started at 2024-09-30 11:56:59 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.902040 20 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0930 11:58:46.902045 20 predicates.go:957] kube-proxy-7phx8 from kube-system started at 2024-09-30 11:56:56 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.902050 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0930 11:58:46.902055 20 predicates.go:957] kube-router-hp7ql from kube-system started at 2024-09-30 11:56:55 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.902060 20 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0930 11:58:46.902066 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-30 11:57:15 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.902071 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0930 11:58:46.902077 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-dtf7x from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 11:58:46.902082 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 11:58:46.902087 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0930 11:58:46.902092 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0930 11:58:46.904134 20 predicates.go:957] coredns-679c655b6f-qx7cq from kube-system started at 2024-09-30 11:57:41 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.904167 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0930 11:58:46.904179 20 predicates.go:957] konnectivity-agent-nmhq8 from kube-system started at 2024-09-30 11:56:59 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.904185 20 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0930 11:58:46.904191 20 predicates.go:957] kube-proxy-2dptv from kube-system started at 2024-09-30 11:56:56 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.904196 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0930 11:58:46.904201 20 predicates.go:957] kube-router-cc52w from kube-system started at 2024-09-30 11:56:55 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.904206 20 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0930 11:58:46.904214 20 predicates.go:957] metrics-server-78c4ccbc7f-w5v8q from kube-system started at 2024-09-30 11:57:04 +0000 UTC (1 container statuses recorded)
  I0930 11:58:46.904219 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0930 11:58:46.904226 20 predicates.go:957] sonobuoy-e2e-job-6bbffb04e0e746b5 from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 11:58:46.904231 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0930 11:58:46.904236 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 11:58:46.904242 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-jq8fj from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 11:58:46.904247 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 11:58:46.904252 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/30/24 11:58:46.904
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/30/24 11:58:48.914
  STEP: Trying to apply a random label on the found node. @ 09/30/24 11:58:48.924
  STEP: verifying the node has the label kubernetes.io/e2e-5c9659a6-c696-4634-ae0f-159e04ce5663 95 @ 09/30/24 11:58:48.93
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/30/24 11:58:48.932
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.0.42.49 on the node which pod4 resides and expect not scheduled @ 09/30/24 11:58:50.94
  STEP: removing the label kubernetes.io/e2e-5c9659a6-c696-4634-ae0f-159e04ce5663 off the node worker-0 @ 09/30/24 12:03:50.947
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5c9659a6-c696-4634-ae0f-159e04ce5663 @ 09/30/24 12:03:50.955
  I0930 12:03:50.957536 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3467" for this suite. @ 09/30/24 12:03:50.959
• [304.164 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/30/24 12:03:50.962
  I0930 12:03:50.962434 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:03:50.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:03:50.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:03:50.977
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/30/24 12:03:50.979
  STEP: Saw pod success @ 09/30/24 12:03:52.991
  I0930 12:03:52.993510 20 output.go:196] Trying to get logs from node worker-0 pod pod-fcde4271-317f-460d-a210-66ee3b6f6eae container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:03:53.003
  I0930 12:03:53.013226 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6906" for this suite. @ 09/30/24 12:03:53.015
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/30/24 12:03:53.018
  I0930 12:03:53.018759 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 12:03:53.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:03:53.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:03:53.03
  STEP: Creating configMap with name configmap-test-upd-543ce7a7-a8ea-42db-beae-af8b67e6239c @ 09/30/24 12:03:53.115
  STEP: Creating the pod @ 09/30/24 12:03:53.118
  STEP: Updating configmap configmap-test-upd-543ce7a7-a8ea-42db-beae-af8b67e6239c @ 09/30/24 12:03:55.134
  STEP: waiting to observe update in volume @ 09/30/24 12:03:55.137
  I0930 12:03:59.152760 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-833" for this suite. @ 09/30/24 12:03:59.154
• [6.139 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/30/24 12:03:59.158
  I0930 12:03:59.158202 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 12:03:59.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:03:59.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:03:59.17
  STEP: Creating pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932 @ 09/30/24 12:03:59.171
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/30/24 12:04:01.181
  I0930 12:04:01.182773 20 container_probe.go:1749] Initial restart count of pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf is 0
  I0930 12:04:01.184336 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:03.187531 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:05.190676 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:07.193895 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:09.196991 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:11.199287 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:13.201764 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:15.204827 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:17.207953 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:19.211211 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:21.213737 20 container_probe.go:1759] Get pod liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf in namespace container-probe-3932
  I0930 12:04:21.213785 20 container_probe.go:1763] Restart count of pod container-probe-3932/liveness-3958c9ae-5608-4fb0-b6ea-2b9d2cebdebf is now 1 (20.030977478s elapsed)
  STEP: deleting the pod @ 09/30/24 12:04:21.213
  I0930 12:04:21.223668 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3932" for this suite. @ 09/30/24 12:04:21.227
• [22.077 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/30/24 12:04:21.235
  I0930 12:04:21.235127 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replication-controller @ 09/30/24 12:04:21.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:04:21.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:04:21.247
  STEP: Given a ReplicationController is created @ 09/30/24 12:04:21.249
  STEP: When the matched label of one of its pods change @ 09/30/24 12:04:21.256
  I0930 12:04:21.259379 20 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0930 12:04:26.344999 20 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/30/24 12:04:26.35
  I0930 12:04:27.355312 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5845" for this suite. @ 09/30/24 12:04:27.357
• [6.127 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/30/24 12:04:27.362
  I0930 12:04:27.362461 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename apf @ 09/30/24 12:04:27.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:04:27.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:04:27.372
  STEP: getting /apis @ 09/30/24 12:04:27.374
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/30/24 12:04:27.377
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/30/24 12:04:27.377
  STEP: creating @ 09/30/24 12:04:27.378
  STEP: getting @ 09/30/24 12:04:27.389
  STEP: listing @ 09/30/24 12:04:27.392
  STEP: watching @ 09/30/24 12:04:27.394
  I0930 12:04:27.394053 20 flowcontrol.go:394] starting watch
  STEP: patching @ 09/30/24 12:04:27.394
  STEP: updating @ 09/30/24 12:04:27.398
  I0930 12:04:27.405176 20 flowcontrol.go:422] waiting for watch events with expected annotations
  I0930 12:04:27.405235 20 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/30/24 12:04:27.405
  STEP: patching /status @ 09/30/24 12:04:27.407
  STEP: updating /status @ 09/30/24 12:04:27.41
  STEP: deleting @ 09/30/24 12:04:27.437
  STEP: deleting a collection @ 09/30/24 12:04:27.443
  I0930 12:04:27.452265 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-56" for this suite. @ 09/30/24 12:04:27.457
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/30/24 12:04:27.462
  I0930 12:04:27.462594 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/30/24 12:04:27.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:04:27.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:04:27.472
  STEP: fetching the /apis discovery document @ 09/30/24 12:04:27.474
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/30/24 12:04:27.475
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/30/24 12:04:27.475
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/30/24 12:04:27.475
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/30/24 12:04:27.476
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/30/24 12:04:27.476
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/30/24 12:04:27.477
  I0930 12:04:27.477246 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-842" for this suite. @ 09/30/24 12:04:27.558
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 09/30/24 12:04:27.563
  I0930 12:04:27.563525 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/30/24 12:04:27.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:04:27.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:04:27.574
  STEP: getting /apis @ 09/30/24 12:04:27.581
  STEP: getting /apis/admissionregistration.k8s.io @ 09/30/24 12:04:27.583
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/30/24 12:04:27.584
  STEP: creating @ 09/30/24 12:04:27.585
  STEP: getting @ 09/30/24 12:04:27.604
  STEP: listing @ 09/30/24 12:04:27.606
  STEP: watching @ 09/30/24 12:04:27.607
  I0930 12:04:27.607900 20 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 09/30/24 12:04:27.608
  STEP: updating @ 09/30/24 12:04:27.614
  I0930 12:04:27.637105 20 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 09/30/24 12:04:27.637
  STEP: patching /status @ 09/30/24 12:04:27.638
  STEP: updating /status @ 09/30/24 12:04:27.647
  STEP: deleting @ 09/30/24 12:04:27.67
  STEP: deleting a collection @ 09/30/24 12:04:27.676
  I0930 12:04:27.684502 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5808" for this suite. @ 09/30/24 12:04:27.686
• [0.126 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/30/24 12:04:27.689
  I0930 12:04:27.689786 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename cronjob @ 09/30/24 12:04:27.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:04:27.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:04:27.702
  STEP: Creating a suspended cronjob @ 09/30/24 12:04:27.704
  STEP: Ensuring no jobs are scheduled @ 09/30/24 12:04:27.71
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/30/24 12:09:27.711
  STEP: Removing cronjob @ 09/30/24 12:09:27.713
  I0930 12:09:27.716891 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4654" for this suite. @ 09/30/24 12:09:27.718
• [300.034 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/30/24 12:09:27.724
  I0930 12:09:27.724104 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 12:09:27.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:09:27.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:09:27.734
  STEP: Creating secret with name s-test-opt-del-2b88d953-102e-48df-a309-80716baead8a @ 09/30/24 12:09:27.819
  STEP: Creating secret with name s-test-opt-upd-cc87a6bf-08a4-4375-ad52-462e2df25c15 @ 09/30/24 12:09:27.822
  STEP: Creating the pod @ 09/30/24 12:09:27.827
  STEP: Deleting secret s-test-opt-del-2b88d953-102e-48df-a309-80716baead8a @ 09/30/24 12:09:29.857
  STEP: Updating secret s-test-opt-upd-cc87a6bf-08a4-4375-ad52-462e2df25c15 @ 09/30/24 12:09:29.861
  STEP: Creating secret with name s-test-opt-create-8cd3576e-56bf-4d6d-9d52-751d01fa428f @ 09/30/24 12:09:29.864
  STEP: waiting to observe update in volume @ 09/30/24 12:09:29.867
  I0930 12:10:32.043623 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2209" for this suite. @ 09/30/24 12:10:32.045
• [64.325 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/30/24 12:10:32.049
  I0930 12:10:32.049259 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename svc-latency @ 09/30/24 12:10:32.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:10:32.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:10:32.062
  I0930 12:10:32.064157 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8854 @ 09/30/24 12:10:32.064
  I0930 12:10:32.068883      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8854, replica count: 1
  I0930 12:10:33.120137      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:10:34.120539      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:10:34.231810 20 service_latency.go:356] Created: latency-svc-sz76z
  I0930 12:10:34.237375 20 service_latency.go:363] Got endpoints: latency-svc-sz76z [16.471493ms]
  I0930 12:10:34.246510 20 service_latency.go:356] Created: latency-svc-5v6cw
  I0930 12:10:34.251326 20 service_latency.go:363] Got endpoints: latency-svc-5v6cw [13.284636ms]
  I0930 12:10:34.252306 20 service_latency.go:356] Created: latency-svc-plp2h
  I0930 12:10:34.256651 20 service_latency.go:363] Got endpoints: latency-svc-plp2h [19.187668ms]
  I0930 12:10:34.259754 20 service_latency.go:356] Created: latency-svc-jpkfg
  I0930 12:10:34.267055 20 service_latency.go:363] Got endpoints: latency-svc-jpkfg [28.931918ms]
  I0930 12:10:34.267889 20 service_latency.go:356] Created: latency-svc-72mtx
  I0930 12:10:34.272747 20 service_latency.go:363] Got endpoints: latency-svc-72mtx [35.041562ms]
  I0930 12:10:34.274301 20 service_latency.go:356] Created: latency-svc-kw22n
  I0930 12:10:34.281230 20 service_latency.go:363] Got endpoints: latency-svc-kw22n [43.405717ms]
  I0930 12:10:34.282127 20 service_latency.go:356] Created: latency-svc-kzl29
  I0930 12:10:34.289645 20 service_latency.go:363] Got endpoints: latency-svc-kzl29 [51.495162ms]
  I0930 12:10:34.290853 20 service_latency.go:356] Created: latency-svc-jvhg4
  I0930 12:10:34.296155 20 service_latency.go:363] Got endpoints: latency-svc-jvhg4 [58.264017ms]
  I0930 12:10:34.297784 20 service_latency.go:356] Created: latency-svc-kqtgl
  I0930 12:10:34.308625 20 service_latency.go:363] Got endpoints: latency-svc-kqtgl [70.628867ms]
  I0930 12:10:34.309322 20 service_latency.go:356] Created: latency-svc-lwfrq
  I0930 12:10:34.314006 20 service_latency.go:363] Got endpoints: latency-svc-lwfrq [76.455738ms]
  I0930 12:10:34.314976 20 service_latency.go:356] Created: latency-svc-jxjhc
  I0930 12:10:34.318047 20 service_latency.go:363] Got endpoints: latency-svc-jxjhc [80.099695ms]
  I0930 12:10:34.321054 20 service_latency.go:356] Created: latency-svc-744md
  I0930 12:10:34.325002 20 service_latency.go:363] Got endpoints: latency-svc-744md [86.790581ms]
  I0930 12:10:34.325950 20 service_latency.go:356] Created: latency-svc-kk5br
  I0930 12:10:34.330814 20 service_latency.go:363] Got endpoints: latency-svc-kk5br [93.290638ms]
  I0930 12:10:34.331980 20 service_latency.go:356] Created: latency-svc-cprcd
  I0930 12:10:34.337333 20 service_latency.go:363] Got endpoints: latency-svc-cprcd [99.151705ms]
  I0930 12:10:34.340223 20 service_latency.go:356] Created: latency-svc-q7sds
  I0930 12:10:34.345208 20 service_latency.go:363] Got endpoints: latency-svc-q7sds [107.396325ms]
  I0930 12:10:34.347480 20 service_latency.go:356] Created: latency-svc-nbgfk
  I0930 12:10:34.354002 20 service_latency.go:363] Got endpoints: latency-svc-nbgfk [115.919483ms]
  I0930 12:10:34.370803 20 service_latency.go:356] Created: latency-svc-jdvt6
  I0930 12:10:34.373758 20 service_latency.go:363] Got endpoints: latency-svc-jdvt6 [122.382094ms]
  I0930 12:10:34.379504 20 service_latency.go:356] Created: latency-svc-2sr7n
  I0930 12:10:34.383748 20 service_latency.go:363] Got endpoints: latency-svc-2sr7n [127.05917ms]
  I0930 12:10:34.385295 20 service_latency.go:356] Created: latency-svc-k27x6
  I0930 12:10:34.391015 20 service_latency.go:363] Got endpoints: latency-svc-k27x6 [123.908505ms]
  I0930 12:10:34.392133 20 service_latency.go:356] Created: latency-svc-9qgv2
  I0930 12:10:34.399684 20 service_latency.go:363] Got endpoints: latency-svc-9qgv2 [126.884259ms]
  I0930 12:10:34.401218 20 service_latency.go:356] Created: latency-svc-cg5t2
  I0930 12:10:34.418365 20 service_latency.go:363] Got endpoints: latency-svc-cg5t2 [137.08181ms]
  I0930 12:10:34.418735 20 service_latency.go:356] Created: latency-svc-p8l7x
  I0930 12:10:34.430996 20 service_latency.go:363] Got endpoints: latency-svc-p8l7x [141.30953ms]
  I0930 12:10:34.433475 20 service_latency.go:356] Created: latency-svc-4j9v7
  I0930 12:10:34.437275 20 service_latency.go:363] Got endpoints: latency-svc-4j9v7 [141.068042ms]
  I0930 12:10:34.438298 20 service_latency.go:356] Created: latency-svc-84c55
  I0930 12:10:34.442661 20 service_latency.go:363] Got endpoints: latency-svc-84c55 [133.992008ms]
  I0930 12:10:34.444777 20 service_latency.go:356] Created: latency-svc-w6h7f
  I0930 12:10:34.448955 20 service_latency.go:363] Got endpoints: latency-svc-w6h7f [134.905056ms]
  I0930 12:10:34.450162 20 service_latency.go:356] Created: latency-svc-q5sbx
  I0930 12:10:34.453818 20 service_latency.go:363] Got endpoints: latency-svc-q5sbx [135.732681ms]
  I0930 12:10:34.454835 20 service_latency.go:356] Created: latency-svc-wk4kl
  I0930 12:10:34.461076 20 service_latency.go:363] Got endpoints: latency-svc-wk4kl [136.031354ms]
  I0930 12:10:34.461896 20 service_latency.go:356] Created: latency-svc-8gt2g
  I0930 12:10:34.467124 20 service_latency.go:363] Got endpoints: latency-svc-8gt2g [136.267458ms]
  I0930 12:10:34.468019 20 service_latency.go:356] Created: latency-svc-qkr49
  I0930 12:10:34.471922 20 service_latency.go:363] Got endpoints: latency-svc-qkr49 [134.546966ms]
  I0930 12:10:34.473258 20 service_latency.go:356] Created: latency-svc-p9fwd
  I0930 12:10:34.481312 20 service_latency.go:363] Got endpoints: latency-svc-p9fwd [136.061108ms]
  I0930 12:10:34.482845 20 service_latency.go:356] Created: latency-svc-wpwrs
  I0930 12:10:34.488546 20 service_latency.go:363] Got endpoints: latency-svc-wpwrs [134.498394ms]
  I0930 12:10:34.489980 20 service_latency.go:356] Created: latency-svc-xgf54
  I0930 12:10:34.493012 20 service_latency.go:363] Got endpoints: latency-svc-xgf54 [119.212956ms]
  I0930 12:10:34.496548 20 service_latency.go:356] Created: latency-svc-tt5v4
  I0930 12:10:34.500617 20 service_latency.go:363] Got endpoints: latency-svc-tt5v4 [116.822252ms]
  I0930 12:10:34.501485 20 service_latency.go:356] Created: latency-svc-26g7x
  I0930 12:10:34.507640 20 service_latency.go:363] Got endpoints: latency-svc-26g7x [116.500444ms]
  I0930 12:10:34.507700 20 service_latency.go:356] Created: latency-svc-nnldh
  I0930 12:10:34.516087 20 service_latency.go:363] Got endpoints: latency-svc-nnldh [116.367021ms]
  I0930 12:10:34.516646 20 service_latency.go:356] Created: latency-svc-pv9c6
  I0930 12:10:34.528487 20 service_latency.go:356] Created: latency-svc-lvdhd
  I0930 12:10:34.534450 20 service_latency.go:356] Created: latency-svc-n2qxz
  I0930 12:10:34.539360 20 service_latency.go:363] Got endpoints: latency-svc-pv9c6 [120.94991ms]
  I0930 12:10:34.540890 20 service_latency.go:356] Created: latency-svc-l7hnc
  I0930 12:10:34.546250 20 service_latency.go:356] Created: latency-svc-789g6
  I0930 12:10:34.554464 20 service_latency.go:356] Created: latency-svc-9p5z4
  I0930 12:10:34.560903 20 service_latency.go:356] Created: latency-svc-ngpwg
  I0930 12:10:34.565080 20 service_latency.go:356] Created: latency-svc-586kd
  I0930 12:10:34.573056 20 service_latency.go:356] Created: latency-svc-skhqp
  I0930 12:10:34.577405 20 service_latency.go:356] Created: latency-svc-kn6gx
  I0930 12:10:34.585142 20 service_latency.go:363] Got endpoints: latency-svc-lvdhd [154.097548ms]
  I0930 12:10:34.586785 20 service_latency.go:356] Created: latency-svc-47s6x
  I0930 12:10:34.591669 20 service_latency.go:356] Created: latency-svc-5flsg
  I0930 12:10:34.598101 20 service_latency.go:356] Created: latency-svc-xkfn9
  I0930 12:10:34.602516 20 service_latency.go:356] Created: latency-svc-4x676
  I0930 12:10:34.607769 20 service_latency.go:356] Created: latency-svc-hqrc6
  I0930 12:10:34.608541 20 service_latency.go:356] Created: latency-svc-7s6mb
  I0930 12:10:34.613852 20 service_latency.go:356] Created: latency-svc-vffqb
  I0930 12:10:34.635167 20 service_latency.go:363] Got endpoints: latency-svc-n2qxz [197.849332ms]
  I0930 12:10:34.643926 20 service_latency.go:356] Created: latency-svc-2mf7m
  I0930 12:10:34.685476 20 service_latency.go:363] Got endpoints: latency-svc-l7hnc [242.747676ms]
  I0930 12:10:34.693727 20 service_latency.go:356] Created: latency-svc-rkjrn
  I0930 12:10:34.736987 20 service_latency.go:363] Got endpoints: latency-svc-789g6 [287.983637ms]
  I0930 12:10:34.744655 20 service_latency.go:356] Created: latency-svc-s6xjk
  I0930 12:10:34.785493 20 service_latency.go:363] Got endpoints: latency-svc-9p5z4 [331.630284ms]
  I0930 12:10:34.794951 20 service_latency.go:356] Created: latency-svc-dfpxq
  I0930 12:10:34.835618 20 service_latency.go:363] Got endpoints: latency-svc-ngpwg [374.492803ms]
  I0930 12:10:34.847005 20 service_latency.go:356] Created: latency-svc-25qk8
  I0930 12:10:34.886789 20 service_latency.go:363] Got endpoints: latency-svc-586kd [419.6197ms]
  I0930 12:10:34.895975 20 service_latency.go:356] Created: latency-svc-4bjkd
  I0930 12:10:34.936956 20 service_latency.go:363] Got endpoints: latency-svc-skhqp [464.997983ms]
  I0930 12:10:34.948421 20 service_latency.go:356] Created: latency-svc-l2skh
  I0930 12:10:34.987739 20 service_latency.go:363] Got endpoints: latency-svc-kn6gx [506.380597ms]
  I0930 12:10:34.996663 20 service_latency.go:356] Created: latency-svc-txnzh
  I0930 12:10:35.036744 20 service_latency.go:363] Got endpoints: latency-svc-47s6x [543.684601ms]
  I0930 12:10:35.046379 20 service_latency.go:356] Created: latency-svc-2vz24
  I0930 12:10:35.086456 20 service_latency.go:363] Got endpoints: latency-svc-5flsg [585.794116ms]
  I0930 12:10:35.098024 20 service_latency.go:356] Created: latency-svc-kvxrg
  I0930 12:10:35.136329 20 service_latency.go:363] Got endpoints: latency-svc-xkfn9 [628.632506ms]
  I0930 12:10:35.148102 20 service_latency.go:356] Created: latency-svc-8jbmg
  I0930 12:10:35.185723 20 service_latency.go:363] Got endpoints: latency-svc-4x676 [669.453676ms]
  I0930 12:10:35.196670 20 service_latency.go:356] Created: latency-svc-xr2ns
  I0930 12:10:35.236202 20 service_latency.go:363] Got endpoints: latency-svc-hqrc6 [696.790989ms]
  I0930 12:10:35.245829 20 service_latency.go:356] Created: latency-svc-ck98z
  I0930 12:10:35.287535 20 service_latency.go:363] Got endpoints: latency-svc-7s6mb [798.936814ms]
  I0930 12:10:35.296833 20 service_latency.go:356] Created: latency-svc-cfcqd
  I0930 12:10:35.335648 20 service_latency.go:363] Got endpoints: latency-svc-vffqb [750.459315ms]
  I0930 12:10:35.345544 20 service_latency.go:356] Created: latency-svc-pvsgc
  I0930 12:10:35.386143 20 service_latency.go:363] Got endpoints: latency-svc-2mf7m [750.876428ms]
  I0930 12:10:35.406618 20 service_latency.go:356] Created: latency-svc-9bgrp
  I0930 12:10:35.440257 20 service_latency.go:363] Got endpoints: latency-svc-rkjrn [754.730661ms]
  I0930 12:10:35.450664 20 service_latency.go:356] Created: latency-svc-wsp72
  I0930 12:10:35.486340 20 service_latency.go:363] Got endpoints: latency-svc-s6xjk [749.24544ms]
  I0930 12:10:35.495344 20 service_latency.go:356] Created: latency-svc-ccdjc
  I0930 12:10:35.536085 20 service_latency.go:363] Got endpoints: latency-svc-dfpxq [750.545144ms]
  I0930 12:10:35.547611 20 service_latency.go:356] Created: latency-svc-qgrsf
  I0930 12:10:35.585924 20 service_latency.go:363] Got endpoints: latency-svc-25qk8 [750.266134ms]
  I0930 12:10:35.596152 20 service_latency.go:356] Created: latency-svc-zxz5g
  I0930 12:10:35.635685 20 service_latency.go:363] Got endpoints: latency-svc-4bjkd [748.843349ms]
  I0930 12:10:35.644051 20 service_latency.go:356] Created: latency-svc-mbtg4
  I0930 12:10:35.689299 20 service_latency.go:363] Got endpoints: latency-svc-l2skh [752.299043ms]
  I0930 12:10:35.698269 20 service_latency.go:356] Created: latency-svc-xvsq5
  I0930 12:10:35.735514 20 service_latency.go:363] Got endpoints: latency-svc-txnzh [747.722462ms]
  I0930 12:10:35.744793 20 service_latency.go:356] Created: latency-svc-gg87s
  I0930 12:10:35.788692 20 service_latency.go:363] Got endpoints: latency-svc-2vz24 [751.903788ms]
  I0930 12:10:35.802418 20 service_latency.go:356] Created: latency-svc-n49j5
  I0930 12:10:35.835304 20 service_latency.go:363] Got endpoints: latency-svc-kvxrg [748.800221ms]
  I0930 12:10:35.844276 20 service_latency.go:356] Created: latency-svc-6wjml
  I0930 12:10:35.886373 20 service_latency.go:363] Got endpoints: latency-svc-8jbmg [750.002068ms]
  I0930 12:10:35.895207 20 service_latency.go:356] Created: latency-svc-gzmjb
  I0930 12:10:35.936746 20 service_latency.go:363] Got endpoints: latency-svc-xr2ns [750.975118ms]
  I0930 12:10:35.946889 20 service_latency.go:356] Created: latency-svc-nzpm5
  I0930 12:10:35.986034 20 service_latency.go:363] Got endpoints: latency-svc-ck98z [749.780696ms]
  I0930 12:10:35.995087 20 service_latency.go:356] Created: latency-svc-q7lqn
  I0930 12:10:36.037103 20 service_latency.go:363] Got endpoints: latency-svc-cfcqd [749.482631ms]
  I0930 12:10:36.046306 20 service_latency.go:356] Created: latency-svc-7ctpk
  I0930 12:10:36.085543 20 service_latency.go:363] Got endpoints: latency-svc-pvsgc [749.847954ms]
  I0930 12:10:36.094984 20 service_latency.go:356] Created: latency-svc-xdfvx
  I0930 12:10:36.135733 20 service_latency.go:363] Got endpoints: latency-svc-9bgrp [749.544052ms]
  I0930 12:10:36.145520 20 service_latency.go:356] Created: latency-svc-l5v68
  I0930 12:10:36.188935 20 service_latency.go:363] Got endpoints: latency-svc-wsp72 [748.628847ms]
  I0930 12:10:36.198820 20 service_latency.go:356] Created: latency-svc-96j7g
  I0930 12:10:36.235183 20 service_latency.go:363] Got endpoints: latency-svc-ccdjc [748.793031ms]
  I0930 12:10:36.244417 20 service_latency.go:356] Created: latency-svc-x8clx
  I0930 12:10:36.286692 20 service_latency.go:363] Got endpoints: latency-svc-qgrsf [750.559094ms]
  I0930 12:10:36.297254 20 service_latency.go:356] Created: latency-svc-lfn8h
  I0930 12:10:36.336757 20 service_latency.go:363] Got endpoints: latency-svc-zxz5g [750.787509ms]
  I0930 12:10:36.347257 20 service_latency.go:356] Created: latency-svc-jh5k7
  I0930 12:10:36.386528 20 service_latency.go:363] Got endpoints: latency-svc-mbtg4 [750.796399ms]
  I0930 12:10:36.397436 20 service_latency.go:356] Created: latency-svc-rs7hh
  I0930 12:10:36.436315 20 service_latency.go:363] Got endpoints: latency-svc-xvsq5 [746.971811ms]
  I0930 12:10:36.445306 20 service_latency.go:356] Created: latency-svc-wwjkg
  I0930 12:10:36.488546 20 service_latency.go:363] Got endpoints: latency-svc-gg87s [752.984268ms]
  I0930 12:10:36.497668 20 service_latency.go:356] Created: latency-svc-zgc9j
  I0930 12:10:36.538705 20 service_latency.go:363] Got endpoints: latency-svc-n49j5 [749.96436ms]
  I0930 12:10:36.547537 20 service_latency.go:356] Created: latency-svc-m6vlb
  I0930 12:10:36.586059 20 service_latency.go:363] Got endpoints: latency-svc-6wjml [750.702782ms]
  I0930 12:10:36.595315 20 service_latency.go:356] Created: latency-svc-55mx8
  I0930 12:10:36.635661 20 service_latency.go:363] Got endpoints: latency-svc-gzmjb [749.242422ms]
  I0930 12:10:36.651531 20 service_latency.go:356] Created: latency-svc-m4ccw
  I0930 12:10:36.685978 20 service_latency.go:363] Got endpoints: latency-svc-nzpm5 [749.183202ms]
  I0930 12:10:36.697148 20 service_latency.go:356] Created: latency-svc-4h4hv
  I0930 12:10:36.736939 20 service_latency.go:363] Got endpoints: latency-svc-q7lqn [750.86687ms]
  I0930 12:10:36.751454 20 service_latency.go:356] Created: latency-svc-hqj5v
  I0930 12:10:36.788227 20 service_latency.go:363] Got endpoints: latency-svc-7ctpk [751.079861ms]
  I0930 12:10:36.799108 20 service_latency.go:356] Created: latency-svc-f2ttk
  I0930 12:10:36.835380 20 service_latency.go:363] Got endpoints: latency-svc-xdfvx [749.775678ms]
  I0930 12:10:36.844643 20 service_latency.go:356] Created: latency-svc-627bh
  I0930 12:10:36.885931 20 service_latency.go:363] Got endpoints: latency-svc-l5v68 [750.153312ms]
  I0930 12:10:36.897137 20 service_latency.go:356] Created: latency-svc-krdvm
  I0930 12:10:36.936034 20 service_latency.go:363] Got endpoints: latency-svc-96j7g [747.04678ms]
  I0930 12:10:36.946846 20 service_latency.go:356] Created: latency-svc-6vvgm
  I0930 12:10:36.986935 20 service_latency.go:363] Got endpoints: latency-svc-x8clx [751.706247ms]
  I0930 12:10:36.995911 20 service_latency.go:356] Created: latency-svc-6tstr
  I0930 12:10:37.037892 20 service_latency.go:363] Got endpoints: latency-svc-lfn8h [751.153726ms]
  I0930 12:10:37.046836 20 service_latency.go:356] Created: latency-svc-wcsrm
  I0930 12:10:37.084783 20 service_latency.go:363] Got endpoints: latency-svc-jh5k7 [747.979983ms]
  I0930 12:10:37.093461 20 service_latency.go:356] Created: latency-svc-7x4bf
  I0930 12:10:37.135095 20 service_latency.go:363] Got endpoints: latency-svc-rs7hh [748.520653ms]
  I0930 12:10:37.144869 20 service_latency.go:356] Created: latency-svc-b95sj
  I0930 12:10:37.186492 20 service_latency.go:363] Got endpoints: latency-svc-wwjkg [750.133058ms]
  I0930 12:10:37.195390 20 service_latency.go:356] Created: latency-svc-fmhjh
  I0930 12:10:37.238129 20 service_latency.go:363] Got endpoints: latency-svc-zgc9j [749.521081ms]
  I0930 12:10:37.248879 20 service_latency.go:356] Created: latency-svc-28rjp
  I0930 12:10:37.285279 20 service_latency.go:363] Got endpoints: latency-svc-m6vlb [746.528605ms]
  I0930 12:10:37.294851 20 service_latency.go:356] Created: latency-svc-zls56
  I0930 12:10:37.336563 20 service_latency.go:363] Got endpoints: latency-svc-55mx8 [750.455421ms]
  I0930 12:10:37.345567 20 service_latency.go:356] Created: latency-svc-sht9c
  I0930 12:10:37.386627 20 service_latency.go:363] Got endpoints: latency-svc-m4ccw [750.915175ms]
  I0930 12:10:37.395398 20 service_latency.go:356] Created: latency-svc-grfvp
  I0930 12:10:37.436070 20 service_latency.go:363] Got endpoints: latency-svc-4h4hv [750.054814ms]
  I0930 12:10:37.445324 20 service_latency.go:356] Created: latency-svc-bmq5f
  I0930 12:10:37.492114 20 service_latency.go:363] Got endpoints: latency-svc-hqj5v [755.128243ms]
  I0930 12:10:37.503438 20 service_latency.go:356] Created: latency-svc-m6fh9
  I0930 12:10:37.535738 20 service_latency.go:363] Got endpoints: latency-svc-f2ttk [747.463028ms]
  I0930 12:10:37.559410 20 service_latency.go:356] Created: latency-svc-jn4dc
  I0930 12:10:37.586283 20 service_latency.go:363] Got endpoints: latency-svc-627bh [750.859595ms]
  I0930 12:10:37.598963 20 service_latency.go:356] Created: latency-svc-6vhn6
  I0930 12:10:37.635261 20 service_latency.go:363] Got endpoints: latency-svc-krdvm [749.277811ms]
  I0930 12:10:37.645134 20 service_latency.go:356] Created: latency-svc-48n2b
  I0930 12:10:37.687101 20 service_latency.go:363] Got endpoints: latency-svc-6vvgm [751.024019ms]
  I0930 12:10:37.695477 20 service_latency.go:356] Created: latency-svc-97zsp
  I0930 12:10:37.735906 20 service_latency.go:363] Got endpoints: latency-svc-6tstr [748.877392ms]
  I0930 12:10:37.744076 20 service_latency.go:356] Created: latency-svc-sgd9p
  I0930 12:10:37.788720 20 service_latency.go:363] Got endpoints: latency-svc-wcsrm [750.779681ms]
  I0930 12:10:37.797678 20 service_latency.go:356] Created: latency-svc-mg7cp
  I0930 12:10:37.837655 20 service_latency.go:363] Got endpoints: latency-svc-7x4bf [752.831295ms]
  I0930 12:10:37.846928 20 service_latency.go:356] Created: latency-svc-z5t7l
  I0930 12:10:37.885812 20 service_latency.go:363] Got endpoints: latency-svc-b95sj [750.665393ms]
  I0930 12:10:37.894809 20 service_latency.go:356] Created: latency-svc-24g68
  I0930 12:10:37.935915 20 service_latency.go:363] Got endpoints: latency-svc-fmhjh [749.377055ms]
  I0930 12:10:37.946802 20 service_latency.go:356] Created: latency-svc-qrvdq
  I0930 12:10:37.986006 20 service_latency.go:363] Got endpoints: latency-svc-28rjp [747.823207ms]
  I0930 12:10:37.994656 20 service_latency.go:356] Created: latency-svc-69wzj
  I0930 12:10:38.035769 20 service_latency.go:363] Got endpoints: latency-svc-zls56 [750.364651ms]
  I0930 12:10:38.045330 20 service_latency.go:356] Created: latency-svc-k6bzn
  I0930 12:10:38.088331 20 service_latency.go:363] Got endpoints: latency-svc-sht9c [751.69957ms]
  I0930 12:10:38.097398 20 service_latency.go:356] Created: latency-svc-m586p
  I0930 12:10:38.137228 20 service_latency.go:363] Got endpoints: latency-svc-grfvp [750.553773ms]
  I0930 12:10:38.146291 20 service_latency.go:356] Created: latency-svc-2s5gk
  I0930 12:10:38.186474 20 service_latency.go:363] Got endpoints: latency-svc-bmq5f [750.358696ms]
  I0930 12:10:38.195523 20 service_latency.go:356] Created: latency-svc-gznq8
  I0930 12:10:38.236256 20 service_latency.go:363] Got endpoints: latency-svc-m6fh9 [744.097734ms]
  I0930 12:10:38.248214 20 service_latency.go:356] Created: latency-svc-mgwmv
  I0930 12:10:38.285363 20 service_latency.go:363] Got endpoints: latency-svc-jn4dc [749.572327ms]
  I0930 12:10:38.294443 20 service_latency.go:356] Created: latency-svc-bm9tv
  I0930 12:10:38.338971 20 service_latency.go:363] Got endpoints: latency-svc-6vhn6 [752.643757ms]
  I0930 12:10:38.348240 20 service_latency.go:356] Created: latency-svc-9tdv4
  I0930 12:10:38.388675 20 service_latency.go:363] Got endpoints: latency-svc-48n2b [753.365889ms]
  I0930 12:10:38.399507 20 service_latency.go:356] Created: latency-svc-bgrrh
  I0930 12:10:38.435457 20 service_latency.go:363] Got endpoints: latency-svc-97zsp [748.313076ms]
  I0930 12:10:38.447646 20 service_latency.go:356] Created: latency-svc-cccjs
  I0930 12:10:38.485716 20 service_latency.go:363] Got endpoints: latency-svc-sgd9p [749.760885ms]
  I0930 12:10:38.494668 20 service_latency.go:356] Created: latency-svc-x2mnn
  I0930 12:10:38.536898 20 service_latency.go:363] Got endpoints: latency-svc-mg7cp [748.129509ms]
  I0930 12:10:38.551334 20 service_latency.go:356] Created: latency-svc-cvb7x
  I0930 12:10:38.585642 20 service_latency.go:363] Got endpoints: latency-svc-z5t7l [747.944754ms]
  I0930 12:10:38.594892 20 service_latency.go:356] Created: latency-svc-2rks2
  I0930 12:10:38.637916 20 service_latency.go:363] Got endpoints: latency-svc-24g68 [752.047868ms]
  I0930 12:10:38.646832 20 service_latency.go:356] Created: latency-svc-cw2gh
  I0930 12:10:38.687319 20 service_latency.go:363] Got endpoints: latency-svc-qrvdq [751.362304ms]
  I0930 12:10:38.696075 20 service_latency.go:356] Created: latency-svc-rvtr6
  I0930 12:10:38.736414 20 service_latency.go:363] Got endpoints: latency-svc-69wzj [750.355653ms]
  I0930 12:10:38.745387 20 service_latency.go:356] Created: latency-svc-lbpcz
  I0930 12:10:38.788732 20 service_latency.go:363] Got endpoints: latency-svc-k6bzn [752.917718ms]
  I0930 12:10:38.797411 20 service_latency.go:356] Created: latency-svc-wvb8p
  I0930 12:10:38.837960 20 service_latency.go:363] Got endpoints: latency-svc-m586p [749.579892ms]
  I0930 12:10:38.847144 20 service_latency.go:356] Created: latency-svc-btzjv
  I0930 12:10:38.886558 20 service_latency.go:363] Got endpoints: latency-svc-2s5gk [749.281711ms]
  I0930 12:10:38.895679 20 service_latency.go:356] Created: latency-svc-rb5fc
  I0930 12:10:38.935711 20 service_latency.go:363] Got endpoints: latency-svc-gznq8 [749.188966ms]
  I0930 12:10:38.947113 20 service_latency.go:356] Created: latency-svc-sgpw2
  I0930 12:10:38.987029 20 service_latency.go:363] Got endpoints: latency-svc-mgwmv [750.720764ms]
  I0930 12:10:38.995919 20 service_latency.go:356] Created: latency-svc-4ck5j
  I0930 12:10:39.035075 20 service_latency.go:363] Got endpoints: latency-svc-bm9tv [749.662794ms]
  I0930 12:10:39.044397 20 service_latency.go:356] Created: latency-svc-lx5b4
  I0930 12:10:39.088083 20 service_latency.go:363] Got endpoints: latency-svc-9tdv4 [749.061859ms]
  I0930 12:10:39.098939 20 service_latency.go:356] Created: latency-svc-z2qhn
  I0930 12:10:39.135325 20 service_latency.go:363] Got endpoints: latency-svc-bgrrh [746.601293ms]
  I0930 12:10:39.144481 20 service_latency.go:356] Created: latency-svc-h6n27
  I0930 12:10:39.187988 20 service_latency.go:363] Got endpoints: latency-svc-cccjs [752.486085ms]
  I0930 12:10:39.199242 20 service_latency.go:356] Created: latency-svc-wkm2l
  I0930 12:10:39.238576 20 service_latency.go:363] Got endpoints: latency-svc-x2mnn [752.815645ms]
  I0930 12:10:39.247565 20 service_latency.go:356] Created: latency-svc-4qqtw
  I0930 12:10:39.290437 20 service_latency.go:363] Got endpoints: latency-svc-cvb7x [753.499995ms]
  I0930 12:10:39.299648 20 service_latency.go:356] Created: latency-svc-pcj76
  I0930 12:10:39.336078 20 service_latency.go:363] Got endpoints: latency-svc-2rks2 [750.395993ms]
  I0930 12:10:39.347734 20 service_latency.go:356] Created: latency-svc-658l6
  I0930 12:10:39.386201 20 service_latency.go:363] Got endpoints: latency-svc-cw2gh [748.234123ms]
  I0930 12:10:39.397612 20 service_latency.go:356] Created: latency-svc-wtn4n
  I0930 12:10:39.435755 20 service_latency.go:363] Got endpoints: latency-svc-rvtr6 [748.390314ms]
  I0930 12:10:39.446777 20 service_latency.go:356] Created: latency-svc-25c7n
  I0930 12:10:39.486534 20 service_latency.go:363] Got endpoints: latency-svc-lbpcz [750.077152ms]
  I0930 12:10:39.495507 20 service_latency.go:356] Created: latency-svc-9bm7t
  I0930 12:10:39.535999 20 service_latency.go:363] Got endpoints: latency-svc-wvb8p [747.224956ms]
  I0930 12:10:39.544929 20 service_latency.go:356] Created: latency-svc-qv8dj
  I0930 12:10:39.588126 20 service_latency.go:363] Got endpoints: latency-svc-btzjv [750.128068ms]
  I0930 12:10:39.597545 20 service_latency.go:356] Created: latency-svc-mbrp2
  I0930 12:10:39.635845 20 service_latency.go:363] Got endpoints: latency-svc-rb5fc [749.21853ms]
  I0930 12:10:39.645161 20 service_latency.go:356] Created: latency-svc-rsbgb
  I0930 12:10:39.687221 20 service_latency.go:363] Got endpoints: latency-svc-sgpw2 [751.465209ms]
  I0930 12:10:39.698265 20 service_latency.go:356] Created: latency-svc-cc8kt
  I0930 12:10:39.736426 20 service_latency.go:363] Got endpoints: latency-svc-4ck5j [749.351051ms]
  I0930 12:10:39.745203 20 service_latency.go:356] Created: latency-svc-skjhd
  I0930 12:10:39.785907 20 service_latency.go:363] Got endpoints: latency-svc-lx5b4 [750.789283ms]
  I0930 12:10:39.794878 20 service_latency.go:356] Created: latency-svc-zdr5t
  I0930 12:10:39.836040 20 service_latency.go:363] Got endpoints: latency-svc-z2qhn [747.910619ms]
  I0930 12:10:39.855002 20 service_latency.go:356] Created: latency-svc-pv596
  I0930 12:10:39.885636 20 service_latency.go:363] Got endpoints: latency-svc-h6n27 [750.267152ms]
  I0930 12:10:39.894793 20 service_latency.go:356] Created: latency-svc-v57qm
  I0930 12:10:39.936372 20 service_latency.go:363] Got endpoints: latency-svc-wkm2l [748.320886ms]
  I0930 12:10:39.945561 20 service_latency.go:356] Created: latency-svc-jcwmp
  I0930 12:10:39.988348 20 service_latency.go:363] Got endpoints: latency-svc-4qqtw [749.701133ms]
  I0930 12:10:39.998905 20 service_latency.go:356] Created: latency-svc-5wqrm
  I0930 12:10:40.035500 20 service_latency.go:363] Got endpoints: latency-svc-pcj76 [744.994463ms]
  I0930 12:10:40.045158 20 service_latency.go:356] Created: latency-svc-rw885
  I0930 12:10:40.085608 20 service_latency.go:363] Got endpoints: latency-svc-658l6 [749.481708ms]
  I0930 12:10:40.095519 20 service_latency.go:356] Created: latency-svc-lgdhq
  I0930 12:10:40.138748 20 service_latency.go:363] Got endpoints: latency-svc-wtn4n [752.505793ms]
  I0930 12:10:40.148980 20 service_latency.go:356] Created: latency-svc-slfvc
  I0930 12:10:40.185537 20 service_latency.go:363] Got endpoints: latency-svc-25c7n [749.739065ms]
  I0930 12:10:40.195038 20 service_latency.go:356] Created: latency-svc-fskg7
  I0930 12:10:40.242572 20 service_latency.go:363] Got endpoints: latency-svc-9bm7t [755.989759ms]
  I0930 12:10:40.251955 20 service_latency.go:356] Created: latency-svc-h8bhx
  I0930 12:10:40.287914 20 service_latency.go:363] Got endpoints: latency-svc-qv8dj [751.870348ms]
  I0930 12:10:40.296799 20 service_latency.go:356] Created: latency-svc-fcntr
  I0930 12:10:40.336131 20 service_latency.go:363] Got endpoints: latency-svc-mbrp2 [747.9598ms]
  I0930 12:10:40.349546 20 service_latency.go:356] Created: latency-svc-hcjnh
  I0930 12:10:40.387574 20 service_latency.go:363] Got endpoints: latency-svc-rsbgb [751.690526ms]
  I0930 12:10:40.396598 20 service_latency.go:356] Created: latency-svc-6cr9f
  I0930 12:10:40.436435 20 service_latency.go:363] Got endpoints: latency-svc-cc8kt [749.166258ms]
  I0930 12:10:40.445274 20 service_latency.go:356] Created: latency-svc-fvjcp
  I0930 12:10:40.488376 20 service_latency.go:363] Got endpoints: latency-svc-skjhd [751.898129ms]
  I0930 12:10:40.497084 20 service_latency.go:356] Created: latency-svc-z8x9v
  I0930 12:10:40.538330 20 service_latency.go:363] Got endpoints: latency-svc-zdr5t [752.370763ms]
  I0930 12:10:40.547030 20 service_latency.go:356] Created: latency-svc-hcb26
  I0930 12:10:40.585986 20 service_latency.go:363] Got endpoints: latency-svc-pv596 [749.898098ms]
  I0930 12:10:40.595541 20 service_latency.go:356] Created: latency-svc-8xgbg
  I0930 12:10:40.638598 20 service_latency.go:363] Got endpoints: latency-svc-v57qm [752.903754ms]
  I0930 12:10:40.647764 20 service_latency.go:356] Created: latency-svc-x7sv5
  I0930 12:10:40.687839 20 service_latency.go:363] Got endpoints: latency-svc-jcwmp [751.424841ms]
  I0930 12:10:40.696655 20 service_latency.go:356] Created: latency-svc-mhxmq
  I0930 12:10:40.736080 20 service_latency.go:363] Got endpoints: latency-svc-5wqrm [747.686009ms]
  I0930 12:10:40.744743 20 service_latency.go:356] Created: latency-svc-9tn2k
  I0930 12:10:40.788502 20 service_latency.go:363] Got endpoints: latency-svc-rw885 [752.961161ms]
  I0930 12:10:40.799670 20 service_latency.go:356] Created: latency-svc-mrrk9
  I0930 12:10:40.835555 20 service_latency.go:363] Got endpoints: latency-svc-lgdhq [749.90175ms]
  I0930 12:10:40.844896 20 service_latency.go:356] Created: latency-svc-57b2w
  I0930 12:10:40.885442 20 service_latency.go:363] Got endpoints: latency-svc-slfvc [746.649885ms]
  I0930 12:10:40.895216 20 service_latency.go:356] Created: latency-svc-29lv7
  I0930 12:10:40.935995 20 service_latency.go:363] Got endpoints: latency-svc-fskg7 [750.395649ms]
  I0930 12:10:40.947263 20 service_latency.go:356] Created: latency-svc-gpqkh
  I0930 12:10:40.986546 20 service_latency.go:363] Got endpoints: latency-svc-h8bhx [743.901848ms]
  I0930 12:10:40.996699 20 service_latency.go:356] Created: latency-svc-4nrmq
  I0930 12:10:41.035452 20 service_latency.go:363] Got endpoints: latency-svc-fcntr [747.483639ms]
  I0930 12:10:41.046736 20 service_latency.go:356] Created: latency-svc-24lp4
  I0930 12:10:41.089183 20 service_latency.go:363] Got endpoints: latency-svc-hcjnh [752.998066ms]
  I0930 12:10:41.098765 20 service_latency.go:356] Created: latency-svc-hb4m7
  I0930 12:10:41.136728 20 service_latency.go:363] Got endpoints: latency-svc-6cr9f [749.095653ms]
  I0930 12:10:41.147994 20 service_latency.go:356] Created: latency-svc-x7xp5
  I0930 12:10:41.187537 20 service_latency.go:363] Got endpoints: latency-svc-fvjcp [751.050778ms]
  I0930 12:10:41.200909 20 service_latency.go:356] Created: latency-svc-5278l
  I0930 12:10:41.235269 20 service_latency.go:363] Got endpoints: latency-svc-z8x9v [746.848055ms]
  I0930 12:10:41.244200 20 service_latency.go:356] Created: latency-svc-zc6z6
  I0930 12:10:41.288669 20 service_latency.go:363] Got endpoints: latency-svc-hcb26 [750.290717ms]
  I0930 12:10:41.303042 20 service_latency.go:356] Created: latency-svc-jpdfp
  I0930 12:10:41.336574 20 service_latency.go:363] Got endpoints: latency-svc-8xgbg [750.535215ms]
  I0930 12:10:41.345725 20 service_latency.go:356] Created: latency-svc-tqrsv
  I0930 12:10:41.385807 20 service_latency.go:363] Got endpoints: latency-svc-x7sv5 [747.162214ms]
  I0930 12:10:41.397210 20 service_latency.go:356] Created: latency-svc-md8jw
  I0930 12:10:41.436927 20 service_latency.go:363] Got endpoints: latency-svc-mhxmq [749.036972ms]
  I0930 12:10:41.445977 20 service_latency.go:356] Created: latency-svc-l57fq
  I0930 12:10:41.486316 20 service_latency.go:363] Got endpoints: latency-svc-9tn2k [750.187973ms]
  I0930 12:10:41.495576 20 service_latency.go:356] Created: latency-svc-t5cfg
  I0930 12:10:41.535996 20 service_latency.go:363] Got endpoints: latency-svc-mrrk9 [747.446586ms]
  I0930 12:10:41.547050 20 service_latency.go:356] Created: latency-svc-l9wqk
  I0930 12:10:41.589631 20 service_latency.go:363] Got endpoints: latency-svc-57b2w [754.002009ms]
  I0930 12:10:41.599489 20 service_latency.go:356] Created: latency-svc-9dwr8
  I0930 12:10:41.638622 20 service_latency.go:363] Got endpoints: latency-svc-29lv7 [753.12537ms]
  I0930 12:10:41.648055 20 service_latency.go:356] Created: latency-svc-sfm5t
  I0930 12:10:41.687300 20 service_latency.go:363] Got endpoints: latency-svc-gpqkh [751.25187ms]
  I0930 12:10:41.696689 20 service_latency.go:356] Created: latency-svc-z8dk9
  I0930 12:10:41.735874 20 service_latency.go:363] Got endpoints: latency-svc-4nrmq [749.262345ms]
  I0930 12:10:41.745012 20 service_latency.go:356] Created: latency-svc-xhbst
  I0930 12:10:41.787664 20 service_latency.go:363] Got endpoints: latency-svc-24lp4 [752.172331ms]
  I0930 12:10:41.798658 20 service_latency.go:356] Created: latency-svc-dp7nb
  I0930 12:10:41.836134 20 service_latency.go:363] Got endpoints: latency-svc-hb4m7 [746.903536ms]
  I0930 12:10:41.845167 20 service_latency.go:356] Created: latency-svc-9h9sw
  I0930 12:10:41.885092 20 service_latency.go:363] Got endpoints: latency-svc-x7xp5 [748.317962ms]
  I0930 12:10:41.894343 20 service_latency.go:356] Created: latency-svc-2zmh2
  I0930 12:10:41.938988 20 service_latency.go:363] Got endpoints: latency-svc-5278l [751.388974ms]
  I0930 12:10:41.947725 20 service_latency.go:356] Created: latency-svc-zdth8
  I0930 12:10:41.988553 20 service_latency.go:363] Got endpoints: latency-svc-zc6z6 [753.245302ms]
  I0930 12:10:41.997628 20 service_latency.go:356] Created: latency-svc-rt9bf
  I0930 12:10:42.040424 20 service_latency.go:363] Got endpoints: latency-svc-jpdfp [751.696004ms]
  I0930 12:10:42.049552 20 service_latency.go:356] Created: latency-svc-ppv6x
  I0930 12:10:42.086017 20 service_latency.go:363] Got endpoints: latency-svc-tqrsv [749.379979ms]
  I0930 12:10:42.135526 20 service_latency.go:363] Got endpoints: latency-svc-md8jw [749.649537ms]
  I0930 12:10:42.188719 20 service_latency.go:363] Got endpoints: latency-svc-l57fq [751.744347ms]
  I0930 12:10:42.237287 20 service_latency.go:363] Got endpoints: latency-svc-t5cfg [750.925142ms]
  I0930 12:10:42.285769 20 service_latency.go:363] Got endpoints: latency-svc-l9wqk [749.729908ms]
  I0930 12:10:42.335734 20 service_latency.go:363] Got endpoints: latency-svc-9dwr8 [745.891823ms]
  I0930 12:10:42.387325 20 service_latency.go:363] Got endpoints: latency-svc-sfm5t [748.657577ms]
  I0930 12:10:42.435903 20 service_latency.go:363] Got endpoints: latency-svc-z8dk9 [748.562081ms]
  I0930 12:10:42.486438 20 service_latency.go:363] Got endpoints: latency-svc-xhbst [750.392649ms]
  I0930 12:10:42.535325 20 service_latency.go:363] Got endpoints: latency-svc-dp7nb [747.614906ms]
  I0930 12:10:42.585180 20 service_latency.go:363] Got endpoints: latency-svc-9h9sw [748.996557ms]
  I0930 12:10:42.636071 20 service_latency.go:363] Got endpoints: latency-svc-2zmh2 [750.93406ms]
  I0930 12:10:42.687190 20 service_latency.go:363] Got endpoints: latency-svc-zdth8 [748.153528ms]
  I0930 12:10:42.737612 20 service_latency.go:363] Got endpoints: latency-svc-rt9bf [748.985094ms]
  I0930 12:10:42.785526 20 service_latency.go:363] Got endpoints: latency-svc-ppv6x [745.056252ms]
  I0930 12:10:42.785647 20 service_latency.go:114] Latencies: [13.284636ms 19.187668ms 28.931918ms 35.041562ms 43.405717ms 51.495162ms 58.264017ms 70.628867ms 76.455738ms 80.099695ms 86.790581ms 93.290638ms 99.151705ms 107.396325ms 115.919483ms 116.367021ms 116.500444ms 116.822252ms 119.212956ms 120.94991ms 122.382094ms 123.908505ms 126.884259ms 127.05917ms 133.992008ms 134.498394ms 134.546966ms 134.905056ms 135.732681ms 136.031354ms 136.061108ms 136.267458ms 137.08181ms 141.068042ms 141.30953ms 154.097548ms 197.849332ms 242.747676ms 287.983637ms 331.630284ms 374.492803ms 419.6197ms 464.997983ms 506.380597ms 543.684601ms 585.794116ms 628.632506ms 669.453676ms 696.790989ms 743.901848ms 744.097734ms 744.994463ms 745.056252ms 745.891823ms 746.528605ms 746.601293ms 746.649885ms 746.848055ms 746.903536ms 746.971811ms 747.04678ms 747.162214ms 747.224956ms 747.446586ms 747.463028ms 747.483639ms 747.614906ms 747.686009ms 747.722462ms 747.823207ms 747.910619ms 747.944754ms 747.9598ms 747.979983ms 748.129509ms 748.153528ms 748.234123ms 748.313076ms 748.317962ms 748.320886ms 748.390314ms 748.520653ms 748.562081ms 748.628847ms 748.657577ms 748.793031ms 748.800221ms 748.843349ms 748.877392ms 748.985094ms 748.996557ms 749.036972ms 749.061859ms 749.095653ms 749.166258ms 749.183202ms 749.188966ms 749.21853ms 749.242422ms 749.24544ms 749.262345ms 749.277811ms 749.281711ms 749.351051ms 749.377055ms 749.379979ms 749.481708ms 749.482631ms 749.521081ms 749.544052ms 749.572327ms 749.579892ms 749.649537ms 749.662794ms 749.701133ms 749.729908ms 749.739065ms 749.760885ms 749.775678ms 749.780696ms 749.847954ms 749.898098ms 749.90175ms 749.96436ms 750.002068ms 750.054814ms 750.077152ms 750.128068ms 750.133058ms 750.153312ms 750.187973ms 750.266134ms 750.267152ms 750.290717ms 750.355653ms 750.358696ms 750.364651ms 750.392649ms 750.395649ms 750.395993ms 750.455421ms 750.459315ms 750.535215ms 750.545144ms 750.553773ms 750.559094ms 750.665393ms 750.702782ms 750.720764ms 750.779681ms 750.787509ms 750.789283ms 750.796399ms 750.859595ms 750.86687ms 750.876428ms 750.915175ms 750.925142ms 750.93406ms 750.975118ms 751.024019ms 751.050778ms 751.079861ms 751.153726ms 751.25187ms 751.362304ms 751.388974ms 751.424841ms 751.465209ms 751.690526ms 751.696004ms 751.69957ms 751.706247ms 751.744347ms 751.870348ms 751.898129ms 751.903788ms 752.047868ms 752.172331ms 752.299043ms 752.370763ms 752.486085ms 752.505793ms 752.643757ms 752.815645ms 752.831295ms 752.903754ms 752.917718ms 752.961161ms 752.984268ms 752.998066ms 753.12537ms 753.245302ms 753.365889ms 753.499995ms 754.002009ms 754.730661ms 755.128243ms 755.989759ms 798.936814ms]
  I0930 12:10:42.785665 20 service_latency.go:118] 50 %ile: 749.262345ms
  I0930 12:10:42.785672 20 service_latency.go:119] 90 %ile: 752.370763ms
  I0930 12:10:42.785677 20 service_latency.go:120] 99 %ile: 755.989759ms
  I0930 12:10:42.785683 20 service_latency.go:121] Total sample count: 200
  I0930 12:10:42.785755 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8854" for this suite. @ 09/30/24 12:10:42.788
• [10.743 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/30/24 12:10:42.792
  I0930 12:10:42.792332 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:10:42.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:10:42.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:10:42.804
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-587 @ 09/30/24 12:10:42.806
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/30/24 12:10:42.818
  STEP: creating service externalsvc in namespace services-587 @ 09/30/24 12:10:42.818
  STEP: creating replication controller externalsvc in namespace services-587 @ 09/30/24 12:10:42.828
  I0930 12:10:42.832323      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-587, replica count: 2
  I0930 12:10:45.884020      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/30/24 12:10:45.886
  I0930 12:10:45.898363 20 resource.go:361] Creating new exec pod
  I0930 12:10:47.909610 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-587 exec execpodpbks9 -- /bin/sh -x -c nslookup nodeport-service.services-587.svc.cluster.local'
  I0930 12:10:48.027202 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-587.svc.cluster.local\n"
  I0930 12:10:48.027338 20 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-587.svc.cluster.local\tcanonical name = externalsvc.services-587.svc.cluster.local.\nName:\texternalsvc.services-587.svc.cluster.local\nAddress: 10.98.167.114\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-587, will wait for the garbage collector to delete the pods @ 09/30/24 12:10:48.027
  I0930 12:10:48.083642 20 resources.go:139] Deleting ReplicationController externalsvc took: 3.764156ms
  I0930 12:10:48.184304 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.657952ms
  I0930 12:10:51.295682 20 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0930 12:10:51.304951 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-587" for this suite. @ 09/30/24 12:10:51.306
• [8.520 seconds]
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/30/24 12:10:51.312
  I0930 12:10:51.312242 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:10:51.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:10:51.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:10:51.322
  STEP: Creating configMap with name cm-test-opt-del-dc6205b3-0d47-44e7-be68-a450ad17e697 @ 09/30/24 12:10:51.407
  STEP: Creating configMap with name cm-test-opt-upd-fa7ada36-3b92-43ed-8b0f-b8b17d6132fc @ 09/30/24 12:10:51.41
  STEP: Creating the pod @ 09/30/24 12:10:51.413
  STEP: Deleting configmap cm-test-opt-del-dc6205b3-0d47-44e7-be68-a450ad17e697 @ 09/30/24 12:10:53.438
  STEP: Updating configmap cm-test-opt-upd-fa7ada36-3b92-43ed-8b0f-b8b17d6132fc @ 09/30/24 12:10:53.442
  STEP: Creating configMap with name cm-test-opt-create-e1b53650-e7f5-4408-8a46-7dd66fcd99d2 @ 09/30/24 12:10:53.445
  STEP: waiting to observe update in volume @ 09/30/24 12:10:53.448
  I0930 12:12:17.695147 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4548" for this suite. @ 09/30/24 12:12:17.697
• [86.388 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/30/24 12:12:17.7
  I0930 12:12:17.700639 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:12:17.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:17.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:17.711
  STEP: Creating secret with name s-test-opt-del-9e0a2532-3f6a-418a-bd0b-0d5efb0de6af @ 09/30/24 12:12:17.798
  STEP: Creating secret with name s-test-opt-upd-0fcc253a-cf9b-48e1-b71c-990a1add843a @ 09/30/24 12:12:17.801
  STEP: Creating the pod @ 09/30/24 12:12:17.804
  STEP: Deleting secret s-test-opt-del-9e0a2532-3f6a-418a-bd0b-0d5efb0de6af @ 09/30/24 12:12:19.836
  STEP: Updating secret s-test-opt-upd-0fcc253a-cf9b-48e1-b71c-990a1add843a @ 09/30/24 12:12:19.841
  STEP: Creating secret with name s-test-opt-create-b8ced17e-ebeb-40b0-9447-69336a7ef3fa @ 09/30/24 12:12:19.844
  STEP: waiting to observe update in volume @ 09/30/24 12:12:19.847
  I0930 12:12:23.870674 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3331" for this suite. @ 09/30/24 12:12:23.873
• [6.176 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/30/24 12:12:23.876
  I0930 12:12:23.876682 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename containers @ 09/30/24 12:12:23.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:23.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:23.887
  I0930 12:12:25.903134 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1988" for this suite. @ 09/30/24 12:12:25.905
• [2.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/30/24 12:12:25.91
  I0930 12:12:25.910961 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:12:25.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:25.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:25.921
  STEP: creating a replication controller @ 09/30/24 12:12:25.923
  I0930 12:12:25.923177 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 create -f -'
  I0930 12:12:26.020576 20 builder.go:146] stderr: ""
  I0930 12:12:26.020629 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/30/24 12:12:26.02
  I0930 12:12:26.020715 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0930 12:12:26.073326 20 builder.go:146] stderr: ""
  I0930 12:12:26.073373 20 builder.go:147] stdout: "update-demo-nautilus-h8vtz update-demo-nautilus-ztdvj "
  I0930 12:12:26.073426 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 get pods update-demo-nautilus-h8vtz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 12:12:26.119953 20 builder.go:146] stderr: ""
  I0930 12:12:26.119995 20 builder.go:147] stdout: ""
  I0930 12:12:26.120005 20 kubectl.go:2502] update-demo-nautilus-h8vtz is created but not running
  I0930 12:12:31.121981 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0930 12:12:31.169089 20 builder.go:146] stderr: ""
  I0930 12:12:31.169132 20 builder.go:147] stdout: "update-demo-nautilus-h8vtz update-demo-nautilus-ztdvj "
  I0930 12:12:31.169194 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 get pods update-demo-nautilus-h8vtz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 12:12:31.213683 20 builder.go:146] stderr: ""
  I0930 12:12:31.213725 20 builder.go:147] stdout: "true"
  I0930 12:12:31.213773 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 get pods update-demo-nautilus-h8vtz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0930 12:12:31.258086 20 builder.go:146] stderr: ""
  I0930 12:12:31.258135 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0930 12:12:31.258147 20 kubectl.go:2393] validating pod update-demo-nautilus-h8vtz
  I0930 12:12:31.262701 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0930 12:12:31.262767 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0930 12:12:31.262784 20 kubectl.go:2520] update-demo-nautilus-h8vtz is verified up and running
  I0930 12:12:31.262833 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 get pods update-demo-nautilus-ztdvj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 12:12:31.307765 20 builder.go:146] stderr: ""
  I0930 12:12:31.307809 20 builder.go:147] stdout: "true"
  I0930 12:12:31.307864 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 get pods update-demo-nautilus-ztdvj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0930 12:12:31.352799 20 builder.go:146] stderr: ""
  I0930 12:12:31.352931 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0930 12:12:31.352948 20 kubectl.go:2393] validating pod update-demo-nautilus-ztdvj
  I0930 12:12:31.356905 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0930 12:12:31.356958 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0930 12:12:31.356968 20 kubectl.go:2520] update-demo-nautilus-ztdvj is verified up and running
  STEP: using delete to clean up resources @ 09/30/24 12:12:31.356
  I0930 12:12:31.357048 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 delete --grace-period=0 --force -f -'
  I0930 12:12:31.402884 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0930 12:12:31.403003 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0930 12:12:31.403066 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 get rc,svc -l name=update-demo --no-headers'
  I0930 12:12:31.489347 20 builder.go:146] stderr: "No resources found in kubectl-6664 namespace.\n"
  I0930 12:12:31.489395 20 builder.go:147] stdout: ""
  I0930 12:12:31.489450 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6664 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0930 12:12:31.541597 20 builder.go:146] stderr: ""
  I0930 12:12:31.541643 20 builder.go:147] stdout: ""
  I0930 12:12:31.541768 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6664" for this suite. @ 09/30/24 12:12:31.544
• [5.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/30/24 12:12:31.547
  I0930 12:12:31.547716 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/30/24 12:12:31.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:31.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:31.558
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/30/24 12:12:31.56
  I0930 12:12:31.561476 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:12:32.834710 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:12:37.669293 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9174" for this suite. @ 09/30/24 12:12:37.674
• [6.130 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/30/24 12:12:37.677
  I0930 12:12:37.677843 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/30/24 12:12:37.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:37.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:37.687
  I0930 12:12:37.690601 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/30/24 12:12:38.88
  I0930 12:12:38.880826 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-3521 --namespace=crd-publish-openapi-3521 create -f -'
  I0930 12:12:40.949040 20 builder.go:146] stderr: ""
  I0930 12:12:40.949096 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9310-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0930 12:12:40.949160 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-3521 --namespace=crd-publish-openapi-3521 delete e2e-test-crd-publish-openapi-9310-crds test-cr'
  I0930 12:12:40.997682 20 builder.go:146] stderr: ""
  I0930 12:12:40.997728 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9310-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0930 12:12:40.997783 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-3521 --namespace=crd-publish-openapi-3521 apply -f -'
  I0930 12:12:41.052215 20 builder.go:146] stderr: ""
  I0930 12:12:41.052268 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9310-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0930 12:12:41.052332 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-3521 --namespace=crd-publish-openapi-3521 delete e2e-test-crd-publish-openapi-9310-crds test-cr'
  I0930 12:12:41.101779 20 builder.go:146] stderr: ""
  I0930 12:12:41.101826 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9310-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/30/24 12:12:41.101
  I0930 12:12:41.101916 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-3521 explain e2e-test-crd-publish-openapi-9310-crds'
  I0930 12:12:41.147636 20 builder.go:146] stderr: ""
  I0930 12:12:41.147783 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9310-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0930 12:12:42.360025 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3521" for this suite. @ 09/30/24 12:12:42.365
• [4.691 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/30/24 12:12:42.368
  I0930 12:12:42.368570 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replicaset @ 09/30/24 12:12:42.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:42.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:42.38
  I0930 12:12:42.389828 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0930 12:12:47.391827 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/30/24 12:12:47.391
  STEP: Scaling up "test-rs" replicaset @ 09/30/24 12:12:47.391
  I0930 12:12:47.398135 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/30/24 12:12:47.398
  I0930 12:12:47.404421 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1466 with ReadyReplicas 1, AvailableReplicas 1
  I0930 12:12:47.417781 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1466 with ReadyReplicas 1, AvailableReplicas 1
  I0930 12:12:47.428544 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1466 with ReadyReplicas 1, AvailableReplicas 1
  I0930 12:12:47.434485 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1466 with ReadyReplicas 1, AvailableReplicas 1
  I0930 12:12:48.321112 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1466 with ReadyReplicas 2, AvailableReplicas 2
  I0930 12:12:48.376232 20 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-1466 with ReadyReplicas 3 found true
  I0930 12:12:48.376341 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1466" for this suite. @ 09/30/24 12:12:48.378
• [6.014 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/30/24 12:12:48.382
  I0930 12:12:48.382237 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename runtimeclass @ 09/30/24 12:12:48.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:48.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:48.394
  I0930 12:12:50.414908 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1274" for this suite. @ 09/30/24 12:12:50.416
• [2.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/30/24 12:12:50.42
  I0930 12:12:50.420535 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-runtime @ 09/30/24 12:12:50.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:50.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:50.43
  STEP: create the container @ 09/30/24 12:12:50.433
  W0930 12:12:50.438216      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/30/24 12:12:50.438
  STEP: get the container status @ 09/30/24 12:12:54.451
  STEP: the container should be terminated @ 09/30/24 12:12:54.453
  STEP: the termination message should be set @ 09/30/24 12:12:54.453
  I0930 12:12:54.453684 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/30/24 12:12:54.453
  I0930 12:12:54.464112 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7700" for this suite. @ 09/30/24 12:12:54.466
• [4.051 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/30/24 12:12:54.471
  I0930 12:12:54.471571 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-runtime @ 09/30/24 12:12:54.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:54.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:54.484
  STEP: create the container @ 09/30/24 12:12:54.486
  W0930 12:12:54.493253      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/30/24 12:12:54.493
  STEP: get the container status @ 09/30/24 12:12:57.501
  STEP: the container should be terminated @ 09/30/24 12:12:57.502
  STEP: the termination message should be set @ 09/30/24 12:12:57.502
  I0930 12:12:57.502775 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/30/24 12:12:57.502
  I0930 12:12:57.512862 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8542" for this suite. @ 09/30/24 12:12:57.514
• [3.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/30/24 12:12:57.52
  I0930 12:12:57.520155 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename podtemplate @ 09/30/24 12:12:57.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:57.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:57.53
  STEP: Create a pod template @ 09/30/24 12:12:57.531
  STEP: Replace a pod template @ 09/30/24 12:12:57.537
  I0930 12:12:57.542206 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0930 12:12:57.542310 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6720" for this suite. @ 09/30/24 12:12:57.615
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/30/24 12:12:57.619
  I0930 12:12:57.619111 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/30/24 12:12:57.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:12:57.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:12:57.632
  STEP: create the container to handle the HTTPGet hook request. @ 09/30/24 12:12:57.716
  STEP: create the pod with lifecycle hook @ 09/30/24 12:12:59.73
  STEP: check poststart hook @ 09/30/24 12:13:01.742
  STEP: delete the pod with lifecycle hook @ 09/30/24 12:13:01.746
  I0930 12:13:03.754099 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2886" for this suite. @ 09/30/24 12:13:03.756
• [6.140 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/30/24 12:13:03.759
  I0930 12:13:03.759536 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:13:03.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:03.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:03.769
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 12:13:03.771
  STEP: Saw pod success @ 09/30/24 12:13:05.781
  I0930 12:13:05.782931 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-d571cf59-a564-412a-a170-c6cc0d5c1a87 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 12:13:05.786
  I0930 12:13:05.796999 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2537" for this suite. @ 09/30/24 12:13:05.799
• [2.049 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/30/24 12:13:05.808
  I0930 12:13:05.808891 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replication-controller @ 09/30/24 12:13:05.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:05.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:05.821
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/30/24 12:13:05.823
  STEP: When a replication controller with a matching selector is created @ 09/30/24 12:13:07.834
  STEP: Then the orphan pod is adopted @ 09/30/24 12:13:07.837
  I0930 12:13:08.841067 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-454" for this suite. @ 09/30/24 12:13:08.843
• [3.038 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 09/30/24 12:13:08.847
  I0930 12:13:08.847055 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:13:08.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:08.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:08.937
  STEP: starting the proxy server @ 09/30/24 12:13:08.939
  I0930 12:13:08.939290 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-3982 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/30/24 12:13:08.978
  I0930 12:13:08.983626 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0930 12:13:08.985869 20 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:39463

  STEP: Destroying namespace "kubectl-3982" for this suite. @ 09/30/24 12:13:08.985
  I0930 12:13:08.985940 20 kubectl.go:2229] kubectl proxy stderr: W0930 12:13:08.977881     140 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

• [0.144 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/30/24 12:13:08.991
  I0930 12:13:08.991464 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename controllerrevisions @ 09/30/24 12:13:08.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:09.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:09.037
  STEP: Creating DaemonSet "e2e-fbhdp-daemon-set" @ 09/30/24 12:13:09.089
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/30/24 12:13:09.092
  I0930 12:13:09.189652 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-fbhdp-daemon-set: 0
  I0930 12:13:09.189692 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:13:10.098082 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-fbhdp-daemon-set: 0
  I0930 12:13:10.098129 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:13:11.098149 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-fbhdp-daemon-set: 2
  I0930 12:13:11.098190 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-fbhdp-daemon-set
  STEP: Confirm DaemonSet "e2e-fbhdp-daemon-set" successfully created with "daemonset-name=e2e-fbhdp-daemon-set" label @ 09/30/24 12:13:11.099
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-fbhdp-daemon-set" @ 09/30/24 12:13:11.103
  I0930 12:13:11.105225 20 controller_revision.go:162] Located ControllerRevision: "e2e-fbhdp-daemon-set-796d758c84"
  STEP: Patching ControllerRevision "e2e-fbhdp-daemon-set-796d758c84" @ 09/30/24 12:13:11.106
  I0930 12:13:11.112492 20 controller_revision.go:173] e2e-fbhdp-daemon-set-796d758c84 has been patched
  STEP: Create a new ControllerRevision @ 09/30/24 12:13:11.112
  I0930 12:13:11.115837 20 controller_revision.go:191] Created ControllerRevision: e2e-fbhdp-daemon-set-68d5f7bbf4
  STEP: Confirm that there are two ControllerRevisions @ 09/30/24 12:13:11.115
  I0930 12:13:11.115903 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0930 12:13:11.117639 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-fbhdp-daemon-set-796d758c84" @ 09/30/24 12:13:11.117
  STEP: Confirm that there is only one ControllerRevision @ 09/30/24 12:13:11.12
  I0930 12:13:11.120850 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0930 12:13:11.122445 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-fbhdp-daemon-set-68d5f7bbf4" @ 09/30/24 12:13:11.123
  I0930 12:13:11.130848 20 controller_revision.go:220] e2e-fbhdp-daemon-set-68d5f7bbf4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/30/24 12:13:11.13
  W0930 12:13:11.136665      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/30/24 12:13:11.136
  I0930 12:13:11.136776 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0930 12:13:11.153364 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-fbhdp-daemon-set-68d5f7bbf4=updated" @ 09/30/24 12:13:11.153
  STEP: Confirm that there is only one ControllerRevision @ 09/30/24 12:13:11.16
  I0930 12:13:11.160060 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0930 12:13:11.205485 20 controller_revision.go:265] Found 1 ControllerRevisions
  I0930 12:13:11.207260 20 controller_revision.go:246] ControllerRevision "e2e-fbhdp-daemon-set-f6c86cc75" has revision 3
  STEP: Deleting DaemonSet "e2e-fbhdp-daemon-set" @ 09/30/24 12:13:11.208
  STEP: deleting DaemonSet.extensions e2e-fbhdp-daemon-set in namespace controllerrevisions-2509, will wait for the garbage collector to delete the pods @ 09/30/24 12:13:11.208
  I0930 12:13:11.264196 20 resources.go:139] Deleting DaemonSet.extensions e2e-fbhdp-daemon-set took: 3.620268ms
  I0930 12:13:11.365228 20 resources.go:163] Terminating DaemonSet.extensions e2e-fbhdp-daemon-set pods took: 101.023437ms
  I0930 12:13:12.467237 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-fbhdp-daemon-set: 0
  I0930 12:13:12.467277 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-fbhdp-daemon-set
  I0930 12:13:12.469330 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5742"},"items":null}

  I0930 12:13:12.470926 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5742"},"items":null}

  I0930 12:13:12.475898 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2509" for this suite. @ 09/30/24 12:13:12.477
• [3.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/30/24 12:13:12.48
  I0930 12:13:12.480824 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replicaset @ 09/30/24 12:13:12.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:12.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:12.49
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/30/24 12:13:12.492
  I0930 12:13:12.497993 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0930 12:13:17.503287 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/30/24 12:13:17.503
  STEP: getting scale subresource @ 09/30/24 12:13:17.503
  STEP: updating a scale subresource @ 09/30/24 12:13:17.505
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/30/24 12:13:17.51
  STEP: Patch a scale subresource @ 09/30/24 12:13:17.511
  I0930 12:13:17.520662 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5350" for this suite. @ 09/30/24 12:13:17.523
• [5.049 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 09/30/24 12:13:17.53
  I0930 12:13:17.530173 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename job @ 09/30/24 12:13:17.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:17.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:17.541
  STEP: Creating a job @ 09/30/24 12:13:17.543
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/30/24 12:13:17.547
  STEP: patching /status @ 09/30/24 12:13:19.552
  STEP: updating /status @ 09/30/24 12:13:19.56
  STEP: get /status @ 09/30/24 12:13:19.567
  I0930 12:13:19.569951 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5383" for this suite. @ 09/30/24 12:13:19.572
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/30/24 12:13:19.578
  I0930 12:13:19.578835 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:13:19.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:19.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:19.589
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1734 @ 09/30/24 12:13:19.591
  STEP: changing the ExternalName service to type=NodePort @ 09/30/24 12:13:19.596
  STEP: creating replication controller externalname-service in namespace services-1734 @ 09/30/24 12:13:19.608
  I0930 12:13:19.615077      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1734, replica count: 2
  I0930 12:13:22.665681      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:13:22.665710 20 resource.go:361] Creating new exec pod
  I0930 12:13:25.676832 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-1734 exec execpodnwmk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0930 12:13:25.759320 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0930 12:13:25.759428 20 builder.go:147] stdout: "externalname-service-kthkz"
  I0930 12:13:25.759515 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-1734 exec execpodnwmk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.47.231 80'
  I0930 12:13:25.838288 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.47.231 80\nConnection to 10.109.47.231 80 port [tcp/http] succeeded!\n"
  I0930 12:13:25.838335 20 builder.go:147] stdout: "externalname-service-kthkz"
  I0930 12:13:25.838421 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-1734 exec execpodnwmk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.42.49 31671'
  I0930 12:13:25.921439 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.42.49 31671\nConnection to 10.0.42.49 31671 port [tcp/*] succeeded!\n"
  I0930 12:13:25.921482 20 builder.go:147] stdout: ""
  I0930 12:13:26.838527 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-1734 exec execpodnwmk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.42.49 31671'
  I0930 12:13:26.919608 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.42.49 31671\nConnection to 10.0.42.49 31671 port [tcp/*] succeeded!\n"
  I0930 12:13:26.919654 20 builder.go:147] stdout: "externalname-service-9j4cr"
  I0930 12:13:26.919732 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-1734 exec execpodnwmk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.35.180 31671'
  I0930 12:13:27.002216 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.35.180 31671\nConnection to 10.0.35.180 31671 port [tcp/*] succeeded!\n"
  I0930 12:13:27.002262 20 builder.go:147] stdout: ""
  I0930 12:13:27.920274 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-1734 exec execpodnwmk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.35.180 31671'
  I0930 12:13:27.999975 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.35.180 31671\nConnection to 10.0.35.180 31671 port [tcp/*] succeeded!\n"
  I0930 12:13:28.000065 20 builder.go:147] stdout: ""
  I0930 12:13:28.920061 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-1734 exec execpodnwmk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.35.180 31671'
  I0930 12:13:29.000261 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.35.180 31671\nConnection to 10.0.35.180 31671 port [tcp/*] succeeded!\n"
  I0930 12:13:29.000308 20 builder.go:147] stdout: "externalname-service-kthkz"
  I0930 12:13:29.000381 20 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0930 12:13:29.014556 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1734" for this suite. @ 09/30/24 12:13:29.016
• [9.441 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/30/24 12:13:29.02
  I0930 12:13:29.020481 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/30/24 12:13:29.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:29.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:29.03
  I0930 12:13:29.032989 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:13:32.091154 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4990" for this suite. @ 09/30/24 12:13:32.093
• [3.078 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/30/24 12:13:32.098
  I0930 12:13:32.098633 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:13:32.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:32.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:32.109
  STEP: creating service in namespace services-495 @ 09/30/24 12:13:32.111
  STEP: creating service affinity-clusterip in namespace services-495 @ 09/30/24 12:13:32.111
  STEP: creating replication controller affinity-clusterip in namespace services-495 @ 09/30/24 12:13:32.119
  I0930 12:13:32.125980      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-495, replica count: 3
  I0930 12:13:35.176944      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:13:35.180086 20 resource.go:361] Creating new exec pod
  I0930 12:13:38.190595 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-495 exec execpod-affinitygztgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0930 12:13:38.274243 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0930 12:13:38.274288 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:13:38.274365 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-495 exec execpod-affinitygztgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.57.220 80'
  I0930 12:13:38.356493 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.57.220 80\nConnection to 10.105.57.220 80 port [tcp/http] succeeded!\n"
  I0930 12:13:38.356538 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:13:38.356614 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-495 exec execpod-affinitygztgn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.105.57.220:80/ ; done'
  I0930 12:13:38.493364 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.57.220:80/\n"
  I0930 12:13:38.493502 20 builder.go:147] stdout: "\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk\naffinity-clusterip-w78pk"
  I0930 12:13:38.493524 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493532 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493538 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493544 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493550 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493556 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493562 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493568 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493576 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493590 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493596 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493615 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493625 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493634 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493639 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493644 20 service.go:242] Received response from host: affinity-clusterip-w78pk
  I0930 12:13:38.493708 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-495, will wait for the garbage collector to delete the pods @ 09/30/24 12:13:38.502
  I0930 12:13:38.559096 20 resources.go:139] Deleting ReplicationController affinity-clusterip took: 3.736173ms
  I0930 12:13:38.660139 20 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.022988ms
  I0930 12:13:41.571478 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-495" for this suite. @ 09/30/24 12:13:41.573
• [9.478 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/30/24 12:13:41.577
  I0930 12:13:41.577102 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:13:41.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:41.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:41.59
  STEP: Setting up server cert @ 09/30/24 12:13:41.688
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:13:42.169
  STEP: Deploying the webhook pod @ 09/30/24 12:13:42.174
  STEP: Wait for the deployment to be ready @ 09/30/24 12:13:42.184
  I0930 12:13:42.188407 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/30/24 12:13:44.195
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:13:44.203
  I0930 12:13:45.203521 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/30/24 12:13:45.207
  STEP: create the configmap with a random name @ 09/30/24 12:13:45.224
  STEP: verify the configmap is mutated @ 09/30/24 12:13:45.236
  STEP: create the configmap with 'skip-me' name @ 09/30/24 12:13:45.236
  I0930 12:13:45.264722 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6060" for this suite. @ 09/30/24 12:13:45.269
  STEP: Destroying namespace "webhook-markers-6265" for this suite. @ 09/30/24 12:13:45.274
• [3.701 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/30/24 12:13:45.278
  I0930 12:13:45.278226 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:13:45.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:13:45.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:13:45.29
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-c044bc35-75d3-4c9e-9b67-c6b686c7c559 @ 09/30/24 12:13:45.369
  STEP: Creating the pod @ 09/30/24 12:13:45.372
  STEP: Updating configmap projected-configmap-test-upd-c044bc35-75d3-4c9e-9b67-c6b686c7c559 @ 09/30/24 12:13:47.387
  STEP: waiting to observe update in volume @ 09/30/24 12:13:47.392
  I0930 12:15:01.596898 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3232" for this suite. @ 09/30/24 12:15:01.599
• [76.324 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/30/24 12:15:01.602
  I0930 12:15:01.602615 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename subpath @ 09/30/24 12:15:01.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:15:01.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:15:01.616
  STEP: Setting up data @ 09/30/24 12:15:01.618
  STEP: Creating pod pod-subpath-test-projected-dt7p @ 09/30/24 12:15:01.624
  STEP: Creating a pod to test atomic-volume-subpath @ 09/30/24 12:15:01.624
  STEP: Saw pod success @ 09/30/24 12:15:25.669
  I0930 12:15:25.671775 20 output.go:196] Trying to get logs from node worker-1 pod pod-subpath-test-projected-dt7p container test-container-subpath-projected-dt7p: <nil>
  STEP: delete the pod @ 09/30/24 12:15:25.681
  STEP: Deleting pod pod-subpath-test-projected-dt7p @ 09/30/24 12:15:25.691
  I0930 12:15:25.691559 20 delete.go:62] Deleting pod "pod-subpath-test-projected-dt7p" in namespace "subpath-284"
  I0930 12:15:25.693320 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-284" for this suite. @ 09/30/24 12:15:25.695
• [24.097 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 09/30/24 12:15:25.7
  I0930 12:15:25.700209 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename job @ 09/30/24 12:15:25.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:15:25.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:15:25.71
  STEP: Creating a job @ 09/30/24 12:15:25.712
  STEP: Ensuring active pods == parallelism @ 09/30/24 12:15:25.718
  STEP: delete a job @ 09/30/24 12:15:27.721
  STEP: deleting Job.batch foo in namespace job-9361, will wait for the garbage collector to delete the pods @ 09/30/24 12:15:27.721
  I0930 12:15:27.776334 20 resources.go:139] Deleting Job.batch foo took: 3.410215ms
  I0930 12:15:27.876958 20 resources.go:163] Terminating Job.batch foo pods took: 100.620203ms
  STEP: Ensuring job was deleted @ 09/30/24 12:15:28.678
  I0930 12:15:28.680034 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9361" for this suite. @ 09/30/24 12:15:28.681
• [2.985 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/30/24 12:15:28.685
  I0930 12:15:28.685641 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 12:15:28.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:15:28.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:15:28.696
  STEP: creating a secret @ 09/30/24 12:15:28.698
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/30/24 12:15:28.701
  STEP: patching the secret @ 09/30/24 12:15:28.703
  STEP: deleting the secret using a LabelSelector @ 09/30/24 12:15:28.708
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/30/24 12:15:28.712
  I0930 12:15:28.714014 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4340" for this suite. @ 09/30/24 12:15:28.752
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/30/24 12:15:28.756
  I0930 12:15:28.756414 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename gc @ 09/30/24 12:15:28.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:15:28.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:15:28.798
  STEP: create the rc1 @ 09/30/24 12:15:28.853
  STEP: create the rc2 @ 09/30/24 12:15:28.856
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/30/24 12:15:34.863
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/30/24 12:15:35.192
  STEP: wait for the rc to be deleted @ 09/30/24 12:15:35.197
  I0930 12:15:40.204488 20 garbage_collector.go:762] 64 pods remaining
  I0930 12:15:40.204530 20 garbage_collector.go:769] 64 pods has nil DeletionTimestamp
  I0930 12:15:40.204537 20 garbage_collector.go:770] 
  STEP: Gathering metrics @ 09/30/24 12:15:45.203
  W0930 12:15:45.205674      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0930 12:15:45.205711 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0930 12:15:45.205780 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2c59q" in namespace "gc-3901"
  I0930 12:15:45.214916 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2xxdk" in namespace "gc-3901"
  I0930 12:15:45.224000 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45p7r" in namespace "gc-3901"
  I0930 12:15:45.232598 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4gzz9" in namespace "gc-3901"
  I0930 12:15:45.242717 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4kmns" in namespace "gc-3901"
  I0930 12:15:45.251517 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5kwtf" in namespace "gc-3901"
  I0930 12:15:45.261099 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5nrtj" in namespace "gc-3901"
  I0930 12:15:45.268365 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rwmd" in namespace "gc-3901"
  I0930 12:15:45.281075 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5x4kb" in namespace "gc-3901"
  I0930 12:15:45.291450 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-66p9s" in namespace "gc-3901"
  I0930 12:15:45.300163 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-66s7w" in namespace "gc-3901"
  I0930 12:15:45.311293 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6jjr5" in namespace "gc-3901"
  I0930 12:15:45.321324 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6ns2x" in namespace "gc-3901"
  I0930 12:15:45.330680 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6tgsw" in namespace "gc-3901"
  I0930 12:15:45.338733 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6vmh7" in namespace "gc-3901"
  I0930 12:15:45.351150 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6w5wl" in namespace "gc-3901"
  I0930 12:15:45.362726 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zzm7" in namespace "gc-3901"
  I0930 12:15:45.373516 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76pwk" in namespace "gc-3901"
  I0930 12:15:45.388013 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7bhvh" in namespace "gc-3901"
  I0930 12:15:45.398196 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7k6qq" in namespace "gc-3901"
  I0930 12:15:45.406674 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7kmq2" in namespace "gc-3901"
  I0930 12:15:45.416703 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7s4ch" in namespace "gc-3901"
  I0930 12:15:45.427199 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8pwbs" in namespace "gc-3901"
  I0930 12:15:45.438559 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8pwtv" in namespace "gc-3901"
  I0930 12:15:45.448016 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8sqgq" in namespace "gc-3901"
  I0930 12:15:45.455198 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92gzz" in namespace "gc-3901"
  I0930 12:15:45.465421 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fj4n" in namespace "gc-3901"
  I0930 12:15:45.474558 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9mksn" in namespace "gc-3901"
  I0930 12:15:45.483800 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9xkpk" in namespace "gc-3901"
  I0930 12:15:45.494370 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b495x" in namespace "gc-3901"
  I0930 12:15:45.503295 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6tfk" in namespace "gc-3901"
  I0930 12:15:45.512011 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c6c2f" in namespace "gc-3901"
  I0930 12:15:45.519864 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c8pd7" in namespace "gc-3901"
  I0930 12:15:45.529022 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqck8" in namespace "gc-3901"
  I0930 12:15:45.538769 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d7tq4" in namespace "gc-3901"
  I0930 12:15:45.548252 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d9h2k" in namespace "gc-3901"
  I0930 12:15:45.555944 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-db98f" in namespace "gc-3901"
  I0930 12:15:45.567347 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dbwks" in namespace "gc-3901"
  I0930 12:15:45.578749 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfflp" in namespace "gc-3901"
  I0930 12:15:45.586029 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dqrhj" in namespace "gc-3901"
  I0930 12:15:45.599112 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dtjjb" in namespace "gc-3901"
  I0930 12:15:45.608970 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dxrl8" in namespace "gc-3901"
  I0930 12:15:45.618947 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f8brw" in namespace "gc-3901"
  I0930 12:15:45.625859 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fhjlv" in namespace "gc-3901"
  I0930 12:15:45.635000 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmxhv" in namespace "gc-3901"
  I0930 12:15:45.644240 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fq9td" in namespace "gc-3901"
  I0930 12:15:45.653486 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g6q8z" in namespace "gc-3901"
  I0930 12:15:45.661868 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gb964" in namespace "gc-3901"
  I0930 12:15:45.672391 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gv6k8" in namespace "gc-3901"
  I0930 12:15:45.682205 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzz9n" in namespace "gc-3901"
  I0930 12:15:45.691354 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3901" for this suite. @ 09/30/24 12:15:45.696
• [16.944 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/30/24 12:15:45.7
  I0930 12:15:45.700520 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/30/24 12:15:45.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:15:45.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:15:45.716
  I0930 12:15:45.718933 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:15:46.738004 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1222" for this suite. @ 09/30/24 12:15:46.74
• [1.043 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 09/30/24 12:15:46.743
  I0930 12:15:46.743999 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename statefulset @ 09/30/24 12:15:46.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:15:46.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:15:46.757
  STEP: Creating service test in namespace statefulset-2262 @ 09/30/24 12:15:46.759
  I0930 12:15:46.769938 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I0930 12:15:56.773551 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/30/24 12:15:56.776
  I0930 12:15:56.792295 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0930 12:15:56.792336 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0930 12:16:06.787433 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0930 12:16:06.787473 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/30/24 12:16:06.79
  STEP: Delete all of the StatefulSets @ 09/30/24 12:16:06.792
  STEP: Verify that StatefulSets have been deleted @ 09/30/24 12:16:06.796
  I0930 12:16:06.797960 20 statefulset.go:138] Deleting all statefulset in ns statefulset-2262
  I0930 12:16:06.803793 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2262" for this suite. @ 09/30/24 12:16:06.811
• [20.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/30/24 12:16:06.818
  I0930 12:16:06.818373 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename chunking @ 09/30/24 12:16:06.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:16:06.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:16:06.831
  STEP: creating a large number of resources @ 09/30/24 12:16:06.833
  STEP: retrieving those results in paged fashion several times @ 09/30/24 12:16:24.523
  I0930 12:16:24.571562 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0930 12:16:24.622125 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0930 12:16:24.671776 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0930 12:16:24.721369 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0930 12:16:24.771909 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0930 12:16:24.821357 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0930 12:16:24.871924 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0930 12:16:24.921549 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0930 12:16:24.972073 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0930 12:16:25.021624 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0930 12:16:25.071998 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0930 12:16:25.121473 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0930 12:16:25.171969 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0930 12:16:25.221414 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0930 12:16:25.271936 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0930 12:16:25.321332 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0930 12:16:25.371874 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0930 12:16:25.421366 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0930 12:16:25.471848 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0930 12:16:25.521158 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0930 12:16:25.571637 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0930 12:16:25.622007 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0930 12:16:25.671247 20 chunking.go:98] Retrieved 17/17 results with rv 9018 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0930 12:16:25.721688 20 chunking.go:98] Retrieved 9/17 results with rv 9018 and continue 
  I0930 12:16:25.772272 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0930 12:16:25.821822 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0930 12:16:25.871320 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0930 12:16:25.921886 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0930 12:16:25.971330 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0930 12:16:26.021849 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0930 12:16:26.071330 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0930 12:16:26.121889 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0930 12:16:26.171453 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0930 12:16:26.221898 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0930 12:16:26.271256 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0930 12:16:26.321701 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0930 12:16:26.372212 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0930 12:16:26.421755 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0930 12:16:26.471147 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0930 12:16:26.521782 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0930 12:16:26.571276 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0930 12:16:26.621780 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0930 12:16:26.671139 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0930 12:16:26.721512 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0930 12:16:26.772034 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0930 12:16:26.821487 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0930 12:16:26.871751 20 chunking.go:98] Retrieved 17/17 results with rv 9019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0930 12:16:26.920992 20 chunking.go:98] Retrieved 9/17 results with rv 9019 and continue 
  I0930 12:16:26.971675 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0930 12:16:27.022339 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0930 12:16:27.071949 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0930 12:16:27.121526 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0930 12:16:27.172089 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0930 12:16:27.221688 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0930 12:16:27.272276 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0930 12:16:27.321793 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0930 12:16:27.371350 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0930 12:16:27.421922 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0930 12:16:27.471601 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0930 12:16:27.522126 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0930 12:16:27.571649 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0930 12:16:27.622220 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0930 12:16:27.671786 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0930 12:16:27.721259 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0930 12:16:27.771868 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0930 12:16:27.821230 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0930 12:16:27.871770 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0930 12:16:27.921270 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0930 12:16:27.971780 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0930 12:16:28.021374 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0930 12:16:28.071817 20 chunking.go:98] Retrieved 17/17 results with rv 9022 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTAyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0930 12:16:28.121138 20 chunking.go:98] Retrieved 9/17 results with rv 9022 and continue 
  STEP: retrieving those results all at once @ 09/30/24 12:16:28.121
  I0930 12:16:28.175341 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3779" for this suite. @ 09/30/24 12:16:28.222
• [21.454 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/30/24 12:16:28.272
  I0930 12:16:28.272960 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename field-validation @ 09/30/24 12:16:28.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:16:28.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:16:28.283
  I0930 12:16:28.286094 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  W0930 12:16:30.814706      20 warnings.go:70] unknown field "alpha"
  W0930 12:16:30.814732      20 warnings.go:70] unknown field "beta"
  W0930 12:16:30.814736      20 warnings.go:70] unknown field "delta"
  W0930 12:16:30.814741      20 warnings.go:70] unknown field "epsilon"
  W0930 12:16:30.814745      20 warnings.go:70] unknown field "gamma"
  I0930 12:16:31.336863 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8885" for this suite. @ 09/30/24 12:16:31.338
• [3.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/30/24 12:16:31.342
  I0930 12:16:31.342636 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 12:16:31.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:16:31.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:16:31.354
  STEP: Counting existing ResourceQuota @ 09/30/24 12:16:31.356
  STEP: Creating a ResourceQuota @ 09/30/24 12:16:36.358
  STEP: Ensuring resource quota status is calculated @ 09/30/24 12:16:36.361
  STEP: Creating a Pod that fits quota @ 09/30/24 12:16:38.364
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/30/24 12:16:38.375
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/30/24 12:16:40.378
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/30/24 12:16:40.38
  STEP: Ensuring a pod cannot update its resource requirements @ 09/30/24 12:16:40.381
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/30/24 12:16:40.384
  STEP: Deleting the pod @ 09/30/24 12:16:42.387
  STEP: Ensuring resource quota status released the pod usage @ 09/30/24 12:16:42.396
  I0930 12:16:44.399866 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4254" for this suite. @ 09/30/24 12:16:44.401
• [13.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/30/24 12:16:44.405
  I0930 12:16:44.405257 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 12:16:44.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:16:44.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:16:44.417
  STEP: Creating a ResourceQuota with terminating scope @ 09/30/24 12:16:44.419
  STEP: Ensuring ResourceQuota status is calculated @ 09/30/24 12:16:44.422
  STEP: Creating a ResourceQuota with not terminating scope @ 09/30/24 12:16:46.425
  STEP: Ensuring ResourceQuota status is calculated @ 09/30/24 12:16:46.428
  STEP: Creating a long running pod @ 09/30/24 12:16:48.43
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/30/24 12:16:48.438
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/30/24 12:16:50.441
  STEP: Deleting the pod @ 09/30/24 12:16:52.444
  STEP: Ensuring resource quota status released the pod usage @ 09/30/24 12:16:52.453
  STEP: Creating a terminating pod @ 09/30/24 12:16:54.456
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/30/24 12:16:54.465
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/30/24 12:16:56.468
  STEP: Deleting the pod @ 09/30/24 12:16:58.471
  STEP: Ensuring resource quota status released the pod usage @ 09/30/24 12:16:58.482
  I0930 12:17:00.485600 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-926" for this suite. @ 09/30/24 12:17:00.487
• [16.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/30/24 12:17:00.493
  I0930 12:17:00.493048 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/30/24 12:17:00.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:00.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:00.503
  I0930 12:17:00.507332 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8410" for this suite. @ 09/30/24 12:17:00.588
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/30/24 12:17:00.594
  I0930 12:17:00.594188 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:17:00.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:00.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:00.605
  STEP: Creating configMap with name projected-configmap-test-volume-map-b7a9cbcf-7f56-4740-8587-0899db460f38 @ 09/30/24 12:17:00.607
  STEP: Creating a pod to test consume configMaps @ 09/30/24 12:17:00.612
  STEP: Saw pod success @ 09/30/24 12:17:02.624
  I0930 12:17:02.625987 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-configmaps-cbc4a3a4-16c8-4537-9d30-2dc2e641a2c7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 12:17:02.634
  I0930 12:17:02.646870 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5444" for this suite. @ 09/30/24 12:17:02.649
• [2.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/30/24 12:17:02.654
  I0930 12:17:02.654595 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename watch @ 09/30/24 12:17:02.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:02.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:02.664
  STEP: creating a watch on configmaps with label A @ 09/30/24 12:17:02.666
  STEP: creating a watch on configmaps with label B @ 09/30/24 12:17:02.667
  STEP: creating a watch on configmaps with label A or B @ 09/30/24 12:17:02.668
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/30/24 12:17:02.669
  I0930 12:17:02.672408 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-643  2c4f7b41-0be8-49fe-8b93-121aa3a450dc 9598 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 12:17:02.672515 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-643  2c4f7b41-0be8-49fe-8b93-121aa3a450dc 9598 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/30/24 12:17:02.672
  I0930 12:17:02.679340 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-643  2c4f7b41-0be8-49fe-8b93-121aa3a450dc 9599 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 12:17:02.679449 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-643  2c4f7b41-0be8-49fe-8b93-121aa3a450dc 9599 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/30/24 12:17:02.679
  I0930 12:17:02.684484 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-643  2c4f7b41-0be8-49fe-8b93-121aa3a450dc 9600 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 12:17:02.684577 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-643  2c4f7b41-0be8-49fe-8b93-121aa3a450dc 9600 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/30/24 12:17:02.684
  I0930 12:17:02.688373 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-643  2c4f7b41-0be8-49fe-8b93-121aa3a450dc 9601 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 12:17:02.688429 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-643  2c4f7b41-0be8-49fe-8b93-121aa3a450dc 9601 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/30/24 12:17:02.688
  I0930 12:17:02.691695 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-643  496479ca-aeeb-4aad-85e3-fa61c55874bf 9602 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 12:17:02.691781 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-643  496479ca-aeeb-4aad-85e3-fa61c55874bf 9602 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/30/24 12:17:12.695
  I0930 12:17:12.699674 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-643  496479ca-aeeb-4aad-85e3-fa61c55874bf 9648 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 12:17:12.699724 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-643  496479ca-aeeb-4aad-85e3-fa61c55874bf 9648 0 2024-09-30 12:17:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-30 12:17:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 12:17:22.703472 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-643" for this suite. @ 09/30/24 12:17:22.705
• [20.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/30/24 12:17:22.709
  I0930 12:17:22.709336 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename proxy @ 09/30/24 12:17:22.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:22.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:22.721
  I0930 12:17:22.723126 20 proxy.go:387] Creating pod...
  I0930 12:17:24.732164 20 proxy.go:411] Creating service...
  I0930 12:17:24.740305 20 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/pods/agnhost/proxy?method=DELETE
  I0930 12:17:24.745295 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0930 12:17:24.745338 20 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/pods/agnhost/proxy?method=OPTIONS
  I0930 12:17:24.747523 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0930 12:17:24.747558 20 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/pods/agnhost/proxy?method=PATCH
  I0930 12:17:24.749572 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0930 12:17:24.749617 20 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/pods/agnhost/proxy?method=POST
  I0930 12:17:24.751577 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0930 12:17:24.751620 20 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/pods/agnhost/proxy?method=PUT
  I0930 12:17:24.753610 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0930 12:17:24.753638 20 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/services/e2e-proxy-test-service/proxy?method=DELETE
  I0930 12:17:24.756030 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0930 12:17:24.756058 20 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0930 12:17:24.758502 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0930 12:17:24.758542 20 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/services/e2e-proxy-test-service/proxy?method=PATCH
  I0930 12:17:24.762886 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0930 12:17:24.762921 20 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/services/e2e-proxy-test-service/proxy?method=POST
  I0930 12:17:24.765456 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0930 12:17:24.765498 20 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/services/e2e-proxy-test-service/proxy?method=PUT
  I0930 12:17:24.767992 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0930 12:17:24.768022 20 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/pods/agnhost/proxy?method=GET
  I0930 12:17:24.769266 20 proxy.go:487] http.Client request:GET StatusCode:301
  I0930 12:17:24.769295 20 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/services/e2e-proxy-test-service/proxy?method=GET
  I0930 12:17:24.770996 20 proxy.go:487] http.Client request:GET StatusCode:301
  I0930 12:17:24.771027 20 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/pods/agnhost/proxy?method=HEAD
  I0930 12:17:24.772166 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0930 12:17:24.772194 20 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2120/services/e2e-proxy-test-service/proxy?method=HEAD
  I0930 12:17:24.773860 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0930 12:17:24.773954 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2120" for this suite. @ 09/30/24 12:17:24.776
• [2.072 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/30/24 12:17:24.781
  I0930 12:17:24.781335 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 12:17:24.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:24.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:24.791
  STEP: Creating configMap with name configmap-test-volume-map-0693c4fe-5d7f-41bd-8ae9-870d22fbe8f3 @ 09/30/24 12:17:24.793
  STEP: Creating a pod to test consume configMaps @ 09/30/24 12:17:24.796
  STEP: Saw pod success @ 09/30/24 12:17:26.807
  I0930 12:17:26.808986 20 output.go:196] Trying to get logs from node worker-0 pod pod-configmaps-1d97f21a-3d55-41d3-821c-e6284d59b995 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 12:17:26.812
  I0930 12:17:26.823113 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7403" for this suite. @ 09/30/24 12:17:26.825
• [2.047 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/30/24 12:17:26.828
  I0930 12:17:26.828313 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename deployment @ 09/30/24 12:17:26.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:26.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:26.837
  STEP: creating a Deployment @ 09/30/24 12:17:26.841
  STEP: waiting for Deployment to be created @ 09/30/24 12:17:26.844
  STEP: waiting for all Replicas to be Ready @ 09/30/24 12:17:26.845
  I0930 12:17:26.846757 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0930 12:17:26.846787 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0930 12:17:26.853650 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0930 12:17:26.853687 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0930 12:17:26.862736 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0930 12:17:26.862771 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0930 12:17:26.875679 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0930 12:17:26.875714 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0930 12:17:27.460012 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0930 12:17:27.460048 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0930 12:17:27.538143 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/30/24 12:17:27.538
  I0930 12:17:27.547752 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/30/24 12:17:27.547
  I0930 12:17:27.548857 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0
  I0930 12:17:27.548899 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0
  I0930 12:17:27.548928 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0
  I0930 12:17:27.548934 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0
  I0930 12:17:27.548943 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0
  I0930 12:17:27.548949 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0
  I0930 12:17:27.549030 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0
  I0930 12:17:27.549048 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 0
  I0930 12:17:27.549057 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  I0930 12:17:27.549062 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  I0930 12:17:27.549070 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:27.549075 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:27.549120 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:27.549127 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:27.557725 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:27.557818 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:27.571446 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:27.571487 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:27.586709 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  I0930 12:17:27.586739 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  I0930 12:17:28.552466 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:28.552510 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:28.568193 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  STEP: listing Deployments @ 09/30/24 12:17:28.568
  I0930 12:17:28.570398 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/30/24 12:17:28.57
  I0930 12:17:28.579178 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/30/24 12:17:28.579
  I0930 12:17:28.582722 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0930 12:17:28.589691 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0930 12:17:28.600341 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0930 12:17:28.612172 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0930 12:17:28.621903 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0930 12:17:29.474020 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0930 12:17:29.551789 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0930 12:17:29.570347 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0930 12:17:29.579319 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0930 12:17:30.474741 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/30/24 12:17:30.489
  STEP: fetching the DeploymentStatus @ 09/30/24 12:17:30.495
  I0930 12:17:30.498284 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  I0930 12:17:30.498341 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  I0930 12:17:30.498356 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  I0930 12:17:30.498538 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  I0930 12:17:30.498569 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 1
  I0930 12:17:30.498624 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:30.498637 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 3
  I0930 12:17:30.498746 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:30.498775 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 2
  I0930 12:17:30.498789 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1765 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/30/24 12:17:30.498
  I0930 12:17:30.504040 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504113 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504250 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504273 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504400 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504428 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504521 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504539 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504550 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504661 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504693 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504702 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.504753 20 deployment.go:475] observed event type MODIFIED
  I0930 12:17:30.506006 20 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0930 12:17:30.508911 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1765" for this suite. @ 09/30/24 12:17:30.511
• [3.693 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/30/24 12:17:30.521
  I0930 12:17:30.521048 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename security-context @ 09/30/24 12:17:30.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:30.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:30.533
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/30/24 12:17:30.535
  STEP: Saw pod success @ 09/30/24 12:17:34.553
  I0930 12:17:34.554826 20 output.go:196] Trying to get logs from node worker-0 pod security-context-b65b866c-f0d0-493a-a658-2f18ccd60704 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:17:34.558
  I0930 12:17:34.566780 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7967" for this suite. @ 09/30/24 12:17:34.568
• [4.051 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/30/24 12:17:34.572
  I0930 12:17:34.572293 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:17:34.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:34.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:34.584
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/30/24 12:17:34.586
  STEP: Saw pod success @ 09/30/24 12:17:38.6
  I0930 12:17:38.602752 20 output.go:196] Trying to get logs from node worker-0 pod pod-59d72e3f-495b-40bb-b8df-47d41cda1be5 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:17:38.606
  I0930 12:17:38.615615 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-677" for this suite. @ 09/30/24 12:17:38.617
• [4.049 seconds]
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 09/30/24 12:17:38.621
  I0930 12:17:38.621301 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename job @ 09/30/24 12:17:38.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:38.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:38.633
  STEP: Looking for a node to schedule job pod @ 09/30/24 12:17:38.635
  STEP: Creating a job @ 09/30/24 12:17:38.718
  STEP: Ensuring job fails @ 09/30/24 12:17:38.722
  I0930 12:17:42.727812 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-458" for this suite. @ 09/30/24 12:17:42.729
• [4.114 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/30/24 12:17:42.735
  I0930 12:17:42.735057 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename events @ 09/30/24 12:17:42.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:42.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:42.744
  STEP: Create set of events @ 09/30/24 12:17:42.746
  STEP: get a list of Events with a label in the current namespace @ 09/30/24 12:17:42.756
  STEP: delete a list of events @ 09/30/24 12:17:42.758
  I0930 12:17:42.758553 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/30/24 12:17:42.766
  I0930 12:17:42.768420 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1226" for this suite. @ 09/30/24 12:17:42.83
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/30/24 12:17:42.833
  I0930 12:17:42.833691 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename field-validation @ 09/30/24 12:17:42.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:42.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:42.847
  I0930 12:17:42.849928 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  W0930 12:17:45.378307      20 warnings.go:70] unknown field "alpha"
  W0930 12:17:45.378329      20 warnings.go:70] unknown field "beta"
  W0930 12:17:45.378334      20 warnings.go:70] unknown field "delta"
  W0930 12:17:45.378338      20 warnings.go:70] unknown field "epsilon"
  W0930 12:17:45.378341      20 warnings.go:70] unknown field "gamma"
  I0930 12:17:45.901191 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6617" for this suite. @ 09/30/24 12:17:45.903
• [3.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/30/24 12:17:45.906
  I0930 12:17:45.906647 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-webhook @ 09/30/24 12:17:45.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:45.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:45.919
  STEP: Setting up server cert @ 09/30/24 12:17:45.921
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/30/24 12:17:46.345
  STEP: Deploying the custom resource conversion webhook pod @ 09/30/24 12:17:46.35
  STEP: Wait for the deployment to be ready @ 09/30/24 12:17:46.36
  I0930 12:17:46.364401 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/30/24 12:17:48.37
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:17:48.38
  I0930 12:17:49.380281 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0930 12:17:49.384607 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Creating a v1 custom resource @ 09/30/24 12:17:51.928
  STEP: Create a v2 custom resource @ 09/30/24 12:17:51.939
  STEP: List CRs in v1 @ 09/30/24 12:17:51.972
  STEP: List CRs in v2 @ 09/30/24 12:17:51.976
  I0930 12:17:52.576320 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2513" for this suite. @ 09/30/24 12:17:52.578
• [6.678 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/30/24 12:17:52.584
  I0930 12:17:52.584443 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename daemonsets @ 09/30/24 12:17:52.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:52.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:52.597
  STEP: Creating simple DaemonSet "daemon-set" @ 09/30/24 12:17:52.683
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/30/24 12:17:52.687
  I0930 12:17:52.780813 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 12:17:52.780856 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:17:53.692119 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0930 12:17:53.692158 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 09/30/24 12:17:53.693
  I0930 12:17:53.695619 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/30/24 12:17:53.695
  I0930 12:17:53.702618 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/30/24 12:17:53.702
  I0930 12:17:53.703985 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0930 12:17:53.704086 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0930 12:17:53.704145 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0930 12:17:53.704200 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0930 12:17:53.704273 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8311 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0930 12:17:53.704300 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/30/24 12:17:53.704
  STEP: watching for the daemon set status to be patched @ 09/30/24 12:17:53.708
  I0930 12:17:53.709630 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0930 12:17:53.709711 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0930 12:17:53.709775 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0930 12:17:53.710029 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0930 12:17:53.710064 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8311 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0930 12:17:53.710132 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0930 12:17:53.710151 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8311 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0930 12:17:53.710160 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/30/24 12:17:53.713
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8311, will wait for the garbage collector to delete the pods @ 09/30/24 12:17:53.714
  I0930 12:17:53.770126 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.444404ms
  I0930 12:17:53.870950 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.818763ms
  I0930 12:17:55.673510 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 12:17:55.673550 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0930 12:17:55.675399 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10245"},"items":null}

  I0930 12:17:55.676924 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10245"},"items":null}

  I0930 12:17:55.683789 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8311" for this suite. @ 09/30/24 12:17:55.685
• [3.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/30/24 12:17:55.689
  I0930 12:17:55.689326 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-webhook @ 09/30/24 12:17:55.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:17:55.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:17:55.701
  STEP: Setting up server cert @ 09/30/24 12:17:55.704
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/30/24 12:17:56.132
  STEP: Deploying the custom resource conversion webhook pod @ 09/30/24 12:17:56.135
  STEP: Wait for the deployment to be ready @ 09/30/24 12:17:56.146
  I0930 12:17:56.152068 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/30/24 12:17:58.158
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:17:58.167
  I0930 12:17:59.167349 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0930 12:17:59.171266 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Creating a v1 custom resource @ 09/30/24 12:18:01.717
  STEP: v2 custom resource should be converted @ 09/30/24 12:18:01.72
  I0930 12:18:02.253769 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6238" for this suite. @ 09/30/24 12:18:02.255
• [6.573 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/30/24 12:18:02.262
  I0930 12:18:02.262677 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename proxy @ 09/30/24 12:18:02.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:18:02.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:18:02.273
  STEP: starting an echo server on multiple ports @ 09/30/24 12:18:02.292
  STEP: creating replication controller proxy-service-zxhwv in namespace proxy-8982 @ 09/30/24 12:18:02.292
  I0930 12:18:02.299028      20 runners.go:193] Created replication controller with name: proxy-service-zxhwv, namespace: proxy-8982, replica count: 1
  I0930 12:18:03.350365      20 runners.go:193] proxy-service-zxhwv Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:18:04.350907      20 runners.go:193] proxy-service-zxhwv Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:18:04.352846 20 proxy.go:230] setup took 2.077114069s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/30/24 12:18:04.352
  I0930 12:18:04.360136 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 7.011527ms)
  I0930 12:18:04.360479 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 7.270315ms)
  I0930 12:18:04.362120 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 9.135081ms)
  I0930 12:18:04.362131 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 9.204112ms)
  I0930 12:18:04.362186 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 9.140501ms)
  I0930 12:18:04.362459 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 9.457976ms)
  I0930 12:18:04.362520 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 9.500536ms)
  I0930 12:18:04.362862 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 9.786374ms)
  I0930 12:18:04.362934 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 9.842016ms)
  I0930 12:18:04.362977 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 9.757211ms)
  I0930 12:18:04.362979 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 9.841405ms)
  I0930 12:18:04.363849 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 10.66967ms)
  I0930 12:18:04.363879 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 10.944777ms)
  I0930 12:18:04.364529 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 11.423645ms)
  I0930 12:18:04.364536 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 11.47497ms)
  I0930 12:18:04.365510 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 12.353784ms)
  I0930 12:18:04.370027 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.467889ms)
  I0930 12:18:04.370060 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.457341ms)
  I0930 12:18:04.370688 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 4.98029ms)
  I0930 12:18:04.370706 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 4.992902ms)
  I0930 12:18:04.370726 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.070169ms)
  I0930 12:18:04.370749 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.008903ms)
  I0930 12:18:04.370883 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.190118ms)
  I0930 12:18:04.370922 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 5.24833ms)
  I0930 12:18:04.371012 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 5.274997ms)
  I0930 12:18:04.371033 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 5.310193ms)
  I0930 12:18:04.371055 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.372427ms)
  I0930 12:18:04.371075 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 5.32548ms)
  I0930 12:18:04.371089 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 5.467764ms)
  I0930 12:18:04.371389 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.680584ms)
  I0930 12:18:04.371872 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 6.13851ms)
  I0930 12:18:04.372003 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 6.353114ms)
  I0930 12:18:04.377228 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.000508ms)
  I0930 12:18:04.377234 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.896913ms)
  I0930 12:18:04.377452 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 5.131847ms)
  I0930 12:18:04.377456 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.246637ms)
  I0930 12:18:04.377501 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 5.198813ms)
  I0930 12:18:04.377519 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 5.355294ms)
  I0930 12:18:04.377866 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 5.718308ms)
  I0930 12:18:04.377921 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.648136ms)
  I0930 12:18:04.377918 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 5.617931ms)
  I0930 12:18:04.377966 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 5.927762ms)
  I0930 12:18:04.377978 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 5.692747ms)
  I0930 12:18:04.377991 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.740647ms)
  I0930 12:18:04.378023 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 5.768398ms)
  I0930 12:18:04.378389 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 6.057785ms)
  I0930 12:18:04.378411 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.976163ms)
  I0930 12:18:04.378601 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 6.412166ms)
  I0930 12:18:04.382778 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 3.769968ms)
  I0930 12:18:04.382810 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 3.896691ms)
  I0930 12:18:04.382788 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 4.151583ms)
  I0930 12:18:04.382778 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 3.971676ms)
  I0930 12:18:04.383102 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 4.20692ms)
  I0930 12:18:04.383114 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 4.132559ms)
  I0930 12:18:04.383396 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.41249ms)
  I0930 12:18:04.383839 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.839374ms)
  I0930 12:18:04.383839 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.870605ms)
  I0930 12:18:04.383848 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 4.997927ms)
  I0930 12:18:04.384148 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.192602ms)
  I0930 12:18:04.384233 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.306808ms)
  I0930 12:18:04.384244 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 5.268225ms)
  I0930 12:18:04.384689 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.701154ms)
  I0930 12:18:04.384697 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.805089ms)
  I0930 12:18:04.384861 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 5.936376ms)
  I0930 12:18:04.388985 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 4.02474ms)
  I0930 12:18:04.389149 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 4.135345ms)
  I0930 12:18:04.389182 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.181338ms)
  I0930 12:18:04.389387 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 4.447523ms)
  I0930 12:18:04.389502 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 4.586673ms)
  I0930 12:18:04.389764 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.775529ms)
  I0930 12:18:04.389784 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.782344ms)
  I0930 12:18:04.389793 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 4.823352ms)
  I0930 12:18:04.389805 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 4.777318ms)
  I0930 12:18:04.389815 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 4.861694ms)
  I0930 12:18:04.389864 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 4.881136ms)
  I0930 12:18:04.390266 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 5.291112ms)
  I0930 12:18:04.390601 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.583195ms)
  I0930 12:18:04.390620 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 5.569609ms)
  I0930 12:18:04.390623 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.727067ms)
  I0930 12:18:04.391526 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 6.624862ms)
  I0930 12:18:04.393945 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 2.285347ms)
  I0930 12:18:04.395176 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 3.43943ms)
  I0930 12:18:04.395758 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.079572ms)
  I0930 12:18:04.396349 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 4.651184ms)
  I0930 12:18:04.396382 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 4.601624ms)
  I0930 12:18:04.396719 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 4.94603ms)
  I0930 12:18:04.397087 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.35564ms)
  I0930 12:18:04.397119 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.511975ms)
  I0930 12:18:04.397125 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.405137ms)
  I0930 12:18:04.397191 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.568706ms)
  I0930 12:18:04.397202 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 5.50136ms)
  I0930 12:18:04.397204 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 5.451461ms)
  I0930 12:18:04.397401 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 5.602053ms)
  I0930 12:18:04.397423 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.859095ms)
  I0930 12:18:04.397738 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 5.948826ms)
  I0930 12:18:04.398323 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 6.568089ms)
  I0930 12:18:04.401120 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 2.623131ms)
  I0930 12:18:04.401977 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 3.611918ms)
  I0930 12:18:04.403657 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.108577ms)
  I0930 12:18:04.403690 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 5.237794ms)
  I0930 12:18:04.403703 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.149248ms)
  I0930 12:18:04.403760 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 5.30359ms)
  I0930 12:18:04.403801 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 5.192456ms)
  I0930 12:18:04.403840 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.315942ms)
  I0930 12:18:04.403846 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.213794ms)
  I0930 12:18:04.403851 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 5.343223ms)
  I0930 12:18:04.404297 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.635191ms)
  I0930 12:18:04.404324 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 5.699536ms)
  I0930 12:18:04.404443 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 5.95494ms)
  I0930 12:18:04.404716 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 6.149417ms)
  I0930 12:18:04.405396 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 6.795693ms)
  I0930 12:18:04.405433 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 6.790982ms)
  I0930 12:18:04.408495 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 2.85967ms)
  I0930 12:18:04.408621 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 3.159788ms)
  I0930 12:18:04.408854 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 3.18377ms)
  I0930 12:18:04.408898 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 3.028423ms)
  I0930 12:18:04.408911 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 3.198638ms)
  I0930 12:18:04.408961 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 3.204382ms)
  I0930 12:18:04.410203 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 4.191971ms)
  I0930 12:18:04.410208 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 4.232483ms)
  I0930 12:18:04.410215 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.271226ms)
  I0930 12:18:04.410605 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.6972ms)
  I0930 12:18:04.410983 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 5.152791ms)
  I0930 12:18:04.410994 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.196168ms)
  I0930 12:18:04.411030 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.463638ms)
  I0930 12:18:04.411254 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.252284ms)
  I0930 12:18:04.411410 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 5.421956ms)
  I0930 12:18:04.411422 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.420199ms)
  I0930 12:18:04.414851 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 3.288871ms)
  I0930 12:18:04.415687 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 3.958018ms)
  I0930 12:18:04.415738 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.071577ms)
  I0930 12:18:04.416267 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 4.753503ms)
  I0930 12:18:04.416287 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 4.578851ms)
  I0930 12:18:04.416438 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 4.972274ms)
  I0930 12:18:04.416541 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.846242ms)
  I0930 12:18:04.416565 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 4.990962ms)
  I0930 12:18:04.416572 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 4.968499ms)
  I0930 12:18:04.416725 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 5.073238ms)
  I0930 12:18:04.416880 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.258294ms)
  I0930 12:18:04.417075 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 5.357178ms)
  I0930 12:18:04.417099 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.629404ms)
  I0930 12:18:04.417288 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.556214ms)
  I0930 12:18:04.417311 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 5.66846ms)
  I0930 12:18:04.418121 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 6.581045ms)
  I0930 12:18:04.422478 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 4.249052ms)
  I0930 12:18:04.422496 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 4.321604ms)
  I0930 12:18:04.423193 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.917752ms)
  I0930 12:18:04.423221 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 4.93916ms)
  I0930 12:18:04.424336 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 6.093879ms)
  I0930 12:18:04.424377 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 6.080334ms)
  I0930 12:18:04.424389 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 6.230125ms)
  I0930 12:18:04.424414 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 6.187832ms)
  I0930 12:18:04.424415 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 6.110817ms)
  I0930 12:18:04.424431 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 6.115405ms)
  I0930 12:18:04.424438 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 6.279395ms)
  I0930 12:18:04.424500 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 6.291964ms)
  I0930 12:18:04.424514 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 6.251273ms)
  I0930 12:18:04.425509 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 7.218921ms)
  I0930 12:18:04.425545 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 7.23246ms)
  I0930 12:18:04.425850 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 7.638374ms)
  I0930 12:18:04.430278 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 4.139873ms)
  I0930 12:18:04.430278 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.25984ms)
  I0930 12:18:04.431855 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.753535ms)
  I0930 12:18:04.431989 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 6.091523ms)
  I0930 12:18:04.432022 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.863341ms)
  I0930 12:18:04.432036 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 5.897088ms)
  I0930 12:18:04.432048 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 6.118069ms)
  I0930 12:18:04.432063 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 6.170079ms)
  I0930 12:18:04.432089 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 6.115007ms)
  I0930 12:18:04.432100 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 6.104515ms)
  I0930 12:18:04.432129 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 6.050493ms)
  I0930 12:18:04.432023 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 5.899564ms)
  I0930 12:18:04.432795 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 6.738555ms)
  I0930 12:18:04.432812 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 6.774154ms)
  I0930 12:18:04.432972 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 6.8604ms)
  I0930 12:18:04.432997 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 6.876119ms)
  I0930 12:18:04.437262 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 3.948468ms)
  I0930 12:18:04.437303 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 4.005869ms)
  I0930 12:18:04.437829 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 4.559615ms)
  I0930 12:18:04.438034 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.908189ms)
  I0930 12:18:04.438202 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.996266ms)
  I0930 12:18:04.438211 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 5.099399ms)
  I0930 12:18:04.438279 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.049122ms)
  I0930 12:18:04.438437 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 5.402095ms)
  I0930 12:18:04.438533 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.409159ms)
  I0930 12:18:04.438604 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.353675ms)
  I0930 12:18:04.438893 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.867235ms)
  I0930 12:18:04.438906 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.622045ms)
  I0930 12:18:04.438930 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 5.751719ms)
  I0930 12:18:04.439462 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 6.364045ms)
  I0930 12:18:04.439720 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 6.644072ms)
  I0930 12:18:04.439767 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 6.705644ms)
  I0930 12:18:04.443121 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 3.209245ms)
  I0930 12:18:04.443389 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 3.436383ms)
  I0930 12:18:04.443612 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 3.591463ms)
  I0930 12:18:04.444403 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 4.315425ms)
  I0930 12:18:04.445049 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.929824ms)
  I0930 12:18:04.445073 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.085064ms)
  I0930 12:18:04.445054 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 4.998428ms)
  I0930 12:18:04.445058 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 4.995354ms)
  I0930 12:18:04.445077 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 5.026912ms)
  I0930 12:18:04.445429 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.391807ms)
  I0930 12:18:04.445440 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 5.304472ms)
  I0930 12:18:04.445628 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 5.519824ms)
  I0930 12:18:04.445854 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 6.041196ms)
  I0930 12:18:04.446233 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 6.13872ms)
  I0930 12:18:04.446387 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 6.251014ms)
  I0930 12:18:04.446640 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 6.537708ms)
  I0930 12:18:04.449496 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 2.759488ms)
  I0930 12:18:04.451563 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 4.808424ms)
  I0930 12:18:04.451709 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 4.840452ms)
  I0930 12:18:04.451716 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.85026ms)
  I0930 12:18:04.451850 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.05857ms)
  I0930 12:18:04.452246 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 5.414145ms)
  I0930 12:18:04.452480 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 5.656068ms)
  I0930 12:18:04.452653 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 5.797287ms)
  I0930 12:18:04.452665 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 5.917522ms)
  I0930 12:18:04.452684 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.859882ms)
  I0930 12:18:04.452691 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 5.871704ms)
  I0930 12:18:04.452746 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 5.969742ms)
  I0930 12:18:04.452964 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 6.157946ms)
  I0930 12:18:04.453291 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 6.605594ms)
  I0930 12:18:04.453460 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 6.663435ms)
  I0930 12:18:04.453469 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 6.666663ms)
  I0930 12:18:04.458819 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 5.022904ms)
  I0930 12:18:04.458856 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 5.233541ms)
  I0930 12:18:04.458880 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.367701ms)
  I0930 12:18:04.458886 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 5.185693ms)
  I0930 12:18:04.458944 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.383778ms)
  I0930 12:18:04.458948 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 5.139951ms)
  I0930 12:18:04.459058 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 5.237574ms)
  I0930 12:18:04.459163 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 5.502908ms)
  I0930 12:18:04.459415 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 5.769949ms)
  I0930 12:18:04.459455 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 5.847722ms)
  I0930 12:18:04.459513 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 5.93747ms)
  I0930 12:18:04.459780 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 6.264604ms)
  I0930 12:18:04.459808 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 6.039564ms)
  I0930 12:18:04.459813 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 6.135109ms)
  I0930 12:18:04.460513 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 6.79491ms)
  I0930 12:18:04.460547 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 6.800209ms)
  I0930 12:18:04.464561 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 3.81437ms)
  I0930 12:18:04.464564 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 3.850816ms)
  I0930 12:18:04.464838 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 4.109833ms)
  I0930 12:18:04.464849 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.243309ms)
  I0930 12:18:04.464865 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 4.175421ms)
  I0930 12:18:04.466198 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 5.573447ms)
  I0930 12:18:04.466198 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 5.448387ms)
  I0930 12:18:04.466328 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.664153ms)
  I0930 12:18:04.466413 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.718141ms)
  I0930 12:18:04.466444 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 5.715554ms)
  I0930 12:18:04.466476 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.765856ms)
  I0930 12:18:04.466512 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 5.915603ms)
  I0930 12:18:04.466528 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.859869ms)
  I0930 12:18:04.466528 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.818563ms)
  I0930 12:18:04.467270 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 6.58927ms)
  I0930 12:18:04.467442 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 6.685833ms)
  I0930 12:18:04.471251 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 3.421766ms)
  I0930 12:18:04.472166 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.3695ms)
  I0930 12:18:04.472227 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 4.38908ms)
  I0930 12:18:04.472255 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 4.601998ms)
  I0930 12:18:04.472268 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 4.668702ms)
  I0930 12:18:04.472281 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 4.585538ms)
  I0930 12:18:04.472291 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 4.537089ms)
  I0930 12:18:04.472299 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.565474ms)
  I0930 12:18:04.472375 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.521279ms)
  I0930 12:18:04.472449 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 4.632809ms)
  I0930 12:18:04.472395 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 4.917284ms)
  I0930 12:18:04.472428 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 4.633119ms)
  I0930 12:18:04.473331 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.609831ms)
  I0930 12:18:04.473330 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.642863ms)
  I0930 12:18:04.473371 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 5.562222ms)
  I0930 12:18:04.473533 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 5.752451ms)
  I0930 12:18:04.478263 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 4.679434ms)
  I0930 12:18:04.478263 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.560437ms)
  I0930 12:18:04.478345 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 4.595445ms)
  I0930 12:18:04.478468 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 4.72717ms)
  I0930 12:18:04.478474 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 4.785361ms)
  I0930 12:18:04.478491 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 4.839886ms)
  I0930 12:18:04.478620 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.988349ms)
  I0930 12:18:04.478654 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 5.083833ms)
  I0930 12:18:04.479124 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 5.41262ms)
  I0930 12:18:04.479124 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 5.521723ms)
  I0930 12:18:04.479173 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 5.446035ms)
  I0930 12:18:04.479169 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 5.493529ms)
  I0930 12:18:04.479646 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 5.931303ms)
  I0930 12:18:04.479736 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 6.070691ms)
  I0930 12:18:04.479817 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 6.08927ms)
  I0930 12:18:04.480066 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 6.360236ms)
  I0930 12:18:04.484808 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 4.562368ms)
  I0930 12:18:04.486225 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 5.909492ms)
  I0930 12:18:04.486292 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 6.181041ms)
  I0930 12:18:04.487693 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 7.47166ms)
  I0930 12:18:04.487779 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 7.58845ms)
  I0930 12:18:04.487947 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 7.669435ms)
  I0930 12:18:04.488588 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 8.335817ms)
  I0930 12:18:04.490168 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 9.81439ms)
  I0930 12:18:04.490647 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 10.533615ms)
  I0930 12:18:04.490936 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 10.609225ms)
  I0930 12:18:04.491168 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 10.886764ms)
  I0930 12:18:04.491179 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 10.844134ms)
  I0930 12:18:04.491199 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 10.904598ms)
  I0930 12:18:04.491205 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 10.912872ms)
  I0930 12:18:04.491354 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 11.093537ms)
  I0930 12:18:04.491727 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 11.464384ms)
  I0930 12:18:04.496917 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 4.991426ms)
  I0930 12:18:04.497445 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:462/proxy/: tls qux (200; 5.671442ms)
  I0930 12:18:04.502049 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:160/proxy/: foo (200; 10.203464ms)
  I0930 12:18:04.502083 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 10.182573ms)
  I0930 12:18:04.502099 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">... (200; 10.192245ms)
  I0930 12:18:04.502232 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j/proxy/rewriteme">test</a> (200; 10.313637ms)
  I0930 12:18:04.502646 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/proxy-service-zxhwv-fpm5j:1080/proxy/rewriteme">test<... (200; 10.744486ms)
  I0930 12:18:04.502681 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname1/proxy/: tls baz (200; 10.715289ms)
  I0930 12:18:04.502731 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:460/proxy/: tls baz (200; 10.786442ms)
  I0930 12:18:04.502996 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/: <a href="/api/v1/namespaces/proxy-8982/pods/https:proxy-service-zxhwv-fpm5j:443/proxy/tlsrewritem... (200; 11.054391ms)
  I0930 12:18:04.502999 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/pods/http:proxy-service-zxhwv-fpm5j:162/proxy/: bar (200; 11.040489ms)
  I0930 12:18:04.503264 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/services/https:proxy-service-zxhwv:tlsportname2/proxy/: tls qux (200; 11.303597ms)
  I0930 12:18:04.503268 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname1/proxy/: foo (200; 11.408503ms)
  I0930 12:18:04.503287 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname2/proxy/: bar (200; 11.402467ms)
  I0930 12:18:04.503548 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/services/http:proxy-service-zxhwv:portname1/proxy/: foo (200; 11.611578ms)
  I0930 12:18:04.503800 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8982/services/proxy-service-zxhwv:portname2/proxy/: bar (200; 11.84562ms)
  STEP: deleting ReplicationController proxy-service-zxhwv in namespace proxy-8982, will wait for the garbage collector to delete the pods @ 09/30/24 12:18:04.503
  I0930 12:18:04.560237 20 resources.go:139] Deleting ReplicationController proxy-service-zxhwv took: 3.801139ms
  I0930 12:18:04.661225 20 resources.go:163] Terminating ReplicationController proxy-service-zxhwv pods took: 100.983928ms
  I0930 12:18:06.661785 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8982" for this suite. @ 09/30/24 12:18:06.664
• [4.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/30/24 12:18:06.668
  I0930 12:18:06.668268 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 12:18:06.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:18:06.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:18:06.678
  STEP: Saw pod success @ 09/30/24 12:18:10.712
  I0930 12:18:10.714060 20 output.go:196] Trying to get logs from node worker-0 pod client-envvars-46888775-a94f-4867-82e7-b876410ab38a container env3cont: <nil>
  STEP: delete the pod @ 09/30/24 12:18:10.718
  I0930 12:18:10.729604 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4392" for this suite. @ 09/30/24 12:18:10.731
• [4.067 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/30/24 12:18:10.735
  I0930 12:18:10.735601 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:18:10.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:18:10.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:18:10.745
  STEP: creating service in namespace services-614 @ 09/30/24 12:18:10.747
  STEP: creating service affinity-nodeport-transition in namespace services-614 @ 09/30/24 12:18:10.747
  STEP: creating replication controller affinity-nodeport-transition in namespace services-614 @ 09/30/24 12:18:10.758
  I0930 12:18:10.762909      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-614, replica count: 3
  I0930 12:18:13.813191      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:18:13.818368 20 resource.go:361] Creating new exec pod
  I0930 12:18:16.831462 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-614 exec execpod-affinityflqpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0930 12:18:16.917320 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0930 12:18:16.917433 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:18:16.917516 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-614 exec execpod-affinityflqpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.222.166 80'
  I0930 12:18:16.999371 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.222.166 80\nConnection to 10.105.222.166 80 port [tcp/http] succeeded!\n"
  I0930 12:18:16.999416 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:18:16.999497 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-614 exec execpod-affinityflqpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.42.49 31845'
  I0930 12:18:17.081696 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.42.49 31845\nConnection to 10.0.42.49 31845 port [tcp/*] succeeded!\n"
  I0930 12:18:17.081741 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:18:17.081822 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-614 exec execpod-affinityflqpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.35.180 31845'
  I0930 12:18:17.163100 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.35.180 31845\nConnection to 10.0.35.180 31845 port [tcp/*] succeeded!\n"
  I0930 12:18:17.163145 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:18:17.168099 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-614 exec execpod-affinityflqpv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.42.49:31845/ ; done'
  I0930 12:18:17.298418 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n"
  I0930 12:18:17.298468 20 builder.go:147] stdout: "\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd"
  I0930 12:18:17.298484 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298491 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298497 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298503 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298509 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298514 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298520 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298525 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298531 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298536 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298542 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298547 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298552 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298558 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298564 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:17.298570 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.299194 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-614 exec execpod-affinityflqpv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.42.49:31845/ ; done'
  I0930 12:18:47.430551 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n"
  I0930 12:18:47.430687 20 builder.go:147] stdout: "\naffinity-nodeport-transition-rxfs5\naffinity-nodeport-transition-p7f97\naffinity-nodeport-transition-p7f97\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-rxfs5\naffinity-nodeport-transition-rxfs5\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-p7f97\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-rxfs5\naffinity-nodeport-transition-rxfs5\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-p7f97"
  I0930 12:18:47.430707 20 service.go:242] Received response from host: affinity-nodeport-transition-rxfs5
  I0930 12:18:47.430715 20 service.go:242] Received response from host: affinity-nodeport-transition-p7f97
  I0930 12:18:47.430723 20 service.go:242] Received response from host: affinity-nodeport-transition-p7f97
  I0930 12:18:47.430729 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.430735 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.430740 20 service.go:242] Received response from host: affinity-nodeport-transition-rxfs5
  I0930 12:18:47.430746 20 service.go:242] Received response from host: affinity-nodeport-transition-rxfs5
  I0930 12:18:47.430753 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.430758 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.430764 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.430770 20 service.go:242] Received response from host: affinity-nodeport-transition-p7f97
  I0930 12:18:47.430776 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.430783 20 service.go:242] Received response from host: affinity-nodeport-transition-rxfs5
  I0930 12:18:47.430801 20 service.go:242] Received response from host: affinity-nodeport-transition-rxfs5
  I0930 12:18:47.430807 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.430813 20 service.go:242] Received response from host: affinity-nodeport-transition-p7f97
  I0930 12:18:47.439517 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-614 exec execpod-affinityflqpv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.42.49:31845/ ; done'
  I0930 12:18:47.572278 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31845/\n"
  I0930 12:18:47.572334 20 builder.go:147] stdout: "\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd\naffinity-nodeport-transition-zrfqd"
  I0930 12:18:47.572346 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572357 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572365 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572371 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572377 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572382 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572388 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572394 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572400 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572406 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572411 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572417 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572422 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572428 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572433 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572439 20 service.go:242] Received response from host: affinity-nodeport-transition-zrfqd
  I0930 12:18:47.572510 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-614, will wait for the garbage collector to delete the pods @ 09/30/24 12:18:47.581
  I0930 12:18:47.638258 20 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 3.980769ms
  I0930 12:18:47.738882 20 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.60501ms
  I0930 12:18:50.752862 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-614" for this suite. @ 09/30/24 12:18:50.754
• [40.024 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 09/30/24 12:18:50.759
  I0930 12:18:50.759997 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/30/24 12:18:50.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:18:50.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:18:50.771
  STEP: getting /apis @ 09/30/24 12:18:50.778
  STEP: getting /apis/admissionregistration.k8s.io @ 09/30/24 12:18:50.781
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/30/24 12:18:50.782
  STEP: creating @ 09/30/24 12:18:50.782
  STEP: getting @ 09/30/24 12:18:50.792
  STEP: listing @ 09/30/24 12:18:50.793
  STEP: watching @ 09/30/24 12:18:50.795
  I0930 12:18:50.795432 20 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 09/30/24 12:18:50.796
  STEP: updating @ 09/30/24 12:18:50.799
  I0930 12:18:50.806038 20 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 09/30/24 12:18:50.806
  STEP: deleting a collection @ 09/30/24 12:18:50.812
  I0930 12:18:50.821306 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6805" for this suite. @ 09/30/24 12:18:50.855
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 09/30/24 12:18:50.858
  I0930 12:18:50.858807 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:18:50.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:18:50.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:18:50.873
  STEP: create deployment with httpd image @ 09/30/24 12:18:50.875
  I0930 12:18:50.875886 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-2016 create -f -'
  I0930 12:18:50.947712 20 builder.go:146] stderr: ""
  I0930 12:18:50.947753 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/30/24 12:18:50.947
  I0930 12:18:50.947915 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-2016 diff -f -'
  I0930 12:18:51.036937 20 builder.go:135] rc: 1
  I0930 12:18:51.037158 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-2016 delete -f -'
  I0930 12:18:51.086064 20 builder.go:146] stderr: ""
  I0930 12:18:51.086104 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0930 12:18:51.086197 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2016" for this suite. @ 09/30/24 12:18:51.088
• [0.234 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 09/30/24 12:18:51.093
  I0930 12:18:51.093649 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename job @ 09/30/24 12:18:51.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:18:51.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:18:51.103
  STEP: Creating a suspended job @ 09/30/24 12:18:51.107
  STEP: Patching the Job @ 09/30/24 12:18:51.11
  STEP: Watching for Job to be patched @ 09/30/24 12:18:51.122
  I0930 12:18:51.123821 20 job.go:1330] Event ADDED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf] and annotations: map[]
  I0930 12:18:51.123862 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf] and annotations: map[]
  I0930 12:18:51.123876 20 job.go:1333] Event MODIFIED found for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[]
  STEP: Updating the job @ 09/30/24 12:18:51.123
  STEP: Watching for Job to be updated @ 09/30/24 12:18:51.129
  I0930 12:18:51.130186 20 job.go:1333] Event MODIFIED found for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:51.130230 20 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/30/24 12:18:51.13
  I0930 12:18:51.131806 20 job.go:1233] Job: e2e-trvvf as labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched]
  STEP: Waiting for job to complete @ 09/30/24 12:18:51.131
  STEP: Delete a job collection with a labelselector @ 09/30/24 12:18:59.137
  STEP: Watching for Job to be deleted @ 09/30/24 12:18:59.141
  I0930 12:18:59.143085 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143129 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143142 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143267 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143293 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143360 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143381 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143398 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143508 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143544 20 job.go:1330] Event MODIFIED observed for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  I0930 12:18:59.143594 20 job.go:1333] Event DELETED found for Job e2e-trvvf in namespace job-5366 with labels: map[e2e-job-label:e2e-trvvf e2e-trvvf:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/30/24 12:18:59.143
  I0930 12:18:59.145402 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5366" for this suite. @ 09/30/24 12:18:59.154
• [8.066 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/30/24 12:18:59.159
  I0930 12:18:59.159597 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename limitrange @ 09/30/24 12:18:59.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:18:59.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:18:59.171
  STEP: Creating LimitRange "e2e-limitrange-l7l54" in namespace "limitrange-346" @ 09/30/24 12:18:59.173
  STEP: Creating another limitRange in another namespace @ 09/30/24 12:18:59.176
  I0930 12:18:59.271839 20 limit_range.go:299] Namespace "e2e-limitrange-l7l54-1714" created
  I0930 12:18:59.271876 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-l7l54" in namespace "e2e-limitrange-l7l54-1714"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-l7l54" @ 09/30/24 12:18:59.274
  I0930 12:18:59.276660 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-l7l54" in "limitrange-346" namespace @ 09/30/24 12:18:59.276
  I0930 12:18:59.282769 20 limit_range.go:335] LimitRange "e2e-limitrange-l7l54" has been patched
  STEP: Delete LimitRange "e2e-limitrange-l7l54" by Collection with labelSelector: "e2e-limitrange-l7l54=patched" @ 09/30/24 12:18:59.282
  STEP: Confirm that the limitRange "e2e-limitrange-l7l54" has been deleted @ 09/30/24 12:18:59.286
  I0930 12:18:59.286691 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0930 12:18:59.288333 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-l7l54=patched"
  I0930 12:18:59.288373 20 limit_range.go:344] LimitRange "e2e-limitrange-l7l54" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-l7l54" @ 09/30/24 12:18:59.288
  I0930 12:18:59.291577 20 limit_range.go:350] Found 1 limitRange
  I0930 12:18:59.291734 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-346" for this suite. @ 09/30/24 12:18:59.293
  STEP: Destroying namespace "e2e-limitrange-l7l54-1714" for this suite. @ 09/30/24 12:18:59.297
• [0.141 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/30/24 12:18:59.3
  I0930 12:18:59.300736 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replication-controller @ 09/30/24 12:18:59.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:18:59.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:18:59.374
  I0930 12:18:59.376703 20 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/30/24 12:19:00.383
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/30/24 12:19:00.386
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/30/24 12:19:01.391
  I0930 12:19:01.398411 20 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/30/24 12:19:01.398
  I0930 12:19:02.402958 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3540" for this suite. @ 09/30/24 12:19:02.405
• [3.108 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/30/24 12:19:02.408
  I0930 12:19:02.408834 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:19:02.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:19:02.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:19:02.419
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5697 @ 09/30/24 12:19:02.422
  STEP: changing the ExternalName service to type=ClusterIP @ 09/30/24 12:19:02.425
  STEP: creating replication controller externalname-service in namespace services-5697 @ 09/30/24 12:19:02.436
  I0930 12:19:02.439810      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5697, replica count: 2
  I0930 12:19:05.491063      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:19:05.491096 20 resource.go:361] Creating new exec pod
  I0930 12:19:08.498945 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-5697 exec execpodwgvpg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0930 12:19:08.582297 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0930 12:19:08.582339 20 builder.go:147] stdout: "externalname-service-9ghk6"
  I0930 12:19:08.582431 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-5697 exec execpodwgvpg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.69.31 80'
  I0930 12:19:08.660556 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.69.31 80\nConnection to 10.107.69.31 80 port [tcp/http] succeeded!\n"
  I0930 12:19:08.660607 20 builder.go:147] stdout: "externalname-service-9ghk6"
  I0930 12:19:08.660692 20 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0930 12:19:08.673708 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5697" for this suite. @ 09/30/24 12:19:08.753
• [6.351 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/30/24 12:19:08.759
  I0930 12:19:08.759628 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename tables @ 09/30/24 12:19:08.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:19:08.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:19:08.771
  I0930 12:19:08.775528 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-0" for this suite. @ 09/30/24 12:19:08.854
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 09/30/24 12:19:08.86
  I0930 12:19:08.860242 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:19:08.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:19:08.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:19:08.87
  I0930 12:19:08.872227 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-8218 version'
  I0930 12:19:08.915135 20 builder.go:146] stderr: ""
  I0930 12:19:08.915178 20 builder.go:147] stdout: "Client Version: v1.31.1\nKustomize Version: v5.4.2\nServer Version: v1.31.1+k0s\n"
  I0930 12:19:08.915349 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8218" for this suite. @ 09/30/24 12:19:08.955
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/30/24 12:19:08.96
  I0930 12:19:08.960450 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 12:19:08.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:19:08.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:19:08.97
  STEP: Creating configMap that has name configmap-test-emptyKey-38a859b1-5ecf-4770-90d9-d3a7313b8afa @ 09/30/24 12:19:08.972
  I0930 12:19:08.974034 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7190" for this suite. @ 09/30/24 12:19:09.055
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/30/24 12:19:09.061
  I0930 12:19:09.061113 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replicaset @ 09/30/24 12:19:09.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:19:09.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:19:09.071
  STEP: Create a ReplicaSet @ 09/30/24 12:19:09.072
  STEP: Verify that the required pods have come up @ 09/30/24 12:19:09.077
  I0930 12:19:09.079822 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0930 12:19:14.115794 20 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/30/24 12:19:14.115
  I0930 12:19:14.117851 20 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/30/24 12:19:14.117
  STEP: DeleteCollection of the ReplicaSets @ 09/30/24 12:19:14.2
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/30/24 12:19:14.203
  I0930 12:19:14.205279 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6275" for this suite. @ 09/30/24 12:19:14.207
• [5.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/30/24 12:19:14.218
  I0930 12:19:14.218563 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename gc @ 09/30/24 12:19:14.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:19:14.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:19:14.301
  STEP: create the rc @ 09/30/24 12:19:14.307
  W0930 12:19:14.312876      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/30/24 12:19:20.315
  STEP: wait for the rc to be deleted @ 09/30/24 12:19:20.318
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/30/24 12:19:25.322
  STEP: Gathering metrics @ 09/30/24 12:19:55.329
  W0930 12:19:55.332091      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0930 12:19:55.332135 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0930 12:19:55.332193 20 delete.go:95] Deleting pod "simpletest.rc-25jsz" in namespace "gc-2751"
  I0930 12:19:55.340521 20 delete.go:95] Deleting pod "simpletest.rc-2zb7c" in namespace "gc-2751"
  I0930 12:19:55.348858 20 delete.go:95] Deleting pod "simpletest.rc-4f5w2" in namespace "gc-2751"
  I0930 12:19:55.357065 20 delete.go:95] Deleting pod "simpletest.rc-4ggzc" in namespace "gc-2751"
  I0930 12:19:55.368294 20 delete.go:95] Deleting pod "simpletest.rc-4mmr9" in namespace "gc-2751"
  I0930 12:19:55.378057 20 delete.go:95] Deleting pod "simpletest.rc-4tr94" in namespace "gc-2751"
  I0930 12:19:55.387761 20 delete.go:95] Deleting pod "simpletest.rc-5dg66" in namespace "gc-2751"
  I0930 12:19:55.399891 20 delete.go:95] Deleting pod "simpletest.rc-5gr9d" in namespace "gc-2751"
  I0930 12:19:55.410463 20 delete.go:95] Deleting pod "simpletest.rc-5jswj" in namespace "gc-2751"
  I0930 12:19:55.419364 20 delete.go:95] Deleting pod "simpletest.rc-5wzfg" in namespace "gc-2751"
  I0930 12:19:55.430597 20 delete.go:95] Deleting pod "simpletest.rc-68g2x" in namespace "gc-2751"
  I0930 12:19:55.437328 20 delete.go:95] Deleting pod "simpletest.rc-6d65g" in namespace "gc-2751"
  I0930 12:19:55.445944 20 delete.go:95] Deleting pod "simpletest.rc-6f5fx" in namespace "gc-2751"
  I0930 12:19:55.454556 20 delete.go:95] Deleting pod "simpletest.rc-6p8kl" in namespace "gc-2751"
  I0930 12:19:55.461685 20 delete.go:95] Deleting pod "simpletest.rc-6tnqj" in namespace "gc-2751"
  I0930 12:19:55.468692 20 delete.go:95] Deleting pod "simpletest.rc-6zwjr" in namespace "gc-2751"
  I0930 12:19:55.477754 20 delete.go:95] Deleting pod "simpletest.rc-75ss4" in namespace "gc-2751"
  I0930 12:19:55.487913 20 delete.go:95] Deleting pod "simpletest.rc-76tfv" in namespace "gc-2751"
  I0930 12:19:55.498214 20 delete.go:95] Deleting pod "simpletest.rc-7gqsk" in namespace "gc-2751"
  I0930 12:19:55.509951 20 delete.go:95] Deleting pod "simpletest.rc-7gr44" in namespace "gc-2751"
  I0930 12:19:55.518249 20 delete.go:95] Deleting pod "simpletest.rc-7mhgz" in namespace "gc-2751"
  I0930 12:19:55.529023 20 delete.go:95] Deleting pod "simpletest.rc-7sc8v" in namespace "gc-2751"
  I0930 12:19:55.538558 20 delete.go:95] Deleting pod "simpletest.rc-84qbm" in namespace "gc-2751"
  I0930 12:19:55.546380 20 delete.go:95] Deleting pod "simpletest.rc-87r5d" in namespace "gc-2751"
  I0930 12:19:55.557263 20 delete.go:95] Deleting pod "simpletest.rc-8m8mt" in namespace "gc-2751"
  I0930 12:19:55.567880 20 delete.go:95] Deleting pod "simpletest.rc-8s2k6" in namespace "gc-2751"
  I0930 12:19:55.576882 20 delete.go:95] Deleting pod "simpletest.rc-8t5rq" in namespace "gc-2751"
  I0930 12:19:55.588143 20 delete.go:95] Deleting pod "simpletest.rc-944zn" in namespace "gc-2751"
  I0930 12:19:55.596831 20 delete.go:95] Deleting pod "simpletest.rc-98wxq" in namespace "gc-2751"
  I0930 12:19:55.605309 20 delete.go:95] Deleting pod "simpletest.rc-9bk72" in namespace "gc-2751"
  I0930 12:19:55.618752 20 delete.go:95] Deleting pod "simpletest.rc-9cxz4" in namespace "gc-2751"
  I0930 12:19:55.624563 20 delete.go:95] Deleting pod "simpletest.rc-9v4lb" in namespace "gc-2751"
  I0930 12:19:55.635356 20 delete.go:95] Deleting pod "simpletest.rc-9vk4k" in namespace "gc-2751"
  I0930 12:19:55.641015 20 delete.go:95] Deleting pod "simpletest.rc-b5lg6" in namespace "gc-2751"
  I0930 12:19:55.648521 20 delete.go:95] Deleting pod "simpletest.rc-bcllm" in namespace "gc-2751"
  I0930 12:19:55.656062 20 delete.go:95] Deleting pod "simpletest.rc-bj8px" in namespace "gc-2751"
  I0930 12:19:55.664280 20 delete.go:95] Deleting pod "simpletest.rc-bqjn8" in namespace "gc-2751"
  I0930 12:19:55.674331 20 delete.go:95] Deleting pod "simpletest.rc-brjft" in namespace "gc-2751"
  I0930 12:19:55.686946 20 delete.go:95] Deleting pod "simpletest.rc-bww4d" in namespace "gc-2751"
  I0930 12:19:55.699467 20 delete.go:95] Deleting pod "simpletest.rc-c6dw9" in namespace "gc-2751"
  I0930 12:19:55.709658 20 delete.go:95] Deleting pod "simpletest.rc-c7hgw" in namespace "gc-2751"
  I0930 12:19:55.722129 20 delete.go:95] Deleting pod "simpletest.rc-cc84b" in namespace "gc-2751"
  I0930 12:19:55.732520 20 delete.go:95] Deleting pod "simpletest.rc-d65g6" in namespace "gc-2751"
  I0930 12:19:55.741857 20 delete.go:95] Deleting pod "simpletest.rc-dcdxm" in namespace "gc-2751"
  I0930 12:19:55.762016 20 delete.go:95] Deleting pod "simpletest.rc-dgj8w" in namespace "gc-2751"
  I0930 12:19:55.771054 20 delete.go:95] Deleting pod "simpletest.rc-dglll" in namespace "gc-2751"
  I0930 12:19:55.785560 20 delete.go:95] Deleting pod "simpletest.rc-dmqht" in namespace "gc-2751"
  I0930 12:19:55.799882 20 delete.go:95] Deleting pod "simpletest.rc-dnxmn" in namespace "gc-2751"
  I0930 12:19:55.811114 20 delete.go:95] Deleting pod "simpletest.rc-f2sq4" in namespace "gc-2751"
  I0930 12:19:55.821441 20 delete.go:95] Deleting pod "simpletest.rc-fd8vs" in namespace "gc-2751"
  I0930 12:19:55.830396 20 delete.go:95] Deleting pod "simpletest.rc-ffqkf" in namespace "gc-2751"
  I0930 12:19:55.841205 20 delete.go:95] Deleting pod "simpletest.rc-fqlf9" in namespace "gc-2751"
  I0930 12:19:55.849337 20 delete.go:95] Deleting pod "simpletest.rc-g4pfv" in namespace "gc-2751"
  I0930 12:19:55.859856 20 delete.go:95] Deleting pod "simpletest.rc-gd8ms" in namespace "gc-2751"
  I0930 12:19:55.876213 20 delete.go:95] Deleting pod "simpletest.rc-gnnbp" in namespace "gc-2751"
  I0930 12:19:55.888142 20 delete.go:95] Deleting pod "simpletest.rc-grrxb" in namespace "gc-2751"
  I0930 12:19:55.898625 20 delete.go:95] Deleting pod "simpletest.rc-h8szw" in namespace "gc-2751"
  I0930 12:19:55.908016 20 delete.go:95] Deleting pod "simpletest.rc-hcfxn" in namespace "gc-2751"
  I0930 12:19:55.920501 20 delete.go:95] Deleting pod "simpletest.rc-hwd7r" in namespace "gc-2751"
  I0930 12:19:55.930738 20 delete.go:95] Deleting pod "simpletest.rc-jbzrp" in namespace "gc-2751"
  I0930 12:19:55.946860 20 delete.go:95] Deleting pod "simpletest.rc-jjwrb" in namespace "gc-2751"
  I0930 12:19:55.983671 20 delete.go:95] Deleting pod "simpletest.rc-jzf9r" in namespace "gc-2751"
  I0930 12:19:56.032688 20 delete.go:95] Deleting pod "simpletest.rc-kgzqd" in namespace "gc-2751"
  I0930 12:19:56.085322 20 delete.go:95] Deleting pod "simpletest.rc-kkpqm" in namespace "gc-2751"
  I0930 12:19:56.136308 20 delete.go:95] Deleting pod "simpletest.rc-kpqg8" in namespace "gc-2751"
  I0930 12:19:56.182809 20 delete.go:95] Deleting pod "simpletest.rc-krmrs" in namespace "gc-2751"
  I0930 12:19:56.235215 20 delete.go:95] Deleting pod "simpletest.rc-kvtf6" in namespace "gc-2751"
  I0930 12:19:56.283376 20 delete.go:95] Deleting pod "simpletest.rc-l2kdm" in namespace "gc-2751"
  I0930 12:19:56.334741 20 delete.go:95] Deleting pod "simpletest.rc-lh7nv" in namespace "gc-2751"
  I0930 12:19:56.382038 20 delete.go:95] Deleting pod "simpletest.rc-llrnw" in namespace "gc-2751"
  I0930 12:19:56.434556 20 delete.go:95] Deleting pod "simpletest.rc-mgrnj" in namespace "gc-2751"
  I0930 12:19:56.483870 20 delete.go:95] Deleting pod "simpletest.rc-mh9m6" in namespace "gc-2751"
  I0930 12:19:56.535121 20 delete.go:95] Deleting pod "simpletest.rc-mm25m" in namespace "gc-2751"
  I0930 12:19:56.583376 20 delete.go:95] Deleting pod "simpletest.rc-nn2wm" in namespace "gc-2751"
  I0930 12:19:56.635755 20 delete.go:95] Deleting pod "simpletest.rc-ph49k" in namespace "gc-2751"
  I0930 12:19:56.686267 20 delete.go:95] Deleting pod "simpletest.rc-pk7g5" in namespace "gc-2751"
  I0930 12:19:56.735777 20 delete.go:95] Deleting pod "simpletest.rc-qg7ns" in namespace "gc-2751"
  I0930 12:19:56.786952 20 delete.go:95] Deleting pod "simpletest.rc-qgd4m" in namespace "gc-2751"
  I0930 12:19:56.832866 20 delete.go:95] Deleting pod "simpletest.rc-qgghw" in namespace "gc-2751"
  I0930 12:19:56.884100 20 delete.go:95] Deleting pod "simpletest.rc-qrc7q" in namespace "gc-2751"
  I0930 12:19:56.934575 20 delete.go:95] Deleting pod "simpletest.rc-rj944" in namespace "gc-2751"
  I0930 12:19:56.984869 20 delete.go:95] Deleting pod "simpletest.rc-sjpbg" in namespace "gc-2751"
  I0930 12:19:57.033462 20 delete.go:95] Deleting pod "simpletest.rc-sp44j" in namespace "gc-2751"
  I0930 12:19:57.087659 20 delete.go:95] Deleting pod "simpletest.rc-t6526" in namespace "gc-2751"
  I0930 12:19:57.134350 20 delete.go:95] Deleting pod "simpletest.rc-tcrwd" in namespace "gc-2751"
  I0930 12:19:57.183569 20 delete.go:95] Deleting pod "simpletest.rc-v4gsr" in namespace "gc-2751"
  I0930 12:19:57.237014 20 delete.go:95] Deleting pod "simpletest.rc-v6k58" in namespace "gc-2751"
  I0930 12:19:57.283826 20 delete.go:95] Deleting pod "simpletest.rc-vg5tf" in namespace "gc-2751"
  I0930 12:19:57.333859 20 delete.go:95] Deleting pod "simpletest.rc-vs4bz" in namespace "gc-2751"
  I0930 12:19:57.382897 20 delete.go:95] Deleting pod "simpletest.rc-wfrdk" in namespace "gc-2751"
  I0930 12:19:57.435160 20 delete.go:95] Deleting pod "simpletest.rc-wlf84" in namespace "gc-2751"
  I0930 12:19:57.487532 20 delete.go:95] Deleting pod "simpletest.rc-wmm7p" in namespace "gc-2751"
  I0930 12:19:57.535203 20 delete.go:95] Deleting pod "simpletest.rc-wn5pw" in namespace "gc-2751"
  I0930 12:19:57.586071 20 delete.go:95] Deleting pod "simpletest.rc-xb49j" in namespace "gc-2751"
  I0930 12:19:57.637672 20 delete.go:95] Deleting pod "simpletest.rc-xl8w8" in namespace "gc-2751"
  I0930 12:19:57.683866 20 delete.go:95] Deleting pod "simpletest.rc-xmq6b" in namespace "gc-2751"
  I0930 12:19:57.732293 20 delete.go:95] Deleting pod "simpletest.rc-xmrzf" in namespace "gc-2751"
  I0930 12:19:57.786433 20 delete.go:95] Deleting pod "simpletest.rc-xq2cx" in namespace "gc-2751"
  I0930 12:19:57.835393 20 delete.go:95] Deleting pod "simpletest.rc-xrfwm" in namespace "gc-2751"
  I0930 12:19:57.884158 20 delete.go:95] Deleting pod "simpletest.rc-zzhf6" in namespace "gc-2751"
  I0930 12:19:57.934409 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2751" for this suite. @ 09/30/24 12:19:57.979
• [43.811 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/30/24 12:19:58.03
  I0930 12:19:58.030091 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/30/24 12:19:58.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:19:58.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:19:58.047
  I0930 12:19:58.057264 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1873" for this suite. @ 09/30/24 12:19:58.078
• [0.052 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/30/24 12:19:58.082
  I0930 12:19:58.082663 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:19:58.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:19:58.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:19:58.144
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6902 @ 09/30/24 12:19:58.146
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/30/24 12:19:58.154
  STEP: creating service externalsvc in namespace services-6902 @ 09/30/24 12:19:58.154
  STEP: creating replication controller externalsvc in namespace services-6902 @ 09/30/24 12:19:58.165
  I0930 12:19:58.169110      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6902, replica count: 2
  I0930 12:20:01.220346      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/30/24 12:20:01.222
  I0930 12:20:01.232195 20 resource.go:361] Creating new exec pod
  I0930 12:20:03.241464 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-6902 exec execpodvj8l2 -- /bin/sh -x -c nslookup clusterip-service.services-6902.svc.cluster.local'
  I0930 12:20:03.343755 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-6902.svc.cluster.local\n"
  I0930 12:20:03.343805 20 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-6902.svc.cluster.local\tcanonical name = externalsvc.services-6902.svc.cluster.local.\nName:\texternalsvc.services-6902.svc.cluster.local\nAddress: 10.96.218.194\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6902, will wait for the garbage collector to delete the pods @ 09/30/24 12:20:03.343
  I0930 12:20:03.398981 20 resources.go:139] Deleting ReplicationController externalsvc took: 3.355649ms
  I0930 12:20:03.499665 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.679167ms
  I0930 12:20:06.310785 20 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0930 12:20:06.316347 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6902" for this suite. @ 09/30/24 12:20:06.318
• [8.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 09/30/24 12:20:06.321
  I0930 12:20:06.321620 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:20:06.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:06.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:06.333
  STEP: validating cluster-info @ 09/30/24 12:20:06.335
  I0930 12:20:06.335916 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-3927 cluster-info'
  I0930 12:20:06.382607 20 builder.go:146] stderr: ""
  I0930 12:20:06.382723 20 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0930 12:20:06.382830 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3927" for this suite. @ 09/30/24 12:20:06.419
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/30/24 12:20:06.423
  I0930 12:20:06.423100 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 12:20:06.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:06.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:06.435
  STEP: Creating the pod @ 09/30/24 12:20:06.437
  I0930 12:20:08.968521 20 pod_client.go:173] Successfully updated pod "labelsupdatefdf8526e-ff04-44a0-8d5a-5932b578e482"
  I0930 12:20:10.978208 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2643" for this suite. @ 09/30/24 12:20:10.98
• [4.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/30/24 12:20:10.984
  I0930 12:20:10.984281 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:20:10.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:10.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:10.996
  STEP: Creating secret with name projected-secret-test-aef4d228-d345-4ffb-a2cd-b46378e0fa78 @ 09/30/24 12:20:10.998
  STEP: Creating a pod to test consume secrets @ 09/30/24 12:20:11.001
  STEP: Saw pod success @ 09/30/24 12:20:15.014
  I0930 12:20:15.016266 20 output.go:196] Trying to get logs from node worker-1 pod pod-projected-secrets-054623ea-daee-4b78-bf86-a623ac02c023 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 12:20:15.028
  I0930 12:20:15.038793 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5552" for this suite. @ 09/30/24 12:20:15.04
• [4.060 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/30/24 12:20:15.044
  I0930 12:20:15.044326 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename runtimeclass @ 09/30/24 12:20:15.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:15.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:15.054
  STEP: Deleting RuntimeClass runtimeclass-9344-delete-me @ 09/30/24 12:20:15.059
  STEP: Waiting for the RuntimeClass to disappear @ 09/30/24 12:20:15.062
  I0930 12:20:15.068463 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9344" for this suite. @ 09/30/24 12:20:15.141
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 09/30/24 12:20:15.144
  I0930 12:20:15.144664 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename job @ 09/30/24 12:20:15.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:15.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:15.156
  STEP: Creating a job @ 09/30/24 12:20:15.158
  STEP: Ensuring active pods == parallelism @ 09/30/24 12:20:15.162
  STEP: Orphaning one of the Job's Pods @ 09/30/24 12:20:17.165
  I0930 12:20:17.676638 20 pod_client.go:173] Successfully updated pod "adopt-release-h7hqc"
  STEP: Checking that the Job readopts the Pod @ 09/30/24 12:20:17.676
  STEP: Removing the labels from the Job's Pod @ 09/30/24 12:20:19.681
  I0930 12:20:20.190865 20 pod_client.go:173] Successfully updated pod "adopt-release-h7hqc"
  STEP: Checking that the Job releases the Pod @ 09/30/24 12:20:20.19
  I0930 12:20:22.195158 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7774" for this suite. @ 09/30/24 12:20:22.197
• [7.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/30/24 12:20:22.202
  I0930 12:20:22.202663 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename deployment @ 09/30/24 12:20:22.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:22.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:22.214
  I0930 12:20:22.216284 20 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0930 12:20:22.221668 20 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0930 12:20:22.225300 20 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0930 12:20:24.229546 20 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0930 12:20:24.231221 20 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0930 12:20:24.238417 20 deployment.go:313] Updating deployment test-recreate-deployment
  I0930 12:20:24.238450 20 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0930 12:20:24.294440 20 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc73859a-0d86-43a0-b05a-6cdc821cb751",
      ResourceVersion: (string) (len=5) "13357",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863295622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0930 12:20:24.332285 20 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2190837f-a057-47bf-8d40-257c699e25f4",
      ResourceVersion: (string) (len=5) "13354",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863295624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "cc73859a-0d86-43a0-b05a-6cdc821cb751",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 63 37 33 38 35  39 61 2d 30 64 38 36 2d  |\"cc73859a-0d86-|
              00000120  34 33 61 30 2d 62 30 35  61 2d 36 63 64 63 38 32  |43a0-b05a-6cdc82|
              00000130  31 63 62 37 35 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1cb751\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 12:20:24.332950 20 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0930 12:20:24.333113 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db370611-c251-4c4e-bc08-d5a6d6f095ae",
      ResourceVersion: (string) (len=5) "13344",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863295622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "cc73859a-0d86-43a0-b05a-6cdc821cb751",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 63 37 33 38 35  39 61 2d 30 64 38 36 2d  |\"cc73859a-0d86-|
              00000120  34 33 61 30 2d 62 30 35  61 2d 36 63 64 63 38 32  |43a0-b05a-6cdc82|
              00000130  31 63 62 37 35 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1cb751\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 12:20:24.336246 20 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-ml8gk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-ml8gk",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-5438",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9371c9e-3a7c-4ff4-b0b6-955aa9105fda",
      ResourceVersion: (string) (len=5) "13356",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863295624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "2190837f-a057-47bf-8d40-257c699e25f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  39 30 38 33 37 66 2d 61  |d\":\"2190837f-a|
              00000090  30 35 37 2d 34 37 62 66  2d 38 64 34 30 2d 32 35  |057-47bf-8d40-25|
              000000a0  37 63 36 39 39 65 32 35  66 34 5c 22 7d 22 3a 7b  |7c699e25f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9vbqh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9vbqh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863295624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863295624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9vbqh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 12:20:24.337586 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5438" for this suite. @ 09/30/24 12:20:24.339
• [2.142 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/30/24 12:20:24.345
  I0930 12:20:24.345277 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/30/24 12:20:24.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:24.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:24.355
  I0930 12:20:24.357705 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/30/24 12:20:25.571
  I0930 12:20:25.571419 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-5395 --namespace=crd-publish-openapi-5395 create -f -'
  I0930 12:20:27.634560 20 builder.go:146] stderr: ""
  I0930 12:20:27.634610 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2949-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0930 12:20:27.634665 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-5395 --namespace=crd-publish-openapi-5395 delete e2e-test-crd-publish-openapi-2949-crds test-cr'
  I0930 12:20:27.682931 20 builder.go:146] stderr: ""
  I0930 12:20:27.682970 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2949-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0930 12:20:27.683022 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-5395 --namespace=crd-publish-openapi-5395 apply -f -'
  I0930 12:20:27.735710 20 builder.go:146] stderr: ""
  I0930 12:20:27.735756 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2949-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0930 12:20:27.735866 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-5395 --namespace=crd-publish-openapi-5395 delete e2e-test-crd-publish-openapi-2949-crds test-cr'
  I0930 12:20:27.785893 20 builder.go:146] stderr: ""
  I0930 12:20:27.785945 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2949-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/30/24 12:20:27.785
  I0930 12:20:27.786032 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-5395 explain e2e-test-crd-publish-openapi-2949-crds'
  I0930 12:20:27.832005 20 builder.go:146] stderr: ""
  I0930 12:20:27.832061 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2949-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0930 12:20:29.028646 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5395" for this suite. @ 09/30/24 12:20:29.033
• [4.692 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/30/24 12:20:29.036
  I0930 12:20:29.036946 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename namespaces @ 09/30/24 12:20:29.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:29.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:29.049
  STEP: creating a Namespace @ 09/30/24 12:20:29.051
  STEP: patching the Namespace @ 09/30/24 12:20:29.145
  STEP: get the Namespace and ensuring it has the label @ 09/30/24 12:20:29.149
  I0930 12:20:29.151079 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2952" for this suite. @ 09/30/24 12:20:29.153
  STEP: Destroying namespace "nspatchtest-b92a568b-8690-446d-b508-d7fb841d6ab2-6471" for this suite. @ 09/30/24 12:20:29.156
• [0.125 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/30/24 12:20:29.161
  I0930 12:20:29.161970 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:20:29.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:29.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:29.248
  STEP: Setting up server cert @ 09/30/24 12:20:29.346
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:20:29.818
  STEP: Deploying the webhook pod @ 09/30/24 12:20:29.825
  STEP: Wait for the deployment to be ready @ 09/30/24 12:20:29.839
  I0930 12:20:29.844150 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/30/24 12:20:31.85
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:20:31.859
  I0930 12:20:32.859219 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0930 12:20:32.864453 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5739-crds.webhook.example.com via the AdmissionRegistration API @ 09/30/24 12:20:33.377
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/30/24 12:20:33.39
  I0930 12:20:35.953543 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4534" for this suite. @ 09/30/24 12:20:35.955
  STEP: Destroying namespace "webhook-markers-8938" for this suite. @ 09/30/24 12:20:35.96
• [6.802 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/30/24 12:20:35.964
  I0930 12:20:35.964469 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 12:20:35.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:35.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:35.974
  STEP: Creating a ResourceQuota @ 09/30/24 12:20:35.976
  STEP: Getting a ResourceQuota @ 09/30/24 12:20:35.979
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/30/24 12:20:35.981
  STEP: Patching the ResourceQuota @ 09/30/24 12:20:35.983
  STEP: Deleting a Collection of ResourceQuotas @ 09/30/24 12:20:35.988
  STEP: Verifying the deleted ResourceQuota @ 09/30/24 12:20:35.993
  I0930 12:20:35.994876 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5416" for this suite. @ 09/30/24 12:20:36.056
• [0.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 09/30/24 12:20:36.062
  I0930 12:20:36.062041 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename dns @ 09/30/24 12:20:36.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:20:36.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:20:36.076
  STEP: Creating a test headless service @ 09/30/24 12:20:36.078
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4994.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4994.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local;sleep 1; done
   @ 09/30/24 12:20:36.082
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4994.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4994.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local;sleep 1; done
   @ 09/30/24 12:20:36.082
  STEP: creating a pod to probe DNS @ 09/30/24 12:20:36.082
  STEP: submitting the pod to kubernetes @ 09/30/24 12:20:36.083
  STEP: retrieving the pod @ 09/30/24 12:20:38.095
  STEP: looking for the results for each expected name from probers @ 09/30/24 12:20:38.097
  I0930 12:20:38.101316 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:38.103687 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:38.106002 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:38.108205 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:38.110348 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:38.112514 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:38.114679 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:38.116890 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:38.116923 20 dns_common.go:489] Lookups using dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local]

  I0930 12:20:38.120622 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:20:38.124265 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:20:38.127546 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:20:43.104437 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:43.106895 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:43.109278 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:43.111564 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:43.113839 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:43.116048 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:43.118367 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:43.120650 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:43.120687 20 dns_common.go:489] Lookups using dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local]

  I0930 12:20:43.124837 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:20:43.128168 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:20:43.131446 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:20:48.104384 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:48.106846 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:48.109197 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:48.111606 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:48.113837 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:48.116038 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:48.118398 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:48.120805 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:48.120842 20 dns_common.go:489] Lookups using dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local]

  I0930 12:20:48.124531 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:20:48.127917 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:20:48.131080 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:20:53.104885 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:53.107301 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:53.109558 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:53.111836 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:53.114078 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:53.116298 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:53.118438 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:53.120565 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:53.120626 20 dns_common.go:489] Lookups using dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local]

  I0930 12:20:53.124283 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:20:53.127490 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:20:53.130596 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:20:58.102103 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:58.104463 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:58.106791 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:58.109025 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:58.111340 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:58.113512 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:58.115621 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:58.117782 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:20:58.117819 20 dns_common.go:489] Lookups using dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local]

  I0930 12:20:58.121666 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:20:58.124883 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:20:58.127988 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:21:03.103279 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:21:03.105762 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:21:03.108164 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:21:03.110547 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:21:03.112861 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:21:03.115111 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:21:03.117372 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:21:03.119555 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local from pod dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e: the server could not find the requested resource (get pods dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e)
  I0930 12:21:03.119611 20 dns_common.go:489] Lookups using dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4994.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4994.svc.cluster.local jessie_udp@dns-test-service-2.dns-4994.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4994.svc.cluster.local]

  I0930 12:21:03.123126 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:21:03.126429 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:21:03.129621 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:21:08.119131 20 dns_common.go:527] DNS probes using dns-4994/dns-test-5ec1d132-ebc3-4056-b411-bb66746f901e succeeded

  STEP: deleting the pod @ 09/30/24 12:21:08.119
  STEP: deleting the test headless service @ 09/30/24 12:21:08.13
  I0930 12:21:08.140566 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4994" for this suite. @ 09/30/24 12:21:08.142
• [32.084 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/30/24 12:21:08.146
  I0930 12:21:08.146136 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename namespaces @ 09/30/24 12:21:08.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:08.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:08.157
  STEP: Creating namespace "e2e-ns-8xdjt" @ 09/30/24 12:21:08.159
  I0930 12:21:08.255157 20 namespace.go:411] Namespace "e2e-ns-8xdjt-5678" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-8xdjt-5678" @ 09/30/24 12:21:08.255
  I0930 12:21:08.261632 20 namespace.go:434] Namespace "e2e-ns-8xdjt-5678" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-8xdjt-5678" @ 09/30/24 12:21:08.261
  I0930 12:21:08.266576 20 namespace.go:463] Namespace "e2e-ns-8xdjt-5678" has []v1.FinalizerName{"kubernetes"}
  I0930 12:21:08.266700 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2029" for this suite. @ 09/30/24 12:21:08.268
  STEP: Destroying namespace "e2e-ns-8xdjt-5678" for this suite. @ 09/30/24 12:21:08.273
• [0.131 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/30/24 12:21:08.277
  I0930 12:21:08.277541 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:21:08.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:08.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:08.357
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 12:21:08.36
  STEP: Saw pod success @ 09/30/24 12:21:12.372
  I0930 12:21:12.374458 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-277d996c-cbe6-4ed0-adb6-216889c29fa3 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 12:21:12.378
  I0930 12:21:12.388379 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5256" for this suite. @ 09/30/24 12:21:12.39
• [4.118 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/30/24 12:21:12.395
  I0930 12:21:12.395434 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 12:21:12.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:12.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:12.405
  STEP: Creating secret with name secret-test-a0648843-ee57-4355-8768-fd752fc7b201 @ 09/30/24 12:21:12.408
  STEP: Creating a pod to test consume secrets @ 09/30/24 12:21:12.413
  STEP: Saw pod success @ 09/30/24 12:21:16.425
  I0930 12:21:16.427649 20 output.go:196] Trying to get logs from node worker-0 pod pod-secrets-1dc41368-1153-4b40-a38f-91602f4fc686 container secret-env-test: <nil>
  STEP: delete the pod @ 09/30/24 12:21:16.431
  I0930 12:21:16.440446 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2720" for this suite. @ 09/30/24 12:21:16.442
• [4.052 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/30/24 12:21:16.447
  I0930 12:21:16.447980 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:21:16.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:16.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:16.459
  STEP: Creating projection with secret that has name projected-secret-test-map-9c7b8d52-c7f1-4bef-986f-3f69765f0efa @ 09/30/24 12:21:16.461
  STEP: Creating a pod to test consume secrets @ 09/30/24 12:21:16.465
  STEP: Saw pod success @ 09/30/24 12:21:18.476
  I0930 12:21:18.477827 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-secrets-36404f49-fe3a-4067-a6ac-8afe7873e2fc container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 12:21:18.481
  I0930 12:21:18.492114 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-725" for this suite. @ 09/30/24 12:21:18.494
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/30/24 12:21:18.497
  I0930 12:21:18.497992 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 12:21:18.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:18.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:18.511
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 12:21:18.513
  STEP: Saw pod success @ 09/30/24 12:21:20.523
  I0930 12:21:20.524931 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-ece26ea5-6280-4665-9c74-bad02056b324 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 12:21:20.528
  I0930 12:21:20.540809 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7160" for this suite. @ 09/30/24 12:21:20.542
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/30/24 12:21:20.546
  I0930 12:21:20.546664 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:21:20.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:20.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:20.558
  STEP: Setting up server cert @ 09/30/24 12:21:20.658
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:21:20.905
  STEP: Deploying the webhook pod @ 09/30/24 12:21:20.912
  STEP: Wait for the deployment to be ready @ 09/30/24 12:21:20.92
  I0930 12:21:20.926052 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/30/24 12:21:22.932
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:21:22.94
  I0930 12:21:23.941934 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0930 12:21:23.945696 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9094-crds.webhook.example.com via the AdmissionRegistration API @ 09/30/24 12:21:24.451
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/30/24 12:21:24.464
  I0930 12:21:27.020306 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5918" for this suite. @ 09/30/24 12:21:27.022
  STEP: Destroying namespace "webhook-markers-7678" for this suite. @ 09/30/24 12:21:27.027
• [6.484 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/30/24 12:21:27.031
  I0930 12:21:27.031149 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/30/24 12:21:27.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:27.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:27.041
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/30/24 12:21:27.042
  I0930 12:21:27.043263 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/30/24 12:21:31.93
  I0930 12:21:31.930927 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:21:33.150929 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:21:37.959356 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6687" for this suite. @ 09/30/24 12:21:37.964
• [10.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/30/24 12:21:37.968
  I0930 12:21:37.968274 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename field-validation @ 09/30/24 12:21:37.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:37.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:37.979
  STEP: apply creating a deployment @ 09/30/24 12:21:37.981
  I0930 12:21:37.988679 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6909" for this suite. @ 09/30/24 12:21:38.064
• [0.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/30/24 12:21:38.068
  I0930 12:21:38.068637 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:21:38.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:38.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:38.079
  STEP: creating service endpoint-test2 in namespace services-2782 @ 09/30/24 12:21:38.081
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2782 to expose endpoints map[] @ 09/30/24 12:21:38.091
  I0930 12:21:38.093550 20 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0930 12:21:39.099406 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2782 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2782 @ 09/30/24 12:21:39.099
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2782 to expose endpoints map[pod1:[80]] @ 09/30/24 12:21:41.109
  I0930 12:21:41.115426 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2782 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/30/24 12:21:41.115
  I0930 12:21:41.115486 20 resource.go:361] Creating new exec pod
  I0930 12:21:44.123243 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-2782 exec execpod4dh27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0930 12:21:44.205018 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0930 12:21:44.205062 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:21:44.205144 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-2782 exec execpod4dh27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.187.140 80'
  I0930 12:21:44.293845 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.187.140 80\nConnection to 10.105.187.140 80 port [tcp/http] succeeded!\n"
  I0930 12:21:44.293889 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2782 @ 09/30/24 12:21:44.293
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2782 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/30/24 12:21:46.306
  I0930 12:21:46.313525 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2782 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/30/24 12:21:46.313
  I0930 12:21:47.314565 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-2782 exec execpod4dh27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0930 12:21:47.394205 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0930 12:21:47.394259 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:21:47.394345 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-2782 exec execpod4dh27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.187.140 80'
  I0930 12:21:47.480719 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.187.140 80\nConnection to 10.105.187.140 80 port [tcp/http] succeeded!\n"
  I0930 12:21:47.480769 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2782 @ 09/30/24 12:21:47.48
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2782 to expose endpoints map[pod2:[80]] @ 09/30/24 12:21:47.489
  I0930 12:21:47.496484 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2782 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/30/24 12:21:47.496
  I0930 12:21:48.497276 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-2782 exec execpod4dh27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0930 12:21:48.584355 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0930 12:21:48.584400 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:21:48.584477 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-2782 exec execpod4dh27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.187.140 80'
  I0930 12:21:48.668076 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.187.140 80\nConnection to 10.105.187.140 80 port [tcp/http] succeeded!\n"
  I0930 12:21:48.668120 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2782 @ 09/30/24 12:21:48.668
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2782 to expose endpoints map[] @ 09/30/24 12:21:48.679
  I0930 12:21:48.684969 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-2782 exposes endpoints map[]
  I0930 12:21:48.695744 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2782" for this suite. @ 09/30/24 12:21:48.754
• [10.689 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/30/24 12:21:48.758
  I0930 12:21:48.758018 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename gc @ 09/30/24 12:21:48.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:48.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:48.773
  STEP: create the deployment @ 09/30/24 12:21:48.775
  W0930 12:21:48.779568      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/30/24 12:21:48.779
  STEP: delete the deployment @ 09/30/24 12:21:49.283
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/30/24 12:21:49.289
  STEP: Gathering metrics @ 09/30/24 12:21:49.797
  W0930 12:21:49.799054      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0930 12:21:49.799099 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0930 12:21:49.799245 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7483" for this suite. @ 09/30/24 12:21:49.801
• [1.046 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/30/24 12:21:49.804
  I0930 12:21:49.804178 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:21:49.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:49.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:49.816
  STEP: Setting up server cert @ 09/30/24 12:21:49.914
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:21:50.232
  STEP: Deploying the webhook pod @ 09/30/24 12:21:50.237
  STEP: Wait for the deployment to be ready @ 09/30/24 12:21:50.245
  I0930 12:21:50.250783 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/30/24 12:21:52.257
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:21:52.267
  I0930 12:21:53.267871 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/30/24 12:21:53.271
  I0930 12:21:53.308594 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9364" for this suite. @ 09/30/24 12:21:53.31
  STEP: Destroying namespace "webhook-markers-8381" for this suite. @ 09/30/24 12:21:53.321
• [3.523 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/30/24 12:21:53.327
  I0930 12:21:53.327789 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename runtimeclass @ 09/30/24 12:21:53.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:53.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:53.338
  I0930 12:21:53.344073 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9042" for this suite. @ 09/30/24 12:21:53.412
• [0.090 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/30/24 12:21:53.417
  I0930 12:21:53.417402 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:21:53.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:53.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:53.438
  STEP: Creating configMap with name projected-configmap-test-volume-12802ecd-fdde-44f6-a3be-6ee95f7dcdff @ 09/30/24 12:21:53.44
  STEP: Creating a pod to test consume configMaps @ 09/30/24 12:21:53.445
  STEP: Saw pod success @ 09/30/24 12:21:57.458
  I0930 12:21:57.460154 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-configmaps-85192a89-f9a2-44ae-90b3-fc7cc9576602 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 12:21:57.463
  I0930 12:21:57.475897 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9424" for this suite. @ 09/30/24 12:21:57.477
• [4.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/30/24 12:21:57.481
  I0930 12:21:57.481463 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:21:57.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:21:57.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:21:57.491
  STEP: Setting up server cert @ 09/30/24 12:21:57.593
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:21:57.953
  STEP: Deploying the webhook pod @ 09/30/24 12:21:57.958
  STEP: Wait for the deployment to be ready @ 09/30/24 12:21:57.968
  I0930 12:21:57.972223 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/30/24 12:21:59.978
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:21:59.986
  I0930 12:22:00.986797 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/30/24 12:22:00.99
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/30/24 12:22:01.004
  STEP: Creating a dummy validating-webhook-configuration object @ 09/30/24 12:22:01.017
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/30/24 12:22:01.025
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/30/24 12:22:01.029
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/30/24 12:22:01.034
  I0930 12:22:01.071109 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2332" for this suite. @ 09/30/24 12:22:01.073
  STEP: Destroying namespace "webhook-markers-8193" for this suite. @ 09/30/24 12:22:01.076
• [3.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/30/24 12:22:01.082
  I0930 12:22:01.082469 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename podtemplate @ 09/30/24 12:22:01.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:22:01.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:22:01.092
  I0930 12:22:01.113249 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7837" for this suite. @ 09/30/24 12:22:01.173
• [0.095 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/30/24 12:22:01.177
  I0930 12:22:01.177527 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename svcaccounts @ 09/30/24 12:22:01.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:22:01.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:22:01.195
  STEP: reading a file in the container @ 09/30/24 12:22:03.21
  I0930 12:22:03.211049 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2000 pod-service-account-1adf0e74-36a5-4cd4-b3e0-76c2af7ed262 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/30/24 12:22:03.293
  I0930 12:22:03.293088 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2000 pod-service-account-1adf0e74-36a5-4cd4-b3e0-76c2af7ed262 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/30/24 12:22:03.372
  I0930 12:22:03.373048 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2000 pod-service-account-1adf0e74-36a5-4cd4-b3e0-76c2af7ed262 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0930 12:22:03.459064 20 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-2000"
  I0930 12:22:03.460702 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2000" for this suite. @ 09/30/24 12:22:03.462
• [2.289 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 09/30/24 12:22:03.466
  I0930 12:22:03.466234 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-preemption @ 09/30/24 12:22:03.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:22:03.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:22:03.477
  I0930 12:22:03.488643 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0930 12:23:03.491843 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/30/24 12:23:03.493
  I0930 12:23:03.493947 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/30/24 12:23:03.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:23:03.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:23:03.506
  I0930 12:23:03.517883 20 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0930 12:23:03.520044 20 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0930 12:23:03.554123 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3059" for this suite. @ 09/30/24 12:23:03.592
  I0930 12:23:03.596126 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1680" for this suite. @ 09/30/24 12:23:03.693
• [60.230 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 09/30/24 12:23:03.696
  I0930 12:23:03.696722 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:23:03.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:23:03.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:23:03.708
  STEP: creating service multiprotocol-test in namespace services-52 @ 09/30/24 12:23:03.71
  STEP: creating pod pod1 in namespace services-52 @ 09/30/24 12:23:03.719
  STEP: Creating pod pod1 in namespace services-52 @ 09/30/24 12:23:03.719
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-52 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/30/24 12:23:05.734
  I0930 12:23:05.740082 20 service.go:4392] successfully validated that service multiprotocol-test in namespace services-52 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/30/24 12:23:05.74
  I0930 12:23:05.740149 20 resource.go:361] Creating new exec pod
  I0930 12:23:07.748420 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.225.31 80'
  I0930 12:23:07.829928 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.225.31 80\nConnection to 10.96.225.31 80 port [tcp/http] succeeded!\n"
  I0930 12:23:07.829972 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:23:07.830056 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.225.31 80'
  I0930 12:23:11.910677 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.225.31 80\nConnection to 10.96.225.31 80 port [udp/*] succeeded!\n"
  I0930 12:23:11.910720 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/30/24 12:23:11.91
  I0930 12:23:11.915577 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.225.31 80'
  I0930 12:23:11.999108 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.225.31 80\nConnection to 10.96.225.31 80 port [tcp/http] succeeded!\n"
  I0930 12:23:11.999151 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:23:11.999262 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.225.31 80'
  I0930 12:23:16.081283 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.225.31 80\nConnection to 10.96.225.31 80 port [udp/*] succeeded!\n"
  I0930 12:23:16.081397 20 builder.go:147] stdout: ""
  I0930 12:23:16.081460 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.225.31 80'
  I0930 12:23:20.160926 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.225.31 80\nConnection to 10.96.225.31 80 port [udp/*] succeeded!\n"
  I0930 12:23:20.161058 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/30/24 12:23:20.161
  I0930 12:23:20.166353 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.225.31 80'
  I0930 12:23:24.253561 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.225.31 80\nConnection to 10.96.225.31 80 port [udp/*] succeeded!\n"
  I0930 12:23:24.253686 20 builder.go:147] stdout: "pod1"
  I0930 12:23:24.253784 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.225.31 80'
  I0930 12:23:26.335484 20 builder.go:135] rc: 1
  I0930 12:23:26.335546 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.225.31 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.225.31 80
  nc: connect to 10.96.225.31 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 12:23:26.335748 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.225.31 80'
  I0930 12:23:28.417470 20 builder.go:135] rc: 1
  I0930 12:23:28.417531 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.225.31 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.225.31 80
  nc: connect to 10.96.225.31 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 12:23:28.417614 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.225.31 80'
  I0930 12:23:30.499763 20 builder.go:135] rc: 1
  I0930 12:23:30.499828 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-52 exec execpod7pgvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.225.31 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.225.31 80
  nc: connect to 10.96.225.31 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 12:23:30.499969 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-52" for this suite. @ 09/30/24 12:23:30.502
• [26.809 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/30/24 12:23:30.506
  I0930 12:23:30.506407 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename field-validation @ 09/30/24 12:23:30.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:23:30.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:23:30.517
  STEP: apply creating a deployment @ 09/30/24 12:23:30.519
  I0930 12:23:30.527313 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3997" for this suite. @ 09/30/24 12:23:30.603
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/30/24 12:23:30.606
  I0930 12:23:30.606647 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 12:23:30.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:23:30.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:23:30.619
  STEP: Creating resourceQuota "e2e-rq-status-zrd9w" @ 09/30/24 12:23:30.71
  I0930 12:23:30.715544 20 resource_quota.go:1102] Resource quota "e2e-rq-status-zrd9w" reports spec: hard cpu limit of 500m
  I0930 12:23:30.715577 20 resource_quota.go:1104] Resource quota "e2e-rq-status-zrd9w" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-zrd9w" /status @ 09/30/24 12:23:30.715
  STEP: Confirm /status for "e2e-rq-status-zrd9w" resourceQuota via watch @ 09/30/24 12:23:30.719
  I0930 12:23:30.720932 20 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-zrd9w" in namespace "resourcequota-3523" with hard status: v1.ResourceList(nil)
  I0930 12:23:30.720988 20 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-zrd9w" in namespace "resourcequota-3523" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0930 12:23:30.721003 20 resource_quota.go:1141] ResourceQuota "e2e-rq-status-zrd9w" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/30/24 12:23:30.722
  I0930 12:23:30.727511 20 resource_quota.go:1152] Resource quota "e2e-rq-status-zrd9w" reports spec: hard cpu limit of 1
  I0930 12:23:30.727540 20 resource_quota.go:1153] Resource quota "e2e-rq-status-zrd9w" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-zrd9w" /status @ 09/30/24 12:23:30.727
  STEP: Confirm /status for "e2e-rq-status-zrd9w" resourceQuota via watch @ 09/30/24 12:23:30.732
  I0930 12:23:30.733251 20 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-zrd9w" in namespace "resourcequota-3523" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0930 12:23:30.733292 20 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-zrd9w" in namespace "resourcequota-3523" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0930 12:23:30.733300 20 resource_quota.go:1185] ResourceQuota "e2e-rq-status-zrd9w" /status was patched
  STEP: Get "e2e-rq-status-zrd9w" /status @ 09/30/24 12:23:30.733
  I0930 12:23:30.735265 20 resource_quota.go:1196] Resourcequota "e2e-rq-status-zrd9w" reports status: hard cpu of 1
  I0930 12:23:30.735300 20 resource_quota.go:1198] Resourcequota "e2e-rq-status-zrd9w" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-zrd9w" /status before checking Spec is unchanged @ 09/30/24 12:23:30.736
  I0930 12:23:30.740069 20 resource_quota.go:1218] Resourcequota "e2e-rq-status-zrd9w" reports status: hard cpu of 2
  I0930 12:23:30.740101 20 resource_quota.go:1220] Resourcequota "e2e-rq-status-zrd9w" reports status: hard memory of 2Gi
  I0930 12:23:30.741056 20 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-zrd9w" in namespace "resourcequota-3523" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0930 12:23:30.742634 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d338), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d3b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d3e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:23:35.744487 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004512c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004512cd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004512d20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:23:40.745453 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d620), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d650), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d6b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:23:45.745373 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004512f18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004512fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:23:50.745313 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d818), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d8a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:23:55.744328 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513248), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513290), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513320), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:00.745235 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382da58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382dab8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382dae8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:05.743659 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513578), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40045135a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:10.745725 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453f818), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453f890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453f8f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:15.745032 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513848), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40045138a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513938), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:20.743257 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453faa0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453fb18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453fb78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:25.745413 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513b18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513b48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513ba8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:30.745551 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453fd10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453fd58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453fd88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:35.745798 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453ff20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400453ff50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e030), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:40.744818 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513e48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513ea8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004513f08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:45.744851 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e2d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:50.744900 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40049622d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:24:55.744940 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e5d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:00.745151 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40049624f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40049625a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:05.745299 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e7b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:10.745668 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40049627f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:15.744743 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117e9d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117ea20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117ea50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:20.744797 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962ab0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962b28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962b58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:25.744816 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117ec90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117ed08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400117ed50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:30.743889 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:35.745618 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40049623f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:40.745534 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382c108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382c150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382c1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:45.745623 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40049626d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:50.745574 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382c420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382c5d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382c738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:25:55.745640 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40049629a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962a08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:00.745981 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962c60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:05.744993 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382c9d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382ca80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382cac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:10.745044 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962df8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962e40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004962e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:15.745092 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382cd50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382cdb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382ce58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:20.745312 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004963020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004963068), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40049630b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:25.745522 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d308), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d380), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d3c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:30.745452 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003efa138), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003efa180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003efa1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:35.745426 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d5f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d638), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d668), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:40.744420 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003efa4e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003efa528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003efa5a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:45.744188 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d818), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x400382d8a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:50.745368 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zrd9w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zrd9w", GenerateName:"", Namespace:"resourcequota-3523", SelfLink:"", UID:"7104013e-872d-4716-9b66-bc977bfab4c4", ResourceVersion:"14631", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zrd9w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003efa888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003efa8b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 23, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003efa8e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0930 12:26:55.743212 20 resource_quota.go:1260] ResourceQuota "e2e-rq-status-zrd9w" Spec was unchanged and /status reset
  I0930 12:26:55.743327 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3523" for this suite. @ 09/30/24 12:26:55.745
• [205.142 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/30/24 12:26:55.748
  I0930 12:26:55.748877 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:26:55.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:26:55.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:26:55.758
  STEP: Creating configMap with name projected-configmap-test-volume-map-9f794790-4ac2-4433-abb6-95339a8157d3 @ 09/30/24 12:26:55.76
  STEP: Creating a pod to test consume configMaps @ 09/30/24 12:26:55.763
  STEP: Saw pod success @ 09/30/24 12:26:59.778
  I0930 12:26:59.780246 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-configmaps-a8fb9bc2-9694-4515-b632-1210fcc0b286 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 12:26:59.789
  I0930 12:26:59.798687 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6498" for this suite. @ 09/30/24 12:26:59.8
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/30/24 12:26:59.804
  I0930 12:26:59.804063 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename security-context-test @ 09/30/24 12:26:59.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:26:59.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:26:59.815
  I0930 12:27:03.833487 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6091" for this suite. @ 09/30/24 12:27:03.835
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/30/24 12:27:03.839
  I0930 12:27:03.839338 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/30/24 12:27:03.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:03.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:03.851
  STEP: getting /apis @ 09/30/24 12:27:03.853
  STEP: getting /apis/storage.k8s.io @ 09/30/24 12:27:03.856
  STEP: getting /apis/storage.k8s.io/v1 @ 09/30/24 12:27:03.857
  STEP: creating @ 09/30/24 12:27:03.858
  STEP: watching @ 09/30/24 12:27:03.869
  I0930 12:27:03.869811 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/30/24 12:27:03.874
  STEP: listing in namespace @ 09/30/24 12:27:03.876
  STEP: listing across namespaces @ 09/30/24 12:27:03.877
  STEP: patching @ 09/30/24 12:27:03.879
  STEP: updating @ 09/30/24 12:27:03.882
  I0930 12:27:03.885782 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0930 12:27:03.885851 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/30/24 12:27:03.885
  STEP: deleting a collection @ 09/30/24 12:27:03.891
  I0930 12:27:03.898950 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6105" for this suite. @ 09/30/24 12:27:03.937
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/30/24 12:27:03.943
  I0930 12:27:03.943228 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubelet-test @ 09/30/24 12:27:03.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:03.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:03.954
  I0930 12:27:03.974340 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-294" for this suite. @ 09/30/24 12:27:04.036
• [0.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/30/24 12:27:04.043
  I0930 12:27:04.043268 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pv @ 09/30/24 12:27:04.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:04.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:04.053
  STEP: Creating initial PV and PVC @ 09/30/24 12:27:04.056
  I0930 12:27:04.056150 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1511" @ 09/30/24 12:27:04.066
  STEP: Listing PVCs in namespace "pv-1511" @ 09/30/24 12:27:04.068
  STEP: Reading "pvc-jsxpp" Status @ 09/30/24 12:27:04.07
  STEP: Reading "pv-1511-jg4mr" Status @ 09/30/24 12:27:04.073
  STEP: Patching "pvc-jsxpp" Status @ 09/30/24 12:27:04.076
  STEP: Patching "pv-1511-jg4mr" Status @ 09/30/24 12:27:04.082
  STEP: Updating "pvc-jsxpp" Status @ 09/30/24 12:27:04.09
  STEP: Updating "pv-1511-jg4mr" Status @ 09/30/24 12:27:04.096
  I0930 12:27:04.103726 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0930 12:27:04.103759 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-jsxpp"
  I0930 12:27:04.108537 20 pv.go:193] Deleting PersistentVolume "pv-1511-jg4mr"
  I0930 12:27:04.111950 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1511" for this suite. @ 09/30/24 12:27:04.137
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/30/24 12:27:04.143
  I0930 12:27:04.143036 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-pred @ 09/30/24 12:27:04.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:04.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:04.154
  I0930 12:27:04.156026 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0930 12:27:04.239750 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0930 12:27:04.241511 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0930 12:27:04.245392 20 predicates.go:957] coredns-679c655b6f-fcf5x from kube-system started at 2024-09-30 11:57:06 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.245420 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0930 12:27:04.245428 20 predicates.go:957] konnectivity-agent-spbtv from kube-system started at 2024-09-30 11:56:59 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.245433 20 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0930 12:27:04.245438 20 predicates.go:957] kube-proxy-7phx8 from kube-system started at 2024-09-30 11:56:56 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.245443 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0930 12:27:04.245450 20 predicates.go:957] kube-router-hp7ql from kube-system started at 2024-09-30 11:56:55 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.245454 20 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0930 12:27:04.245460 20 predicates.go:957] alpine-nnp-false-7e1d14aa-b63c-4991-a84b-6bccc289ec7b from security-context-test-6091 started at 2024-09-30 12:26:59 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.245465 20 predicates.go:959] 	Container alpine-nnp-false-7e1d14aa-b63c-4991-a84b-6bccc289ec7b ready: false, restart count 0
  I0930 12:27:04.245470 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-30 11:57:15 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.245476 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0930 12:27:04.245481 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-dtf7x from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 12:27:04.245486 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 12:27:04.245491 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0930 12:27:04.245496 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0930 12:27:04.247569 20 predicates.go:957] coredns-679c655b6f-qx7cq from kube-system started at 2024-09-30 11:57:41 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.247616 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0930 12:27:04.247627 20 predicates.go:957] konnectivity-agent-nmhq8 from kube-system started at 2024-09-30 11:56:59 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.247633 20 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0930 12:27:04.247639 20 predicates.go:957] kube-proxy-2dptv from kube-system started at 2024-09-30 11:56:56 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.247645 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0930 12:27:04.247651 20 predicates.go:957] kube-router-cc52w from kube-system started at 2024-09-30 11:56:55 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.247656 20 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0930 12:27:04.247662 20 predicates.go:957] metrics-server-78c4ccbc7f-w5v8q from kube-system started at 2024-09-30 11:57:04 +0000 UTC (1 container statuses recorded)
  I0930 12:27:04.247667 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0930 12:27:04.247674 20 predicates.go:957] sonobuoy-e2e-job-6bbffb04e0e746b5 from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 12:27:04.247679 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0930 12:27:04.247683 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 12:27:04.247689 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-jq8fj from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 12:27:04.247694 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 12:27:04.247708 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/30/24 12:27:04.247
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/30/24 12:27:06.258
  STEP: Trying to apply a random label on the found node. @ 09/30/24 12:27:06.265
  STEP: verifying the node has the label kubernetes.io/e2e-22070cba-5841-4714-9a49-44fb511c2f89 42 @ 09/30/24 12:27:06.272
  STEP: Trying to relaunch the pod, now with labels. @ 09/30/24 12:27:06.274
  STEP: removing the label kubernetes.io/e2e-22070cba-5841-4714-9a49-44fb511c2f89 off the node worker-0 @ 09/30/24 12:27:08.284
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-22070cba-5841-4714-9a49-44fb511c2f89 @ 09/30/24 12:27:08.292
  I0930 12:27:08.294129 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6572" for this suite. @ 09/30/24 12:27:08.295
• [4.158 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/30/24 12:27:08.3
  I0930 12:27:08.300983 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/30/24 12:27:08.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:08.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:08.313
  STEP: create the container to handle the HTTPGet hook request. @ 09/30/24 12:27:08.317
  STEP: create the pod with lifecycle hook @ 09/30/24 12:27:10.33
  STEP: delete the pod with lifecycle hook @ 09/30/24 12:27:12.339
  STEP: check prestop hook @ 09/30/24 12:27:14.349
  I0930 12:27:14.353778 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4310" for this suite. @ 09/30/24 12:27:14.356
• [6.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 09/30/24 12:27:14.359
  I0930 12:27:14.359549 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:27:14.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:14.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:14.371
  STEP: creating an Endpoint @ 09/30/24 12:27:14.375
  STEP: waiting for available Endpoint @ 09/30/24 12:27:14.378
  STEP: listing all Endpoints @ 09/30/24 12:27:14.379
  STEP: updating the Endpoint @ 09/30/24 12:27:14.381
  STEP: fetching the Endpoint @ 09/30/24 12:27:14.385
  STEP: patching the Endpoint @ 09/30/24 12:27:14.387
  STEP: fetching the Endpoint @ 09/30/24 12:27:14.394
  STEP: deleting the Endpoint by Collection @ 09/30/24 12:27:14.396
  STEP: waiting for Endpoint deletion @ 09/30/24 12:27:14.4
  STEP: fetching the Endpoint @ 09/30/24 12:27:14.401
  I0930 12:27:14.402890 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9917" for this suite. @ 09/30/24 12:27:14.456
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/30/24 12:27:14.459
  I0930 12:27:14.459828 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename disruption @ 09/30/24 12:27:14.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:14.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:14.472
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/30/24 12:27:14.474
  STEP: Waiting for the pdb to be processed @ 09/30/24 12:27:14.477
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/30/24 12:27:16.483
  STEP: Waiting for all pods to be running @ 09/30/24 12:27:16.483
  I0930 12:27:16.490552 20 disruption.go:680] pods: 1 < 3
  STEP: locating a running pod @ 09/30/24 12:27:18.487
  STEP: Updating the pdb to allow a pod to be evicted @ 09/30/24 12:27:18.492
  STEP: Waiting for the pdb to be processed @ 09/30/24 12:27:18.498
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/30/24 12:27:20.501
  STEP: Waiting for all pods to be running @ 09/30/24 12:27:20.501
  STEP: Waiting for the pdb to observed all healthy pods @ 09/30/24 12:27:20.503
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/30/24 12:27:20.519
  STEP: Waiting for the pdb to be processed @ 09/30/24 12:27:20.529
  STEP: Waiting for all pods to be running @ 09/30/24 12:27:22.532
  STEP: locating a running pod @ 09/30/24 12:27:22.534
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/30/24 12:27:22.539
  STEP: Waiting for the pdb to be deleted @ 09/30/24 12:27:22.542
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/30/24 12:27:22.543
  STEP: Waiting for all pods to be running @ 09/30/24 12:27:22.543
  I0930 12:27:22.644250 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3966" for this suite. @ 09/30/24 12:27:22.646
• [8.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/30/24 12:27:22.654
  I0930 12:27:22.654112 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-runtime @ 09/30/24 12:27:22.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:22.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:22.669
  STEP: create the container @ 09/30/24 12:27:22.671
  W0930 12:27:22.676358      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/30/24 12:27:22.676
  STEP: get the container status @ 09/30/24 12:27:25.686
  STEP: the container should be terminated @ 09/30/24 12:27:25.688
  STEP: the termination message should be set @ 09/30/24 12:27:25.688
  I0930 12:27:25.688375 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/30/24 12:27:25.688
  I0930 12:27:25.698657 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3450" for this suite. @ 09/30/24 12:27:25.7
• [3.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/30/24 12:27:25.706
  I0930 12:27:25.706038 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sysctl @ 09/30/24 12:27:25.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:25.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:25.715
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/30/24 12:27:25.717
  STEP: Watching for error events or started pod @ 09/30/24 12:27:25.723
  STEP: Waiting for pod completion @ 09/30/24 12:27:27.726
  STEP: Checking that the pod succeeded @ 09/30/24 12:27:29.733
  STEP: Getting logs from the pod @ 09/30/24 12:27:29.733
  STEP: Checking that the sysctl is actually updated @ 09/30/24 12:27:29.743
  I0930 12:27:29.743744 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5845" for this suite. @ 09/30/24 12:27:29.745
• [4.045 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/30/24 12:27:29.751
  I0930 12:27:29.751331 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename init-container @ 09/30/24 12:27:29.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:29.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:29.761
  STEP: creating the pod @ 09/30/24 12:27:29.763
  I0930 12:27:29.763444 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0930 12:27:33.010522 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3309" for this suite. @ 09/30/24 12:27:33.013
• [3.266 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/30/24 12:27:33.017
  I0930 12:27:33.017291 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 12:27:33.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:33.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:33.028
  STEP: creating secret secrets-2012/secret-test-8dc11936-0c41-4155-83c1-1179fedba9d9 @ 09/30/24 12:27:33.03
  STEP: Creating a pod to test consume secrets @ 09/30/24 12:27:33.033
  STEP: Saw pod success @ 09/30/24 12:27:35.043
  I0930 12:27:35.044772 20 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-344ba80b-bf16-4b6e-ad45-546ba3ee8bc7 container env-test: <nil>
  STEP: delete the pod @ 09/30/24 12:27:35.049
  I0930 12:27:35.062049 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2012" for this suite. @ 09/30/24 12:27:35.064
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/30/24 12:27:35.068
  I0930 12:27:35.068154 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 12:27:35.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:27:35.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:27:35.08
  STEP: Creating pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949 @ 09/30/24 12:27:35.082
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/30/24 12:27:37.093
  I0930 12:27:37.094730 20 container_probe.go:1749] Initial restart count of pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 is 0
  I0930 12:27:37.096277 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:39.099406 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:41.101666 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:43.104753 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:45.107011 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:47.110175 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:49.113328 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:51.115599 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:53.118880 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:55.122092 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:57.125145 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:27:59.127689 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:01.130835 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:03.134153 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:05.137057 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:07.139878 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:09.143019 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:11.146103 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:13.149569 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:15.153648 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:17.156737 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:19.159962 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:21.163200 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:23.165633 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:25.169658 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:27.172816 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:29.175893 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:31.179032 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:33.181393 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:35.184311 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:37.187543 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:39.190795 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:41.193665 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:43.197031 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:45.200701 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:47.203858 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:49.206722 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:51.209818 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:53.213059 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:55.215306 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:57.218490 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:28:59.221520 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:01.224723 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:03.227140 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:05.230213 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:07.232622 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:09.235731 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:11.237950 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:13.241377 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:15.244577 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:17.247796 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:19.250817 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:21.253031 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:23.256316 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:25.259617 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:27.262928 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:29.265899 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:31.268409 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:33.271770 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:35.273864 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:37.277010 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:39.279730 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:41.281855 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:43.285101 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:45.288261 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:47.291419 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:49.294491 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:51.297678 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:53.300955 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:55.303139 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:57.306136 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:29:59.309083 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:01.312090 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:03.315419 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:05.317672 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:07.320804 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:09.323761 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:11.326863 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:13.330232 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:15.332430 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:17.335617 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:19.338734 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:21.340954 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:23.343963 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:25.346205 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:27.348406 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:29.350599 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:31.353776 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:33.357104 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:35.360102 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:37.363325 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:39.366341 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:41.369485 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:43.372059 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:45.375310 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:47.378467 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:49.380905 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:51.383636 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:53.386826 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:55.390041 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:57.393010 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:30:59.396037 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:01.399144 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:03.402181 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:05.405322 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:07.407517 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:09.410616 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:11.413814 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:13.417170 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:15.420211 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:17.423450 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:19.425880 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:21.429041 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:23.432145 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:25.435080 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:27.438213 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:29.440913 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:31.443370 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:33.446676 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  I0930 12:31:35.449526 20 container_probe.go:1759] Get pod test-grpc-8b97013c-735c-4d42-9fdc-36de8ab327d1 in namespace container-probe-2949
  STEP: deleting the pod @ 09/30/24 12:31:37.45
  I0930 12:31:37.460732 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2949" for this suite. @ 09/30/24 12:31:37.463
• [242.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/30/24 12:31:37.468
  I0930 12:31:37.468715 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename prestop @ 09/30/24 12:31:37.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:31:37.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:31:37.479
  STEP: Creating server pod server in namespace prestop-6751 @ 09/30/24 12:31:37.481
  STEP: Waiting for pods to come up. @ 09/30/24 12:31:37.487
  STEP: Creating tester pod tester in namespace prestop-6751 @ 09/30/24 12:31:39.495
  STEP: Deleting pre-stop pod @ 09/30/24 12:31:41.505
  I0930 12:31:46.517058 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/30/24 12:31:46.517
  I0930 12:31:46.527066 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6751" for this suite. @ 09/30/24 12:31:46.529
• [9.064 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/30/24 12:31:46.532
  I0930 12:31:46.532749 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename containers @ 09/30/24 12:31:46.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:31:46.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:31:46.544
  STEP: Creating a pod to test override command @ 09/30/24 12:31:46.546
  STEP: Saw pod success @ 09/30/24 12:31:48.555
  I0930 12:31:48.557620 20 output.go:196] Trying to get logs from node worker-0 pod client-containers-ee6dea8d-4ea6-46cb-a5f5-ad47b919b5ca container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 12:31:48.566
  I0930 12:31:48.574466 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5746" for this suite. @ 09/30/24 12:31:48.576
• [2.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/30/24 12:31:48.579
  I0930 12:31:48.579792 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubelet-test @ 09/30/24 12:31:48.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:31:48.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:31:48.592
  STEP: Waiting for pod completion @ 09/30/24 12:31:48.601
  I0930 12:31:50.610539 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9003" for this suite. @ 09/30/24 12:31:50.612
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/30/24 12:31:50.616
  I0930 12:31:50.616357 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 12:31:50.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:31:50.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:31:50.628
  STEP: Counting existing ResourceQuota @ 09/30/24 12:31:50.63
  STEP: Creating a ResourceQuota @ 09/30/24 12:31:55.632
  STEP: Ensuring resource quota status is calculated @ 09/30/24 12:31:55.637
  STEP: Creating a Service @ 09/30/24 12:31:57.64
  STEP: Creating a NodePort Service @ 09/30/24 12:31:57.654
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/30/24 12:31:57.67
  STEP: Ensuring resource quota status captures service creation @ 09/30/24 12:31:57.686
  STEP: Deleting Services @ 09/30/24 12:31:59.688
  STEP: Ensuring resource quota status released usage @ 09/30/24 12:31:59.711
  I0930 12:32:01.714893 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3279" for this suite. @ 09/30/24 12:32:01.717
• [11.104 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/30/24 12:32:01.72
  I0930 12:32:01.720670 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 12:32:01.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:32:01.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:32:01.731
  STEP: creating the pod @ 09/30/24 12:32:01.733
  STEP: setting up watch @ 09/30/24 12:32:01.733
  STEP: submitting the pod to kubernetes @ 09/30/24 12:32:01.835
  STEP: verifying the pod is in kubernetes @ 09/30/24 12:32:01.841
  STEP: verifying pod creation was observed @ 09/30/24 12:32:01.842
  STEP: deleting the pod gracefully @ 09/30/24 12:32:03.85
  STEP: verifying pod deletion was observed @ 09/30/24 12:32:03.854
  I0930 12:32:04.413718 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5284" for this suite. @ 09/30/24 12:32:04.415
• [2.698 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 09/30/24 12:32:04.419
  I0930 12:32:04.419304 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-preemption @ 09/30/24 12:32:04.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:32:04.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:32:04.431
  I0930 12:32:04.443798 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0930 12:33:04.446652 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/30/24 12:33:04.448
  I0930 12:33:04.475998 20 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0930 12:33:04.485500 20 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0930 12:33:04.503549 20 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0930 12:33:04.509310 20 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/30/24 12:33:04.509
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/30/24 12:33:06.518
  I0930 12:33:10.557151 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2022" for this suite. @ 09/30/24 12:33:10.559
• [66.145 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/30/24 12:33:10.564
  I0930 12:33:10.564430 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 12:33:10.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:33:10.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:33:10.574
  STEP: Creating configMap with name configmap-test-volume-dbba40a2-8214-4a5e-8ed1-87137640c22a @ 09/30/24 12:33:10.576
  STEP: Creating a pod to test consume configMaps @ 09/30/24 12:33:10.581
  STEP: Saw pod success @ 09/30/24 12:33:12.591
  I0930 12:33:12.593494 20 output.go:196] Trying to get logs from node worker-0 pod pod-configmaps-6da392be-4cc3-472b-b38c-551cd7a8e442 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 12:33:12.599
  I0930 12:33:12.608388 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2265" for this suite. @ 09/30/24 12:33:12.61
• [2.050 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/30/24 12:33:12.614
  I0930 12:33:12.614307 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/30/24 12:33:12.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:33:12.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:33:12.626
  STEP: creating a target pod @ 09/30/24 12:33:12.628
  STEP: adding an ephemeral container @ 09/30/24 12:33:14.639
  STEP: checking pod container endpoints @ 09/30/24 12:33:16.653
  I0930 12:33:16.654015 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6739 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:33:16.654032 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:33:16.654461 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:33:16.654515 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-6739/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0930 12:33:16.693530 20 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/30/24 12:33:16.699
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/30/24 12:33:16.701
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/30/24 12:33:16.709
  I0930 12:33:16.711650 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6739" for this suite. @ 09/30/24 12:33:16.713
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/30/24 12:33:16.718
  I0930 12:33:16.718840 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:33:16.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:33:16.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:33:16.728
  STEP: creating all guestbook components @ 09/30/24 12:33:16.73
  I0930 12:33:16.730726 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0930 12:33:16.730799 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 create -f -'
  I0930 12:33:16.826819 20 builder.go:146] stderr: ""
  I0930 12:33:16.826869 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0930 12:33:16.826911 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0930 12:33:16.826987 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 create -f -'
  I0930 12:33:16.920494 20 builder.go:146] stderr: ""
  I0930 12:33:16.920535 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0930 12:33:16.920576 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0930 12:33:16.920669 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 create -f -'
  I0930 12:33:17.015831 20 builder.go:146] stderr: ""
  I0930 12:33:17.015872 20 builder.go:147] stdout: "service/frontend created\n"
  I0930 12:33:17.015930 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0930 12:33:17.016035 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 create -f -'
  I0930 12:33:17.084726 20 builder.go:146] stderr: ""
  I0930 12:33:17.084768 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0930 12:33:17.084827 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0930 12:33:17.084930 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 create -f -'
  I0930 12:33:17.153821 20 builder.go:146] stderr: ""
  I0930 12:33:17.153865 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0930 12:33:17.154033 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0930 12:33:17.154180 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 create -f -'
  I0930 12:33:17.226831 20 builder.go:146] stderr: ""
  I0930 12:33:17.226877 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/30/24 12:33:17.226
  I0930 12:33:17.226913 20 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I0930 12:33:22.280744 20 kubectl.go:2276] Waiting for frontend to serve content.
  I0930 12:33:22.287682 20 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0930 12:33:22.293917 20 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/30/24 12:33:22.3
  I0930 12:33:22.300239 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 delete --grace-period=0 --force -f -'
  I0930 12:33:22.356249 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0930 12:33:22.356365 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/30/24 12:33:22.356
  I0930 12:33:22.356480 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 delete --grace-period=0 --force -f -'
  I0930 12:33:22.411298 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0930 12:33:22.411424 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/30/24 12:33:22.411
  I0930 12:33:22.411547 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 delete --grace-period=0 --force -f -'
  I0930 12:33:22.465354 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0930 12:33:22.465395 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/30/24 12:33:22.465
  I0930 12:33:22.465526 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 delete --grace-period=0 --force -f -'
  I0930 12:33:22.512991 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0930 12:33:22.513039 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/30/24 12:33:22.513
  I0930 12:33:22.513159 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 delete --grace-period=0 --force -f -'
  I0930 12:33:22.566404 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0930 12:33:22.566445 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/30/24 12:33:22.566
  I0930 12:33:22.566591 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-6440 delete --grace-period=0 --force -f -'
  I0930 12:33:22.623888 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0930 12:33:22.624018 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0930 12:33:22.624119 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6440" for this suite. @ 09/30/24 12:33:22.626
• [5.911 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/30/24 12:33:22.629
  I0930 12:33:22.629668 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename var-expansion @ 09/30/24 12:33:22.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:33:22.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:33:22.643
  I0930 12:33:24.659947 20 delete.go:62] Deleting pod "var-expansion-a48ebc85-eb7f-4aba-a614-c5f96839ea86" in namespace "var-expansion-8052"
  I0930 12:33:24.665434 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-a48ebc85-eb7f-4aba-a614-c5f96839ea86" to be fully deleted
  I0930 12:33:26.670337 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8052" for this suite. @ 09/30/24 12:33:26.672
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 09/30/24 12:33:26.676
  I0930 12:33:26.676607 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename statefulset @ 09/30/24 12:33:26.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:33:26.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:33:26.688
  STEP: Creating service test in namespace statefulset-7603 @ 09/30/24 12:33:26.69
  STEP: Creating a new StatefulSet @ 09/30/24 12:33:26.694
  I0930 12:33:26.703099 20 wait.go:40] Found 0 stateful pods, waiting for 3
  I0930 12:33:36.705490 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0930 12:33:36.705530 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0930 12:33:36.705538 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/30/24 12:33:36.71
  I0930 12:33:36.715572 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/30/24 12:33:36.715
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/30/24 12:33:46.72
  STEP: Performing a canary update @ 09/30/24 12:33:46.72
  I0930 12:33:46.727482 20 statefulset.go:2507] Updating stateful set ss2
  I0930 12:33:46.731555 20 wait.go:74] Waiting for Pod statefulset-7603/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/30/24 12:33:56.734
  I0930 12:33:56.760252 20 wait.go:40] Found 2 stateful pods, waiting for 3
  I0930 12:34:06.760870 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0930 12:34:06.760912 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0930 12:34:06.760921 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/30/24 12:34:06.764
  I0930 12:34:06.771249 20 statefulset.go:2507] Updating stateful set ss2
  I0930 12:34:06.777274 20 wait.go:74] Waiting for Pod statefulset-7603/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0930 12:34:16.782895 20 statefulset.go:2507] Updating stateful set ss2
  I0930 12:34:16.788807 20 wait.go:56] Waiting for StatefulSet statefulset-7603/ss2 to complete update
  I0930 12:34:16.788848 20 wait.go:63] Waiting for Pod statefulset-7603/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0930 12:34:26.790124 20 statefulset.go:138] Deleting all statefulset in ns statefulset-7603
  I0930 12:34:26.791884 20 rest.go:150] Scaling statefulset ss2 to 0
  I0930 12:34:36.799821 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0930 12:34:36.801517 20 rest.go:88] Deleting statefulset ss2
  I0930 12:34:36.808493 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7603" for this suite. @ 09/30/24 12:34:36.81
• [70.140 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/30/24 12:34:36.816
  I0930 12:34:36.816488 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 12:34:36.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:34:36.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:34:36.826
  STEP: Creating configMap with name configmap-test-volume-ab257a7c-58d6-4b74-8074-437a7f859fa3 @ 09/30/24 12:34:36.828
  STEP: Creating a pod to test consume configMaps @ 09/30/24 12:34:36.831
  STEP: Saw pod success @ 09/30/24 12:34:38.841
  I0930 12:34:38.842812 20 output.go:196] Trying to get logs from node worker-0 pod pod-configmaps-457552ce-7451-4bff-b08e-1b4753eed613 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 12:34:38.846
  I0930 12:34:38.856988 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-153" for this suite. @ 09/30/24 12:34:38.859
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 09/30/24 12:34:38.864
  I0930 12:34:38.864278 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename dns @ 09/30/24 12:34:38.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:34:38.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:34:38.874
  STEP: Creating a test headless service @ 09/30/24 12:34:38.876
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8839.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8839.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8839.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8839.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8839.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8839.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8839.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8839.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8839.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 214.205.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.205.214_udp@PTR;check="$$(dig +tcp +noall +answer +search 214.205.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.205.214_tcp@PTR;sleep 1; done
   @ 09/30/24 12:34:38.89
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8839.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8839.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8839.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8839.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8839.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8839.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8839.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8839.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8839.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8839.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 214.205.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.205.214_udp@PTR;check="$$(dig +tcp +noall +answer +search 214.205.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.205.214_tcp@PTR;sleep 1; done
   @ 09/30/24 12:34:38.89
  STEP: creating a pod to probe DNS @ 09/30/24 12:34:38.89
  STEP: submitting the pod to kubernetes @ 09/30/24 12:34:38.89
  STEP: retrieving the pod @ 09/30/24 12:34:40.902
  STEP: looking for the results for each expected name from probers @ 09/30/24 12:34:40.904
  I0930 12:34:40.908501 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:40.910949 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:40.913331 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:40.915514 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:40.926758 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:40.929062 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:40.931407 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:40.933755 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:40.942517 20 dns_common.go:489] Lookups using dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef failed for: [wheezy_udp@dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_udp@dns-test-service.dns-8839.svc.cluster.local jessie_tcp@dns-test-service.dns-8839.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local]

  I0930 12:34:40.946103 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:34:40.949553 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:34:40.952987 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:34:45.909968 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:45.912624 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:45.915014 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:45.917457 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:45.928729 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:45.930953 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:45.933141 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:45.935470 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:45.944049 20 dns_common.go:489] Lookups using dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef failed for: [wheezy_udp@dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_udp@dns-test-service.dns-8839.svc.cluster.local jessie_tcp@dns-test-service.dns-8839.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local]

  I0930 12:34:45.947651 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:34:45.953231 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:34:45.956879 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:34:50.908066 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:50.910496 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:50.912752 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:50.915096 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:50.926738 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:50.929000 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:50.931206 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:50.933667 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:50.942956 20 dns_common.go:489] Lookups using dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef failed for: [wheezy_udp@dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_udp@dns-test-service.dns-8839.svc.cluster.local jessie_tcp@dns-test-service.dns-8839.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local]

  I0930 12:34:50.946649 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:34:50.950086 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:34:50.953535 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:34:55.909475 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:55.911975 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:55.914272 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:55.916534 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:55.927954 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:55.930365 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:55.932620 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:55.934843 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:34:55.943338 20 dns_common.go:489] Lookups using dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef failed for: [wheezy_udp@dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_udp@dns-test-service.dns-8839.svc.cluster.local jessie_tcp@dns-test-service.dns-8839.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local]

  I0930 12:34:55.946933 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:34:55.950381 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:34:55.955980 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:35:00.908714 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:00.911209 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:00.913600 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:00.915936 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:00.927256 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:00.929505 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:00.931823 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:00.934041 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:00.942689 20 dns_common.go:489] Lookups using dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef failed for: [wheezy_udp@dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_udp@dns-test-service.dns-8839.svc.cluster.local jessie_tcp@dns-test-service.dns-8839.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local]

  I0930 12:35:00.946153 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:35:00.949413 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:35:00.952613 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:35:05.909310 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:05.911845 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:05.914387 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:05.916726 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:05.929135 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:05.931466 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:05.933880 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:05.936300 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local from pod dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef: the server could not find the requested resource (get pods dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef)
  I0930 12:35:05.945510 20 dns_common.go:489] Lookups using dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef failed for: [wheezy_udp@dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@dns-test-service.dns-8839.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_udp@dns-test-service.dns-8839.svc.cluster.local jessie_tcp@dns-test-service.dns-8839.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8839.svc.cluster.local]

  I0930 12:35:05.949351 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 12:35:05.952948 20 dns_common.go:495] Pod client logs for querier: 
  I0930 12:35:05.956359 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0930 12:35:10.945309 20 dns_common.go:527] DNS probes using dns-8839/dns-test-5b42aa80-c1e4-4a48-b5e5-4c83598455ef succeeded

  STEP: deleting the pod @ 09/30/24 12:35:10.945
  STEP: deleting the test service @ 09/30/24 12:35:10.954
  STEP: deleting the test headless service @ 09/30/24 12:35:10.973
  I0930 12:35:10.979020 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8839" for this suite. @ 09/30/24 12:35:10.981
• [32.121 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 09/30/24 12:35:10.984
  I0930 12:35:10.984906 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:35:10.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:35:10.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:35:10.997
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/30/24 12:35:10.999
  I0930 12:35:10.999283 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-9113 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0930 12:35:11.052012 20 builder.go:146] stderr: ""
  I0930 12:35:11.052056 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/30/24 12:35:11.052
  I0930 12:35:11.052143 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-9113 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0930 12:35:11.103257 20 builder.go:146] stderr: ""
  I0930 12:35:11.103297 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/30/24 12:35:11.103
  I0930 12:35:11.105106 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-9113 delete pods e2e-test-httpd-pod'
  I0930 12:35:12.769502 20 builder.go:146] stderr: ""
  I0930 12:35:12.769543 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0930 12:35:12.769718 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9113" for this suite. @ 09/30/24 12:35:12.772
• [1.792 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 09/30/24 12:35:12.776
  I0930 12:35:12.776911 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-preemption @ 09/30/24 12:35:12.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:35:12.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:35:12.788
  I0930 12:35:12.799251 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0930 12:36:12.802136 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/30/24 12:36:12.804
  I0930 12:36:12.804043 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/30/24 12:36:12.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:36:12.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:36:12.814
  STEP: Finding an available node @ 09/30/24 12:36:12.815
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/30/24 12:36:12.815
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/30/24 12:36:14.83
  I0930 12:36:14.838944 20 preemption.go:585] found a healthy node: worker-0
  I0930 12:36:20.880320 20 preemption.go:708] pods created so far: [1 1 1]
  I0930 12:36:20.880355 20 preemption.go:709] length of pods created so far: 3
  I0930 12:36:22.886535 20 preemption.go:726] pods created so far: [2 2 1]
  I0930 12:36:29.928262 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7888" for this suite. @ 09/30/24 12:36:29.93
  I0930 12:36:29.933230 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8367" for this suite. @ 09/30/24 12:36:29.935
• [77.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/30/24 12:36:29.94
  I0930 12:36:29.940513 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:36:29.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:36:29.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:36:29.95
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/30/24 12:36:29.952
  STEP: Saw pod success @ 09/30/24 12:36:31.963
  I0930 12:36:31.965651 20 output.go:196] Trying to get logs from node worker-1 pod pod-99240275-280a-4fdd-b0cd-a6503d88db49 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:36:31.975
  I0930 12:36:31.987897 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9534" for this suite. @ 09/30/24 12:36:31.989
• [2.056 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/30/24 12:36:31.996
  I0930 12:36:31.996744 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/30/24 12:36:31.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:36:32.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:36:32.01
  I0930 12:36:32.011992 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:36:38.132677 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6618" for this suite. @ 09/30/24 12:36:38.134
• [6.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/30/24 12:36:38.138
  I0930 12:36:38.138480 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename daemonsets @ 09/30/24 12:36:38.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:36:38.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:36:38.151
  I0930 12:36:38.240850 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0930 12:36:38.244187 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0930 12:36:38.338884 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 12:36:38.338923 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:36:39.248888 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0930 12:36:39.248928 20 fixtures.go:130] Node worker-1 is running 0 daemon pod, expected 1
  I0930 12:36:40.248929 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0930 12:36:40.248968 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0930 12:36:40.248987 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0930 12:36:40.256255 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0930 12:36:41.262563 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0930 12:36:41.267832 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0930 12:36:41.267866 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0930 12:36:44.270326 20 daemon_set.go:1198] Pod daemon-set-prlc4 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/30/24 12:36:44.277
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8882, will wait for the garbage collector to delete the pods @ 09/30/24 12:36:44.277
  I0930 12:36:44.332746 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.473435ms
  I0930 12:36:44.433721 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.970219ms
  I0930 12:36:45.636420 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 12:36:45.636458 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0930 12:36:45.638270 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18167"},"items":null}

  I0930 12:36:45.639722 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18167"},"items":null}

  I0930 12:36:45.644626 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8882" for this suite. @ 09/30/24 12:36:45.646
• [7.511 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/30/24 12:36:45.649
  I0930 12:36:45.649896 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename gc @ 09/30/24 12:36:45.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:36:45.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:36:45.663
  STEP: create the deployment @ 09/30/24 12:36:45.665
  W0930 12:36:45.669216      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/30/24 12:36:45.669
  STEP: delete the deployment @ 09/30/24 12:36:46.171
  STEP: wait for all rs to be garbage collected @ 09/30/24 12:36:46.175
  STEP: expected 0 pods, got 2 pods @ 09/30/24 12:36:46.177
  STEP: Gathering metrics @ 09/30/24 12:36:46.681
  W0930 12:36:46.683774      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0930 12:36:46.683814 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0930 12:36:46.683964 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3882" for this suite. @ 09/30/24 12:36:46.686
• [1.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/30/24 12:36:46.69
  I0930 12:36:46.690249 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename namespaces @ 09/30/24 12:36:46.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:36:46.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:36:46.703
  STEP: Read namespace status @ 09/30/24 12:36:46.704
  I0930 12:36:46.706914 20 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/30/24 12:36:46.706
  I0930 12:36:46.710464 20 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/30/24 12:36:46.71
  I0930 12:36:46.717681 20 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0930 12:36:46.717793 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5122" for this suite. @ 09/30/24 12:36:46.787
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/30/24 12:36:46.79
  I0930 12:36:46.790719 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:36:46.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:36:46.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:36:46.802
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/30/24 12:36:46.804
  STEP: Saw pod success @ 09/30/24 12:36:50.817
  I0930 12:36:50.818956 20 output.go:196] Trying to get logs from node worker-0 pod pod-94b60dac-4b68-4067-8ac9-6e50b91d1872 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:36:50.827
  I0930 12:36:50.840443 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-621" for this suite. @ 09/30/24 12:36:50.842
• [4.055 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/30/24 12:36:50.845
  I0930 12:36:50.845959 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:36:50.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:36:50.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:36:50.871
  STEP: creating service in namespace services-3744 @ 09/30/24 12:36:50.873
  STEP: creating service affinity-clusterip-transition in namespace services-3744 @ 09/30/24 12:36:50.874
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3744 @ 09/30/24 12:36:50.883
  I0930 12:36:50.888417      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-3744, replica count: 3
  I0930 12:36:53.939642      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:36:53.942851 20 resource.go:361] Creating new exec pod
  I0930 12:36:56.951167 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3744 exec execpod-affinitys4j5f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0930 12:36:57.029841 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0930 12:36:57.029887 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:36:57.029972 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3744 exec execpod-affinitys4j5f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.13.230 80'
  I0930 12:36:57.112376 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.13.230 80\nConnection to 10.96.13.230 80 port [tcp/http] succeeded!\n"
  I0930 12:36:57.112420 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:36:57.118246 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3744 exec execpod-affinitys4j5f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.13.230:80/ ; done'
  I0930 12:36:57.247653 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n"
  I0930 12:36:57.247766 20 builder.go:147] stdout: "\naffinity-clusterip-transition-jxtcw\naffinity-clusterip-transition-jxtcw\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-qjcdn\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-jxtcw\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-jxtcw\naffinity-clusterip-transition-qjcdn\naffinity-clusterip-transition-jxtcw\naffinity-clusterip-transition-lmg7w"
  I0930 12:36:57.247780 20 service.go:242] Received response from host: affinity-clusterip-transition-jxtcw
  I0930 12:36:57.247788 20 service.go:242] Received response from host: affinity-clusterip-transition-jxtcw
  I0930 12:36:57.247794 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.247799 20 service.go:242] Received response from host: affinity-clusterip-transition-qjcdn
  I0930 12:36:57.247807 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.247812 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.247817 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.247823 20 service.go:242] Received response from host: affinity-clusterip-transition-jxtcw
  I0930 12:36:57.247830 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.247835 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.247842 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.247848 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.247853 20 service.go:242] Received response from host: affinity-clusterip-transition-jxtcw
  I0930 12:36:57.247859 20 service.go:242] Received response from host: affinity-clusterip-transition-qjcdn
  I0930 12:36:57.247864 20 service.go:242] Received response from host: affinity-clusterip-transition-jxtcw
  I0930 12:36:57.247869 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.255540 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3744 exec execpod-affinitys4j5f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.13.230:80/ ; done'
  I0930 12:36:57.387094 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.13.230:80/\n"
  I0930 12:36:57.387146 20 builder.go:147] stdout: "\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w\naffinity-clusterip-transition-lmg7w"
  I0930 12:36:57.387158 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387167 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387177 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387182 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387188 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387194 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387199 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387204 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387210 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387217 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387223 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387229 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387235 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387241 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387255 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387260 20 service.go:242] Received response from host: affinity-clusterip-transition-lmg7w
  I0930 12:36:57.387332 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3744, will wait for the garbage collector to delete the pods @ 09/30/24 12:36:57.394
  I0930 12:36:57.450916 20 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 3.574781ms
  I0930 12:36:57.551880 20 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.946666ms
  I0930 12:37:00.063321 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3744" for this suite. @ 09/30/24 12:37:00.065
• [9.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/30/24 12:37:00.071
  I0930 12:37:00.071104 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 12:37:00.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:37:00.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:37:00.081
  STEP: Creating pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443 @ 09/30/24 12:37:00.083
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/30/24 12:37:02.095
  I0930 12:37:02.096785 20 container_probe.go:1749] Initial restart count of pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 is 0
  I0930 12:37:02.098393 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:04.101711 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:06.104853 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:08.107877 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:10.111111 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:12.114312 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:14.117354 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:16.120673 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:18.122849 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:20.126144 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:22.129445 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:24.131712 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:26.134853 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:28.137994 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:30.141140 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:32.144259 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:34.147407 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:36.149729 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:38.152829 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:40.156275 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:42.159665 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:44.162623 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:46.166007 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:48.168232 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:50.171639 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:52.174847 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:54.178069 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:56.180365 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:37:58.183544 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:00.187942 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:02.190199 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:04.192728 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:06.195838 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:08.199145 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:10.203406 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:12.206660 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:14.208929 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:16.212176 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:18.215381 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:20.219755 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:22.222229 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:24.224559 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:26.227609 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:28.229794 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:30.234091 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:32.237218 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:34.240252 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:36.243426 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:38.246615 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:40.250300 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:42.253562 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:44.255797 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:46.258293 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:48.260548 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:50.264751 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:52.267022 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:54.269989 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:56.273018 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:38:58.276038 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:00.278362 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:02.281521 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:04.283942 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:06.286166 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:08.288854 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:10.292431 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:12.294696 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:14.296913 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:16.299967 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:18.302865 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:20.306181 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:22.309299 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:24.312419 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:26.315518 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:28.318551 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:30.321793 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:32.324787 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:34.327869 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:36.330991 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:38.334025 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:40.336362 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:42.338676 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:44.341000 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:46.343283 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:48.346364 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:50.348679 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:52.351419 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:54.354566 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:56.357781 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:39:58.360797 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:00.363123 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:02.365365 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:04.368404 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:06.371693 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:08.374696 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:10.378113 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:12.381250 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:14.384256 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:16.387342 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:18.390484 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:20.392954 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:22.395180 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:24.398185 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:26.400343 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:28.403468 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:30.406852 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:32.410004 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:34.413092 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:36.416198 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:38.419197 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:40.421690 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:42.424006 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:44.426934 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:46.429413 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:48.432634 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:50.435971 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:52.439195 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:54.442311 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:56.445461 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:40:58.447999 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  I0930 12:41:00.450813 20 container_probe.go:1759] Get pod test-webserver-7ce791a5-9bb6-4d92-82e4-19718d9f17d0 in namespace container-probe-5443
  STEP: deleting the pod @ 09/30/24 12:41:02.451
  I0930 12:41:02.460920 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5443" for this suite. @ 09/30/24 12:41:02.463
• [242.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/30/24 12:41:02.468
  I0930 12:41:02.468700 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:41:02.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:02.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:02.479
  STEP: Setting up server cert @ 09/30/24 12:41:02.577
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:41:02.864
  STEP: Deploying the webhook pod @ 09/30/24 12:41:02.872
  STEP: Wait for the deployment to be ready @ 09/30/24 12:41:02.881
  I0930 12:41:02.887721 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/30/24 12:41:04.894
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:41:04.901
  I0930 12:41:05.902099 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/30/24 12:41:05.905
  STEP: create a pod @ 09/30/24 12:41:05.919
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/30/24 12:41:07.927
  I0930 12:41:07.927981 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=webhook-9006 attach --namespace=webhook-9006 to-be-attached-pod -i -c=container1'
  I0930 12:41:07.989987 20 builder.go:135] rc: 1
  I0930 12:41:08.013591 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9006" for this suite. @ 09/30/24 12:41:08.016
  STEP: Destroying namespace "webhook-markers-9912" for this suite. @ 09/30/24 12:41:08.022
• [5.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/30/24 12:41:08.026
  I0930 12:41:08.026290 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename daemonsets @ 09/30/24 12:41:08.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:08.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:08.038
  I0930 12:41:08.120275 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/30/24 12:41:08.123
  I0930 12:41:08.219910 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 12:41:08.219949 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:41:09.128186 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0930 12:41:09.128230 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:41:10.128508 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0930 12:41:10.128547 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/30/24 12:41:10.135
  STEP: Check that daemon pods images are updated. @ 09/30/24 12:41:10.227
  I0930 12:41:10.229618 20 daemon_set.go:1193] Wrong image for pod: daemon-set-fdnw5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0930 12:41:11.231094 20 daemon_set.go:1198] Pod daemon-set-69g58 is not available
  I0930 12:41:11.231128 20 daemon_set.go:1193] Wrong image for pod: daemon-set-fdnw5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/30/24 12:41:12.232
  I0930 12:41:12.235418 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0930 12:41:12.235454 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/30/24 12:41:12.243
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6858, will wait for the garbage collector to delete the pods @ 09/30/24 12:41:12.243
  I0930 12:41:12.299542 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.300781ms
  I0930 12:41:12.400080 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.533032ms
  I0930 12:41:14.103005 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 12:41:14.103042 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0930 12:41:14.104874 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19165"},"items":null}

  I0930 12:41:14.106332 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19165"},"items":null}

  I0930 12:41:14.111281 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6858" for this suite. @ 09/30/24 12:41:14.112
• [6.090 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/30/24 12:41:14.116
  I0930 12:41:14.116080 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 12:41:14.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:14.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:14.128
  I0930 12:41:36.173785 20 container_probe.go:92] Container started at 2024-09-30 12:41:14 +0000 UTC, pod became ready at 2024-09-30 12:41:34 +0000 UTC
  I0930 12:41:36.173889 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-14" for this suite. @ 09/30/24 12:41:36.175
• [22.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/30/24 12:41:36.179
  I0930 12:41:36.179362 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:41:36.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:36.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:36.189
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/30/24 12:41:36.191
  STEP: Saw pod success @ 09/30/24 12:41:38.2
  I0930 12:41:38.202552 20 output.go:196] Trying to get logs from node worker-1 pod pod-8d73a26f-88c5-4e23-adad-065ec840abe5 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:41:38.212
  I0930 12:41:38.224894 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5753" for this suite. @ 09/30/24 12:41:38.227
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/30/24 12:41:38.23
  I0930 12:41:38.230532 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename runtimeclass @ 09/30/24 12:41:38.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:38.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:38.243
  STEP: getting /apis @ 09/30/24 12:41:38.245
  STEP: getting /apis/node.k8s.io @ 09/30/24 12:41:38.247
  STEP: getting /apis/node.k8s.io/v1 @ 09/30/24 12:41:38.248
  STEP: creating @ 09/30/24 12:41:38.249
  STEP: watching @ 09/30/24 12:41:38.257
  I0930 12:41:38.257800 20 runtimeclass.go:275] starting watch
  STEP: getting @ 09/30/24 12:41:38.261
  STEP: listing @ 09/30/24 12:41:38.262
  STEP: patching @ 09/30/24 12:41:38.264
  STEP: updating @ 09/30/24 12:41:38.267
  I0930 12:41:38.271866 20 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/30/24 12:41:38.272
  STEP: deleting a collection @ 09/30/24 12:41:38.278
  I0930 12:41:38.285503 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9154" for this suite. @ 09/30/24 12:41:38.327
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/30/24 12:41:38.331
  I0930 12:41:38.331020 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:41:38.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:38.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:38.341
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/30/24 12:41:38.343
  STEP: Saw pod success @ 09/30/24 12:41:40.352
  I0930 12:41:40.354707 20 output.go:196] Trying to get logs from node worker-1 pod pod-6ee59601-9e0a-47ab-abe4-a5a45743ac79 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:41:40.358
  I0930 12:41:40.369369 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5373" for this suite. @ 09/30/24 12:41:40.371
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/30/24 12:41:40.375
  I0930 12:41:40.375236 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename namespaces @ 09/30/24 12:41:40.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:40.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:40.387
  STEP: Creating a test namespace @ 09/30/24 12:41:40.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:40.487
  STEP: Creating a service in the namespace @ 09/30/24 12:41:40.489
  STEP: Deleting the namespace @ 09/30/24 12:41:40.497
  STEP: Waiting for the namespace to be removed. @ 09/30/24 12:41:40.506
  STEP: Recreating the namespace @ 09/30/24 12:41:46.508
  STEP: Verifying there is no service in the namespace @ 09/30/24 12:41:46.515
  I0930 12:41:46.517483 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7961" for this suite. @ 09/30/24 12:41:46.519
  STEP: Destroying namespace "nsdeletetest-9703" for this suite. @ 09/30/24 12:41:46.524
  I0930 12:41:46.526457 20 framework.go:370] Namespace nsdeletetest-9703 was already deleted
  STEP: Destroying namespace "nsdeletetest-2947" for this suite. @ 09/30/24 12:41:46.526
• [6.156 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/30/24 12:41:46.531
  I0930 12:41:46.531703 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 12:41:46.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:46.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:46.62
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 12:41:46.622
  STEP: Saw pod success @ 09/30/24 12:41:48.632
  I0930 12:41:48.633856 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-b60a4c6a-535b-4ab8-a14d-86ad0b880b07 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 12:41:48.643
  I0930 12:41:48.652786 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8946" for this suite. @ 09/30/24 12:41:48.655
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 09/30/24 12:41:48.661
  I0930 12:41:48.661289 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:41:48.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:48.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:48.671
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/30/24 12:41:48.673
  I0930 12:41:48.673751 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-5168 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0930 12:41:48.728597 20 builder.go:146] stderr: ""
  I0930 12:41:48.728640 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/30/24 12:41:48.728
  I0930 12:41:48.730808 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-5168 delete pods e2e-test-httpd-pod'
  I0930 12:41:50.397205 20 builder.go:146] stderr: ""
  I0930 12:41:50.397343 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0930 12:41:50.397465 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5168" for this suite. @ 09/30/24 12:41:50.399
• [1.742 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/30/24 12:41:50.403
  I0930 12:41:50.403798 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename podtemplate @ 09/30/24 12:41:50.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:50.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:50.415
  STEP: Create set of pod templates @ 09/30/24 12:41:50.417
  I0930 12:41:50.421005 20 podtemplates.go:143] created test-podtemplate-1
  I0930 12:41:50.424291 20 podtemplates.go:143] created test-podtemplate-2
  I0930 12:41:50.429201 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/30/24 12:41:50.429
  STEP: delete collection of pod templates @ 09/30/24 12:41:50.431
  I0930 12:41:50.431234 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/30/24 12:41:50.438
  I0930 12:41:50.438833 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0930 12:41:50.440682 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8512" for this suite. @ 09/30/24 12:41:50.5
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/30/24 12:41:50.504
  I0930 12:41:50.504385 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-runtime @ 09/30/24 12:41:50.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:41:50.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:41:50.516
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/30/24 12:41:50.523
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/30/24 12:42:05.564
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/30/24 12:42:05.566
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/30/24 12:42:05.569
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/30/24 12:42:05.569
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/30/24 12:42:05.583
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/30/24 12:42:07.589
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/30/24 12:42:08.592
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/30/24 12:42:08.596
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/30/24 12:42:08.596
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/30/24 12:42:08.61
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/30/24 12:42:09.614
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/30/24 12:42:10.618
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/30/24 12:42:10.622
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/30/24 12:42:10.622
  I0930 12:42:10.636788 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6620" for this suite. @ 09/30/24 12:42:10.638
• [20.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/30/24 12:42:10.642
  I0930 12:42:10.642682 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/30/24 12:42:10.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:42:10.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:42:10.652
  STEP: creating @ 09/30/24 12:42:10.654
  STEP: getting @ 09/30/24 12:42:10.665
  STEP: listing in namespace @ 09/30/24 12:42:10.667
  STEP: patching @ 09/30/24 12:42:10.669
  STEP: deleting @ 09/30/24 12:42:10.682
  I0930 12:42:10.687873 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8040" for this suite. @ 09/30/24 12:42:10.739
• [0.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/30/24 12:42:10.748
  I0930 12:42:10.748036 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pod-network-test @ 09/30/24 12:42:10.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:42:10.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:42:10.761
  STEP: Performing setup for networking test in namespace pod-network-test-3934 @ 09/30/24 12:42:10.763
  STEP: creating a selector @ 09/30/24 12:42:10.763
  STEP: Creating the service pods in kubernetes @ 09/30/24 12:42:10.763
  I0930 12:42:10.763904 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/30/24 12:42:22.884
  I0930 12:42:24.893691 20 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0930 12:42:24.893728 20 networking.go:42] Breadth first check of 10.244.0.232 on host 10.0.42.49...
  I0930 12:42:24.895318 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.233:9080/dial?request=hostname&protocol=http&host=10.244.0.232&port=8083&tries=1'] Namespace:pod-network-test-3934 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:42:24.895351 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:42:24.895818 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:42:24.895875 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3934/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.232%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0930 12:42:24.937532 20 utils.go:356] Waiting for responses: map[]
  I0930 12:42:24.937573 20 utils.go:360] reached 10.244.0.232 after 0/1 tries
  I0930 12:42:24.937593 20 networking.go:42] Breadth first check of 10.244.1.170 on host 10.0.35.180...
  I0930 12:42:24.939537 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.233:9080/dial?request=hostname&protocol=http&host=10.244.1.170&port=8083&tries=1'] Namespace:pod-network-test-3934 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:42:24.939565 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:42:24.940019 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:42:24.940086 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3934/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.170%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0930 12:42:24.976045 20 utils.go:356] Waiting for responses: map[]
  I0930 12:42:24.976082 20 utils.go:360] reached 10.244.1.170 after 0/1 tries
  I0930 12:42:24.976091 20 networking.go:53] Going to retry 0 out of 2 pods....
  I0930 12:42:24.976183 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3934" for this suite. @ 09/30/24 12:42:24.978
• [14.234 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 09/30/24 12:42:24.982
  I0930 12:42:24.982135 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:42:24.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:42:24.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:42:24.992
  STEP: fetching services @ 09/30/24 12:42:24.994
  I0930 12:42:24.996501 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3667" for this suite. @ 09/30/24 12:42:25.078
• [0.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/30/24 12:42:25.082
  I0930 12:42:25.082703 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename daemonsets @ 09/30/24 12:42:25.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:42:25.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:42:25.095
  STEP: Creating simple DaemonSet "daemon-set" @ 09/30/24 12:42:25.182
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/30/24 12:42:25.187
  I0930 12:42:25.281136 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 12:42:25.281184 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:42:26.192687 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0930 12:42:26.192725 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:42:27.191758 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0930 12:42:27.191790 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/30/24 12:42:27.193
  I0930 12:42:27.292792 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0930 12:42:27.292831 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:42:28.204996 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0930 12:42:28.205035 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0930 12:42:29.205178 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0930 12:42:29.205215 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/30/24 12:42:29.207
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4932, will wait for the garbage collector to delete the pods @ 09/30/24 12:42:29.207
  I0930 12:42:29.263197 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.41489ms
  I0930 12:42:29.364108 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.905191ms
  I0930 12:42:30.566480 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 12:42:30.566520 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0930 12:42:30.568318 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19750"},"items":null}

  I0930 12:42:30.569765 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19750"},"items":null}

  I0930 12:42:30.574530 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4932" for this suite. @ 09/30/24 12:42:30.576
• [5.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 09/30/24 12:42:30.583
  I0930 12:42:30.583121 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename statefulset @ 09/30/24 12:42:30.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:42:30.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:42:30.593
  STEP: Creating service test in namespace statefulset-1024 @ 09/30/24 12:42:30.595
  STEP: Creating statefulset ss in namespace statefulset-1024 @ 09/30/24 12:42:30.6
  I0930 12:42:30.613062 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I0930 12:42:40.612433 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/30/24 12:42:40.615
  STEP: Getting /status @ 09/30/24 12:42:40.619
  I0930 12:42:40.623849 20 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/30/24 12:42:40.623
  I0930 12:42:40.630952 20 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/30/24 12:42:40.63
  I0930 12:42:40.632343 20 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0930 12:42:40.632377 20 statefulset.go:1111] Found Statefulset ss in namespace statefulset-1024 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0930 12:42:40.632392 20 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/30/24 12:42:40.632
  I0930 12:42:40.632425 20 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0930 12:42:40.636707 20 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/30/24 12:42:40.636
  I0930 12:42:40.638008 20 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0930 12:42:40.638045 20 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-1024 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0930 12:42:40.638140 20 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I0930 12:42:40.638163 20 statefulset.go:1148] Found Statefulset ss in namespace statefulset-1024 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0930 12:42:40.638209 20 statefulset.go:138] Deleting all statefulset in ns statefulset-1024
  I0930 12:42:40.639828 20 rest.go:150] Scaling statefulset ss to 0
  I0930 12:42:50.649389 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0930 12:42:50.650957 20 rest.go:88] Deleting statefulset ss
  I0930 12:42:50.657345 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1024" for this suite. @ 09/30/24 12:42:50.659
• [20.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/30/24 12:42:50.664
  I0930 12:42:50.664805 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/30/24 12:42:50.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:42:50.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:42:50.677
  STEP: Creating two CSIDrivers @ 09/30/24 12:42:50.679
  STEP: Getting "inline-driver-ba874092-1481-4a25-a99c-72f584270cef" & "inline-driver-122c28a1-defe-47dd-8924-97a41f8758c1" @ 09/30/24 12:42:50.689
  STEP: Patching the CSIDriver "inline-driver-122c28a1-defe-47dd-8924-97a41f8758c1" @ 09/30/24 12:42:50.692
  STEP: Updating the CSIDriver "inline-driver-122c28a1-defe-47dd-8924-97a41f8758c1" @ 09/30/24 12:42:50.696
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4627" @ 09/30/24 12:42:50.703
  STEP: Deleting CSIDriver "inline-driver-ba874092-1481-4a25-a99c-72f584270cef" @ 09/30/24 12:42:50.704
  STEP: Confirm deletion of CSIDriver "inline-driver-ba874092-1481-4a25-a99c-72f584270cef" @ 09/30/24 12:42:50.707
  STEP: Deleting CSIDriver "inline-driver-122c28a1-defe-47dd-8924-97a41f8758c1" via DeleteCollection @ 09/30/24 12:42:50.709
  STEP: Confirm deletion of CSIDriver "inline-driver-122c28a1-defe-47dd-8924-97a41f8758c1" @ 09/30/24 12:42:50.713
  I0930 12:42:50.714953 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4627" for this suite. @ 09/30/24 12:42:50.759
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/30/24 12:42:50.763
  I0930 12:42:50.763405 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 12:42:50.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:42:50.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:42:50.777
  STEP: Counting existing ResourceQuota @ 09/30/24 12:42:50.779
  STEP: Creating a ResourceQuota @ 09/30/24 12:42:55.782
  STEP: Ensuring resource quota status is calculated @ 09/30/24 12:42:55.785
  STEP: Creating a ReplicationController @ 09/30/24 12:42:57.788
  STEP: Ensuring resource quota status captures replication controller creation @ 09/30/24 12:42:57.796
  STEP: Deleting a ReplicationController @ 09/30/24 12:42:59.799
  STEP: Ensuring resource quota status released usage @ 09/30/24 12:42:59.803
  I0930 12:43:01.806642 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1941" for this suite. @ 09/30/24 12:43:01.808
• [11.049 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/30/24 12:43:01.812
  I0930 12:43:01.812319 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 12:43:01.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:43:01.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:43:01.824
  STEP: Counting existing ResourceQuota @ 09/30/24 12:43:01.826
  STEP: Creating a ResourceQuota @ 09/30/24 12:43:06.828
  STEP: Ensuring resource quota status is calculated @ 09/30/24 12:43:06.832
  STEP: Creating a ReplicaSet @ 09/30/24 12:43:08.835
  STEP: Ensuring resource quota status captures replicaset creation @ 09/30/24 12:43:08.846
  STEP: Deleting a ReplicaSet @ 09/30/24 12:43:10.849
  STEP: Ensuring resource quota status released usage @ 09/30/24 12:43:10.852
  I0930 12:43:12.854774 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3316" for this suite. @ 09/30/24 12:43:12.856
• [11.048 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/30/24 12:43:12.86
  I0930 12:43:12.860281 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/30/24 12:43:12.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:43:12.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:43:12.873
  I0930 12:43:12.875174 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:43:15.909467 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3464" for this suite. @ 09/30/24 12:43:15.911
• [3.057 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 09/30/24 12:43:15.917
  I0930 12:43:15.917104 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename svcaccounts @ 09/30/24 12:43:15.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:43:15.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:43:15.928
  I0930 12:43:15.943531 20 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0930 12:43:15.943570 20 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0930 12:43:15.948664 20 service_accounts.go:253] created pod pod-service-account-mountsa
  I0930 12:43:15.948699 20 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0930 12:43:15.953136 20 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0930 12:43:15.953175 20 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0930 12:43:15.958983 20 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0930 12:43:15.959018 20 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0930 12:43:15.965707 20 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0930 12:43:15.965745 20 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0930 12:43:15.972001 20 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0930 12:43:15.972122 20 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0930 12:43:15.978045 20 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0930 12:43:15.978082 20 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0930 12:43:15.983623 20 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0930 12:43:15.983660 20 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0930 12:43:15.987338 20 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0930 12:43:15.987374 20 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0930 12:43:15.987461 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7236" for this suite. @ 09/30/24 12:43:16.012
• [0.100 seconds]
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/30/24 12:43:16.017
  I0930 12:43:16.017819 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:43:16.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:43:16.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:43:16.03
  STEP: creating service nodeport-test with type=NodePort in namespace services-7502 @ 09/30/24 12:43:16.034
  STEP: creating replication controller nodeport-test in namespace services-7502 @ 09/30/24 12:43:16.047
  I0930 12:43:16.053462      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-7502, replica count: 2
  I0930 12:43:19.105530      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 12:43:19.105575 20 resource.go:361] Creating new exec pod
  I0930 12:43:22.119090 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7502 exec execpodtt8tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0930 12:43:22.200883 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0930 12:43:22.200929 20 builder.go:147] stdout: "nodeport-test-98565"
  I0930 12:43:22.201009 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7502 exec execpodtt8tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.139.173 80'
  I0930 12:43:22.293459 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.139.173 80\nConnection to 10.108.139.173 80 port [tcp/http] succeeded!\n"
  I0930 12:43:22.293594 20 builder.go:147] stdout: "nodeport-test-jjnqz"
  I0930 12:43:22.293681 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7502 exec execpodtt8tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.42.49 31669'
  I0930 12:43:22.374799 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.42.49 31669\nConnection to 10.0.42.49 31669 port [tcp/*] succeeded!\n"
  I0930 12:43:22.374841 20 builder.go:147] stdout: "nodeport-test-jjnqz"
  I0930 12:43:22.374925 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7502 exec execpodtt8tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.35.180 31669'
  I0930 12:43:22.457762 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.35.180 31669\nConnection to 10.0.35.180 31669 port [tcp/*] succeeded!\n"
  I0930 12:43:22.457806 20 builder.go:147] stdout: "nodeport-test-98565"
  I0930 12:43:22.457903 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7502" for this suite. @ 09/30/24 12:43:22.46
• [6.446 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/30/24 12:43:22.464
  I0930 12:43:22.464017 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename discovery @ 09/30/24 12:43:22.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:43:22.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:43:22.476
  STEP: Setting up server cert @ 09/30/24 12:43:22.479
  STEP: Requesting APIResourceList from "/api/v1" @ 09/30/24 12:43:22.908
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/30/24 12:43:22.909
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/30/24 12:43:22.91
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/30/24 12:43:22.911
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/30/24 12:43:22.912
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/30/24 12:43:22.913
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/30/24 12:43:22.913
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/30/24 12:43:22.914
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/30/24 12:43:22.915
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/30/24 12:43:22.915
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/30/24 12:43:22.916
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/30/24 12:43:22.917
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/30/24 12:43:22.917
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/30/24 12:43:22.918
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/30/24 12:43:22.919
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/30/24 12:43:22.919
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/30/24 12:43:22.92
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/30/24 12:43:22.921
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/30/24 12:43:22.921
  I0930 12:43:22.922679 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6753" for this suite. @ 09/30/24 12:43:22.924
• [0.464 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 09/30/24 12:43:22.928
  I0930 12:43:22.928319 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:43:22.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:43:22.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:43:22.941
  STEP: validating api versions @ 09/30/24 12:43:22.943
  I0930 12:43:22.943820 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-495 api-versions'
  I0930 12:43:22.989933 20 builder.go:146] stderr: ""
  I0930 12:43:22.989986 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautopilot.k0sproject.io/v1beta2\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\netcd.k0sproject.io/v1beta1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.k0sproject.io/v1beta1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0930 12:43:22.990076 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-495" for this suite. @ 09/30/24 12:43:23.025
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 09/30/24 12:43:23.029
  I0930 12:43:23.029265 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename volumeattachment @ 09/30/24 12:43:23.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:43:23.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:43:23.041
  STEP: Create VolumeAttachment "va-e2e-vrdh4" on node "worker-0" @ 09/30/24 12:43:23.126
  STEP: Get VolumeAttachment "va-e2e-vrdh4" on node "worker-0" @ 09/30/24 12:43:23.129
  STEP: Patch VolumeAttachment "va-e2e-vrdh4" on node "worker-0" @ 09/30/24 12:43:23.131
  STEP: List VolumeAttachments with "va-e2e-vrdh4=patched" label @ 09/30/24 12:43:23.134
  STEP: Delete VolumeAttachment "va-e2e-vrdh4" on node "worker-0" @ 09/30/24 12:43:23.135
  STEP: Confirm deletion of VolumeAttachment "va-e2e-vrdh4" on node "worker-0" @ 09/30/24 12:43:23.138
  STEP: Create VolumeAttachment "va-e2e-psnv6" on node "worker-0" @ 09/30/24 12:43:23.226
  STEP: Update the VolumeAttachment "va-e2e-psnv6" on node "worker-0" with label "va-e2e=updated" @ 09/30/24 12:43:23.229
  STEP: Create VolumeAttachment "va-e2e-8wf5r" on node "worker-0" @ 09/30/24 12:43:23.327
  STEP: Update the VolumeAttachment "va-e2e-8wf5r" on node "worker-0" with label "va-e2e=updated" @ 09/30/24 12:43:23.33
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/30/24 12:43:23.334
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/30/24 12:43:23.34
  I0930 12:43:23.342426 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1664" for this suite. @ 09/30/24 12:43:23.428
• [0.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/30/24 12:43:23.432
  I0930 12:43:23.432399 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename init-container @ 09/30/24 12:43:23.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:43:23.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:43:23.445
  STEP: creating the pod @ 09/30/24 12:43:23.447
  I0930 12:43:23.447295 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0930 12:43:27.652322 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7678" for this suite. @ 09/30/24 12:43:27.654
• [4.226 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/30/24 12:43:27.658
  I0930 12:43:27.658638 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 12:43:27.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:43:27.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:43:27.671
  STEP: Creating pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284 @ 09/30/24 12:43:27.673
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/30/24 12:43:29.703
  I0930 12:43:29.705431 20 container_probe.go:1749] Initial restart count of pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 is 0
  I0930 12:43:29.707323 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:31.709554 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:33.712702 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:35.715748 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:37.718240 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:39.721328 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:41.723946 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:43.726804 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:45.728922 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:47.732218 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:49.735298 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:51.738380 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:53.740498 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:55.743827 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:57.747239 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:43:59.750247 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:01.753350 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:03.756369 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:05.759555 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:07.762017 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:09.765164 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:11.768301 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:13.771362 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:15.774492 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:17.777856 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:19.781061 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:21.784156 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:23.787199 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:25.789435 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:27.792898 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:29.795921 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:31.799004 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:33.802114 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:35.805249 20 container_probe.go:1759] Get pod test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 in namespace container-probe-4284
  I0930 12:44:35.805290 20 container_probe.go:1763] Restart count of pod container-probe-4284/test-grpc-45d2dacc-7f8a-4343-b46b-1894097a0408 is now 1 (1m6.099826147s elapsed)
  STEP: deleting the pod @ 09/30/24 12:44:35.805
  I0930 12:44:35.812330 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4284" for this suite. @ 09/30/24 12:44:35.815
• [68.161 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/30/24 12:44:35.819
  I0930 12:44:35.819305 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:44:35.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:44:35.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:44:35.829
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/30/24 12:44:35.831
  STEP: Saw pod success @ 09/30/24 12:44:37.841
  I0930 12:44:37.843319 20 output.go:196] Trying to get logs from node worker-0 pod pod-aaad7fd3-7ac0-4381-9421-06f319c849a8 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:44:37.851
  I0930 12:44:37.862375 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1543" for this suite. @ 09/30/24 12:44:37.864
• [2.049 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/30/24 12:44:37.868
  I0930 12:44:37.868017 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/30/24 12:44:37.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:44:37.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:44:37.881
  STEP: creating the policy @ 09/30/24 12:44:37.887
  STEP: waiting until the marker is denied @ 09/30/24 12:44:37.895
  STEP: testing a replicated Deployment to be allowed @ 09/30/24 12:44:38.099
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/30/24 12:44:38.109
  I0930 12:44:38.147664 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7522" for this suite. @ 09/30/24 12:44:38.149
• [0.285 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 09/30/24 12:44:38.153
  I0930 12:44:38.153685 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename dns @ 09/30/24 12:44:38.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:44:38.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:44:38.167
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/30/24 12:44:38.168
  I0930 12:44:38.174151 20 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9653  ae172a51-6bcd-48dc-ae24-a80aa296aeae 20532 0 2024-09-30 12:44:38 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-09-30 12:44:38 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ghx94,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ghx94,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/30/24 12:44:40.178
  I0930 12:44:40.178288 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9653 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:44:40.178306 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:44:40.178763 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:44:40.178813 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9653/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/30/24 12:44:40.223
  I0930 12:44:40.223926 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9653 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:44:40.223943 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:44:40.224345 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:44:40.224394 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9653/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0930 12:44:40.264406 20 dns.go:423] Deleting pod test-dns-nameservers...
  I0930 12:44:40.274695 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9653" for this suite. @ 09/30/24 12:44:40.276
• [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/30/24 12:44:40.28
  I0930 12:44:40.280663 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename security-context-test @ 09/30/24 12:44:40.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:44:40.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:44:40.293
  I0930 12:44:44.309867 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-444" for this suite. @ 09/30/24 12:44:44.311
• [4.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/30/24 12:44:44.315
  I0930 12:44:44.315441 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:44:44.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:44:44.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:44:44.325
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 12:44:44.328
  STEP: Saw pod success @ 09/30/24 12:44:48.34
  I0930 12:44:48.342693 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-88c10bb7-12e4-45d0-bc60-9b4d31dab4d2 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 12:44:48.346
  I0930 12:44:48.357086 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2221" for this suite. @ 09/30/24 12:44:48.359
• [4.047 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/30/24 12:44:48.362
  I0930 12:44:48.362640 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 12:44:48.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:44:48.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:44:48.372
  STEP: creating a Pod with a static label @ 09/30/24 12:44:48.376
  STEP: watching for Pod to be ready @ 09/30/24 12:44:48.381
  I0930 12:44:48.382786 20 pods.go:945] observed Pod pod-test in namespace pods-5095 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0930 12:44:48.384878 20 pods.go:945] observed Pod pod-test in namespace pods-5095 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:48 +0000 UTC  }]
  I0930 12:44:48.393998 20 pods.go:945] observed Pod pod-test in namespace pods-5095 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:48 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:48 +0000 UTC  }]
  I0930 12:44:49.732867 20 pods.go:948] Found Pod pod-test in namespace pods-5095 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:48 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:49 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:49 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 12:44:48 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/30/24 12:44:49.734
  STEP: getting the Pod and ensuring that it's patched @ 09/30/24 12:44:49.742
  STEP: replacing the Pod's status Ready condition to False @ 09/30/24 12:44:49.744
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/30/24 12:44:49.752
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/30/24 12:44:49.752
  STEP: watching for the Pod to be deleted @ 09/30/24 12:44:49.756
  I0930 12:44:49.757997 20 pods.go:1058] observed event type MODIFIED
  I0930 12:44:51.738264 20 pods.go:1058] observed event type MODIFIED
  I0930 12:44:51.791902 20 pods.go:1058] observed event type MODIFIED
  I0930 12:44:52.739630 20 pods.go:1058] observed event type MODIFIED
  I0930 12:44:52.743218 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5095" for this suite. @ 09/30/24 12:44:52.745
• [4.386 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/30/24 12:44:52.748
  I0930 12:44:52.748833 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replication-controller @ 09/30/24 12:44:52.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:44:52.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:44:52.759
  STEP: creating a ReplicationController @ 09/30/24 12:44:52.765
  STEP: waiting for RC to be added @ 09/30/24 12:44:52.768
  STEP: waiting for available Replicas @ 09/30/24 12:44:52.768
  STEP: patching ReplicationController @ 09/30/24 12:44:53.744
  STEP: waiting for RC to be modified @ 09/30/24 12:44:53.75
  STEP: patching ReplicationController status @ 09/30/24 12:44:53.75
  STEP: waiting for RC to be modified @ 09/30/24 12:44:53.756
  STEP: waiting for available Replicas @ 09/30/24 12:44:53.756
  STEP: fetching ReplicationController status @ 09/30/24 12:44:53.759
  STEP: patching ReplicationController scale @ 09/30/24 12:44:53.761
  STEP: waiting for RC to be modified @ 09/30/24 12:44:53.766
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/30/24 12:44:53.767
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/30/24 12:44:54.379
  STEP: updating ReplicationController status @ 09/30/24 12:44:54.381
  STEP: waiting for RC to be modified @ 09/30/24 12:44:54.385
  STEP: listing all ReplicationControllers @ 09/30/24 12:44:54.385
  STEP: checking that ReplicationController has expected values @ 09/30/24 12:44:54.387
  STEP: deleting ReplicationControllers by collection @ 09/30/24 12:44:54.387
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/30/24 12:44:54.393
  I0930 12:44:54.437601 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0930 12:44:54.437702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8647" for this suite. @ 09/30/24 12:44:54.439
• [1.694 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 09/30/24 12:44:54.443
  I0930 12:44:54.443097 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename job @ 09/30/24 12:44:54.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:44:54.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:44:54.462
  STEP: Creating Indexed job @ 09/30/24 12:44:54.464
  STEP: Ensuring job reaches completions @ 09/30/24 12:44:54.467
  E0930 12:44:55.437853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:44:56.438801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:44:57.439227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:44:58.439571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:44:59.439705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:00.439727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:01.439842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:02.440027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:03.440219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:04.440412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/30/24 12:45:04.472
  I0930 12:45:04.474988 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9038" for this suite. @ 09/30/24 12:45:04.476
• [10.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/30/24 12:45:04.48
  I0930 12:45:04.480450 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 12:45:04.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:45:04.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:45:04.492
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 12:45:04.494
  E0930 12:45:05.440568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:06.440830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:07.441021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:08.441296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:45:08.508
  I0930 12:45:08.510509 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-55cb1eb2-4ad1-466d-b77a-5f90167aa171 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 12:45:08.513
  I0930 12:45:08.523887 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-416" for this suite. @ 09/30/24 12:45:08.526
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 09/30/24 12:45:08.529
  I0930 12:45:08.529528 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:45:08.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:45:08.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:45:08.541
  STEP: creating a collection of services @ 09/30/24 12:45:08.543
  I0930 12:45:08.543930 20 service.go:3655] Creating e2e-svc-a-klfxg
  I0930 12:45:08.551715 20 service.go:3655] Creating e2e-svc-b-zzv9f
  I0930 12:45:08.560432 20 service.go:3655] Creating e2e-svc-c-58xbk
  STEP: deleting service collection @ 09/30/24 12:45:08.572
  I0930 12:45:08.591960 20 service.go:3690] Collection of services has been deleted
  I0930 12:45:08.592077 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1247" for this suite. @ 09/30/24 12:45:08.626
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/30/24 12:45:08.63
  I0930 12:45:08.630358 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename disruption @ 09/30/24 12:45:08.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:45:08.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:45:08.643
  STEP: creating the pdb @ 09/30/24 12:45:08.645
  STEP: Waiting for the pdb to be processed @ 09/30/24 12:45:08.648
  E0930 12:45:09.441389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:10.442211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/30/24 12:45:10.65
  STEP: Waiting for the pdb to be processed @ 09/30/24 12:45:10.655
  E0930 12:45:11.442635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:12.442822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/30/24 12:45:12.658
  STEP: Waiting for the pdb to be processed @ 09/30/24 12:45:12.664
  E0930 12:45:13.443443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:14.443648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 09/30/24 12:45:14.671
  I0930 12:45:14.672639 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9364" for this suite. @ 09/30/24 12:45:14.674
• [6.048 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/30/24 12:45:14.678
  I0930 12:45:14.678100 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 12:45:14.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:45:14.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:45:14.688
  E0930 12:45:15.444497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:16.444924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:17.445003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:18.445352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:19.445771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:20.446491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:21.446679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:22.446860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:23.447188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:24.447289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:25.447549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:26.447621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:27.447734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:28.448085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:29.448497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:30.448695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:31.448932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:32.449138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:33.449599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:34.449862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:35.450009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:36.450200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:37.450499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:38.450718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:39.451058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:40.451220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:41.451440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:42.451608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:43.451789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:44.451917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:45.452009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:46.452231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:47.452476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:48.452813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:49.453315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:50.453479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:51.453637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:52.453793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:53.453994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:54.454175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:55.454491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:56.454574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:57.454685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:58.455060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:45:59.455519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:00.455575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:01.455821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:02.455898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:03.455950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:04.456283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:05.456711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:06.456913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:07.457951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:08.458109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:09.458196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:10.458489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:11.458823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:12.459035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:13.459515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:14.459723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:46:14.699230 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2571" for this suite. @ 09/30/24 12:46:14.701
• [60.027 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/30/24 12:46:14.704
  I0930 12:46:14.704825 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename gc @ 09/30/24 12:46:14.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:14.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:14.717
  STEP: create the rc @ 09/30/24 12:46:14.719
  W0930 12:46:14.722754      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0930 12:46:15.460727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:16.460994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:17.461090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:18.461289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:19.461461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/30/24 12:46:19.728
  STEP: wait for all pods to be garbage collected @ 09/30/24 12:46:19.731
  E0930 12:46:20.461568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:21.461768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:22.461951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:23.462244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:24.462426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/30/24 12:46:24.735
  W0930 12:46:24.737913      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0930 12:46:24.737953 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0930 12:46:24.738116 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8216" for this suite. @ 09/30/24 12:46:24.74
• [10.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 09/30/24 12:46:24.743
  I0930 12:46:24.743753 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename cronjob @ 09/30/24 12:46:24.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:24.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:24.754
  STEP: Creating a cronjob @ 09/30/24 12:46:24.756
  STEP: creating @ 09/30/24 12:46:24.756
  STEP: getting @ 09/30/24 12:46:24.759
  STEP: listing @ 09/30/24 12:46:24.761
  STEP: watching @ 09/30/24 12:46:24.762
  I0930 12:46:24.762656 20 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 09/30/24 12:46:24.763
  STEP: cluster-wide watching @ 09/30/24 12:46:24.764
  I0930 12:46:24.765010 20 cronjob.go:382] starting watch
  STEP: patching @ 09/30/24 12:46:24.765
  STEP: updating @ 09/30/24 12:46:24.769
  I0930 12:46:24.776481 20 cronjob.go:406] waiting for watch events with expected annotations
  I0930 12:46:24.776531 20 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 09/30/24 12:46:24.776
  STEP: updating /status @ 09/30/24 12:46:24.78
  STEP: get /status @ 09/30/24 12:46:24.784
  STEP: deleting @ 09/30/24 12:46:24.786
  STEP: deleting a collection @ 09/30/24 12:46:24.795
  I0930 12:46:24.800768 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7271" for this suite. @ 09/30/24 12:46:24.84
• [0.100 seconds]
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/30/24 12:46:24.843
  I0930 12:46:24.843883 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl-logs @ 09/30/24 12:46:24.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:24.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:24.856
  STEP: creating a pod @ 09/30/24 12:46:24.857
  I0930 12:46:24.858061 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-logs-586 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0930 12:46:24.910602 20 builder.go:146] stderr: ""
  I0930 12:46:24.910736 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/30/24 12:46:24.91
  I0930 12:46:24.910841 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0930 12:46:25.462597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:26.462790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:46:26.915490 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/30/24 12:46:26.915
  I0930 12:46:26.915619 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-logs-586 logs logs-generator logs-generator'
  I0930 12:46:26.966039 20 builder.go:146] stderr: ""
  I0930 12:46:26.966097 20 builder.go:147] stdout: "I0930 12:46:25.346424       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/m5b 259\nI0930 12:46:25.546759       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/v88 454\nI0930 12:46:25.747054       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/l8d 397\nI0930 12:46:25.947356       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/sv4 245\nI0930 12:46:26.146585       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/hfq 396\nI0930 12:46:26.346876       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/47q 365\nI0930 12:46:26.547169       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/d257 202\nI0930 12:46:26.747465       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/97ht 244\nI0930 12:46:26.946767       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/kq54 512\n"
  STEP: limiting log lines @ 09/30/24 12:46:26.966
  I0930 12:46:26.966182 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-logs-586 logs logs-generator logs-generator --tail=1'
  I0930 12:46:27.014969 20 builder.go:146] stderr: ""
  I0930 12:46:27.015011 20 builder.go:147] stdout: "I0930 12:46:26.946767       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/kq54 512\n"
  I0930 12:46:27.015022 20 logs.go:180] got output "I0930 12:46:26.946767       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/kq54 512\n"
  STEP: limiting log bytes @ 09/30/24 12:46:27.015
  I0930 12:46:27.015105 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-logs-586 logs logs-generator logs-generator --limit-bytes=1'
  I0930 12:46:27.064896 20 builder.go:146] stderr: ""
  I0930 12:46:27.064936 20 builder.go:147] stdout: "I"
  I0930 12:46:27.064946 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/30/24 12:46:27.064
  I0930 12:46:27.065032 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-logs-586 logs logs-generator logs-generator --tail=1 --timestamps'
  I0930 12:46:27.114785 20 builder.go:146] stderr: ""
  I0930 12:46:27.114833 20 builder.go:147] stdout: "2024-09-30T12:46:26.946838318Z I0930 12:46:26.946767       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/kq54 512\n"
  I0930 12:46:27.114844 20 logs.go:192] got output "2024-09-30T12:46:26.946838318Z I0930 12:46:26.946767       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/kq54 512\n"
  STEP: restricting to a time range @ 09/30/24 12:46:27.114
  E0930 12:46:27.463297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:28.464058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:29.464220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:46:29.615563 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-logs-586 logs logs-generator logs-generator --since=1s'
  I0930 12:46:29.665573 20 builder.go:146] stderr: ""
  I0930 12:46:29.665705 20 builder.go:147] stdout: "I0930 12:46:28.747205       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/2m64 520\nI0930 12:46:28.946437       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/mbbq 439\nI0930 12:46:29.146733       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/l54x 477\nI0930 12:46:29.347033       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/lg7 409\nI0930 12:46:29.547324       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/7czd 407\n"
  I0930 12:46:29.665766 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-logs-586 logs logs-generator logs-generator --since=24h'
  I0930 12:46:29.714938 20 builder.go:146] stderr: ""
  I0930 12:46:29.715001 20 builder.go:147] stdout: "I0930 12:46:25.346424       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/m5b 259\nI0930 12:46:25.546759       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/v88 454\nI0930 12:46:25.747054       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/l8d 397\nI0930 12:46:25.947356       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/sv4 245\nI0930 12:46:26.146585       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/hfq 396\nI0930 12:46:26.346876       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/47q 365\nI0930 12:46:26.547169       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/d257 202\nI0930 12:46:26.747465       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/97ht 244\nI0930 12:46:26.946767       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/kq54 512\nI0930 12:46:27.147060       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/5kd 345\nI0930 12:46:27.347358       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/cmg9 289\nI0930 12:46:27.546498       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/jr4m 561\nI0930 12:46:27.746796       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/js9 239\nI0930 12:46:27.947115       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/klh2 256\nI0930 12:46:28.147377       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/slm5 423\nI0930 12:46:28.346602       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/chth 512\nI0930 12:46:28.546906       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/wps 353\nI0930 12:46:28.747205       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/2m64 520\nI0930 12:46:28.946437       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/mbbq 439\nI0930 12:46:29.146733       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/l54x 477\nI0930 12:46:29.347033       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/lg7 409\nI0930 12:46:29.547324       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/7czd 407\n"
  I0930 12:46:29.715104 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-logs-586 delete pod logs-generator'
  I0930 12:46:30.214730 20 builder.go:146] stderr: ""
  I0930 12:46:30.214846 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0930 12:46:30.214947 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-586" for this suite. @ 09/30/24 12:46:30.217
• [5.376 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/30/24 12:46:30.22
  I0930 12:46:30.220358 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/30/24 12:46:30.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:30.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:30.303
  STEP: Creating 50 configmaps @ 09/30/24 12:46:30.305
  E0930 12:46:30.464333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/30/24 12:46:30.501
  I0930 12:46:30.602943 20 resource.go:87] Pod name wrapped-volume-race-9a299dea-13f5-44f5-8e92-e4766ce11712: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/30/24 12:46:30.602
  E0930 12:46:31.464487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:32.464683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/30/24 12:46:32.665
  I0930 12:46:32.674106 20 resource.go:87] Pod name wrapped-volume-race-a541683c-b918-4157-bea3-920b432dba85: Found 0 pods out of 5
  E0930 12:46:33.465080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:34.465262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:35.465357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:36.465678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:37.465883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:46:37.677152 20 resource.go:87] Pod name wrapped-volume-race-a541683c-b918-4157-bea3-920b432dba85: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/30/24 12:46:37.677
  STEP: Creating RC which spawns configmap-volume pods @ 09/30/24 12:46:37.688
  I0930 12:46:37.702795 20 resource.go:87] Pod name wrapped-volume-race-e537dd27-ce28-4067-89f3-6c08b13cd9a6: Found 1 pods out of 5
  E0930 12:46:38.466860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:39.467041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:40.467283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:41.467381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:42.467553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:46:42.706376 20 resource.go:87] Pod name wrapped-volume-race-e537dd27-ce28-4067-89f3-6c08b13cd9a6: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/30/24 12:46:42.706
  STEP: deleting ReplicationController wrapped-volume-race-e537dd27-ce28-4067-89f3-6c08b13cd9a6 in namespace emptydir-wrapper-9348, will wait for the garbage collector to delete the pods @ 09/30/24 12:46:42.716
  I0930 12:46:42.772738 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-e537dd27-ce28-4067-89f3-6c08b13cd9a6 took: 3.806919ms
  I0930 12:46:42.873013 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-e537dd27-ce28-4067-89f3-6c08b13cd9a6 pods took: 100.272613ms
  E0930 12:46:43.467717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-a541683c-b918-4157-bea3-920b432dba85 in namespace emptydir-wrapper-9348, will wait for the garbage collector to delete the pods @ 09/30/24 12:46:43.673
  I0930 12:46:43.732158 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-a541683c-b918-4157-bea3-920b432dba85 took: 5.542163ms
  I0930 12:46:43.832760 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-a541683c-b918-4157-bea3-920b432dba85 pods took: 100.588822ms
  E0930 12:46:44.468546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-9a299dea-13f5-44f5-8e92-e4766ce11712 in namespace emptydir-wrapper-9348, will wait for the garbage collector to delete the pods @ 09/30/24 12:46:44.733
  I0930 12:46:44.790785 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-9a299dea-13f5-44f5-8e92-e4766ce11712 took: 3.837566ms
  I0930 12:46:44.891224 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-9a299dea-13f5-44f5-8e92-e4766ce11712 pods took: 100.435517ms
  E0930 12:46:45.468860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/30/24 12:46:45.692
  I0930 12:46:45.855651 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9348" for this suite. @ 09/30/24 12:46:45.857
• [15.642 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/30/24 12:46:45.862
  I0930 12:46:45.862836 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:46:45.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:45.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:45.875
  STEP: Creating Pod @ 09/30/24 12:46:45.876
  E0930 12:46:46.469446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:47.469758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/30/24 12:46:47.888
  I0930 12:46:47.888495 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9458 PodName:pod-sharedvolume-3f4f5c6f-cc0e-41b4-bfb6-cb0346daeee0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:46:47.888511 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:46:47.888961 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:46:47.889015 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-9458/pods/pod-sharedvolume-3f4f5c6f-cc0e-41b4-bfb6-cb0346daeee0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0930 12:46:47.923294 20 exec_util.go:111] Exec stderr: ""
  I0930 12:46:47.923430 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9458" for this suite. @ 09/30/24 12:46:47.925
• [2.066 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/30/24 12:46:47.929
  I0930 12:46:47.929418 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 12:46:47.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:47.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:47.941
  STEP: Creating secret with name secret-test-85eb71ae-372c-4c80-961a-38be26d2c11e @ 09/30/24 12:46:47.943
  STEP: Creating a pod to test consume secrets @ 09/30/24 12:46:47.946
  E0930 12:46:48.470066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:49.469971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:46:49.957
  I0930 12:46:49.958951 20 output.go:196] Trying to get logs from node worker-1 pod pod-secrets-b47e77bd-b737-4bdd-b743-facb03cdf0d8 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 12:46:49.968
  I0930 12:46:49.979448 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3356" for this suite. @ 09/30/24 12:46:49.981
• [2.056 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/30/24 12:46:49.985
  I0930 12:46:49.985269 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 12:46:49.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:49.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:49.995
  STEP: Creating configMap with name configmap-test-volume-map-237161e4-4cb7-441b-b52e-40445abc6436 @ 09/30/24 12:46:49.997
  STEP: Creating a pod to test consume configMaps @ 09/30/24 12:46:50
  E0930 12:46:50.470790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:51.471007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:46:52.009
  I0930 12:46:52.011451 20 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-391c709d-9d1c-4cc3-844f-9c4aa2514f1d container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 12:46:52.015
  I0930 12:46:52.025531 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1062" for this suite. @ 09/30/24 12:46:52.027
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/30/24 12:46:52.031
  I0930 12:46:52.031206 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:46:52.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:52.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:52.043
  STEP: Setting up server cert @ 09/30/24 12:46:52.142
  E0930 12:46:52.471009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:46:52.624
  STEP: Deploying the webhook pod @ 09/30/24 12:46:52.629
  STEP: Wait for the deployment to be ready @ 09/30/24 12:46:52.64
  I0930 12:46:52.643320 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0930 12:46:53.471517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:54.471620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 12:46:54.649
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:46:54.658
  E0930 12:46:55.471819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:46:55.659090 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/30/24 12:46:55.713
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/30/24 12:46:55.741
  STEP: Deleting the collection of validation webhooks @ 09/30/24 12:46:55.765
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/30/24 12:46:55.789
  I0930 12:46:55.822764 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6154" for this suite. @ 09/30/24 12:46:55.824
  STEP: Destroying namespace "webhook-markers-3321" for this suite. @ 09/30/24 12:46:55.83
• [3.803 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/30/24 12:46:55.834
  I0930 12:46:55.834433 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename deployment @ 09/30/24 12:46:55.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:55.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:55.846
  I0930 12:46:55.848720 20 deployment.go:1645] Creating simple deployment test-new-deployment
  I0930 12:46:55.857368 20 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E0930 12:46:56.471985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:57.472376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/30/24 12:46:57.864
  STEP: updating a scale subresource @ 09/30/24 12:46:57.866
  STEP: verifying the deployment Spec.Replicas was modified @ 09/30/24 12:46:57.869
  STEP: Patch a scale subresource @ 09/30/24 12:46:57.87
  I0930 12:46:57.883272 20 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6104",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "036f130f-68bb-40de-a5f3-c95ef748d3d2",
      ResourceVersion: (string) (len=5) "21942",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297215,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0930 12:46:57.891118 20 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6104",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0471ec5d-122c-4259-ace9-713149e7d04c",
      ResourceVersion: (string) (len=5) "21949",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297215,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "036f130f-68bb-40de-a5f3-c95ef748d3d2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 33 36 66 31 33  30 66 2d 36 38 62 62 2d  |\"036f130f-68bb-|
              00000120  34 30 64 65 2d 61 35 66  33 2d 63 39 35 65 66 37  |40de-a5f3-c95ef7|
              00000130  34 38 64 33 64 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |48d3d2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 12:46:57.898149 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-9jg8c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-9jg8c",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6104",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14a48356-5c0f-4234-8ad1-387594a16f94",
      ResourceVersion: (string) (len=5) "21950",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297217,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "0471ec5d-122c-4259-ace9-713149e7d04c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 34  37 31 65 63 35 64 2d 31  |d\":\"0471ec5d-1|
              00000090  32 32 63 2d 34 32 35 39  2d 61 63 65 39 2d 37 31  |22c-4259-ace9-71|
              000000a0  33 31 34 39 65 37 64 30  34 63 5c 22 7d 22 3a 7b  |3149e7d04c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-457nr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-457nr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297217,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-457nr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 12:46:57.900323 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-zws2h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-zws2h",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6104",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30601244-8689-4aab-a6ff-319a139eedac",
      ResourceVersion: (string) (len=5) "21926",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297215,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "0471ec5d-122c-4259-ace9-713149e7d04c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 34  37 31 65 63 35 64 2d 31  |d\":\"0471ec5d-1|
              00000090  32 32 63 2d 34 32 35 39  2d 61 63 65 39 2d 37 31  |22c-4259-ace9-71|
              000000a0  33 31 34 39 65 37 64 30  34 63 5c 22 7d 22 3a 7b  |3149e7d04c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 36  5c 22 7d 22 3a 7b 22 2e  |.244.0.6\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dtx2q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dtx2q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=10) "10.244.0.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.0.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297215,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863297216,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3c728105c8e6e00636df6c5d9e4410b1a44ab16e0afe93ca9e4aeca12a7fc796",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dtx2q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 12:46:57.901555 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6104" for this suite. @ 09/30/24 12:46:57.904
• [2.078 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 09/30/24 12:46:57.913
  I0930 12:46:57.913125 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename job @ 09/30/24 12:46:57.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:46:57.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:46:57.93
  STEP: Creating a job @ 09/30/24 12:46:57.932
  STEP: Ensuring job reaches completions @ 09/30/24 12:46:57.939
  E0930 12:46:58.473180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:46:59.473810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:00.474204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:01.474388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:02.474631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:03.474979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:04.475835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:05.475923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:06.476420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:07.476620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:08.477011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:09.477292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:47:09.945120 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9473" for this suite. @ 09/30/24 12:47:09.947
• [12.039 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/30/24 12:47:09.952
  I0930 12:47:09.952434 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:47:09.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:47:09.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:47:09.962
  STEP: Setting up server cert @ 09/30/24 12:47:10.061
  E0930 12:47:10.478273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:47:10.484
  STEP: Deploying the webhook pod @ 09/30/24 12:47:10.488
  STEP: Wait for the deployment to be ready @ 09/30/24 12:47:10.496
  I0930 12:47:10.502345 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 12:47:11.478504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:12.478621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 12:47:12.508
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:47:12.519
  E0930 12:47:13.479070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:47:13.520263 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/30/24 12:47:13.524
  STEP: create a pod that should be denied by the webhook @ 09/30/24 12:47:13.538
  STEP: create a pod that causes the webhook to hang @ 09/30/24 12:47:13.547
  E0930 12:47:14.480091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:15.480367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:16.480559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:17.480761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:18.481250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:19.481410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:20.481568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:21.481749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:22.481921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:23.481988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/30/24 12:47:23.552
  STEP: create a configmap that should be admitted by the webhook @ 09/30/24 12:47:23.57
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/30/24 12:47:23.579
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/30/24 12:47:23.584
  STEP: create a namespace that bypass the webhook @ 09/30/24 12:47:23.588
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/30/24 12:47:23.597
  I0930 12:47:23.635913 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1470" for this suite. @ 09/30/24 12:47:23.638
  STEP: Destroying namespace "webhook-markers-294" for this suite. @ 09/30/24 12:47:23.641
  STEP: Destroying namespace "exempted-namespace-4923" for this suite. @ 09/30/24 12:47:23.644
• [13.698 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/30/24 12:47:23.65
  I0930 12:47:23.650213 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:47:23.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:47:23.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:47:23.698
  STEP: Creating configMap with name projected-configmap-test-volume-2ee332af-05ab-4aae-93d3-25e3c92b78b9 @ 09/30/24 12:47:23.7
  STEP: Creating a pod to test consume configMaps @ 09/30/24 12:47:23.703
  E0930 12:47:24.482736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:25.482960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:26.483132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:27.483319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:47:27.715
  I0930 12:47:27.717634 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-configmaps-03ee0cf4-8a54-43b8-a660-73e86325d997 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 12:47:27.722
  I0930 12:47:27.734932 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2409" for this suite. @ 09/30/24 12:47:27.736
• [4.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/30/24 12:47:27.74
  I0930 12:47:27.740475 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replication-controller @ 09/30/24 12:47:27.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:47:27.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:47:27.75
  STEP: Creating ReplicationController "e2e-rc-pvmz4" @ 09/30/24 12:47:27.752
  I0930 12:47:27.756071 20 rc.go:792] Get Replication Controller "e2e-rc-pvmz4" to confirm replicas
  E0930 12:47:28.483711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:47:28.756092 20 rc.go:792] Get Replication Controller "e2e-rc-pvmz4" to confirm replicas
  I0930 12:47:28.758035 20 rc.go:801] Found 1 replicas for "e2e-rc-pvmz4" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-pvmz4" @ 09/30/24 12:47:28.758
  STEP: Updating a scale subresource @ 09/30/24 12:47:28.759
  STEP: Verifying replicas where modified for replication controller "e2e-rc-pvmz4" @ 09/30/24 12:47:28.762
  I0930 12:47:28.762874 20 rc.go:792] Get Replication Controller "e2e-rc-pvmz4" to confirm replicas
  E0930 12:47:29.484161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:47:29.763711 20 rc.go:792] Get Replication Controller "e2e-rc-pvmz4" to confirm replicas
  I0930 12:47:29.765654 20 rc.go:801] Found 2 replicas for "e2e-rc-pvmz4" replication controller
  I0930 12:47:29.765760 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4308" for this suite. @ 09/30/24 12:47:29.767
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 09/30/24 12:47:29.771
  I0930 12:47:29.771403 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename svcaccounts @ 09/30/24 12:47:29.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:47:29.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:47:29.784
  STEP: Creating a pod to test service account token:  @ 09/30/24 12:47:29.786
  E0930 12:47:30.485176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:31.485258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:32.486324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:33.487071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:47:33.799
  I0930 12:47:33.801397 20 output.go:196] Trying to get logs from node worker-0 pod test-pod-b47fc185-4cb4-448c-9387-af6a7daa0533 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 12:47:33.804
  I0930 12:47:33.814300 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7509" for this suite. @ 09/30/24 12:47:33.816
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/30/24 12:47:33.819
  I0930 12:47:33.819445 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename init-container @ 09/30/24 12:47:33.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:47:33.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:47:33.832
  STEP: creating the pod @ 09/30/24 12:47:33.833
  I0930 12:47:33.834035 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0930 12:47:34.487719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:35.488657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:36.489448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:37.489652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:38.490117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:39.490306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:40.490494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:41.490699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:42.490892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:43.491196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:44.491372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:45.491470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:46.491549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:47.491969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:48.492351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:49.492515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:50.492724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:51.492889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:52.493086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:53.493289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:54.493469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:55.493656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:56.493732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:57.493905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:58.494004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:47:59.494189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:00.494346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:01.494534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:02.494716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:03.494963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:04.495166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:05.495363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:06.495543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:07.495715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:08.496061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:09.497066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:10.497171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:11.497335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:48:12.096297 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-a9415ce2-a11c-44a8-8fae-dd0c1efdefea", GenerateName:"", Namespace:"init-container-2528", SelfLink:"", UID:"2a4f3bcb-fbd5-48ae-be9a-6d2dfff6e8bc", ResourceVersion:"22480", Generation:0, CreationTimestamp:time.Date(2024, time.September, 30, 12, 47, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"834028277"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 47, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003bb6510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 30, 12, 48, 12, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4003bb6558), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-7v58h", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0x4000ccb7c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-7v58h", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-7v58h", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-7v58h", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0x4003b18678), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0x40042caf00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0x4003b18700)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0x4003b18720)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0x4003b18728), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0x4003b1872c), PreemptionPolicy:(*v1.PreemptionPolicy)(0x400132b760), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 30, 12, 47, 35, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 30, 12, 47, 33, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 30, 12, 47, 33, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 30, 12, 47, 33, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 30, 12, 47, 33, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.0.42.49", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.0.42.49"}}, PodIP:"10.244.0.13", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.0.13"}}, StartTime:time.Date(2024, time.September, 30, 12, 47, 33, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0x4000245ea0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0x4000245f10)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://377243bfba6d1a9ffec0575717dce55cdeee8e9b770bcd99f8275dd1edd2864c", Started:(*bool)(0x4003b187da), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-7v58h", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0x400132b790)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0x4000ccb860), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0x4003b187ed), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-7v58h", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0x400132b7c0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0x4000ccb800), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0x4003b187af), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-7v58h", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0x400132b780)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0930 12:48:12.096427 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2528" for this suite. @ 09/30/24 12:48:12.098
• [38.282 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/30/24 12:48:12.101
  I0930 12:48:12.101948 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:48:12.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:48:12.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:48:12.115
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/30/24 12:48:12.117
  E0930 12:48:12.497463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:13.497883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:48:14.129
  I0930 12:48:14.132380 20 output.go:196] Trying to get logs from node worker-1 pod pod-fc0702ab-75b4-4466-89ec-0cc294def1cc container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:48:14.136
  I0930 12:48:14.147477 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9658" for this suite. @ 09/30/24 12:48:14.149
• [2.051 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/30/24 12:48:14.153
  I0930 12:48:14.153138 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename ingress @ 09/30/24 12:48:14.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:48:14.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:48:14.166
  STEP: getting /apis @ 09/30/24 12:48:14.168
  STEP: getting /apis/networking.k8s.io @ 09/30/24 12:48:14.17
  STEP: getting /apis/networking.k8s.iov1 @ 09/30/24 12:48:14.171
  STEP: creating @ 09/30/24 12:48:14.171
  STEP: getting @ 09/30/24 12:48:14.181
  STEP: listing @ 09/30/24 12:48:14.183
  STEP: watching @ 09/30/24 12:48:14.184
  I0930 12:48:14.184955 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/30/24 12:48:14.185
  STEP: cluster-wide watching @ 09/30/24 12:48:14.187
  I0930 12:48:14.187421 20 ingress.go:198] starting watch
  STEP: patching @ 09/30/24 12:48:14.188
  STEP: updating @ 09/30/24 12:48:14.191
  I0930 12:48:14.198046 20 ingress.go:221] waiting for watch events with expected annotations
  I0930 12:48:14.198095 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/30/24 12:48:14.198
  STEP: updating /status @ 09/30/24 12:48:14.201
  STEP: get /status @ 09/30/24 12:48:14.206
  STEP: deleting @ 09/30/24 12:48:14.208
  STEP: deleting a collection @ 09/30/24 12:48:14.213
  I0930 12:48:14.220685 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3240" for this suite. @ 09/30/24 12:48:14.25
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 09/30/24 12:48:14.255
  I0930 12:48:14.255888 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename statefulset @ 09/30/24 12:48:14.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:48:14.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:48:14.266
  STEP: Creating service test in namespace statefulset-4267 @ 09/30/24 12:48:14.268
  STEP: Creating statefulset ss in namespace statefulset-4267 @ 09/30/24 12:48:14.273
  I0930 12:48:14.279227 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0930 12:48:14.498613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:15.498964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:16.499030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:17.499228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:18.499308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:19.499514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:20.499697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:21.499806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:22.499966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:23.500163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:48:24.280726 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/30/24 12:48:24.283
  STEP: updating a scale subresource @ 09/30/24 12:48:24.285
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/30/24 12:48:24.29
  STEP: Patch a scale subresource @ 09/30/24 12:48:24.291
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/30/24 12:48:24.297
  I0930 12:48:24.300118 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4267
  I0930 12:48:24.302075 20 rest.go:150] Scaling statefulset ss to 0
  E0930 12:48:24.501037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:25.501228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:26.501295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:27.501406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:28.501633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:29.501817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:30.502002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:31.502167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:32.502356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:33.502575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:48:34.312081 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0930 12:48:34.313782 20 rest.go:88] Deleting statefulset ss
  I0930 12:48:34.320829 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4267" for this suite. @ 09/30/24 12:48:34.322
• [20.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/30/24 12:48:34.328
  I0930 12:48:34.328312 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:48:34.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:48:34.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:48:34.34
  STEP: Setting up server cert @ 09/30/24 12:48:34.437
  E0930 12:48:34.502817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:48:34.908
  STEP: Deploying the webhook pod @ 09/30/24 12:48:34.913
  STEP: Wait for the deployment to be ready @ 09/30/24 12:48:34.922
  I0930 12:48:34.927613 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 12:48:35.503201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:36.503809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 12:48:36.934
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:48:36.942
  E0930 12:48:37.503890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:48:37.943476 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/30/24 12:48:37.947
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/30/24 12:48:37.96
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/30/24 12:48:37.968
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/30/24 12:48:37.975
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/30/24 12:48:37.981
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/30/24 12:48:37.987
  I0930 12:48:38.014080 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2467" for this suite. @ 09/30/24 12:48:38.015
  STEP: Destroying namespace "webhook-markers-1300" for this suite. @ 09/30/24 12:48:38.023
• [3.699 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/30/24 12:48:38.027
  I0930 12:48:38.027496 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename var-expansion @ 09/30/24 12:48:38.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:48:38.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:48:38.04
  STEP: creating the pod with failed condition @ 09/30/24 12:48:38.042
  E0930 12:48:38.504535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:39.505339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:40.505629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:41.505726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:42.506121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:43.506362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:44.506571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:45.506775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:46.507214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:47.507409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:48.507728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:49.507644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:50.507861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:51.508036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:52.508237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:53.508452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:54.508568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:55.508747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:56.509764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:57.509925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:58.510329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:48:59.510491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:00.511416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:01.511598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:02.511909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:03.512113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:04.512400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:05.512556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:06.512769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:07.512930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:08.513419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:09.513597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:10.513741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:11.513907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:12.514279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:13.514654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:14.514850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:15.515011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:16.515455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:17.515632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:18.515789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:19.515960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:20.516245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:21.516410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:22.516566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:23.516977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:24.517232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:25.517394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:26.517810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:27.517896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:28.518284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:29.518444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:30.519343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:31.519501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:32.519797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:33.520013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:34.520300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:35.520467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:36.521195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:37.521355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:38.521759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:39.522042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:40.522376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:41.522544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:42.522826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:43.523046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:44.523401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:45.523559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:46.524108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:47.524276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:48.524360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:49.524519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:50.524816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:51.524976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:52.525496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:53.525600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:54.525801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:55.525965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:56.526333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:57.527246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:58.527721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:49:59.527877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:00.527982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:01.528148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:02.528415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:03.528642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:04.528945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:05.529156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:06.529645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:07.529805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:08.530049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:09.530207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:10.530420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:11.530596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:12.530699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:13.530996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:14.531157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:15.531318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:16.531975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:17.532142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:18.532516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:19.532696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:20.532952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:21.533113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:22.533380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:23.533593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:24.533888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:25.534054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:26.534458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:27.534634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:28.535061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:29.535230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:30.535523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:31.535707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:32.535928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:33.536140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:34.536322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:35.536479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:36.536938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:37.537102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/30/24 12:50:38.048
  E0930 12:50:38.537629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:50:38.558102 20 pod_client.go:173] Successfully updated pod "var-expansion-9592ae44-74fe-4637-a150-105b85080841"
  STEP: waiting for pod running @ 09/30/24 12:50:38.558
  E0930 12:50:39.538090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:40.538275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/30/24 12:50:40.562
  I0930 12:50:40.562745 20 delete.go:62] Deleting pod "var-expansion-9592ae44-74fe-4637-a150-105b85080841" in namespace "var-expansion-333"
  I0930 12:50:40.568508 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-9592ae44-74fe-4637-a150-105b85080841" to be fully deleted
  E0930 12:50:41.538794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:42.538980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:43.539467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:44.539664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:45.539918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:46.540135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:47.540714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:48.540990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:49.541613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:50.541700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:51.541949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:52.542119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:53.542655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:54.542734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:55.543039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:56.543209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:57.543699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:58.543977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:50:59.544061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:00.544217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:01.544534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:02.544693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:03.545106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:04.545206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:05.545523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:06.545700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:07.545976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:08.546181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:09.546492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:10.546667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:11.546730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:12.546903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:51:12.612014 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-333" for this suite. @ 09/30/24 12:51:12.614
• [154.590 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/30/24 12:51:12.617
  I0930 12:51:12.617779 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubelet-test @ 09/30/24 12:51:12.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:51:12.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:51:12.63
  E0930 12:51:13.546945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:14.547218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:15.547413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:16.547799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:51:16.641232 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9381" for this suite. @ 09/30/24 12:51:16.643
• [4.029 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/30/24 12:51:16.646
  I0930 12:51:16.646638 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 12:51:16.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:51:16.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:51:16.659
  STEP: Discovering how many secrets are in namespace by default @ 09/30/24 12:51:16.661
  E0930 12:51:17.548506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:18.549120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:19.549544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:20.549957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:21.550470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/30/24 12:51:21.664
  E0930 12:51:22.550668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:23.551120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:24.551467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:25.552064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:26.552500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/30/24 12:51:26.668
  STEP: Ensuring resource quota status is calculated @ 09/30/24 12:51:26.673
  E0930 12:51:27.553114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:28.553509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/30/24 12:51:28.675
  STEP: Ensuring resource quota status captures secret creation @ 09/30/24 12:51:28.684
  E0930 12:51:29.554520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:30.554719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/30/24 12:51:30.687
  STEP: Ensuring resource quota status released usage @ 09/30/24 12:51:30.69
  E0930 12:51:31.555534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:32.555636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:51:32.693379 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3405" for this suite. @ 09/30/24 12:51:32.695
• [16.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/30/24 12:51:32.701
  I0930 12:51:32.701255 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename taint-single-pod @ 09/30/24 12:51:32.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:51:32.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:51:32.711
  I0930 12:51:32.713755 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0930 12:51:33.556091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:34.556466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:35.557518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:36.557716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:37.557808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:38.558612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:39.559384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:40.559549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:41.560518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:42.560694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:43.561339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:44.561439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:45.562485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:46.562767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:47.563714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:48.563803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:49.564849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:50.565150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:51.565246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:52.565407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:53.566429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:54.566621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:55.567353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:56.567542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:57.567953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:58.568257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:51:59.569142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:00.569337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:01.569446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:02.569643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:03.570568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:04.570771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:05.570861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:06.571024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:07.571123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:08.571400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:09.571507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:10.571678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:11.571839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:12.572008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:13.572138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:14.572335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:15.573294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:16.573478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:17.574313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:18.574530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:19.575222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:20.575332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:21.575568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:22.575674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:23.575846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:24.576057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:25.577087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:26.577273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:27.578364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:28.578622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:29.578840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:30.579083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:31.579969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:32.580078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:52:32.714475 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0930 12:52:32.716807 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/30/24 12:52:32.716
  I0930 12:52:32.927656 20 taints.go:294] Pod is running on worker-0. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/30/24 12:52:32.927
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/30/24 12:52:32.935
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/30/24 12:52:32.937
  I0930 12:52:32.937677 20 taints.go:313] Pod wasn't evicted. Proceeding
  I0930 12:52:32.937690 20 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/30/24 12:52:32.945
  STEP: Waiting some time to make sure that toleration time passed. @ 09/30/24 12:52:32.947
  E0930 12:52:33.580390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:34.580603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:35.580928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:36.581115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:37.581281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:38.581604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:39.581807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:40.581878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:41.582057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:42.582222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:43.583158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:44.583667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:45.583854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:46.584018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:47.584188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:48.584521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:49.584522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:50.584613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:51.584773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:52.584935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:53.585143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:54.585255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:55.585329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:56.585488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:57.585662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:58.585736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:52:59.585890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:00.586192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:01.586358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:02.586525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:03.587281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:04.587441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:05.587787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:06.587882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:07.588041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:08.588102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:09.588256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:10.589091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:11.589254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:12.589440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:13.589670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:14.589828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:15.590269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:16.590439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:17.591342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:18.591563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:19.591709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:20.591875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:21.592777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:22.592936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:23.593156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:24.593324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:25.593760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:26.593925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:27.594771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:28.595063      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:29.595775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:30.596771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:31.597768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:32.598706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:33.598987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:34.599169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:35.599763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:36.599863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:37.599958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:38.600178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:39.600336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:40.600496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:41.600672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:42.600750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:43.601030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:44.601130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:45.601769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:46.601869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:47.602058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:53:47.948545 20 taints.go:329] Pod wasn't evicted. Test successful
  I0930 12:53:47.948696 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1729" for this suite. @ 09/30/24 12:53:47.951
• [135.256 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/30/24 12:53:47.957
  I0930 12:53:47.957224 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 12:53:47.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:53:47.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:53:47.967
  STEP: Creating a pod to test downward api env vars @ 09/30/24 12:53:47.969
  E0930 12:53:48.602239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:49.602503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:53:49.982
  I0930 12:53:49.984214 20 output.go:196] Trying to get logs from node worker-0 pod downward-api-f2d8bebb-c545-4539-b397-6dc4b17df02d container dapi-container: <nil>
  STEP: delete the pod @ 09/30/24 12:53:49.994
  I0930 12:53:50.005494 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4132" for this suite. @ 09/30/24 12:53:50.007
• [2.054 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/30/24 12:53:50.011
  I0930 12:53:50.011531 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/30/24 12:53:50.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:53:50.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:53:50.024
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/30/24 12:53:50.027
  I0930 12:53:50.027382 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 12:53:50.603506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:53:51.242943 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 12:53:51.604012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:52.604935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:53.605624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:54.606543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:55.607326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:53:56.060390 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3622" for this suite. @ 09/30/24 12:53:56.065
• [6.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/30/24 12:53:56.069
  I0930 12:53:56.069110 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename deployment @ 09/30/24 12:53:56.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:53:56.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:53:56.081
  STEP: creating a Deployment @ 09/30/24 12:53:56.085
  I0930 12:53:56.085833 20 deployment.go:507] Creating simple deployment test-deployment-25z7s
  I0930 12:53:56.095550 20 deployment.go:222] deployment "test-deployment-25z7s" doesn't have the required revision set
  E0930 12:53:56.608182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:53:57.608516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/30/24 12:53:58.102
  I0930 12:53:58.104549 20 deployment.go:532] Deployment test-deployment-25z7s has Conditions: [{Available True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25z7s-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/30/24 12:53:58.104
  I0930 12:53:58.109671 20 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 12, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 12, 53, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 12, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 12, 53, 56, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-25z7s-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/30/24 12:53:58.109
  I0930 12:53:58.111051 20 deployment.go:579] Observed &Deployment event: ADDED
  I0930 12:53:58.111091 20 deployment.go:575] Observed Deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-25z7s-f4dbbbf74"}
  I0930 12:53:58.111175 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0930 12:53:58.111194 20 deployment.go:575] Observed Deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-25z7s-f4dbbbf74"}
  I0930 12:53:58.111203 20 deployment.go:575] Observed Deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0930 12:53:58.111281 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0930 12:53:58.111301 20 deployment.go:575] Observed Deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0930 12:53:58.111312 20 deployment.go:575] Observed Deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-25z7s-f4dbbbf74" is progressing.}
  I0930 12:53:58.111384 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0930 12:53:58.111425 20 deployment.go:575] Observed Deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0930 12:53:58.111437 20 deployment.go:575] Observed Deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25z7s-f4dbbbf74" has successfully progressed.}
  I0930 12:53:58.111505 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0930 12:53:58.111524 20 deployment.go:575] Observed Deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0930 12:53:58.111532 20 deployment.go:575] Observed Deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25z7s-f4dbbbf74" has successfully progressed.}
  I0930 12:53:58.111543 20 deployment.go:572] Found Deployment test-deployment-25z7s in namespace deployment-2521 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0930 12:53:58.111553 20 deployment.go:583] Deployment test-deployment-25z7s has an updated status
  STEP: patching the Statefulset Status @ 09/30/24 12:53:58.111
  I0930 12:53:58.111595 20 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0930 12:53:58.117494 20 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/30/24 12:53:58.117
  I0930 12:53:58.118663 20 deployment.go:616] Observed &Deployment event: ADDED
  I0930 12:53:58.118723 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-25z7s-f4dbbbf74"}
  I0930 12:53:58.118831 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0930 12:53:58.118855 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-25z7s-f4dbbbf74"}
  I0930 12:53:58.118864 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0930 12:53:58.118932 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0930 12:53:58.118946 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0930 12:53:58.118954 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-25z7s-f4dbbbf74" is progressing.}
  I0930 12:53:58.119022 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0930 12:53:58.119040 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0930 12:53:58.119074 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25z7s-f4dbbbf74" has successfully progressed.}
  I0930 12:53:58.119155 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0930 12:53:58.119180 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0930 12:53:58.119210 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-30 12:53:56 +0000 UTC 2024-09-30 12:53:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25z7s-f4dbbbf74" has successfully progressed.}
  I0930 12:53:58.119224 20 deployment.go:612] Observed deployment test-deployment-25z7s in namespace deployment-2521 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0930 12:53:58.119298 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0930 12:53:58.119317 20 deployment.go:609] Found deployment test-deployment-25z7s in namespace deployment-2521 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0930 12:53:58.119326 20 deployment.go:620] Deployment test-deployment-25z7s has a patched status
  I0930 12:53:58.121478 20 deployment.go:633] Deployment "test-deployment-25z7s":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-25z7s",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2521",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3f4f3c1-8606-48fc-bcbd-11b153f00670",
      ResourceVersion: (string) (len=5) "23657",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-25z7s-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0930 12:53:58.201249 20 deployment.go:39] New ReplicaSet "test-deployment-25z7s-f4dbbbf74" of Deployment "test-deployment-25z7s":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-25z7s-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2521",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1c8138e-7cc2-4f1b-b332-1046a3633ed2",
      ResourceVersion: (string) (len=5) "23652",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-25z7s",
          UID: (types.UID) (len=36) "e3f4f3c1-8606-48fc-bcbd-11b153f00670",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 65 33 66  |k:{\"uid\":\"e3f|
              00000120  34 66 33 63 31 2d 38 36  30 36 2d 34 38 66 63 2d  |4f3c1-8606-48fc-|
              00000130  62 63 62 64 2d 31 31 62  31 35 33 66 30 30 36 37  |bcbd-11b153f0067|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 12:53:58.204296 20 deployment.go:67] Pod "test-deployment-25z7s-f4dbbbf74-ggplf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-25z7s-f4dbbbf74-ggplf",
      GenerateName: (string) (len=32) "test-deployment-25z7s-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-2521",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bc020b0-e051-4d1b-af22-2306b3294d35",
      ResourceVersion: (string) (len=5) "23651",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-25z7s-f4dbbbf74",
          UID: (types.UID) (len=36) "f1c8138e-7cc2-4f1b-b332-1046a3633ed2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 66 31 63 38 31 33 38  65 2d 37 63 63 32 2d 34  |"f1c8138e-7cc2-4|
              000000a0  66 31 62 2d 62 33 33 32  2d 31 30 34 36 61 33 36  |f1b-b332-1046a36|
              000000b0  33 33 65 64 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |33ed2\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 32  30 5c 22 7d 22 3a 7b 22  |.244.0.20\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vgpq9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vgpq9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863297636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=11) "10.244.0.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863297636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863297636,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0a043847622f2e56e4d4ceaf766f596dcaa7865b4a0beea1108b32b1be663e2f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vgpq9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 12:53:58.205616 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2521" for this suite. @ 09/30/24 12:53:58.207
• [2.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 09/30/24 12:53:58.21
  I0930 12:53:58.210919 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:53:58.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:53:58.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:53:58.223
  STEP: creating Agnhost RC @ 09/30/24 12:53:58.225
  I0930 12:53:58.225719 20 kubectl.go:1537] namespace kubectl-8741
  I0930 12:53:58.225770 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-8741 create -f -'
  I0930 12:53:58.312754 20 builder.go:146] stderr: ""
  I0930 12:53:58.312878 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/30/24 12:53:58.312
  E0930 12:53:58.609223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:53:59.315550 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0930 12:53:59.315606 20 framework.go:733] Found 0 / 1
  E0930 12:53:59.609995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:00.316444 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0930 12:54:00.316486 20 framework.go:733] Found 1 / 1
  I0930 12:54:00.316500 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0930 12:54:00.318189 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0930 12:54:00.318217 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0930 12:54:00.318226 20 kubectl.go:1544] wait on agnhost-primary startup in kubectl-8741 
  I0930 12:54:00.318276 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-8741 logs agnhost-primary-gw5zv agnhost-primary'
  I0930 12:54:00.368951 20 builder.go:146] stderr: ""
  I0930 12:54:00.369024 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/30/24 12:54:00.369
  I0930 12:54:00.369108 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-8741 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0930 12:54:00.424827 20 builder.go:146] stderr: ""
  I0930 12:54:00.424869 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I0930 12:54:00.426681 20 utils.go:1203] Service rm2 in namespace kubectl-8741 found.
  E0930 12:54:00.610959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:01.611074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/30/24 12:54:02.431
  I0930 12:54:02.431617 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-8741 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0930 12:54:02.486929 20 builder.go:146] stderr: ""
  I0930 12:54:02.486976 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I0930 12:54:02.488728 20 utils.go:1203] Service rm3 in namespace kubectl-8741 found.
  E0930 12:54:02.612021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:03.612161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:04.494393 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8741" for this suite. @ 09/30/24 12:54:04.496
• [6.289 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/30/24 12:54:04.5
  I0930 12:54:04.500176 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename hostport @ 09/30/24 12:54:04.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:54:04.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:54:04.51
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/30/24 12:54:04.602
  E0930 12:54:04.612595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:05.613269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.0.42.49 on the node which pod1 resides and expect scheduled @ 09/30/24 12:54:06.612
  E0930 12:54:06.613544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:07.614511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:08.614792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.0.42.49 but use UDP protocol on the node which pod2 resides @ 09/30/24 12:54:08.622
  E0930 12:54:09.615303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:10.615491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:11.615692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:12.615776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:13.616096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:14.616261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:15.616393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:16.616631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:17.616983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:18.617078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:19.617321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:20.617515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:21.618556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:22.618945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/30/24 12:54:22.654
  I0930 12:54:22.654892 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.0.42.49 http://127.0.0.1:54323/hostname] Namespace:hostport-9185 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:54:22.654908 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:54:22.655340 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:54:22.655393 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9185/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.0.42.49+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.42.49, port: 54323 @ 09/30/24 12:54:22.695
  I0930 12:54:22.695557 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.0.42.49:54323/hostname] Namespace:hostport-9185 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:54:22.695572 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:54:22.696008 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:54:22.696061 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9185/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.0.42.49%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.42.49, port: 54323 UDP @ 09/30/24 12:54:22.732
  I0930 12:54:22.732328 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.0.42.49 54323] Namespace:hostport-9185 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:54:22.732346 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:54:22.732803 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:54:22.732854 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9185/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.0.42.49+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0930 12:54:23.619711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:24.619971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:25.620427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:26.621174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:27.621337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:27.769571 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9185" for this suite. @ 09/30/24 12:54:27.771
• [23.275 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 09/30/24 12:54:27.775
  I0930 12:54:27.775333 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename statefulset @ 09/30/24 12:54:27.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:54:27.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:54:27.785
  STEP: Creating service test in namespace statefulset-9919 @ 09/30/24 12:54:27.787
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/30/24 12:54:27.79
  STEP: Creating stateful set ss in namespace statefulset-9919 @ 09/30/24 12:54:27.793
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9919 @ 09/30/24 12:54:27.798
  I0930 12:54:27.806609 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0930 12:54:28.621457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:29.621806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:30.621897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:31.622083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:32.622246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:33.622492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:34.622719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:35.622902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:36.623082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:37.623155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:37.800786 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/30/24 12:54:37.8
  I0930 12:54:37.802628 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-9919 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0930 12:54:37.887459 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 12:54:37.887507 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 12:54:37.887517 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0930 12:54:37.889606 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0930 12:54:38.624174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:39.624269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:40.624451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:41.624720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:42.624912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:43.625128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:44.625323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:45.625509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:46.625701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:47.625883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:47.890992 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0930 12:54:47.891037 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0930 12:54:47.991150 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999638s
  E0930 12:54:48.626790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:48.993682 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.906750157s
  E0930 12:54:49.627272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:49.997180 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.90326034s
  E0930 12:54:50.627773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:51.000575 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.899819343s
  E0930 12:54:51.628165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:52.004080 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.896357156s
  E0930 12:54:52.628673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:53.007246 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.893124312s
  E0930 12:54:53.628917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:54.009783 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.890671487s
  E0930 12:54:54.629402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:55.012158 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.888176348s
  E0930 12:54:55.629755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:56.014703 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.885822691s
  E0930 12:54:56.630245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:54:57.018230 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 882.272189ms
  E0930 12:54:57.630863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9919 @ 09/30/24 12:54:58.018
  I0930 12:54:58.021017 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-9919 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0930 12:54:58.103829 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0930 12:54:58.103870 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0930 12:54:58.103883 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0930 12:54:58.105906 20 wait.go:40] Found 1 stateful pods, waiting for 3
  E0930 12:54:58.631006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:54:59.631075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:00.631258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:01.631433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:02.631536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:03.631807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:04.631991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:05.632079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:06.632272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:07.632341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:08.107286 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0930 12:55:08.107328 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0930 12:55:08.107336 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/30/24 12:55:08.107
  STEP: Scale down will halt with unhealthy stateful pod @ 09/30/24 12:55:08.107
  I0930 12:55:08.110405 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-9919 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0930 12:55:08.188728 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 12:55:08.188772 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 12:55:08.188784 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0930 12:55:08.188846 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-9919 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0930 12:55:08.274088 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 12:55:08.274131 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 12:55:08.274141 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0930 12:55:08.274198 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-9919 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0930 12:55:08.357280 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 12:55:08.357568 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 12:55:08.357607 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0930 12:55:08.357621 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0930 12:55:08.359571 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0930 12:55:08.632572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:09.633339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:10.633528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:11.633642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:12.633698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:13.634008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:14.634110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:15.634299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:16.634495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:17.634552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:18.362751 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0930 12:55:18.362785 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0930 12:55:18.362793 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0930 12:55:18.463884 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999782s
  E0930 12:55:18.635068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:19.466307 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.903713193s
  E0930 12:55:19.635534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:20.468903 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.901251986s
  E0930 12:55:20.636128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:21.471368 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.898655687s
  E0930 12:55:21.636601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:22.474032 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.896181945s
  E0930 12:55:22.637276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:23.476689 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.893431701s
  E0930 12:55:23.637878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:24.479218 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.890895143s
  E0930 12:55:24.638399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:25.481738 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.888376496s
  E0930 12:55:25.638936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:26.484251 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.885834784s
  E0930 12:55:26.639474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:27.486813 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 883.30524ms
  E0930 12:55:27.639956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9919 @ 09/30/24 12:55:28.486
  I0930 12:55:28.489733 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-9919 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0930 12:55:28.577153 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0930 12:55:28.577275 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0930 12:55:28.577293 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0930 12:55:28.577347 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-9919 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0930 12:55:28.640746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:55:28.657768 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0930 12:55:28.657895 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0930 12:55:28.657906 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0930 12:55:28.657960 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-9919 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0930 12:55:28.735040 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0930 12:55:28.735084 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0930 12:55:28.735094 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0930 12:55:28.735107 20 rest.go:150] Scaling statefulset ss to 0
  E0930 12:55:29.641603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:30.641693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:31.641767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:32.642185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:33.642429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:34.642608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:35.642767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:36.642885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:37.643070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:38.643316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/30/24 12:55:38.739
  I0930 12:55:38.740077 20 statefulset.go:138] Deleting all statefulset in ns statefulset-9919
  I0930 12:55:38.742016 20 rest.go:150] Scaling statefulset ss to 0
  I0930 12:55:38.745113 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0930 12:55:38.746693 20 rest.go:88] Deleting statefulset ss
  I0930 12:55:38.753537 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9919" for this suite. @ 09/30/24 12:55:38.755
• [70.983 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/30/24 12:55:38.758
  I0930 12:55:38.758914 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 12:55:38.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:55:38.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:55:38.771
  STEP: Creating secret with name secret-test-5550c96d-e6a4-4a43-bc0b-cc105a4318a0 @ 09/30/24 12:55:38.773
  STEP: Creating a pod to test consume secrets @ 09/30/24 12:55:38.776
  E0930 12:55:39.644047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:40.644298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:41.644725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:42.644825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:55:42.79
  I0930 12:55:42.791734 20 output.go:196] Trying to get logs from node worker-0 pod pod-secrets-f42732b1-2163-400d-a35f-a8f05b230fdf container secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 12:55:42.8
  I0930 12:55:42.810374 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5067" for this suite. @ 09/30/24 12:55:42.812
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/30/24 12:55:42.819
  I0930 12:55:42.819425 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename var-expansion @ 09/30/24 12:55:42.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:55:42.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:55:42.83
  STEP: creating the pod @ 09/30/24 12:55:42.832
  STEP: waiting for pod running @ 09/30/24 12:55:42.839
  E0930 12:55:43.645078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:44.645245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/30/24 12:55:44.843
  I0930 12:55:44.845529 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1602 PodName:var-expansion-27ed36f1-f377-49f5-a3bf-10ef1d16a815 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:55:44.845564 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:55:44.846003 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:55:44.846055 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1602/pods/var-expansion-27ed36f1-f377-49f5-a3bf-10ef1d16a815/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/30/24 12:55:44.876
  I0930 12:55:44.878543 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1602 PodName:var-expansion-27ed36f1-f377-49f5-a3bf-10ef1d16a815 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:55:44.878577 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:55:44.879031 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:55:44.879081 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1602/pods/var-expansion-27ed36f1-f377-49f5-a3bf-10ef1d16a815/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/30/24 12:55:44.908
  I0930 12:55:45.417777 20 pod_client.go:173] Successfully updated pod "var-expansion-27ed36f1-f377-49f5-a3bf-10ef1d16a815"
  STEP: waiting for annotated pod running @ 09/30/24 12:55:45.417
  STEP: deleting the pod gracefully @ 09/30/24 12:55:45.419
  I0930 12:55:45.419845 20 delete.go:62] Deleting pod "var-expansion-27ed36f1-f377-49f5-a3bf-10ef1d16a815" in namespace "var-expansion-1602"
  I0930 12:55:45.425223 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-27ed36f1-f377-49f5-a3bf-10ef1d16a815" to be fully deleted
  E0930 12:55:45.646327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:46.646513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:47.647551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:48.647840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:49.648889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:50.649084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:51.649313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:52.649496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:53.649954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:54.650116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:55.651211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:56.651405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:57.651753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:58.652069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:55:59.652160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:00.652350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:01.653204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:02.653394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:03.654290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:04.654646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:05.655472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:06.655666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:07.655955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:08.656175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:09.656724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:10.656885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:11.657232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:12.657499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:13.657949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:14.658111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:15.658961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:16.659127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:56:17.467949 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1602" for this suite. @ 09/30/24 12:56:17.469
• [34.654 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/30/24 12:56:17.473
  I0930 12:56:17.473400 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/30/24 12:56:17.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:56:17.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:56:17.484
  I0930 12:56:17.486182 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0930 12:56:17.659952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:18.660201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:19.661119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:20.661283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:21.662327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:22.662517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:23.662632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:24.662801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:25.663289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:26.663476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:27.664240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:28.664504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:29.664555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:30.664731      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:31.665726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:32.665912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:33.666712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:34.666910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:35.666945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:36.667133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:37.667199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:38.667465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:39.668477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:40.668676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:41.669017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:42.669218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:43.669377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:44.669559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:45.670515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:46.671241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:47.671433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:48.671800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:49.672831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:50.673132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:51.673709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:52.673898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:53.674088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:54.674188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:55.674226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:56.674417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:57.674444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:58.675260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:56:59.675959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:00.676152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:01.676253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:02.676439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:03.676560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:04.676771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:05.677840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:06.677935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:07.678035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:08.678189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:09.679225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:10.679409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:11.679964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:12.680154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:13.681198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:14.681290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:15.681423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:16.681518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:57:17.486793 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0930 12:57:17.488979 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/30/24 12:57:17.489
  E0930 12:57:17.682143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:57:17.701489 20 taints.go:463] Pod1 is running on worker-0. Tainting Node
  E0930 12:57:18.682181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:19.682908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:57:19.913897 20 taints.go:471] Pod2 is running on worker-0. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/30/24 12:57:19.913
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/30/24 12:57:19.921
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/30/24 12:57:19.923
  E0930 12:57:20.683005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:21.683191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:22.683360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:23.683625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:24.683903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:25.684953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:57:25.966902 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0930 12:57:26.685033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:27.685228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:28.686252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:29.686428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:30.686628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:31.686791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:32.686979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:33.687297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:34.687386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:35.687547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:36.687717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:37.687821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:38.687911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:39.688078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:40.688247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:41.688413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:42.688574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:43.689039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:44.689624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:45.690039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:57:45.999009 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/30/24 12:57:46.007
  I0930 12:57:46.009034 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8542" for this suite. @ 09/30/24 12:57:46.01
• [88.543 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/30/24 12:57:46.017
  I0930 12:57:46.017332 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 12:57:46.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:57:46.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:57:46.029
  STEP: creating service multi-endpoint-test in namespace services-3106 @ 09/30/24 12:57:46.031
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3106 to expose endpoints map[] @ 09/30/24 12:57:46.038
  I0930 12:57:46.040324 20 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0930 12:57:46.690172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:57:47.045078 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3106 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3106 @ 09/30/24 12:57:47.045
  E0930 12:57:47.691029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:48.691296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3106 to expose endpoints map[pod1:[100]] @ 09/30/24 12:57:49.057
  I0930 12:57:49.062941 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3106 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3106 @ 09/30/24 12:57:49.062
  E0930 12:57:49.691397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:50.691493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3106 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/30/24 12:57:51.073
  I0930 12:57:51.082716 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3106 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/30/24 12:57:51.082
  I0930 12:57:51.082778 20 resource.go:361] Creating new exec pod
  E0930 12:57:51.692405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:52.693432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:53.693726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:57:54.090291 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0930 12:57:54.694608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:55.694884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:57:56.176312 20 builder.go:135] rc: 1
  I0930 12:57:56.176373 20 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 12:57:56.176538 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0930 12:57:56.695270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:57.695528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:57:58.258957 20 builder.go:135] rc: 1
  I0930 12:57:58.259026 20 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 12:57:58.259113 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0930 12:57:58.696256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:57:59.696520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:00.343063 20 builder.go:135] rc: 1
  I0930 12:58:00.343127 20 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 12:58:00.343221 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0930 12:58:00.697112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:01.698125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:02.424726 20 builder.go:135] rc: 1
  I0930 12:58:02.424781 20 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 12:58:02.424856 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0930 12:58:02.699156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:03.538423 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0930 12:58:03.538468 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:58:03.538554 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.186.11 80'
  I0930 12:58:03.617870 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.186.11 80\nConnection to 10.97.186.11 80 port [tcp/http] succeeded!\n"
  I0930 12:58:03.617917 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:58:03.618002 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0930 12:58:03.695769 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0930 12:58:03.695820 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 12:58:03.695896 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-3106 exec execpodm66wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.186.11 81'
  E0930 12:58:03.700188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:03.775650 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.186.11 81\nConnection to 10.97.186.11 81 port [tcp/*] succeeded!\n"
  I0930 12:58:03.775743 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3106 @ 09/30/24 12:58:03.775
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3106 to expose endpoints map[pod2:[101]] @ 09/30/24 12:58:03.784
  I0930 12:58:03.791627 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3106 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3106 @ 09/30/24 12:58:03.791
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3106 to expose endpoints map[] @ 09/30/24 12:58:03.8
  I0930 12:58:03.809690 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-3106 exposes endpoints map[]
  I0930 12:58:03.820048 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3106" for this suite. @ 09/30/24 12:58:03.822
• [17.810 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 09/30/24 12:58:03.827
  I0930 12:58:03.828307 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 12:58:03.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:03.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:03.842
  I0930 12:58:03.845659 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-7730 create -f -'
  I0930 12:58:03.941315 20 builder.go:146] stderr: ""
  I0930 12:58:03.941451 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0930 12:58:03.941506 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-7730 create -f -'
  I0930 12:58:04.032516 20 builder.go:146] stderr: ""
  I0930 12:58:04.032558 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/30/24 12:58:04.032
  E0930 12:58:04.700795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:05.035675 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0930 12:58:05.035715 20 framework.go:733] Found 1 / 1
  I0930 12:58:05.035730 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0930 12:58:05.037573 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0930 12:58:05.037626 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0930 12:58:05.037672 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-7730 describe pod agnhost-primary-rr8br'
  I0930 12:58:05.091373 20 builder.go:146] stderr: ""
  I0930 12:58:05.091437 20 builder.go:147] stdout: "Name:             agnhost-primary-rr8br\nNamespace:        kubectl-7730\nPriority:         0\nService Account:  default\nNode:             worker-0/10.0.42.49\nStart Time:       Mon, 30 Sep 2024 12:58:03 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.0.34\nIPs:\n  IP:           10.244.0.34\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://0a733e15abb9626f4025b49c405c394ef7cc3b848ba4d29e5d58ad44c5009686\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 30 Sep 2024 12:58:04 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qqq2z (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-qqq2z:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-7730/agnhost-primary-rr8br to worker-0\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0930 12:58:05.091507 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-7730 describe rc agnhost-primary'
  I0930 12:58:05.143334 20 builder.go:146] stderr: ""
  I0930 12:58:05.143387 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7730\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-rr8br\n"
  I0930 12:58:05.143454 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-7730 describe service agnhost-primary'
  I0930 12:58:05.194426 20 builder.go:146] stderr: ""
  I0930 12:58:05.194474 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-7730\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.97.171.55\nIPs:                      10.97.171.55\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.244.0.34:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0930 12:58:05.196773 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-7730 describe node worker-0'
  I0930 12:58:05.255984 20 builder.go:146] stderr: ""
  I0930 12:58:05.256068 20 builder.go:147] stdout: "Name:               worker-0\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=arm64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=arm64\n                    kubernetes.io/hostname=worker-0\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 30 Sep 2024 11:56:54 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker-0\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 30 Sep 2024 12:57:55 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Mon, 30 Sep 2024 12:54:51 +0000   Mon, 30 Sep 2024 11:56:54 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Mon, 30 Sep 2024 12:54:51 +0000   Mon, 30 Sep 2024 11:56:54 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Mon, 30 Sep 2024 12:54:51 +0000   Mon, 30 Sep 2024 11:56:54 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Mon, 30 Sep 2024 12:54:51 +0000   Mon, 30 Sep 2024 11:57:04 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.0.42.49\n  Hostname:    worker-0\nCapacity:\n  cpu:                  4\n  ephemeral-storage:    50622456Ki\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  hugepages-32Mi:       0\n  hugepages-64Ki:       0\n  memory:               7950372Ki\n  pods:                 110\nAllocatable:\n  cpu:                  4\n  ephemeral-storage:    46653655373\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  hugepages-32Mi:       0\n  hugepages-64Ki:       0\n  memory:               7847972Ki\n  pods:                 110\nSystem Info:\n  Machine ID:                 ec294cc67e676aa8d552abdcb771236d\n  System UUID:                ec294cc6-7e67-6aa8-d552-abdcb771236d\n  Boot ID:                    29dee9cc-c1e6-45d2-8252-9be51a5b2558\n  Kernel Version:             6.8.0-1015-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               arm64\n  Container Runtime Version:  containerd://1.7.22\n  Kubelet Version:            v1.31.1+k0s\n  Kube-Proxy Version:         v1.31.1+k0s\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-679c655b6f-g44rj                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     46s\n  kube-system                 konnectivity-agent-spbtv                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         61m\n  kube-system                 kube-proxy-7phx8                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         61m\n  kube-system                 kube-router-hp7ql                                          250m (6%)     0 (0%)      16Mi (0%)        0 (0%)         61m\n  kubectl-7730                agnhost-primary-rr8br                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  services-3106               execpodm66wf                                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         14s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         60m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-dtf7x    0 (0%)        0 (0%)      0 (0%)           0 (0%)         60m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource             Requests   Limits\n  --------             --------   ------\n  cpu                  350m (8%)  0 (0%)\n  memory               86Mi (1%)  170Mi (2%)\n  ephemeral-storage    0 (0%)     0 (0%)\n  hugepages-1Gi        0 (0%)     0 (0%)\n  hugepages-2Mi        0 (0%)     0 (0%)\n  hugepages-32Mi       0 (0%)     0 (0%)\n  hugepages-64Ki       0 (0%)     0 (0%)\n  example.com/fakecpu  0          0\nEvents:                <none>\n"
  I0930 12:58:05.256134 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-7730 describe namespace kubectl-7730'
  I0930 12:58:05.305914 20 builder.go:146] stderr: ""
  I0930 12:58:05.305966 20 builder.go:147] stdout: "Name:         kubectl-7730\nLabels:       e2e-framework=kubectl\n              e2e-run=2aca82b5-56eb-43c6-80d4-e62520b40630\n              kubernetes.io/metadata.name=kubectl-7730\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0930 12:58:05.306065 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7730" for this suite. @ 09/30/24 12:58:05.307
• [1.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/30/24 12:58:05.311
  I0930 12:58:05.311531 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 12:58:05.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:05.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:05.411
  STEP: Create a pod @ 09/30/24 12:58:05.413
  E0930 12:58:05.701012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:06.701185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/30/24 12:58:07.423
  I0930 12:58:07.427730 20 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0930 12:58:07.427843 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8365" for this suite. @ 09/30/24 12:58:07.429
• [2.123 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/30/24 12:58:07.435
  I0930 12:58:07.435109 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 12:58:07.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:07.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:07.444
  STEP: creating the pod @ 09/30/24 12:58:07.446
  STEP: submitting the pod to kubernetes @ 09/30/24 12:58:07.447
  STEP: verifying QOS class is set on the pod @ 09/30/24 12:58:07.453
  I0930 12:58:07.455480 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2053" for this suite. @ 09/30/24 12:58:07.531
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/30/24 12:58:07.534
  I0930 12:58:07.534733 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-runtime @ 09/30/24 12:58:07.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:07.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:07.547
  STEP: create the container @ 09/30/24 12:58:07.549
  W0930 12:58:07.556391      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/30/24 12:58:07.556
  E0930 12:58:07.701577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:08.702151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:09.702506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/30/24 12:58:10.565
  STEP: the container should be terminated @ 09/30/24 12:58:10.567
  STEP: the termination message should be set @ 09/30/24 12:58:10.567
  I0930 12:58:10.567507 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/30/24 12:58:10.567
  I0930 12:58:10.578183 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3300" for this suite. @ 09/30/24 12:58:10.58
• [3.049 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/30/24 12:58:10.583
  I0930 12:58:10.583768 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 12:58:10.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:10.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:10.595
  STEP: Setting up server cert @ 09/30/24 12:58:10.694
  E0930 12:58:10.703522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 12:58:11.085
  STEP: Deploying the webhook pod @ 09/30/24 12:58:11.09
  STEP: Wait for the deployment to be ready @ 09/30/24 12:58:11.098
  I0930 12:58:11.103980 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 12:58:11.703568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:12.703734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 12:58:13.109
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 12:58:13.116
  E0930 12:58:13.703767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:14.116980 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/30/24 12:58:14.12
  STEP: verifying the mutating webhook match conditions @ 09/30/24 12:58:14.126
  STEP: updating the mutating webhook match conditions @ 09/30/24 12:58:14.127
  STEP: verifying the mutating webhook match conditions @ 09/30/24 12:58:14.133
  I0930 12:58:14.161121 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4306" for this suite. @ 09/30/24 12:58:14.163
  STEP: Destroying namespace "webhook-markers-8395" for this suite. @ 09/30/24 12:58:14.167
• [3.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/30/24 12:58:14.173
  I0930 12:58:14.173939 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pod-network-test @ 09/30/24 12:58:14.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:14.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:14.185
  STEP: Performing setup for networking test in namespace pod-network-test-2033 @ 09/30/24 12:58:14.187
  STEP: creating a selector @ 09/30/24 12:58:14.187
  STEP: Creating the service pods in kubernetes @ 09/30/24 12:58:14.187
  I0930 12:58:14.187312 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0930 12:58:14.704730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:15.704821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:16.704977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:17.705140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:18.705288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:19.705404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:20.705749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:21.705931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:22.706256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:23.706483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:24.706843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:25.707031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/30/24 12:58:26.298
  E0930 12:58:26.707787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:27.707880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:28.315788 20 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0930 12:58:28.315826 20 utils.go:496] Going to poll 10.244.0.36 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0930 12:58:28.317441 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.36:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2033 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:58:28.317472 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:58:28.317921 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:58:28.317971 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2033/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.36%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0930 12:58:28.360609 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0930 12:58:28.360649 20 utils.go:496] Going to poll 10.244.1.206 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0930 12:58:28.362691 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.206:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2033 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 12:58:28.362725 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 12:58:28.363135 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 12:58:28.363184 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2033/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.206%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0930 12:58:28.400524 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0930 12:58:28.400750 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2033" for this suite. @ 09/30/24 12:58:28.402
• [14.235 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/30/24 12:58:28.408
  I0930 12:58:28.408621 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename security-context-test @ 09/30/24 12:58:28.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:28.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:28.42
  E0930 12:58:28.708383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:29.708673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:30.441418 20 security_context.go:538] Got logs for pod "busybox-privileged-false-18e97046-da85-47a5-951c-4f700a852344": "ip: RTNETLINK answers: Operation not permitted\n"
  I0930 12:58:30.441524 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8558" for this suite. @ 09/30/24 12:58:30.443
• [2.039 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/30/24 12:58:30.447
  I0930 12:58:30.447305 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename var-expansion @ 09/30/24 12:58:30.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:30.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:30.457
  STEP: Creating a pod to test substitution in container's args @ 09/30/24 12:58:30.459
  E0930 12:58:30.708718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:31.709161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:58:32.469
  I0930 12:58:32.470694 20 output.go:196] Trying to get logs from node worker-0 pod var-expansion-83e0721e-ece3-42f6-87a6-b5b8e2507c55 container dapi-container: <nil>
  STEP: delete the pod @ 09/30/24 12:58:32.474
  I0930 12:58:32.483112 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6163" for this suite. @ 09/30/24 12:58:32.485
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/30/24 12:58:32.488
  I0930 12:58:32.488784 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 12:58:32.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:32.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:32.498
  STEP: Creating projection with secret that has name projected-secret-test-b33ff3da-66b9-403a-98c3-c802837958e5 @ 09/30/24 12:58:32.5
  STEP: Creating a pod to test consume secrets @ 09/30/24 12:58:32.503
  E0930 12:58:32.709208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:33.709462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:58:34.513
  I0930 12:58:34.515105 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-secrets-7b5074d5-a3a9-4304-8de5-c24ca677b205 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 12:58:34.519
  I0930 12:58:34.535084 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2387" for this suite. @ 09/30/24 12:58:34.537
• [2.052 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/30/24 12:58:34.541
  I0930 12:58:34.541101 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/30/24 12:58:34.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:34.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:34.553
  STEP: set up a multi version CRD @ 09/30/24 12:58:34.555
  I0930 12:58:34.556172 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 12:58:34.709900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:35.710169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:36.710541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/30/24 12:58:37.635
  STEP: check the unserved version gets removed @ 09/30/24 12:58:37.647
  E0930 12:58:37.711431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/30/24 12:58:38.35
  E0930 12:58:38.711791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:39.712052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:40.712074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:40.773841 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9564" for this suite. @ 09/30/24 12:58:40.778
• [6.243 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/30/24 12:58:40.784
  I0930 12:58:40.784352 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename subjectreview @ 09/30/24 12:58:40.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:40.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:40.799
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7602" @ 09/30/24 12:58:40.801
  I0930 12:58:40.805735 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-7602:e2e"
  I0930 12:58:40.805775 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7602"}
  I0930 12:58:40.805782 20 subjectreviews.go:71] saUID: "75e83520-1bf8-47e5-8d16-6cc0bf781db1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7602:e2e" @ 09/30/24 12:58:40.805
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7602:e2e" @ 09/30/24 12:58:40.805
  I0930 12:58:40.807314 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7602:e2e" api 'list' configmaps in "subjectreview-7602" namespace @ 09/30/24 12:58:40.807
  I0930 12:58:40.808292 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7602:e2e" @ 09/30/24 12:58:40.808
  I0930 12:58:40.809716 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0930 12:58:40.809746 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0930 12:58:40.809867 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7602" for this suite. @ 09/30/24 12:58:40.879
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/30/24 12:58:40.883
  I0930 12:58:40.883301 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 12:58:40.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:40.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:40.901
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 12:58:40.903
  E0930 12:58:41.712203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:42.712326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:43.713056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:44.713246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:58:44.916
  I0930 12:58:44.917884 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-499f2e49-6077-40d2-a538-d3b7ae4cc95e container client-container: <nil>
  STEP: delete the pod @ 09/30/24 12:58:44.921
  I0930 12:58:44.932499 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-751" for this suite. @ 09/30/24 12:58:44.934
• [4.055 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/30/24 12:58:44.938
  I0930 12:58:44.938131 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename discovery @ 09/30/24 12:58:44.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:44.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:44.95
  STEP: Setting up server cert @ 09/30/24 12:58:44.953
  I0930 12:58:45.115649 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0930 12:58:45.116398 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0930 12:58:45.116429 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0930 12:58:45.116436 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0930 12:58:45.116442 20 discovery.go:139] Checking APIGroup: apps
  I0930 12:58:45.117154 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0930 12:58:45.117181 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I0930 12:58:45.117189 20 discovery.go:154] apps/v1 matches apps/v1
  I0930 12:58:45.117195 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I0930 12:58:45.117874 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0930 12:58:45.117900 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0930 12:58:45.117909 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0930 12:58:45.117915 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0930 12:58:45.118576 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0930 12:58:45.118606 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0930 12:58:45.118613 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0930 12:58:45.118619 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0930 12:58:45.119234 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0930 12:58:45.119253 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0930 12:58:45.119259 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0930 12:58:45.119265 20 discovery.go:139] Checking APIGroup: autoscaling
  I0930 12:58:45.119878 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0930 12:58:45.119905 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0930 12:58:45.119912 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0930 12:58:45.119917 20 discovery.go:139] Checking APIGroup: batch
  I0930 12:58:45.120572 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0930 12:58:45.120610 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I0930 12:58:45.120617 20 discovery.go:154] batch/v1 matches batch/v1
  I0930 12:58:45.120623 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0930 12:58:45.121272 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0930 12:58:45.121292 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0930 12:58:45.121299 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0930 12:58:45.121309 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0930 12:58:45.121926 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0930 12:58:45.121946 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0930 12:58:45.121954 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0930 12:58:45.121961 20 discovery.go:139] Checking APIGroup: policy
  I0930 12:58:45.122549 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0930 12:58:45.122564 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I0930 12:58:45.122570 20 discovery.go:154] policy/v1 matches policy/v1
  I0930 12:58:45.122576 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0930 12:58:45.123227 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0930 12:58:45.123253 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0930 12:58:45.123261 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0930 12:58:45.123267 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0930 12:58:45.123877 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0930 12:58:45.123898 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0930 12:58:45.123908 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0930 12:58:45.123914 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0930 12:58:45.124555 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0930 12:58:45.124573 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0930 12:58:45.124595 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0930 12:58:45.124601 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0930 12:58:45.125213 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0930 12:58:45.125236 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0930 12:58:45.125243 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0930 12:58:45.125248 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0930 12:58:45.125854 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0930 12:58:45.125871 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0930 12:58:45.125877 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0930 12:58:45.125883 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0930 12:58:45.126459 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0930 12:58:45.126476 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0930 12:58:45.126482 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0930 12:58:45.126488 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I0930 12:58:45.127062 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0930 12:58:45.127081 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0930 12:58:45.127088 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0930 12:58:45.127095 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0930 12:58:45.127704 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0930 12:58:45.127720 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0930 12:58:45.127727 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0930 12:58:45.127732 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0930 12:58:45.128372 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0930 12:58:45.128388 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0930 12:58:45.128394 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0930 12:58:45.128399 20 discovery.go:139] Checking APIGroup: etcd.k0sproject.io
  I0930 12:58:45.128966 20 discovery.go:147] PreferredVersion.GroupVersion: etcd.k0sproject.io/v1beta1
  I0930 12:58:45.128980 20 discovery.go:148] Versions found [{etcd.k0sproject.io/v1beta1 v1beta1}]
  I0930 12:58:45.128986 20 discovery.go:154] etcd.k0sproject.io/v1beta1 matches etcd.k0sproject.io/v1beta1
  I0930 12:58:45.128992 20 discovery.go:139] Checking APIGroup: helm.k0sproject.io
  I0930 12:58:45.129575 20 discovery.go:147] PreferredVersion.GroupVersion: helm.k0sproject.io/v1beta1
  I0930 12:58:45.129610 20 discovery.go:148] Versions found [{helm.k0sproject.io/v1beta1 v1beta1}]
  I0930 12:58:45.129616 20 discovery.go:154] helm.k0sproject.io/v1beta1 matches helm.k0sproject.io/v1beta1
  I0930 12:58:45.129625 20 discovery.go:139] Checking APIGroup: autopilot.k0sproject.io
  I0930 12:58:45.130186 20 discovery.go:147] PreferredVersion.GroupVersion: autopilot.k0sproject.io/v1beta2
  I0930 12:58:45.130202 20 discovery.go:148] Versions found [{autopilot.k0sproject.io/v1beta2 v1beta2}]
  I0930 12:58:45.130209 20 discovery.go:154] autopilot.k0sproject.io/v1beta2 matches autopilot.k0sproject.io/v1beta2
  I0930 12:58:45.130215 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0930 12:58:45.130785 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0930 12:58:45.130800 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0930 12:58:45.130807 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0930 12:58:45.130882 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5946" for this suite. @ 09/30/24 12:58:45.132
• [0.200 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/30/24 12:58:45.137
  I0930 12:58:45.137872 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:58:45.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:45.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:45.147
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/30/24 12:58:45.149
  E0930 12:58:45.713960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:46.714381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:47.714534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:48.714786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:58:49.163
  I0930 12:58:49.165107 20 output.go:196] Trying to get logs from node worker-0 pod pod-072ffa27-ebcc-4d8a-b948-15b6bb47a467 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:58:49.168
  I0930 12:58:49.178720 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3929" for this suite. @ 09/30/24 12:58:49.18
• [4.046 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/30/24 12:58:49.184
  I0930 12:58:49.184364 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 12:58:49.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:49.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:49.196
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/30/24 12:58:49.198
  E0930 12:58:49.715200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:50.715493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:58:51.208
  I0930 12:58:51.210723 20 output.go:196] Trying to get logs from node worker-0 pod pod-80975e39-1ec2-421c-b94d-c568e392a328 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 12:58:51.216
  I0930 12:58:51.226927 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4589" for this suite. @ 09/30/24 12:58:51.229
• [2.048 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/30/24 12:58:51.232
  I0930 12:58:51.232553 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 12:58:51.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:51.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:51.244
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 12:58:51.246
  E0930 12:58:51.716295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:52.716379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 12:58:53.256
  I0930 12:58:53.258488 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-a4c1979e-b8da-47ec-a031-6bd95f8f951e container client-container: <nil>
  STEP: delete the pod @ 09/30/24 12:58:53.262
  I0930 12:58:53.272168 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1979" for this suite. @ 09/30/24 12:58:53.274
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/30/24 12:58:53.277
  I0930 12:58:53.277823 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 12:58:53.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:53.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:53.29
  I0930 12:58:53.314920 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8292" for this suite. @ 09/30/24 12:58:53.374
• [0.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/30/24 12:58:53.38
  I0930 12:58:53.380362 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 12:58:53.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 12:58:53.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 12:58:53.39
  STEP: Creating pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338 @ 09/30/24 12:58:53.392
  E0930 12:58:53.716919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:54.717201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/30/24 12:58:55.403
  I0930 12:58:55.404988 20 container_probe.go:1749] Initial restart count of pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 is 0
  I0930 12:58:55.406507 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:58:55.717936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:56.718122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:57.408773 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:58:57.718172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:58:58.718897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:58:59.411933 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:58:59.719232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:00.719422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:01.414187 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:01.719512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:02.719730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:03.416838 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:03.720264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:04.721085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:05.420337 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:05.721747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:06.721945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:07.423030 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:07.722662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:08.723472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:09.426005 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:09.724393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:10.725208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:11.428663 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:11.725766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:12.725857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:13.430850 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:13.726151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:14.726320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:15.433642 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  I0930 12:59:15.433685 20 container_probe.go:1763] Restart count of pod container-probe-338/liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 is now 1 (20.028660875s elapsed)
  E0930 12:59:15.726772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:16.726945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:17.435791 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:17.727054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:18.727263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:19.438089 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:19.727381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:20.727651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:21.440632 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:21.727937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:22.728098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:23.443092 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:23.728366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:24.728769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:25.445796 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:25.728861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:26.729773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:27.448831 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:27.730144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:28.730167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:29.451760 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:29.731050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:30.731490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:31.454315 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:31.731576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:32.731685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:33.456715 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:33.732080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:34.732171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:35.459247 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  I0930 12:59:35.459288 20 container_probe.go:1763] Restart count of pod container-probe-338/liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 is now 2 (40.054264514s elapsed)
  E0930 12:59:35.732575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:36.732672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:37.461689 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:37.732761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:38.732813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:39.464784 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:39.732909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:40.733094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:41.467028 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:41.733172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:42.733345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:43.470043 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:43.734370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:44.734464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:45.472737 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:45.735026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:46.735189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:47.475150 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:47.735356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:48.735630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:49.477691 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:49.735894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:50.736062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:51.479999 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:51.736234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:52.736401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:53.482372 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:53.736489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:54.736544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:55.485721 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  I0930 12:59:55.485762 20 container_probe.go:1763] Restart count of pod container-probe-338/liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 is now 3 (1m0.080738496s elapsed)
  E0930 12:59:55.737042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:56.737350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:57.487898 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:57.738265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 12:59:58.738529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 12:59:59.490511 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 12:59:59.738714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:00.738872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:01.492723 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:01.738952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:02.739114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:03.494997 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:03.739221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:04.739768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:05.497879 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:05.740174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:06.740266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:07.500137 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:07.740347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:08.740570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:09.502386 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:09.740622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:10.740795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:11.504763 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:11.740934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:12.741105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:13.507005 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:13.741263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:14.741430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:15.509685 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  I0930 13:00:15.509724 20 container_probe.go:1763] Restart count of pod container-probe-338/liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 is now 4 (1m20.104700299s elapsed)
  E0930 13:00:15.742000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:16.742167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:17.511855 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:17.743125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:18.743392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:19.514041 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:19.744356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:20.744525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:21.516446 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:21.744720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:22.744889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:23.519053 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:23.745318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:24.745484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:25.521683 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:25.745945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:26.746047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:27.524041 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:27.746369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:28.746608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:29.526308 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:29.747568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:30.747765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:31.528719 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:31.747848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:32.748010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:33.531171 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:33.748488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:34.748665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:35.533945 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:35.749202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:36.749298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:37.536207 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:37.749393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:38.750029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:39.539282 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:39.750611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:40.750774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:41.541778 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:41.750950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:42.751518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:43.544649 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:43.751876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:44.752032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:45.547166 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:45.752431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:46.752526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:47.549568 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:47.752811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:48.753094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:49.551869 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:49.754093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:50.754257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:51.554173 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:51.754356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:52.754525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:53.556626 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:53.754857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:54.755021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:55.559178 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:55.755453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:56.755636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:57.561658 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:57.755790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:00:58.756076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:00:59.563950 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:00:59.756110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:00.756268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:01.566791 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:01:01.757051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:02.757219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:03.569269 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:01:03.757564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:04.757761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:05.571888 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:01:05.758132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:06.758296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:07.574206 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:01:07.758346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:08.759267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:09.577335 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:01:09.759571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:10.759752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:11.579826 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:01:11.760116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:12.760212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:13.582209 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  E0930 13:01:13.760378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:14.760553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:15.584651 20 container_probe.go:1759] Get pod liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 in namespace container-probe-338
  I0930 13:01:15.584694 20 container_probe.go:1763] Restart count of pod container-probe-338/liveness-8a8be10b-1216-48eb-a6b6-bdd6d4703603 is now 5 (2m20.179669215s elapsed)
  STEP: deleting the pod @ 09/30/24 13:01:15.584
  I0930 13:01:15.593464 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-338" for this suite. @ 09/30/24 13:01:15.595
• [142.219 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/30/24 13:01:15.599
  I0930 13:01:15.599132 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:01:15.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:01:15.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:01:15.612
  STEP: Creating the pod @ 09/30/24 13:01:15.614
  E0930 13:01:15.760608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:16.760874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:17.761430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:18.144107 20 pod_client.go:173] Successfully updated pod "annotationupdate7f9d2968-8850-4299-a6e8-836b7b26eee0"
  E0930 13:01:18.761775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:19.761962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:01:20.152904 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2089" for this suite. @ 09/30/24 13:01:20.155
• [4.559 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/30/24 13:01:20.158
  I0930 13:01:20.158230 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:01:20.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:01:20.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:01:20.167
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:01:20.169
  E0930 13:01:20.762199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:21.762391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:01:22.178
  I0930 13:01:22.180614 20 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-ee6eb943-1f05-44f8-b691-b2e62dcbbe59 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:01:22.19
  I0930 13:01:22.200502 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-764" for this suite. @ 09/30/24 13:01:22.202
• [2.048 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/30/24 13:01:22.205
  I0930 13:01:22.205946 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename cronjob @ 09/30/24 13:01:22.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:01:22.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:01:22.216
  STEP: Creating a cronjob @ 09/30/24 13:01:22.218
  STEP: Ensuring more than one job is running at a time @ 09/30/24 13:01:22.221
  E0930 13:01:22.762444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:23.762684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:24.763009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:25.763809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:26.764268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:27.764453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:28.764502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:29.764699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:30.765518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:31.765626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:32.765866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:33.766187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:34.766632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:35.766793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:36.766942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:37.767107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:38.767477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:39.767575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:40.767779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:41.767969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:42.768149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:43.768400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:44.768548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:45.768799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:46.769349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:47.769423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:48.770124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:49.770426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:50.770457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:51.770753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:52.770960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:53.771379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:54.771607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:55.771792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:56.772064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:57.772163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:58.772596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:01:59.772805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:00.773039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:01.773234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:02.773450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:03.773704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:04.774716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:05.774908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:06.775242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:07.775428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:08.775600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:09.775695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:10.776067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:11.776262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:12.776577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:13.776916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:14.777109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:15.777294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:16.778344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:17.778429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:18.778670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:19.778751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:20.779099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:21.779282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:22.779737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:23.780079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:24.780385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:25.780563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:26.781613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:27.781802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:28.782191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:29.782386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:30.782545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:31.782714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:32.783120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:33.783396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:34.784476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:35.784674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:36.784879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:37.785066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:38.785413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:39.785611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:40.786535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:41.786876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:42.786856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:43.787163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:44.787655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:45.787749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:46.787986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:47.788237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:48.788522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:49.789343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:50.789422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:51.789681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:52.789767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:53.790157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:54.790249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:55.790411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:56.790881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:57.791047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:58.791351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:02:59.791459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/30/24 13:03:00.223
  STEP: Removing cronjob @ 09/30/24 13:03:00.225
  I0930 13:03:00.228889 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9906" for this suite. @ 09/30/24 13:03:00.23
• [98.028 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/30/24 13:03:00.234
  I0930 13:03:00.234229 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 13:03:00.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:00.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:00.247
  STEP: Creating configMap with name configmap-test-volume-map-1405d9ec-3134-45f1-85b3-7ce6894fd152 @ 09/30/24 13:03:00.249
  STEP: Creating a pod to test consume configMaps @ 09/30/24 13:03:00.254
  E0930 13:03:00.792236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:01.792326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:02.792534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:03.792840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:03:04.269
  I0930 13:03:04.271266 20 output.go:196] Trying to get logs from node worker-0 pod pod-configmaps-878cf239-e465-4fcc-9013-22982c0be0e0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 13:03:04.279
  I0930 13:03:04.289915 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4379" for this suite. @ 09/30/24 13:03:04.291
• [4.061 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 09/30/24 13:03:04.295
  I0930 13:03:04.295271 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename svcaccounts @ 09/30/24 13:03:04.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:04.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:04.306
  STEP: Creating ServiceAccount "e2e-sa-pqxld"  @ 09/30/24 13:03:04.308
  I0930 13:03:04.312214 20 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-pqxld"  @ 09/30/24 13:03:04.312
  I0930 13:03:04.316892 20 service_accounts.go:839] AutomountServiceAccountToken: true
  I0930 13:03:04.316994 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8412" for this suite. @ 09/30/24 13:03:04.392
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/30/24 13:03:04.396
  I0930 13:03:04.396460 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:03:04.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:04.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:04.409
  STEP: Setting up server cert @ 09/30/24 13:03:04.509
  E0930 13:03:04.793722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:03:04.871
  STEP: Deploying the webhook pod @ 09/30/24 13:03:04.876
  STEP: Wait for the deployment to be ready @ 09/30/24 13:03:04.887
  I0930 13:03:04.892611 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:03:05.794793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:06.794960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:03:06.898
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:03:06.907
  E0930 13:03:07.795207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:03:07.907476 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/30/24 13:03:07.911
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/30/24 13:03:07.912
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/30/24 13:03:07.912
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/30/24 13:03:07.912
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/30/24 13:03:07.912
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/30/24 13:03:07.913
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/30/24 13:03:07.913
  I0930 13:03:07.936875 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3343" for this suite. @ 09/30/24 13:03:07.938
  STEP: Destroying namespace "webhook-markers-4623" for this suite. @ 09/30/24 13:03:07.944
• [3.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/30/24 13:03:07.948
  I0930 13:03:07.948745 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename watch @ 09/30/24 13:03:07.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:07.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:07.96
  STEP: creating a watch on configmaps with a certain label @ 09/30/24 13:03:07.962
  STEP: creating a new configmap @ 09/30/24 13:03:07.963
  STEP: modifying the configmap once @ 09/30/24 13:03:07.965
  STEP: changing the label value of the configmap @ 09/30/24 13:03:07.97
  STEP: Expecting to observe a delete notification for the watched object @ 09/30/24 13:03:07.976
  I0930 13:03:07.976791 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6654  bef874fb-efcc-461a-a46c-238ee85f6b18 26127 0 2024-09-30 13:03:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-30 13:03:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:03:07.976877 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6654  bef874fb-efcc-461a-a46c-238ee85f6b18 26128 0 2024-09-30 13:03:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-30 13:03:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:03:07.976938 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6654  bef874fb-efcc-461a-a46c-238ee85f6b18 26129 0 2024-09-30 13:03:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-30 13:03:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/30/24 13:03:07.976
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/30/24 13:03:07.981
  E0930 13:03:08.795510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:09.795663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:10.795738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:11.795923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:12.796109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:13.796313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:14.796569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:15.796759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:16.796923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:17.797203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/30/24 13:03:17.982
  STEP: modifying the configmap a third time @ 09/30/24 13:03:17.987
  STEP: deleting the configmap @ 09/30/24 13:03:17.992
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/30/24 13:03:17.995
  I0930 13:03:17.995257 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6654  bef874fb-efcc-461a-a46c-238ee85f6b18 26181 0 2024-09-30 13:03:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-30 13:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:03:17.995332 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6654  bef874fb-efcc-461a-a46c-238ee85f6b18 26182 0 2024-09-30 13:03:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-30 13:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:03:17.995395 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6654  bef874fb-efcc-461a-a46c-238ee85f6b18 26183 0 2024-09-30 13:03:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-30 13:03:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:03:17.995485 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6654" for this suite. @ 09/30/24 13:03:17.997
• [10.052 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/30/24 13:03:18
  I0930 13:03:18.000919 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/30/24 13:03:18.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:18.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:18.012
  STEP: set up a multi version CRD @ 09/30/24 13:03:18.014
  I0930 13:03:18.015275 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 13:03:18.797418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:19.798140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:20.798905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/30/24 13:03:21.099
  STEP: check the new version name is served @ 09/30/24 13:03:21.11
  E0930 13:03:21.799359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/30/24 13:03:21.803
  STEP: check the other version is not changed @ 09/30/24 13:03:22.427
  E0930 13:03:22.799725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:23.800135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:24.800470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:03:24.871036 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9935" for this suite. @ 09/30/24 13:03:24.876
• [6.879 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/30/24 13:03:24.88
  I0930 13:03:24.880204 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 13:03:24.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:24.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:24.893
  I0930 13:03:24.895253 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: creating the pod @ 09/30/24 13:03:24.895
  STEP: submitting the pod to kubernetes @ 09/30/24 13:03:24.895
  E0930 13:03:25.800627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:26.801104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:03:26.948049 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3418" for this suite. @ 09/30/24 13:03:26.95
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/30/24 13:03:26.955
  I0930 13:03:26.955603 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 13:03:26.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:26.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:26.966
  STEP: Creating configMap with name configmap-test-volume-e2800ab4-71be-427d-b48e-893b18a18665 @ 09/30/24 13:03:26.968
  STEP: Creating a pod to test consume configMaps @ 09/30/24 13:03:26.973
  E0930 13:03:27.801896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:28.802387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:29.802762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:30.803109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:03:30.986
  I0930 13:03:30.988365 20 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-57acfa4a-a416-4bba-a329-776ae4098ea3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 13:03:30.997
  I0930 13:03:31.007349 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8820" for this suite. @ 09/30/24 13:03:31.009
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/30/24 13:03:31.013
  I0930 13:03:31.013469 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename var-expansion @ 09/30/24 13:03:31.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:31.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:31.025
  STEP: Creating a pod to test substitution in volume subpath @ 09/30/24 13:03:31.027
  E0930 13:03:31.803570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:32.803672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:33.803871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:34.803973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:03:35.039
  I0930 13:03:35.041180 20 output.go:196] Trying to get logs from node worker-1 pod var-expansion-93180e2c-86a1-4a0f-9e1e-302da58faee0 container dapi-container: <nil>
  STEP: delete the pod @ 09/30/24 13:03:35.044
  I0930 13:03:35.055502 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1554" for this suite. @ 09/30/24 13:03:35.057
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/30/24 13:03:35.063
  I0930 13:03:35.063507 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/30/24 13:03:35.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:35.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:35.074
  STEP: Setting up the test @ 09/30/24 13:03:35.076
  STEP: Creating hostNetwork=false pod @ 09/30/24 13:03:35.076
  E0930 13:03:35.804264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:36.804458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/30/24 13:03:37.089
  E0930 13:03:37.804678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:38.804986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/30/24 13:03:39.098
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/30/24 13:03:39.098
  I0930 13:03:39.098519 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.098537 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.098972 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.099017 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0930 13:03:39.131528 20 exec_util.go:111] Exec stderr: ""
  I0930 13:03:39.131575 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.131600 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.132028 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.132077 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0930 13:03:39.168908 20 exec_util.go:111] Exec stderr: ""
  I0930 13:03:39.168961 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.168973 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.169397 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.169448 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0930 13:03:39.208511 20 exec_util.go:111] Exec stderr: ""
  I0930 13:03:39.208559 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.208568 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.209020 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.209069 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0930 13:03:39.243152 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/30/24 13:03:39.243
  I0930 13:03:39.243230 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.243239 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.243691 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.243743 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0930 13:03:39.280406 20 exec_util.go:111] Exec stderr: ""
  I0930 13:03:39.280482 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.280494 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.280933 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.280986 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0930 13:03:39.320655 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/30/24 13:03:39.32
  I0930 13:03:39.320731 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.320752 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.321175 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.321224 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0930 13:03:39.358010 20 exec_util.go:111] Exec stderr: ""
  I0930 13:03:39.358058 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.358067 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.358504 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.358557 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0930 13:03:39.390115 20 exec_util.go:111] Exec stderr: ""
  I0930 13:03:39.390167 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.390177 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.390672 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.390726 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0930 13:03:39.422398 20 exec_util.go:111] Exec stderr: ""
  I0930 13:03:39.422447 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7135 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:03:39.422458 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:03:39.422900 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:03:39.422951 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7135/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0930 13:03:39.460548 20 exec_util.go:111] Exec stderr: ""
  I0930 13:03:39.460680 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7135" for this suite. @ 09/30/24 13:03:39.462
• [4.403 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/30/24 13:03:39.466
  I0930 13:03:39.466401 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:03:39.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:39.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:39.478
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:03:39.48
  E0930 13:03:39.805187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:40.805294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:03:41.493
  I0930 13:03:41.494971 20 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-94b4b917-7a5d-4596-a06f-2bdeef20d201 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:03:41.498
  I0930 13:03:41.508933 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6816" for this suite. @ 09/30/24 13:03:41.51
• [2.051 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/30/24 13:03:41.517
  I0930 13:03:41.517327 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-pred @ 09/30/24 13:03:41.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:41.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:41.527
  I0930 13:03:41.529255 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0930 13:03:41.613696 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0930 13:03:41.615558 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0930 13:03:41.619840 20 predicates.go:957] test-pod from e2e-kubelet-etc-hosts-7135 started at 2024-09-30 13:03:35 +0000 UTC (3 container statuses recorded)
  I0930 13:03:41.619871 20 predicates.go:959] 	Container busybox-1 ready: true, restart count 0
  I0930 13:03:41.619879 20 predicates.go:959] 	Container busybox-2 ready: true, restart count 0
  I0930 13:03:41.619886 20 predicates.go:959] 	Container busybox-3 ready: true, restart count 0
  I0930 13:03:41.619892 20 predicates.go:957] coredns-679c655b6f-g44rj from kube-system started at 2024-09-30 12:57:53 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.619897 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0930 13:03:41.619902 20 predicates.go:957] konnectivity-agent-spbtv from kube-system started at 2024-09-30 11:56:59 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.619907 20 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0930 13:03:41.619912 20 predicates.go:957] kube-proxy-7phx8 from kube-system started at 2024-09-30 11:56:56 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.619917 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0930 13:03:41.619922 20 predicates.go:957] kube-router-hp7ql from kube-system started at 2024-09-30 11:56:55 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.619926 20 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0930 13:03:41.619932 20 predicates.go:957] pod-exec-websocket-b38a6bb5-c716-443b-a65b-297fb443759c from pods-3418 started at 2024-09-30 13:03:24 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.619937 20 predicates.go:959] 	Container main ready: true, restart count 0
  I0930 13:03:41.619944 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-30 11:57:15 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.619952 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0930 13:03:41.619958 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-dtf7x from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 13:03:41.619964 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 13:03:41.619968 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0930 13:03:41.619974 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0930 13:03:41.621948 20 predicates.go:957] test-host-network-pod from e2e-kubelet-etc-hosts-7135 started at 2024-09-30 13:03:37 +0000 UTC (2 container statuses recorded)
  I0930 13:03:41.621980 20 predicates.go:959] 	Container busybox-1 ready: true, restart count 0
  I0930 13:03:41.621987 20 predicates.go:959] 	Container busybox-2 ready: true, restart count 0
  I0930 13:03:41.621994 20 predicates.go:957] coredns-679c655b6f-qx7cq from kube-system started at 2024-09-30 11:57:41 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.621999 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0930 13:03:41.622004 20 predicates.go:957] konnectivity-agent-nmhq8 from kube-system started at 2024-09-30 11:56:59 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.622009 20 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0930 13:03:41.622015 20 predicates.go:957] kube-proxy-2dptv from kube-system started at 2024-09-30 11:56:56 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.622020 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0930 13:03:41.622025 20 predicates.go:957] kube-router-cc52w from kube-system started at 2024-09-30 11:56:55 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.622030 20 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0930 13:03:41.622035 20 predicates.go:957] metrics-server-78c4ccbc7f-w5v8q from kube-system started at 2024-09-30 11:57:04 +0000 UTC (1 container statuses recorded)
  I0930 13:03:41.622040 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0930 13:03:41.622045 20 predicates.go:957] sonobuoy-e2e-job-6bbffb04e0e746b5 from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 13:03:41.622050 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0930 13:03:41.622054 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 13:03:41.622060 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-jq8fj from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 13:03:41.622065 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 13:03:41.622070 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node worker-0 @ 09/30/24 13:03:41.63
  STEP: verifying the node has the label node worker-1 @ 09/30/24 13:03:41.638
  I0930 13:03:41.722608 20 predicates.go:372] Pod test-host-network-pod requesting resource cpu=0m on Node worker-1
  I0930 13:03:41.722644 20 predicates.go:372] Pod test-pod requesting resource cpu=0m on Node worker-0
  I0930 13:03:41.722652 20 predicates.go:372] Pod coredns-679c655b6f-g44rj requesting resource cpu=100m on Node worker-0
  I0930 13:03:41.722659 20 predicates.go:372] Pod coredns-679c655b6f-qx7cq requesting resource cpu=100m on Node worker-1
  I0930 13:03:41.722664 20 predicates.go:372] Pod konnectivity-agent-nmhq8 requesting resource cpu=0m on Node worker-1
  I0930 13:03:41.722669 20 predicates.go:372] Pod konnectivity-agent-spbtv requesting resource cpu=0m on Node worker-0
  I0930 13:03:41.722673 20 predicates.go:372] Pod kube-proxy-2dptv requesting resource cpu=0m on Node worker-1
  I0930 13:03:41.722678 20 predicates.go:372] Pod kube-proxy-7phx8 requesting resource cpu=0m on Node worker-0
  I0930 13:03:41.722683 20 predicates.go:372] Pod kube-router-cc52w requesting resource cpu=250m on Node worker-1
  I0930 13:03:41.722687 20 predicates.go:372] Pod kube-router-hp7ql requesting resource cpu=250m on Node worker-0
  I0930 13:03:41.722692 20 predicates.go:372] Pod metrics-server-78c4ccbc7f-w5v8q requesting resource cpu=10m on Node worker-1
  I0930 13:03:41.722697 20 predicates.go:372] Pod pod-exec-websocket-b38a6bb5-c716-443b-a65b-297fb443759c requesting resource cpu=0m on Node worker-0
  I0930 13:03:41.722702 20 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node worker-0
  I0930 13:03:41.722707 20 predicates.go:372] Pod sonobuoy-e2e-job-6bbffb04e0e746b5 requesting resource cpu=0m on Node worker-1
  I0930 13:03:41.722713 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-dtf7x requesting resource cpu=0m on Node worker-0
  I0930 13:03:41.722719 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-jq8fj requesting resource cpu=0m on Node worker-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/30/24 13:03:41.722
  I0930 13:03:41.722751 20 predicates.go:382] Creating a pod which consumes cpu=2555m on Node worker-0
  I0930 13:03:41.729508 20 predicates.go:382] Creating a pod which consumes cpu=2548m on Node worker-1
  E0930 13:03:41.805807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:42.806007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/30/24 13:03:43.742
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-09f2195d-1dea-4087-87ae-50a95562aefa.17fa074a105176e6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4543/filler-pod-09f2195d-1dea-4087-87ae-50a95562aefa to worker-0] @ 09/30/24 13:03:43.744
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-09f2195d-1dea-4087-87ae-50a95562aefa.17fa074a271e3efe], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/30/24 13:03:43.744
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-09f2195d-1dea-4087-87ae-50a95562aefa.17fa074a2834d320], Reason = [Created], Message = [Created container filler-pod-09f2195d-1dea-4087-87ae-50a95562aefa] @ 09/30/24 13:03:43.744
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-09f2195d-1dea-4087-87ae-50a95562aefa.17fa074a2aa4694c], Reason = [Started], Message = [Started container filler-pod-09f2195d-1dea-4087-87ae-50a95562aefa] @ 09/30/24 13:03:43.744
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-302bda48-68e0-40f1-964d-396ea4899329.17fa074a10ac22ad], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4543/filler-pod-302bda48-68e0-40f1-964d-396ea4899329 to worker-1] @ 09/30/24 13:03:43.744
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-302bda48-68e0-40f1-964d-396ea4899329.17fa074a270e2ab3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/30/24 13:03:43.744
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-302bda48-68e0-40f1-964d-396ea4899329.17fa074a28246fca], Reason = [Created], Message = [Created container filler-pod-302bda48-68e0-40f1-964d-396ea4899329] @ 09/30/24 13:03:43.744
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-302bda48-68e0-40f1-964d-396ea4899329.17fa074a2b084969], Reason = [Started], Message = [Started container filler-pod-302bda48-68e0-40f1-964d-396ea4899329] @ 09/30/24 13:03:43.744
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17fa074a887a0ac9], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 09/30/24 13:03:43.753
  E0930 13:03:43.806840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node worker-0 @ 09/30/24 13:03:44.751
  STEP: verifying the node doesn't have the label node @ 09/30/24 13:03:44.759
  STEP: removing the label node off the node worker-1 @ 09/30/24 13:03:44.762
  STEP: verifying the node doesn't have the label node @ 09/30/24 13:03:44.77
  I0930 13:03:44.773225 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4543" for this suite. @ 09/30/24 13:03:44.775
• [3.263 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/30/24 13:03:44.78
  I0930 13:03:44.780021 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename runtimeclass @ 09/30/24 13:03:44.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:44.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:44.794
  E0930 13:03:44.806912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:45.807755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:46.807792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:03:46.813239 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6231" for this suite. @ 09/30/24 13:03:46.815
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/30/24 13:03:46.819
  I0930 13:03:46.819021 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename deployment @ 09/30/24 13:03:46.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:46.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:46.831
  I0930 13:03:46.833303 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0930 13:03:46.843664 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/30/24 13:03:46.843
  E0930 13:03:47.808697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:48.809150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:03:48.848444 20 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0930 13:03:48.851819 20 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0930 13:03:48.855146 20 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0930 13:03:49.809543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:50.810052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:03:50.860364 20 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0930 13:03:50.861894 20 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0930 13:03:50.866967 20 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5614",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2aafe96b-e565-4e1d-9abd-ea00e64f2794",
      ResourceVersion: (string) (len=5) "26512",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0930 13:03:50.869545 20 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5614",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c955a40-b2c7-4291-a2b5-0dc9d7be1efa",
      ResourceVersion: (string) (len=5) "26502",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2aafe96b-e565-4e1d-9abd-ea00e64f2794",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 61 61 66 65 39  36 62 2d 65 35 36 35 2d  |\"2aafe96b-e565-|
              00000120  34 65 31 64 2d 39 61 62  64 2d 65 61 30 30 65 36  |4e1d-9abd-ea00e6|
              00000130  34 66 32 37 39 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4f2794\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 13:03:50.870186 20 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0930 13:03:50.870360 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5614",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dba88c60-888a-4aee-a532-13f544684995",
      ResourceVersion: (string) (len=5) "26511",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298226,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2aafe96b-e565-4e1d-9abd-ea00e64f2794",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 61 61 66 65 39 36  |"uid\":\"2aafe96|
              000000b0  62 2d 65 35 36 35 2d 34  65 31 64 2d 39 61 62 64  |b-e565-4e1d-9abd|
              000000c0  2d 65 61 30 30 65 36 34  66 32 37 39 34 5c 22 7d  |-ea00e64f2794\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 13:03:50.873181 20 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-fvmm5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-fvmm5",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-5614",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8121b2df-57e8-4981-bbe5-64419b8994a2",
      ResourceVersion: (string) (len=5) "26501",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "3c955a40-b2c7-4291-a2b5-0dc9d7be1efa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 63  39 35 35 61 34 30 2d 62  |d\":\"3c955a40-b|
              00000090  32 63 37 2d 34 32 39 31  2d 61 32 62 35 2d 30 64  |2c7-4291-a2b5-0d|
              000000a0  63 39 64 37 62 65 31 65  66 61 5c 22 7d 22 3a 7b  |c9d7be1efa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 35  34 5c 22 7d 22 3a 7b 22  |.244.0.54\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cr9ql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cr9ql",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=11) "10.244.0.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863298229,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://99aa485ce7c19b7f4644e1186911962b4b577169843394b650cb4872a020003f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cr9ql",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:03:50.874506 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5614" for this suite. @ 09/30/24 13:03:50.876
• [4.061 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/30/24 13:03:50.88
  I0930 13:03:50.880056 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename namespaces @ 09/30/24 13:03:50.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:50.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:03:50.89
  STEP: Creating a test namespace @ 09/30/24 13:03:50.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:03:50.989
  STEP: Creating a pod in the namespace @ 09/30/24 13:03:50.991
  STEP: Waiting for the pod to have running status @ 09/30/24 13:03:50.998
  E0930 13:03:51.810975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:52.811750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/30/24 13:03:53.002
  STEP: Waiting for the namespace to be removed. @ 09/30/24 13:03:53.005
  E0930 13:03:53.812204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:54.813073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:55.813707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:56.813985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:57.814092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:58.814897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:03:59.814994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:00.815019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:01.815413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:02.815630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:03.815911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/30/24 13:04:04.008
  STEP: Verifying there are no pods in the namespace @ 09/30/24 13:04:04.017
  I0930 13:04:04.019644 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1681" for this suite. @ 09/30/24 13:04:04.021
  STEP: Destroying namespace "nsdeletetest-4957" for this suite. @ 09/30/24 13:04:04.025
  I0930 13:04:04.026807 20 framework.go:370] Namespace nsdeletetest-4957 was already deleted
  STEP: Destroying namespace "nsdeletetest-2018" for this suite. @ 09/30/24 13:04:04.026
• [13.150 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/30/24 13:04:04.03
  I0930 13:04:04.030111 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename var-expansion @ 09/30/24 13:04:04.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:04:04.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:04:04.12
  E0930 13:04:04.816487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:05.816747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:04:06.132409 20 delete.go:62] Deleting pod "var-expansion-5e715817-122f-4abc-892c-34ab935dff2d" in namespace "var-expansion-6860"
  I0930 13:04:06.137564 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-5e715817-122f-4abc-892c-34ab935dff2d" to be fully deleted
  E0930 13:04:06.816840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:07.816943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:04:08.141176 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6860" for this suite. @ 09/30/24 13:04:08.143
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 09/30/24 13:04:08.148
  I0930 13:04:08.148974 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename svcaccounts @ 09/30/24 13:04:08.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:04:08.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:04:08.158
  I0930 13:04:08.170445 20 service_accounts.go:618] created pod
  E0930 13:04:08.817005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:09.817421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:04:10.175
  E0930 13:04:10.817770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:11.817934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:12.818103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:13.818356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:14.818524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:15.818701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:16.818862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:17.819024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:18.819285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:19.819454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:20.819546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:21.819718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:22.819955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:23.819996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:24.820159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:25.820250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:26.820419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:27.820507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:28.820794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:29.820961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:30.821134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:31.821228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:32.821396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:33.821627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:34.821701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:35.821864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:36.822028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:37.822190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:38.822410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:39.822500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:04:40.175442 20 service_accounts.go:624] polling logs
  I0930 13:04:40.185591 20 service_accounts.go:634] Pod logs: 
  I0930 13:04:08.607398       1 log.go:245] OK: Got token
  I0930 13:04:08.607484       1 log.go:245] validating with in-cluster discovery
  I0930 13:04:08.607676       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0930 13:04:08.607941       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-706:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0x40000ca890), NotBefore:(*jwt.NumericDate)(0x40000ca9c0), IssuedAt:(*jwt.NumericDate)(0x40000ca8a0), ID:"981355fd-7e25-45da-a3f8-b570bda72baf"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-706", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"49d44e71-66c3-4608-a733-039ffa1fcc2b"}}}
  I0930 13:04:08.614106       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0930 13:04:08.615137       1 log.go:245] OK: Validated signature on JWT
  I0930 13:04:08.615214       1 log.go:245] OK: Got valid claims from token!
  I0930 13:04:08.615238       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-706:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0x4000302848), NotBefore:(*jwt.NumericDate)(0x4000302870), IssuedAt:(*jwt.NumericDate)(0x4000302850), ID:"981355fd-7e25-45da-a3f8-b570bda72baf"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-706", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"49d44e71-66c3-4608-a733-039ffa1fcc2b"}}}

  I0930 13:04:40.185639 20 service_accounts.go:638] completed pod
  I0930 13:04:40.188857 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-706" for this suite. @ 09/30/24 13:04:40.19
• [32.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/30/24 13:04:40.194
  I0930 13:04:40.194575 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename disruption @ 09/30/24 13:04:40.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:04:40.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:04:40.206
  STEP: Creating a kubernetes client @ 09/30/24 13:04:40.208
  I0930 13:04:40.208755 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename disruption-2 @ 09/30/24 13:04:40.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:04:40.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:04:40.307
  STEP: Waiting for the pdb to be processed @ 09/30/24 13:04:40.312
  E0930 13:04:40.822645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:41.822936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/30/24 13:04:42.318
  E0930 13:04:42.823633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:43.823928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/30/24 13:04:44.323
  E0930 13:04:44.824909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:45.825091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 09/30/24 13:04:46.326
  STEP: listing a collection of PDBs in namespace disruption-119 @ 09/30/24 13:04:46.328
  STEP: deleting a collection of PDBs @ 09/30/24 13:04:46.33
  STEP: Waiting for the PDB collection to be deleted @ 09/30/24 13:04:46.336
  I0930 13:04:46.337664 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4515" for this suite. @ 09/30/24 13:04:46.339
  I0930 13:04:46.343036 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-119" for this suite. @ 09/30/24 13:04:46.44
• [6.250 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/30/24 13:04:46.444
  I0930 13:04:46.444366 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename containers @ 09/30/24 13:04:46.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:04:46.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:04:46.454
  STEP: Creating a pod to test override all @ 09/30/24 13:04:46.456
  E0930 13:04:46.826043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:47.826130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:48.826713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:49.826817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:04:50.468
  I0930 13:04:50.470466 20 output.go:196] Trying to get logs from node worker-0 pod client-containers-69ad1655-2f34-4619-8e29-006b5ae0d041 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 13:04:50.474
  I0930 13:04:50.485002 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2855" for this suite. @ 09/30/24 13:04:50.487
• [4.046 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/30/24 13:04:50.49
  I0930 13:04:50.490960 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 13:04:50.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:04:50.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:04:50.501
  E0930 13:04:50.826909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:51.827372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:52.827856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:53.828524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:54.829029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:55.829118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:56.829959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:57.830624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:58.831486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:04:59.831556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:00.831790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:01.832266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:02.832598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:03.833135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:04.833669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:05.834703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:06.835005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/30/24 13:05:07.507
  E0930 13:05:07.835597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:08.836511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:09.837001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:10.837414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:11.837706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/30/24 13:05:12.509
  STEP: Ensuring resource quota status is calculated @ 09/30/24 13:05:12.514
  E0930 13:05:12.837984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:13.838318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/30/24 13:05:14.516
  STEP: Ensuring resource quota status captures configMap creation @ 09/30/24 13:05:14.524
  E0930 13:05:14.838370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:15.838560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/30/24 13:05:16.527
  STEP: Ensuring resource quota status released usage @ 09/30/24 13:05:16.53
  E0930 13:05:16.839000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:17.839179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:05:18.533643 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4567" for this suite. @ 09/30/24 13:05:18.535
• [28.048 seconds]
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/30/24 13:05:18.539
  I0930 13:05:18.539152 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename endpointslice @ 09/30/24 13:05:18.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:05:18.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:05:18.549
  E0930 13:05:18.839713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:19.839811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:05:20.580798 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-67" for this suite. @ 09/30/24 13:05:20.583
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/30/24 13:05:20.588
  I0930 13:05:20.588380 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename cronjob @ 09/30/24 13:05:20.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:05:20.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:05:20.599
  STEP: Creating a ForbidConcurrent cronjob @ 09/30/24 13:05:20.601
  STEP: Ensuring a job is scheduled @ 09/30/24 13:05:20.607
  E0930 13:05:20.840460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:21.841105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:22.841266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:23.841503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:24.841783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:25.841836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:26.842486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:27.842682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:28.843298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:29.843455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:30.843658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:31.843818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:32.843879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:33.843969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:34.844056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:35.844221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:36.844325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:37.844482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:38.844556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:39.844662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:40.844860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:41.845022      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:42.845366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:43.845602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:44.845702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:45.845862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:46.846852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:47.847009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:48.847344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:49.848410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:50.848670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:51.848839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:52.849343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:53.850409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:54.851458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:55.851638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:56.852651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:57.852812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:58.853152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:05:59.853315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/30/24 13:06:00.609
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/30/24 13:06:00.61
  STEP: Ensuring no more jobs are scheduled @ 09/30/24 13:06:00.612
  STEP: Removing cronjob @ 09/30/24 13:06:00.614
  I0930 13:06:00.619203 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9343" for this suite. @ 09/30/24 13:06:00.621
• [40.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/30/24 13:06:00.624
  I0930 13:06:00.624793 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 13:06:00.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:06:00.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:06:00.637
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:06:00.639
  E0930 13:06:00.854197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:01.854597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:02.855071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:03.855314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:06:04.653
  I0930 13:06:04.655017 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-b60ed08a-03dd-4647-9c13-271a79cd12f3 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:06:04.658
  I0930 13:06:04.667097 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4637" for this suite. @ 09/30/24 13:06:04.669
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/30/24 13:06:04.673
  I0930 13:06:04.673335 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename subpath @ 09/30/24 13:06:04.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:06:04.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:06:04.685
  STEP: Setting up data @ 09/30/24 13:06:04.687
  STEP: Creating pod pod-subpath-test-configmap-sv8k @ 09/30/24 13:06:04.693
  STEP: Creating a pod to test atomic-volume-subpath @ 09/30/24 13:06:04.693
  E0930 13:06:04.855391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:05.855462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:06.856550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:07.856747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:08.857193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:09.857376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:10.857473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:11.857678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:12.857965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:13.858260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:14.859140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:15.859354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:16.860411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:17.860615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:18.861055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:19.861153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:20.861858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:21.862074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:22.863025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:23.863359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:24.864075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:25.864257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:26.864518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:27.864720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:06:28.733
  I0930 13:06:28.734764 20 output.go:196] Trying to get logs from node worker-0 pod pod-subpath-test-configmap-sv8k container test-container-subpath-configmap-sv8k: <nil>
  STEP: delete the pod @ 09/30/24 13:06:28.739
  STEP: Deleting pod pod-subpath-test-configmap-sv8k @ 09/30/24 13:06:28.749
  I0930 13:06:28.749363 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-sv8k" in namespace "subpath-90"
  I0930 13:06:28.751003 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-90" for this suite. @ 09/30/24 13:06:28.753
• [24.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 09/30/24 13:06:28.756
  I0930 13:06:28.756378 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename dns @ 09/30/24 13:06:28.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:06:28.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:06:28.769
  STEP: Creating a test externalName service @ 09/30/24 13:06:28.771
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7149.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local; sleep 1; done
   @ 09/30/24 13:06:28.774
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7149.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local; sleep 1; done
   @ 09/30/24 13:06:28.774
  STEP: creating a pod to probe DNS @ 09/30/24 13:06:28.774
  STEP: submitting the pod to kubernetes @ 09/30/24 13:06:28.774
  E0930 13:06:28.865767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:29.865838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/30/24 13:06:30.786
  STEP: looking for the results for each expected name from probers @ 09/30/24 13:06:30.787
  I0930 13:06:30.795716 20 dns_common.go:552] DNS probes using dns-test-f9f5158c-9af7-4c77-9bca-a7325707dc20 succeeded

  STEP: changing the externalName to bar.example.com @ 09/30/24 13:06:30.795
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7149.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local; sleep 1; done
   @ 09/30/24 13:06:30.8
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7149.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local; sleep 1; done
   @ 09/30/24 13:06:30.8
  STEP: creating a second pod to probe DNS @ 09/30/24 13:06:30.8
  STEP: submitting the pod to kubernetes @ 09/30/24 13:06:30.8
  E0930 13:06:30.866210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:31.866803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:32.866833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:33.867880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:34.868900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:35.869090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/30/24 13:06:36.815
  STEP: looking for the results for each expected name from probers @ 09/30/24 13:06:36.817
  I0930 13:06:36.821131 20 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:36.823630 20 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:36.823668 20 dns_common.go:489] Lookups using dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b failed for: [wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local]

  I0930 13:06:36.833909 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:06:36.837794 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:06:36.841635 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:06:36.869830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:37.870023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:38.870892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:39.871093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:40.871882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:06:41.821111 20 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:41.823632 20 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:41.823673 20 dns_common.go:489] Lookups using dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b failed for: [wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local]

  I0930 13:06:41.827494 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:06:41.831052 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:06:41.834649 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:06:41.872856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:42.873040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:43.873390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:44.873558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:45.873720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:06:46.820744 20 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:46.823278 20 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:46.823316 20 dns_common.go:489] Lookups using dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b failed for: [wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local]

  I0930 13:06:46.827130 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:06:46.830821 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:06:46.834468 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:06:46.874694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:47.874745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:48.875040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:49.875225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:50.875417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:06:51.820279 20 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:51.823103 20 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:51.823144 20 dns_common.go:489] Lookups using dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b failed for: [wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local]

  I0930 13:06:51.827166 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:06:51.831073 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:06:51.835034 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:06:51.876226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:52.876402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:53.877465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:54.877544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:55.877748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:06:56.820206 20 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:56.822719 20 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local from pod  dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0930 13:06:56.822760 20 dns_common.go:489] Lookups using dns-7149/dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b failed for: [wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local]

  I0930 13:06:56.826515 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:06:56.830157 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:06:56.833794 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:06:56.878032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:57.878204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:58.878247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:06:59.878440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:00.878641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:01.823560 20 dns_common.go:552] DNS probes using dns-test-ee21d9a9-50f4-4504-998f-df95969d2d7b succeeded

  STEP: changing the service to type=ClusterIP @ 09/30/24 13:07:01.823
  W0930 13:07:01.835084      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7149.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7149.svc.cluster.local; sleep 1; done
   @ 09/30/24 13:07:01.835
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7149.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7149.svc.cluster.local; sleep 1; done
   @ 09/30/24 13:07:01.835
  STEP: creating a third pod to probe DNS @ 09/30/24 13:07:01.835
  STEP: submitting the pod to kubernetes @ 09/30/24 13:07:01.837
  E0930 13:07:01.879413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:02.879829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/30/24 13:07:03.849
  STEP: looking for the results for each expected name from probers @ 09/30/24 13:07:03.851
  I0930 13:07:03.857398 20 dns_common.go:552] DNS probes using dns-test-c1429042-d384-4eaa-9405-e22659125353 succeeded

  STEP: deleting the pod @ 09/30/24 13:07:03.857
  STEP: deleting the pod @ 09/30/24 13:07:03.866
  STEP: deleting the pod @ 09/30/24 13:07:03.876
  E0930 13:07:03.880539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the test externalName service @ 09/30/24 13:07:03.886
  I0930 13:07:03.899031 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7149" for this suite. @ 09/30/24 13:07:03.901
• [35.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/30/24 13:07:03.905
  I0930 13:07:03.905090 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename apf @ 09/30/24 13:07:03.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:07:03.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:07:03.918
  STEP: getting /apis @ 09/30/24 13:07:03.92
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/30/24 13:07:03.922
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/30/24 13:07:03.923
  STEP: creating @ 09/30/24 13:07:03.924
  STEP: getting @ 09/30/24 13:07:03.935
  STEP: listing @ 09/30/24 13:07:03.937
  STEP: watching @ 09/30/24 13:07:03.938
  I0930 13:07:03.938869 20 flowcontrol.go:620] starting watch
  STEP: patching @ 09/30/24 13:07:03.939
  STEP: updating @ 09/30/24 13:07:03.943
  I0930 13:07:03.949365 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/30/24 13:07:03.949
  STEP: patching /status @ 09/30/24 13:07:03.951
  STEP: updating /status @ 09/30/24 13:07:03.954
  STEP: deleting @ 09/30/24 13:07:03.959
  STEP: deleting a collection @ 09/30/24 13:07:03.966
  I0930 13:07:03.975253 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4065" for this suite. @ 09/30/24 13:07:04.001
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/30/24 13:07:04.007
  I0930 13:07:04.007345 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename deployment @ 09/30/24 13:07:04.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:07:04.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:07:04.02
  I0930 13:07:04.029450 20 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0930 13:07:04.881519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:05.881783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:06.881979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:07.882101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:08.882367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:09.031911 20 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/30/24 13:07:09.031
  I0930 13:07:09.031987 20 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0930 13:07:09.882814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:10.883003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:11.034222 20 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0930 13:07:11.040736 20 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0930 13:07:11.883128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:12.883321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:13.044955 20 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0930 13:07:13.048464 20 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0930 13:07:13.051536 20 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0930 13:07:13.056756 20 deployment.go:313] Updating deployment test-rollover-deployment
  I0930 13:07:13.056794 20 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0930 13:07:13.883367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:14.883468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:15.060817 20 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0930 13:07:15.064094 20 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0930 13:07:15.067093 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0930 13:07:15.067147 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:07:15.883830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:16.884016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:17.071211 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0930 13:07:17.071276 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:07:17.885045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:18.885338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:19.071607 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0930 13:07:19.071672 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:07:19.886393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:20.886468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:21.071707 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0930 13:07:21.071775 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:07:21.887512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:22.887706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:23.071907 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0930 13:07:23.071976 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 7, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 7, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:07:23.887730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:24.888014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:25.071567 20 deployment.go:94] 
  I0930 13:07:25.071636 20 deployment.go:974] Ensure that both old replica sets have no replicas
  I0930 13:07:25.076950 20 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8616",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92c7ffa5-e532-48fd-9d58-7e202ffc9f4c",
      ResourceVersion: (string) (len=5) "27527",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298431,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0930 13:07:25.079825 20 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8616",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25abfe88-b52b-4a32-bc66-5d7fccd7439f",
      ResourceVersion: (string) (len=5) "27517",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298433,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "92c7ffa5-e532-48fd-9d58-7e202ffc9f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 63 37 66 66  61 35 2d 65 35 33 32 2d  |\"92c7ffa5-e532-|
              00000120  34 38 66 64 2d 39 64 35  38 2d 37 65 32 30 32 66  |48fd-9d58-7e202f|
              00000130  66 63 39 66 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fc9f4c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 13:07:25.080469 20 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0930 13:07:25.080638 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8616",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9545ed8-5fe2-46a0-9b9b-e88952127a6a",
      ResourceVersion: (string) (len=5) "27526",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "92c7ffa5-e532-48fd-9d58-7e202ffc9f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 32 63 37 66 66 61 35  2d 65 35 33 32 2d 34 38  |92c7ffa5-e532-48|
              000000c0  66 64 2d 39 64 35 38 2d  37 65 32 30 32 66 66 63  |fd-9d58-7e202ffc|
              000000d0  39 66 34 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |9f4c\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 13:07:25.081414 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8616",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4205116c-fd0a-4681-aaa8-85da33964ab2",
      ResourceVersion: (string) (len=5) "27479",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298431,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "92c7ffa5-e532-48fd-9d58-7e202ffc9f4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 63 37 66 66  61 35 2d 65 35 33 32 2d  |\"92c7ffa5-e532-|
              00000120  34 38 66 64 2d 39 64 35  38 2d 37 65 32 30 32 66  |48fd-9d58-7e202f|
              00000130  66 63 39 66 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fc9f4c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 13:07:25.084394 20 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-5sl99" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-5sl99",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-8616",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be2892fd-bf58-4540-a89c-369b567f8c7a",
      ResourceVersion: (string) (len=5) "27492",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298433,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "25abfe88-b52b-4a32-bc66-5d7fccd7439f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 35  61 62 66 65 38 38 2d 62  |d\":\"25abfe88-b|
              00000090  35 32 62 2d 34 61 33 32  2d 62 63 36 36 2d 35 64  |52b-4a32-bc66-5d|
              000000a0  37 66 63 63 64 37 34 33  39 66 5c 22 7d 22 3a 7b  |7fccd7439f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  31 33 5c 22 7d 22 3a 7b  |.244.1.213\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6pzb6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6pzb6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863298433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) (len=12) "10.244.1.213",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.213"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863298433,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863298433,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://a0c11ee6610a94076578b1e659781ea1daf59b5af73210ff61c67cc312bde2a9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6pzb6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:07:25.085740 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8616" for this suite. @ 09/30/24 13:07:25.087
• [21.084 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/30/24 13:07:25.091
  I0930 13:07:25.091264 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename gc @ 09/30/24 13:07:25.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:07:25.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:07:25.101
  I0930 13:07:25.129022 20 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"fe2c4d22-7ff6-4bde-9279-666e2452f811", Controller:(*bool)(0x4003a2c5e6), BlockOwnerDeletion:(*bool)(0x4003a2c5e7)}}
  I0930 13:07:25.135368 20 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"91772acc-0419-41f6-a21e-39f43979136d", Controller:(*bool)(0x4003a2c8ce), BlockOwnerDeletion:(*bool)(0x4003a2c8cf)}}
  I0930 13:07:25.143457 20 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"19e8cd33-f07a-4733-a495-4e51a236aff7", Controller:(*bool)(0x4003a2cb86), BlockOwnerDeletion:(*bool)(0x4003a2cb87)}}
  E0930 13:07:25.888168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:26.888854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:27.888949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:28.889050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:29.889218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:07:30.149704 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-161" for this suite. @ 09/30/24 13:07:30.151
• [5.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/30/24 13:07:30.156
  I0930 13:07:30.156087 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 13:07:30.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:07:30.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:07:30.168
  STEP: Creating projection with secret that has name secret-emptykey-test-e7306fd9-9cfd-43df-9ba4-2a93a87eb606 @ 09/30/24 13:07:30.17
  I0930 13:07:30.171912 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3783" for this suite. @ 09/30/24 13:07:30.252
• [0.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/30/24 13:07:30.255
  I0930 13:07:30.255529 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 13:07:30.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:07:30.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:07:30.268
  STEP: Creating configMap with name cm-test-opt-del-497c765f-c471-4d49-89d2-6b02161e4ac6 @ 09/30/24 13:07:30.352
  STEP: Creating configMap with name cm-test-opt-upd-ed2e7ae1-7029-453d-807b-7fe0a78f447a @ 09/30/24 13:07:30.357
  STEP: Creating the pod @ 09/30/24 13:07:30.36
  E0930 13:07:30.890019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:31.890289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-497c765f-c471-4d49-89d2-6b02161e4ac6 @ 09/30/24 13:07:32.384
  STEP: Updating configmap cm-test-opt-upd-ed2e7ae1-7029-453d-807b-7fe0a78f447a @ 09/30/24 13:07:32.387
  STEP: Creating configMap with name cm-test-opt-create-661f35d5-b9a5-4344-bded-6b8ff65d3cd0 @ 09/30/24 13:07:32.39
  STEP: waiting to observe update in volume @ 09/30/24 13:07:32.393
  E0930 13:07:32.890321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:33.890653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:34.891020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:35.891207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:36.891709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:37.891890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:38.892727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:39.892818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:40.893187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:41.893939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:42.894346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:43.894405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:44.895102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:45.895294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:46.895864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:47.895937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:48.896636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:49.896824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:50.897481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:51.897698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:52.897870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:53.898192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:54.898784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:55.898858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:56.899023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:57.899210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:58.899637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:07:59.899814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:00.900099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:01.900303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:02.900989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:03.901285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:04.901756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:05.901943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:06.902690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:07.902882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:08.902998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:09.903181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:10.903780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:11.904024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:12.904736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:13.905025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:14.905065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:15.905256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:16.905935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:17.906112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:18.906929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:19.907039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:20.907801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:21.907989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:22.909016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:23.909323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:24.909837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:25.910018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:26.910856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:27.911137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:28.911290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:29.911382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:30.912285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:31.912564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:32.913397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:33.913657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:34.914011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:35.914285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:36.915300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:37.915440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:38.915496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:39.915771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:40.916668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:41.917025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:42.917155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:43.917566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:44.917889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:45.918084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:46.918150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:47.918336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:48.918568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:49.918849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:08:50.601769 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2960" for this suite. @ 09/30/24 13:08:50.603
• [80.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/30/24 13:08:50.609
  I0930 13:08:50.609411 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 13:08:50.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:08:50.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:08:50.62
  STEP: Creating configMap with name configmap-test-volume-a18cb33f-1dcf-4961-ac2e-2414a0170ce7 @ 09/30/24 13:08:50.622
  STEP: Creating a pod to test consume configMaps @ 09/30/24 13:08:50.625
  E0930 13:08:50.919268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:51.919360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:52.919766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:53.920055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:08:54.64
  I0930 13:08:54.641972 20 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-1f83631f-f79c-4106-9945-93da721d7301 container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 13:08:54.65
  I0930 13:08:54.663676 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1940" for this suite. @ 09/30/24 13:08:54.665
• [4.060 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 09/30/24 13:08:54.669
  I0930 13:08:54.669457 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 13:08:54.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:08:54.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:08:54.679
  STEP: Creating a pod to test downward api env vars @ 09/30/24 13:08:54.681
  E0930 13:08:54.921123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:55.921359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:56.921452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:57.922380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:08:58.694
  I0930 13:08:58.696511 20 output.go:196] Trying to get logs from node worker-1 pod downward-api-e5389fde-e532-4825-9161-bf114ad45453 container dapi-container: <nil>
  STEP: delete the pod @ 09/30/24 13:08:58.701
  I0930 13:08:58.713914 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8410" for this suite. @ 09/30/24 13:08:58.753
• [4.089 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/30/24 13:08:58.758
  I0930 13:08:58.758432 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:08:58.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:08:58.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:08:58.768
  STEP: Creating configMap with name projected-configmap-test-volume-4e02476b-4099-4fe9-90b2-758f3ca20287 @ 09/30/24 13:08:58.77
  STEP: Creating a pod to test consume configMaps @ 09/30/24 13:08:58.773
  E0930 13:08:58.923247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:08:59.924116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:00.924200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:01.924385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:09:02.787
  I0930 13:09:02.789358 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-configmaps-31324034-9ba0-4701-a1c0-023e9abc292c container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 13:09:02.793
  I0930 13:09:02.807850 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8046" for this suite. @ 09/30/24 13:09:02.812
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/30/24 13:09:02.818
  I0930 13:09:02.818258 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename daemonsets @ 09/30/24 13:09:02.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:02.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:02.834
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/30/24 13:09:02.916
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/30/24 13:09:02.921
  E0930 13:09:02.924886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:03.014890 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:09:03.014932 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  E0930 13:09:03.925004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:03.947301 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0930 13:09:03.947339 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  E0930 13:09:04.925000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:04.926786 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0930 13:09:04.926821 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/30/24 13:09:04.928
  I0930 13:09:05.027056 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0930 13:09:05.027097 20 fixtures.go:130] Node worker-1 is running 0 daemon pod, expected 1
  E0930 13:09:05.926097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:05.941365 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0930 13:09:05.941401 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/30/24 13:09:05.941
  STEP: Deleting DaemonSet "daemon-set" @ 09/30/24 13:09:05.944
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1925, will wait for the garbage collector to delete the pods @ 09/30/24 13:09:05.944
  I0930 13:09:05.999693 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.508297ms
  I0930 13:09:06.099844 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.145399ms
  E0930 13:09:06.927015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:07.802375 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:09:07.802414 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0930 13:09:07.804349 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28006"},"items":null}

  I0930 13:09:07.805901 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28006"},"items":null}

  I0930 13:09:07.810930 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1925" for this suite. @ 09/30/24 13:09:07.812
• [4.998 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/30/24 13:09:07.815
  I0930 13:09:07.816012 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:09:07.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:07.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:07.827
  STEP: Creating the pod @ 09/30/24 13:09:07.829
  E0930 13:09:07.927639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:08.928113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:09.928147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:10.354001 20 pod_client.go:173] Successfully updated pod "labelsupdate612098e6-dcce-40f3-829b-b512a307d9b6"
  E0930 13:09:10.928868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:11.929061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:12.362878 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3043" for this suite. @ 09/30/24 13:09:12.365
• [4.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/30/24 13:09:12.368
  I0930 13:09:12.368610 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 13:09:12.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:12.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:12.381
  STEP: Creating a ResourceQuota @ 09/30/24 13:09:12.383
  STEP: Getting a ResourceQuota @ 09/30/24 13:09:12.385
  STEP: Updating a ResourceQuota @ 09/30/24 13:09:12.387
  STEP: Verifying a ResourceQuota was modified @ 09/30/24 13:09:12.394
  STEP: Deleting a ResourceQuota @ 09/30/24 13:09:12.396
  STEP: Verifying the deleted ResourceQuota @ 09/30/24 13:09:12.399
  I0930 13:09:12.401242 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4469" for this suite. @ 09/30/24 13:09:12.465
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/30/24 13:09:12.471
  I0930 13:09:12.471114 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 13:09:12.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:12.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:12.483
  STEP: Creating configMap configmap-7073/configmap-test-ad0011ec-4e43-4410-8206-4c2f75aaef6e @ 09/30/24 13:09:12.485
  STEP: Creating a pod to test consume configMaps @ 09/30/24 13:09:12.488
  E0930 13:09:12.929745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:13.930196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:09:14.5
  I0930 13:09:14.501784 20 output.go:196] Trying to get logs from node worker-0 pod pod-configmaps-d8095c4b-223e-4218-9fa3-f2059014a3d8 container env-test: <nil>
  STEP: delete the pod @ 09/30/24 13:09:14.505
  I0930 13:09:14.515947 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7073" for this suite. @ 09/30/24 13:09:14.518
• [2.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/30/24 13:09:14.521
  I0930 13:09:14.521980 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pod-network-test @ 09/30/24 13:09:14.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:14.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:14.535
  STEP: Performing setup for networking test in namespace pod-network-test-6101 @ 09/30/24 13:09:14.537
  STEP: creating a selector @ 09/30/24 13:09:14.537
  STEP: Creating the service pods in kubernetes @ 09/30/24 13:09:14.537
  I0930 13:09:14.537141 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0930 13:09:14.931213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:15.931492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:16.931994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:17.932189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:18.932438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:19.932656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:20.932775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:21.932962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:22.933134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:23.933413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:24.933793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:25.933739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:26.934302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:27.934456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:28.934920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:29.935079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:30.935254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:31.935413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:32.935482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:33.935601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:34.935649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:35.935812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/30/24 13:09:36.674
  E0930 13:09:36.936705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:37.936871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:38.690163 20 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0930 13:09:38.690196 20 utils.go:496] Going to poll 10.244.0.71 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0930 13:09:38.691542 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.71 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6101 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:09:38.691572 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:09:38.692010 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:09:38.692059 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6101/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.71+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0930 13:09:38.937786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:39.729368 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0930 13:09:39.729421 20 utils.go:496] Going to poll 10.244.1.218 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0930 13:09:39.731386 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.218 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6101 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:09:39.731413 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:09:39.731845 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:09:39.731894 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6101/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.218+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0930 13:09:39.938408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:40.767909 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0930 13:09:40.768043 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6101" for this suite. @ 09/30/24 13:09:40.77
• [26.254 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/30/24 13:09:40.775
  I0930 13:09:40.775847 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename init-container @ 09/30/24 13:09:40.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:40.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:40.786
  STEP: creating the pod @ 09/30/24 13:09:40.788
  I0930 13:09:40.788205 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0930 13:09:40.939203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:41.939670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:42.940694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:43.940987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:44.268634 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6520" for this suite. @ 09/30/24 13:09:44.27
• [3.498 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/30/24 13:09:44.274
  I0930 13:09:44.274747 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:09:44.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:44.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:44.284
  STEP: Setting up server cert @ 09/30/24 13:09:44.386
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:09:44.767
  STEP: Deploying the webhook pod @ 09/30/24 13:09:44.772
  STEP: Wait for the deployment to be ready @ 09/30/24 13:09:44.782
  I0930 13:09:44.786635 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:09:44.941818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:45.942812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:09:46.792
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:09:46.8
  E0930 13:09:46.943123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:47.800848 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/30/24 13:09:47.804
  STEP: verifying the validating webhook match conditions @ 09/30/24 13:09:47.81
  STEP: updating the validating webhook match conditions @ 09/30/24 13:09:47.811
  STEP: verifying the validating webhook match conditions @ 09/30/24 13:09:47.817
  I0930 13:09:47.844996 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9563" for this suite. @ 09/30/24 13:09:47.847
  STEP: Destroying namespace "webhook-markers-9726" for this suite. @ 09/30/24 13:09:47.852
• [3.582 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/30/24 13:09:47.856
  I0930 13:09:47.856910 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:09:47.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:47.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:47.867
  E0930 13:09:47.944093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/30/24 13:09:47.968
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:09:48.165
  STEP: Deploying the webhook pod @ 09/30/24 13:09:48.168
  STEP: Wait for the deployment to be ready @ 09/30/24 13:09:48.178
  I0930 13:09:48.181902 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:09:48.944722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:49.944911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:09:50.188
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:09:50.196
  E0930 13:09:50.945537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:51.196874 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/30/24 13:09:51.222
  E0930 13:09:51.945669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:52.945853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:53.946231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:54.946422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:55.946624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:09:56.238437 20 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/30/24 13:09:56.346
  I0930 13:09:56.346618 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:09:56.380867 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9287" for this suite. @ 09/30/24 13:09:56.383
  STEP: Destroying namespace "webhook-markers-7538" for this suite. @ 09/30/24 13:09:56.387
• [8.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/30/24 13:09:56.394
  I0930 13:09:56.394985 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:09:56.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:56.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:56.405
  STEP: Creating configMap with name projected-configmap-test-volume-e35a7db8-80aa-4a78-8bc3-228f95fc388f @ 09/30/24 13:09:56.407
  STEP: Creating a pod to test consume configMaps @ 09/30/24 13:09:56.411
  E0930 13:09:56.946678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:57.946961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:09:58.421
  I0930 13:09:58.423604 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-configmaps-04dccd35-6b6f-48bd-a59a-162a5f479825 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 13:09:58.428
  I0930 13:09:58.439840 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1191" for this suite. @ 09/30/24 13:09:58.441
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/30/24 13:09:58.446
  I0930 13:09:58.446454 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 13:09:58.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:09:58.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:09:58.456
  STEP: Creating configMap with name configmap-test-upd-6a5499e3-2224-4059-869b-aa77cd3a8d7a @ 09/30/24 13:09:58.542
  STEP: Creating the pod @ 09/30/24 13:09:58.545
  E0930 13:09:58.948005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:09:59.948270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/30/24 13:10:00.557
  STEP: Waiting for pod with binary data @ 09/30/24 13:10:00.56
  I0930 13:10:00.564677 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6756" for this suite. @ 09/30/24 13:10:00.566
• [2.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/30/24 13:10:00.57
  I0930 13:10:00.570480 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename aggregator @ 09/30/24 13:10:00.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:00.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:00.58
  I0930 13:10:00.582932 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Registering the sample API server. @ 09/30/24 13:10:00.583
  I0930 13:10:00.901061 20 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0930 13:10:00.922679 20 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0930 13:10:00.948697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:01.948881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:02.947390 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:02.949401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:03.949511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:04.949750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:04.949806 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:05.949874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:06.949796 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:06.949908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:07.950878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:08.950716 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:08.951662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:09.952023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:10.950261 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:10.952347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:11.952504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:12.949654 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:12.952741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:13.953078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:14.950315 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:14.953392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:15.953600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:16.949799 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:16.953894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:17.954069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:18.949765 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:18.954854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:19.955058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:20.950762 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:20.955861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:21.956030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:22.949742 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:10:22.956794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:23.957094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:24.957992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:25.065077 20 aggregator.go:755] Waited 109.137487ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/30/24 13:10:25.096
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/30/24 13:10:25.098
  STEP: List APIServices @ 09/30/24 13:10:25.102
  I0930 13:10:25.104574 20 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/30/24 13:10:25.104
  I0930 13:10:25.114545 20 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/30/24 13:10:25.114
  I0930 13:10:25.121852 20 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.September, 30, 13, 10, 24, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/30/24 13:10:25.121
  I0930 13:10:25.123690 20 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-09-30 13:10:24 +0000 UTC Passed all checks passed}
  I0930 13:10:25.123736 20 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0930 13:10:25.123746 20 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/30/24 13:10:25.123
  I0930 13:10:25.131292 20 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-589900352" @ 09/30/24 13:10:25.131
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/30/24 13:10:25.14
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/30/24 13:10:25.147
  STEP: Patch APIService Status @ 09/30/24 13:10:25.148
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/30/24 13:10:25.154
  I0930 13:10:25.156644 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-09-30 13:10:24 +0000 UTC Passed all checks passed}
  I0930 13:10:25.156685 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0930 13:10:25.156696 20 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0930 13:10:25.156706 20 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/30/24 13:10:25.156
  STEP: Confirm that the generated APIService has been deleted @ 09/30/24 13:10:25.161
  I0930 13:10:25.161086 20 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0930 13:10:25.162616 20 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0930 13:10:25.162642 20 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0930 13:10:25.219259 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6557" for this suite. @ 09/30/24 13:10:25.221
• [24.656 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/30/24 13:10:25.226
  I0930 13:10:25.226974 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename var-expansion @ 09/30/24 13:10:25.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:25.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:25.238
  STEP: Creating a pod to test env composition @ 09/30/24 13:10:25.24
  E0930 13:10:25.958826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:26.958875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:27.959130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:28.959432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:10:29.255
  I0930 13:10:29.256850 20 output.go:196] Trying to get logs from node worker-0 pod var-expansion-36d45d4d-fb32-478d-9f1a-70632d927546 container dapi-container: <nil>
  STEP: delete the pod @ 09/30/24 13:10:29.26
  I0930 13:10:29.271330 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7471" for this suite. @ 09/30/24 13:10:29.273
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/30/24 13:10:29.277
  I0930 13:10:29.277186 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replicaset @ 09/30/24 13:10:29.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:29.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:29.289
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/30/24 13:10:29.291
  E0930 13:10:29.959529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:30.959748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/30/24 13:10:31.302
  STEP: Then the orphan pod is adopted @ 09/30/24 13:10:31.307
  E0930 13:10:31.960482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/30/24 13:10:32.311
  I0930 13:10:32.313914 20 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/30/24 13:10:32.329
  E0930 13:10:32.961024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:33.334790 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8101" for this suite. @ 09/30/24 13:10:33.336
• [4.065 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/30/24 13:10:33.342
  I0930 13:10:33.342135 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/30/24 13:10:33.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:33.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:33.351
  I0930 13:10:33.353825 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 13:10:33.961374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:34.961845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:35.962851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:36.386633 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6604" for this suite. @ 09/30/24 13:10:36.388
• [3.052 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/30/24 13:10:36.394
  I0930 13:10:36.394337 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubelet-test @ 09/30/24 13:10:36.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:36.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:36.404
  E0930 13:10:36.962933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:37.963223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:38.423095 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2136" for this suite. @ 09/30/24 13:10:38.425
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/30/24 13:10:38.43
  I0930 13:10:38.430573 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/30/24 13:10:38.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:38.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:38.492
  STEP: create the container to handle the HTTPGet hook request. @ 09/30/24 13:10:38.525
  E0930 13:10:38.963893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:39.963998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/30/24 13:10:40.538
  E0930 13:10:40.964982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:41.965799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/30/24 13:10:42.55
  E0930 13:10:42.965974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:43.966819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/30/24 13:10:44.56
  I0930 13:10:44.565025 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7881" for this suite. @ 09/30/24 13:10:44.567
• [6.140 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/30/24 13:10:44.57
  I0930 13:10:44.570681 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/30/24 13:10:44.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:44.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:44.583
  STEP: mirroring a new custom Endpoint @ 09/30/24 13:10:44.593
  I0930 13:10:44.598811 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0930 13:10:44.967357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:45.967572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/30/24 13:10:46.601
  STEP: mirroring deletion of a custom Endpoint @ 09/30/24 13:10:46.607
  I0930 13:10:46.614442 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6617" for this suite. @ 09/30/24 13:10:46.616
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/30/24 13:10:46.622
  I0930 13:10:46.622468 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 13:10:46.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:46.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:46.633
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/30/24 13:10:46.635
  E0930 13:10:46.968724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:47.969787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:48.970871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:49.971787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:10:50.649
  I0930 13:10:50.651504 20 output.go:196] Trying to get logs from node worker-1 pod pod-d8d02165-66e4-45d9-b474-16aa715664bc container test-container: <nil>
  STEP: delete the pod @ 09/30/24 13:10:50.66
  I0930 13:10:50.671078 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2841" for this suite. @ 09/30/24 13:10:50.673
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 09/30/24 13:10:50.679
  I0930 13:10:50.679517 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 13:10:50.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:50.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:50.69
  STEP: creating Agnhost RC @ 09/30/24 13:10:50.692
  I0930 13:10:50.692132 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4691 create -f -'
  I0930 13:10:50.785881 20 builder.go:146] stderr: ""
  I0930 13:10:50.785921 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/30/24 13:10:50.785
  E0930 13:10:50.972295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:51.788433 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0930 13:10:51.788470 20 framework.go:733] Found 1 / 1
  I0930 13:10:51.788485 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/30/24 13:10:51.788
  I0930 13:10:51.790018 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0930 13:10:51.790050 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0930 13:10:51.790104 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4691 patch pod agnhost-primary-xtz8b -p {"metadata":{"annotations":{"x":"y"}}}'
  I0930 13:10:51.842411 20 builder.go:146] stderr: ""
  I0930 13:10:51.842455 20 builder.go:147] stdout: "pod/agnhost-primary-xtz8b patched\n"
  STEP: checking annotations @ 09/30/24 13:10:51.842
  I0930 13:10:51.844835 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0930 13:10:51.844872 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0930 13:10:51.844964 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4691" for this suite. @ 09/30/24 13:10:51.847
• [1.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/30/24 13:10:51.851
  I0930 13:10:51.851452 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:10:51.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:51.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:51.894
  STEP: Creating configMap with name configmap-projected-all-test-volume-1df372a9-6b88-4c7a-800c-28999d42afb8 @ 09/30/24 13:10:51.896
  STEP: Creating secret with name secret-projected-all-test-volume-ccc4cbc6-edd4-42ba-9ff2-1f66ce249036 @ 09/30/24 13:10:51.901
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/30/24 13:10:51.904
  E0930 13:10:51.973096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:52.974879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:53.975407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:54.975619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:10:55.916
  I0930 13:10:55.918371 20 output.go:196] Trying to get logs from node worker-1 pod projected-volume-88ac85c7-56e6-46a9-998d-37a36dd96fc8 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 13:10:55.922
  I0930 13:10:55.931904 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6920" for this suite. @ 09/30/24 13:10:55.933
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/30/24 13:10:55.937
  I0930 13:10:55.937319 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename field-validation @ 09/30/24 13:10:55.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:55.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:55.95
  I0930 13:10:55.953129 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 13:10:55.975717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:56.975994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:57.976090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:10:58.976322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:10:59.005947 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6096" for this suite. @ 09/30/24 13:10:59.007
• [3.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/30/24 13:10:59.01
  I0930 13:10:59.010860 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:10:59.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:10:59.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:10:59.02
  STEP: Creating configMap with name projected-configmap-test-volume-map-0ba5ba87-b783-4b32-a507-0dff6388d56f @ 09/30/24 13:10:59.022
  STEP: Creating a pod to test consume configMaps @ 09/30/24 13:10:59.025
  E0930 13:10:59.977297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:00.977311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:11:01.041
  I0930 13:11:01.043165 20 output.go:196] Trying to get logs from node worker-1 pod pod-projected-configmaps-5101b3d1-5587-4a17-a9f5-7b2820dce19a container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 13:11:01.047
  I0930 13:11:01.057206 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2802" for this suite. @ 09/30/24 13:11:01.059
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/30/24 13:11:01.062
  I0930 13:11:01.062868 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/30/24 13:11:01.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:01.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:01.125
  STEP: creating a policy with variables @ 09/30/24 13:11:01.131
  STEP: waiting until the marker is denied @ 09/30/24 13:11:01.145
  STEP: testing a replicated Deployment to be allowed @ 09/30/24 13:11:01.948
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/30/24 13:11:01.958
  E0930 13:11:01.977823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:01.988529 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7723" for this suite. @ 09/30/24 13:11:01.991
• [0.932 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 09/30/24 13:11:01.995
  I0930 13:11:01.995238 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 13:11:01.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:02.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:02.008
  STEP: creating the pod @ 09/30/24 13:11:02.01
  I0930 13:11:02.010343 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4801 create -f -'
  I0930 13:11:02.102413 20 builder.go:146] stderr: ""
  I0930 13:11:02.102459 20 builder.go:147] stdout: "pod/pause created\n"
  E0930 13:11:02.977951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:03.978226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/30/24 13:11:04.107
  I0930 13:11:04.107667 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4801 label pods pause testing-label=testing-label-value'
  I0930 13:11:04.161033 20 builder.go:146] stderr: ""
  I0930 13:11:04.161074 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/30/24 13:11:04.161
  I0930 13:11:04.161152 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4801 get pod pause -L testing-label'
  I0930 13:11:04.207146 20 builder.go:146] stderr: ""
  I0930 13:11:04.207265 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/30/24 13:11:04.207
  I0930 13:11:04.207358 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4801 label pods pause testing-label-'
  I0930 13:11:04.256774 20 builder.go:146] stderr: ""
  I0930 13:11:04.256815 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/30/24 13:11:04.256
  I0930 13:11:04.256981 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4801 get pod pause -L testing-label'
  I0930 13:11:04.302958 20 builder.go:146] stderr: ""
  I0930 13:11:04.303002 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/30/24 13:11:04.303
  I0930 13:11:04.303127 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4801 delete --grace-period=0 --force -f -'
  I0930 13:11:04.355899 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0930 13:11:04.355938 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0930 13:11:04.355992 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4801 get rc,svc -l name=pause --no-headers'
  I0930 13:11:04.405162 20 builder.go:146] stderr: "No resources found in kubectl-4801 namespace.\n"
  I0930 13:11:04.405210 20 builder.go:147] stdout: ""
  I0930 13:11:04.405266 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-4801 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0930 13:11:04.449139 20 builder.go:146] stderr: ""
  I0930 13:11:04.449274 20 builder.go:147] stdout: ""
  I0930 13:11:04.449401 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4801" for this suite. @ 09/30/24 13:11:04.451
• [2.460 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/30/24 13:11:04.455
  I0930 13:11:04.455073 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename limitrange @ 09/30/24 13:11:04.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:04.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:04.467
  STEP: Creating a LimitRange @ 09/30/24 13:11:04.469
  STEP: Setting up watch @ 09/30/24 13:11:04.469
  STEP: Submitting a LimitRange @ 09/30/24 13:11:04.572
  STEP: Verifying LimitRange creation was observed @ 09/30/24 13:11:04.576
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/30/24 13:11:04.576
  I0930 13:11:04.578385 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0930 13:11:04.578422 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/30/24 13:11:04.578
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/30/24 13:11:04.583
  I0930 13:11:04.585800 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0930 13:11:04.585837 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/30/24 13:11:04.585
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/30/24 13:11:04.59
  I0930 13:11:04.592723 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0930 13:11:04.592762 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/30/24 13:11:04.592
  STEP: Failing to create a Pod with more than max resources @ 09/30/24 13:11:04.594
  STEP: Updating a LimitRange @ 09/30/24 13:11:04.595
  STEP: Verifying LimitRange updating is effective @ 09/30/24 13:11:04.599
  E0930 13:11:04.978855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:05.979019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/30/24 13:11:06.601
  STEP: Failing to create a Pod with more than max resources @ 09/30/24 13:11:06.605
  STEP: Deleting a LimitRange @ 09/30/24 13:11:06.607
  STEP: Verifying the LimitRange was deleted @ 09/30/24 13:11:06.612
  E0930 13:11:06.979336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:07.979522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:08.979641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:09.979895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:10.980124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:11.616055 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/30/24 13:11:11.616
  I0930 13:11:11.719511 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1562" for this suite. @ 09/30/24 13:11:11.722
• [7.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/30/24 13:11:11.728
  I0930 13:11:11.728991 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 13:11:11.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:11.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:11.741
  STEP: Creating a pod to test downward api env vars @ 09/30/24 13:11:11.743
  E0930 13:11:11.980502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:12.980907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:11:13.825
  I0930 13:11:13.827044 20 output.go:196] Trying to get logs from node worker-0 pod downward-api-0c8026d4-6764-4eff-9cf5-93892eedfbed container dapi-container: <nil>
  STEP: delete the pod @ 09/30/24 13:11:13.831
  I0930 13:11:13.841850 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7444" for this suite. @ 09/30/24 13:11:13.843
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/30/24 13:11:13.848
  I0930 13:11:13.848086 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename endpointslice @ 09/30/24 13:11:13.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:13.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:13.858
  E0930 13:11:13.981827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:14.982297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/30/24 13:11:15.907
  STEP: referencing matching pods with named port @ 09/30/24 13:11:15.91
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/30/24 13:11:15.914
  STEP: recreating EndpointSlices after they've been deleted @ 09/30/24 13:11:15.917
  I0930 13:11:15.926720 20 endpointslice.go:938] EndpointSlice for Service endpointslice-2966/example-named-port not found
  E0930 13:11:15.982926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:16.983090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:17.929260 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2966" for this suite. @ 09/30/24 13:11:17.931
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/30/24 13:11:17.936
  I0930 13:11:17.936324 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename events @ 09/30/24 13:11:17.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:17.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:17.946
  STEP: Create set of events @ 09/30/24 13:11:17.947
  I0930 13:11:17.952691 20 core_events.go:198] created test-event-1
  I0930 13:11:17.955718 20 core_events.go:198] created test-event-2
  I0930 13:11:17.958697 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/30/24 13:11:17.958
  STEP: delete collection of events @ 09/30/24 13:11:17.96
  I0930 13:11:17.960612 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/30/24 13:11:17.969
  I0930 13:11:17.969108 20 core_events.go:230] requesting list of events to confirm quantity
  I0930 13:11:17.970872 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0930 13:11:17.983926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "events-8823" for this suite. @ 09/30/24 13:11:18.031
• [0.099 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 09/30/24 13:11:18.035
  I0930 13:11:18.035209 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 13:11:18.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:18.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:18.049
  STEP: creating a Service @ 09/30/24 13:11:18.053
  STEP: watching for the Service to be added @ 09/30/24 13:11:18.064
  I0930 13:11:18.065777 20 service.go:3445] Found Service test-service-k9f98 in namespace services-3530 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30387}]
  I0930 13:11:18.065817 20 service.go:3452] Service test-service-k9f98 created
  STEP: Getting /status @ 09/30/24 13:11:18.065
  I0930 13:11:18.067782 20 service.go:3463] Service test-service-k9f98 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/30/24 13:11:18.067
  STEP: watching for the Service to be patched @ 09/30/24 13:11:18.071
  I0930 13:11:18.073027 20 service.go:3486] observed Service test-service-k9f98 in namespace services-3530 with annotations: map[] & LoadBalancer: {[]}
  I0930 13:11:18.073070 20 service.go:3489] Found Service test-service-k9f98 in namespace services-3530 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0x4005ee9830 []}]}
  I0930 13:11:18.073096 20 service.go:3496] Service test-service-k9f98 has service status patched
  STEP: updating the ServiceStatus @ 09/30/24 13:11:18.073
  I0930 13:11:18.079933 20 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/30/24 13:11:18.079
  I0930 13:11:18.081053 20 service.go:3527] Observed Service test-service-k9f98 in namespace services-3530 with annotations: map[] & Conditions: []
  I0930 13:11:18.081093 20 service.go:3538] Observed Service test-service-k9f98 in namespace services-3530 with annotations: map[patchedstatus:true] & Conditions: []
  I0930 13:11:18.081131 20 service.go:3534] Found Service test-service-k9f98 in namespace services-3530 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0930 13:11:18.081147 20 service.go:3545] Service test-service-k9f98 has service status updated
  STEP: patching the service @ 09/30/24 13:11:18.081
  STEP: watching for the Service to be patched @ 09/30/24 13:11:18.11
  I0930 13:11:18.111715 20 service.go:3568] observed Service test-service-k9f98 in namespace services-3530 with labels: map[test-service-static:true]
  I0930 13:11:18.111753 20 service.go:3568] observed Service test-service-k9f98 in namespace services-3530 with labels: map[test-service-static:true]
  I0930 13:11:18.111810 20 service.go:3568] observed Service test-service-k9f98 in namespace services-3530 with labels: map[test-service-static:true]
  I0930 13:11:18.111835 20 service.go:3571] Found Service test-service-k9f98 in namespace services-3530 with labels: map[test-service:patched test-service-static:true]
  I0930 13:11:18.111850 20 service.go:3578] Service test-service-k9f98 patched
  STEP: deleting the service @ 09/30/24 13:11:18.111
  STEP: watching for the Service to be deleted @ 09/30/24 13:11:18.123
  I0930 13:11:18.124073 20 service.go:3602] Observed event: ADDED
  I0930 13:11:18.124102 20 service.go:3602] Observed event: MODIFIED
  I0930 13:11:18.124160 20 service.go:3602] Observed event: MODIFIED
  I0930 13:11:18.124253 20 service.go:3602] Observed event: MODIFIED
  I0930 13:11:18.124281 20 service.go:3598] Found Service test-service-k9f98 in namespace services-3530 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0930 13:11:18.124290 20 service.go:3607] Service test-service-k9f98 deleted
  I0930 13:11:18.124383 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3530" for this suite. @ 09/30/24 13:11:18.131
• [0.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/30/24 13:11:18.134
  I0930 13:11:18.135010 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:11:18.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:18.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:18.151
  STEP: Creating projection with secret that has name projected-secret-test-map-ba5f277b-5600-4b2e-98c0-951e9f9ea352 @ 09/30/24 13:11:18.152
  STEP: Creating a pod to test consume secrets @ 09/30/24 13:11:18.155
  E0930 13:11:18.984495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:19.984836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:20.985094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:21.985293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:11:22.169
  I0930 13:11:22.171380 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-secrets-e164d928-152a-437c-a5cf-373f536a69f8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 13:11:22.175
  I0930 13:11:22.185257 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2265" for this suite. @ 09/30/24 13:11:22.187
• [4.055 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/30/24 13:11:22.19
  I0930 13:11:22.190462 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 13:11:22.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:22.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:22.2
  STEP: creating a ConfigMap @ 09/30/24 13:11:22.202
  STEP: fetching the ConfigMap @ 09/30/24 13:11:22.205
  STEP: patching the ConfigMap @ 09/30/24 13:11:22.206
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/30/24 13:11:22.21
  STEP: deleting the ConfigMap by collection with a label selector @ 09/30/24 13:11:22.211
  STEP: listing all ConfigMaps in test namespace @ 09/30/24 13:11:22.215
  I0930 13:11:22.217423 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3255" for this suite. @ 09/30/24 13:11:22.288
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/30/24 13:11:22.292
  I0930 13:11:22.292419 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:11:22.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:22.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:22.304
  STEP: Setting up server cert @ 09/30/24 13:11:22.404
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:11:22.92
  STEP: Deploying the webhook pod @ 09/30/24 13:11:22.925
  STEP: Wait for the deployment to be ready @ 09/30/24 13:11:22.933
  I0930 13:11:22.938770 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:11:22.985789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:23.986163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:24.944741 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:11:24.986836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:25.987034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:26.947358 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:11:26.987407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:27.987620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:28.946975 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:11:28.988073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:29.988254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:30.947002 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 30, 13, 11, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0930 13:11:30.989140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:31.989338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:11:32.947
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:11:32.957
  E0930 13:11:32.989946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:33.958119 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0930 13:11:33.962049 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 13:11:33.990657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/30/24 13:11:34.47
  STEP: Creating a custom resource that should be denied by the webhook @ 09/30/24 13:11:34.483
  E0930 13:11:34.991370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:35.991469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/30/24 13:11:36.499
  STEP: Updating the custom resource with disallowed data should be denied @ 09/30/24 13:11:36.504
  STEP: Deleting the custom resource should be denied @ 09/30/24 13:11:36.509
  STEP: Remove the offending key and value from the custom resource data @ 09/30/24 13:11:36.513
  STEP: Deleting the updated custom resource should be successful @ 09/30/24 13:11:36.52
  E0930 13:11:36.992174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:37.064804 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5168" for this suite. @ 09/30/24 13:11:37.066
  STEP: Destroying namespace "webhook-markers-1373" for this suite. @ 09/30/24 13:11:37.07
• [14.781 seconds]
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/30/24 13:11:37.073
  I0930 13:11:37.073353 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename server-version @ 09/30/24 13:11:37.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:37.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:37.083
  STEP: Request ServerVersion @ 09/30/24 13:11:37.085
  STEP: Confirm major version @ 09/30/24 13:11:37.086
  I0930 13:11:37.086687 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/30/24 13:11:37.086
  I0930 13:11:37.086712 20 server_version.go:58] cleanMinorVersion: 31
  I0930 13:11:37.086721 20 server_version.go:62] Minor version: 31
  I0930 13:11:37.086792 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3689" for this suite. @ 09/30/24 13:11:37.168
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 09/30/24 13:11:37.171
  I0930 13:11:37.171704 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename dns @ 09/30/24 13:11:37.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:37.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:37.183
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/30/24 13:11:37.186
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/30/24 13:11:37.186
  STEP: creating a pod to probe DNS @ 09/30/24 13:11:37.186
  STEP: submitting the pod to kubernetes @ 09/30/24 13:11:37.186
  E0930 13:11:37.992795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:38.993177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/30/24 13:11:39.197
  STEP: looking for the results for each expected name from probers @ 09/30/24 13:11:39.199
  I0930 13:11:39.210031 20 dns_common.go:527] DNS probes using dns-8953/dns-test-e6f89d51-1b26-4136-bf97-abe535e18b94 succeeded

  STEP: deleting the pod @ 09/30/24 13:11:39.21
  I0930 13:11:39.218757 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8953" for this suite. @ 09/30/24 13:11:39.22
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 09/30/24 13:11:39.224
  I0930 13:11:39.224768 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename dns @ 09/30/24 13:11:39.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:39.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:39.236
  STEP: Creating a test headless service @ 09/30/24 13:11:39.238
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7223.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-7223.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/30/24 13:11:39.241
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7223.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7223.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/30/24 13:11:39.241
  STEP: creating a pod to probe DNS @ 09/30/24 13:11:39.241
  STEP: submitting the pod to kubernetes @ 09/30/24 13:11:39.241
  E0930 13:11:39.993753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:40.993942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/30/24 13:11:41.255
  STEP: looking for the results for each expected name from probers @ 09/30/24 13:11:41.257
  I0930 13:11:41.267566 20 dns_common.go:527] DNS probes using dns-7223/dns-test-31b5e7bc-b12c-45a9-856c-b78cc3352bf0 succeeded

  STEP: deleting the pod @ 09/30/24 13:11:41.267
  STEP: deleting the test headless service @ 09/30/24 13:11:41.277
  I0930 13:11:41.286374 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7223" for this suite. @ 09/30/24 13:11:41.288
• [2.069 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/30/24 13:11:41.294
  I0930 13:11:41.294162 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename watch @ 09/30/24 13:11:41.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:41.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:41.306
  STEP: creating a new configmap @ 09/30/24 13:11:41.307
  STEP: modifying the configmap once @ 09/30/24 13:11:41.31
  STEP: modifying the configmap a second time @ 09/30/24 13:11:41.314
  STEP: deleting the configmap @ 09/30/24 13:11:41.319
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/30/24 13:11:41.324
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/30/24 13:11:41.325
  I0930 13:11:41.325874 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9569  b6597d96-cee5-4d87-8183-a6c256e9fa1b 29680 0 2024-09-30 13:11:41 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-30 13:11:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:11:41.326087 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9569  b6597d96-cee5-4d87-8183-a6c256e9fa1b 29681 0 2024-09-30 13:11:41 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-30 13:11:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:11:41.326304 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9569" for this suite. @ 09/30/24 13:11:41.389
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/30/24 13:11:41.393
  I0930 13:11:41.393576 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename events @ 09/30/24 13:11:41.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:41.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:41.407
  STEP: creating a test event @ 09/30/24 13:11:41.409
  STEP: listing events in all namespaces @ 09/30/24 13:11:41.412
  STEP: listing events in test namespace @ 09/30/24 13:11:41.415
  STEP: listing events with field selection filtering on source @ 09/30/24 13:11:41.417
  STEP: listing events with field selection filtering on reportingController @ 09/30/24 13:11:41.418
  STEP: getting the test event @ 09/30/24 13:11:41.42
  STEP: patching the test event @ 09/30/24 13:11:41.421
  STEP: getting the test event @ 09/30/24 13:11:41.427
  STEP: updating the test event @ 09/30/24 13:11:41.428
  STEP: getting the test event @ 09/30/24 13:11:41.434
  STEP: deleting the test event @ 09/30/24 13:11:41.436
  STEP: listing events in all namespaces @ 09/30/24 13:11:41.439
  STEP: listing events in test namespace @ 09/30/24 13:11:41.441
  I0930 13:11:41.443362 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5206" for this suite. @ 09/30/24 13:11:41.49
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 09/30/24 13:11:41.494
  I0930 13:11:41.494478 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename statefulset @ 09/30/24 13:11:41.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:11:41.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:11:41.508
  STEP: Creating service test in namespace statefulset-4129 @ 09/30/24 13:11:41.51
  STEP: Creating a new StatefulSet @ 09/30/24 13:11:41.514
  I0930 13:11:41.522002 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E0930 13:11:41.994719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:42.995781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:43.996083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:44.996253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:45.996415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:46.996601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:47.996758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:48.997042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:49.997212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:50.997376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:11:51.522382 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0930 13:11:51.522424 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0930 13:11:51.522435 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0930 13:11:51.527171 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-4129 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0930 13:11:51.617450 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 13:11:51.617492 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 13:11:51.617502 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0930 13:11:51.997474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:52.997668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:53.997755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:54.997971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:55.998163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:56.998348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:57.998533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:58.998938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:11:59.999106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:00.999774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/30/24 13:12:01.622
  I0930 13:12:01.629774 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/30/24 13:12:01.629
  E0930 13:12:02.000207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:03.001126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:04.001478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:05.001694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:06.001748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:07.001922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:08.002095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:09.002402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:10.002572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:11.002745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/30/24 13:12:11.634
  I0930 13:12:11.636659 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-4129 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0930 13:12:11.719336 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0930 13:12:11.719380 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0930 13:12:11.719391 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0930 13:12:12.003483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:13.003784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:14.004099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:15.004274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:16.004466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:17.004530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:18.004708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:19.004798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:20.004974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:21.005150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/30/24 13:12:21.727
  I0930 13:12:21.727252 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-4129 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0930 13:12:21.809860 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 13:12:21.809901 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 13:12:21.809912 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0930 13:12:22.005706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:23.005809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:24.006117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:25.006307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:26.006505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:27.006694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:28.006951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:29.007262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:30.007428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:31.007641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:12:31.822739 20 statefulset.go:2507] Updating stateful set ss2
  E0930 13:12:32.007729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:33.007928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:34.008306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:35.008497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:36.008694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:37.008854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:38.009040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:39.009337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:40.009510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:41.009691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/30/24 13:12:41.827
  I0930 13:12:41.829376 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-4129 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0930 13:12:41.915833 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0930 13:12:41.915875 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0930 13:12:41.915884 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0930 13:12:42.010708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:43.010918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:44.011224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:45.011409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:46.011622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:47.011804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:48.011967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:49.012273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:50.012370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:51.012774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:12:51.924343 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4129
  I0930 13:12:51.926109 20 rest.go:150] Scaling statefulset ss2 to 0
  E0930 13:12:52.012826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:53.012947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:54.013318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:55.013508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:56.013867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:57.013867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:58.014415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:12:59.014730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:00.014910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:01.015807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:13:01.933974 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0930 13:13:01.935604 20 rest.go:88] Deleting statefulset ss2
  I0930 13:13:01.942406 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4129" for this suite. @ 09/30/24 13:13:01.944
• [80.454 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/30/24 13:13:01.948
  I0930 13:13:01.948361 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 13:13:01.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:13:01.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:13:01.961
  E0930 13:13:02.016796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating secret with name secret-test-104574e8-f18c-477c-a034-9adad3073a81 @ 09/30/24 13:13:02.062
  STEP: Creating a pod to test consume secrets @ 09/30/24 13:13:02.065
  E0930 13:13:03.017455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:04.017711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:13:04.077
  I0930 13:13:04.078764 20 output.go:196] Trying to get logs from node worker-0 pod pod-secrets-31f3466f-c98f-4cdc-8cff-71f10aafef8e container secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 13:13:04.087
  I0930 13:13:04.097154 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9273" for this suite. @ 09/30/24 13:13:04.099
  STEP: Destroying namespace "secret-namespace-8220" for this suite. @ 09/30/24 13:13:04.102
• [2.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/30/24 13:13:04.106
  I0930 13:13:04.106455 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename subpath @ 09/30/24 13:13:04.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:13:04.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:13:04.118
  STEP: Setting up data @ 09/30/24 13:13:04.12
  STEP: Creating pod pod-subpath-test-secret-tlhc @ 09/30/24 13:13:04.127
  STEP: Creating a pod to test atomic-volume-subpath @ 09/30/24 13:13:04.127
  E0930 13:13:05.018058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:06.018324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:07.018537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:08.018718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:09.019047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:10.019239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:11.019625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:12.019819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:13.020315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:14.020555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:15.020774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:16.020961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:17.021242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:18.021341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:19.021826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:20.021935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:21.022167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:22.022355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:23.022868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:24.023162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:25.023262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:26.023363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:27.023695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:28.023890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:13:28.166
  I0930 13:13:28.168096 20 output.go:196] Trying to get logs from node worker-0 pod pod-subpath-test-secret-tlhc container test-container-subpath-secret-tlhc: <nil>
  STEP: delete the pod @ 09/30/24 13:13:28.172
  STEP: Deleting pod pod-subpath-test-secret-tlhc @ 09/30/24 13:13:28.182
  I0930 13:13:28.182832 20 delete.go:62] Deleting pod "pod-subpath-test-secret-tlhc" in namespace "subpath-7214"
  I0930 13:13:28.184562 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7214" for this suite. @ 09/30/24 13:13:28.186
• [24.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/30/24 13:13:28.19
  I0930 13:13:28.190510 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/30/24 13:13:28.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:13:28.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:13:28.204
  I0930 13:13:28.206685 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:13:28.735020 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9406" for this suite. @ 09/30/24 13:13:28.753
• [0.566 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/30/24 13:13:28.756
  I0930 13:13:28.756677 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 13:13:28.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:13:28.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:13:28.766
  STEP: creating service in namespace services-7369 @ 09/30/24 13:13:28.768
  STEP: creating service affinity-nodeport in namespace services-7369 @ 09/30/24 13:13:28.768
  STEP: creating replication controller affinity-nodeport in namespace services-7369 @ 09/30/24 13:13:28.779
  I0930 13:13:28.785250      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-7369, replica count: 3
  E0930 13:13:29.024910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:30.025427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:31.026441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:13:31.836412      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0930 13:13:31.841541 20 resource.go:361] Creating new exec pod
  E0930 13:13:32.027104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:33.027201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:34.028120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:13:34.851115 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0930 13:13:35.028153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:36.028599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:13:36.935869 20 builder.go:135] rc: 1
  I0930 13:13:36.936014 20 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-nodeport 80
  nc: connect to affinity-nodeport port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 13:13:36.936096 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0930 13:13:37.029614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:38.029876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:13:39.017955 20 builder.go:135] rc: 1
  I0930 13:13:39.018011 20 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-nodeport 80
  nc: connect to affinity-nodeport port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 13:13:39.018094 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0930 13:13:39.030755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:40.031838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:41.032122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:13:41.101415 20 builder.go:135] rc: 1
  I0930 13:13:41.101472 20 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-nodeport 80
  nc: connect to affinity-nodeport port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 13:13:41.101543 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0930 13:13:42.032447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:43.032893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:13:43.186108 20 builder.go:135] rc: 1
  I0930 13:13:43.186240 20 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-nodeport 80
  nc: connect to affinity-nodeport port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0930 13:13:43.186325 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0930 13:13:43.272633 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0930 13:13:43.272678 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 13:13:43.272758 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.218.232 80'
  I0930 13:13:43.352012 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.218.232 80\nConnection to 10.100.218.232 80 port [tcp/http] succeeded!\n"
  I0930 13:13:43.352054 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 13:13:43.352134 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.42.49 31789'
  I0930 13:13:43.427253 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.42.49 31789\nConnection to 10.0.42.49 31789 port [tcp/*] succeeded!\n"
  I0930 13:13:43.427301 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 13:13:43.427381 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.35.180 31789'
  I0930 13:13:43.507352 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.35.180 31789\nConnection to 10.0.35.180 31789 port [tcp/*] succeeded!\n"
  I0930 13:13:43.507490 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0930 13:13:43.507567 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=services-7369 exec execpod-affinity2q2ms -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.42.49:31789/ ; done'
  I0930 13:13:43.630867 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.42.49:31789/\n"
  I0930 13:13:43.630919 20 builder.go:147] stdout: "\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc\naffinity-nodeport-sh5dc"
  I0930 13:13:43.630931 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630939 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630945 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630950 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630956 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630964 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630970 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630976 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630987 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630993 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.630999 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.631005 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.631011 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.631017 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.631027 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.631041 20 service.go:242] Received response from host: affinity-nodeport-sh5dc
  I0930 13:13:43.631129 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7369, will wait for the garbage collector to delete the pods @ 09/30/24 13:13:43.641
  I0930 13:13:43.696648 20 resources.go:139] Deleting ReplicationController affinity-nodeport took: 3.588281ms
  I0930 13:13:43.797558 20 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.906452ms
  E0930 13:13:44.033128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:45.033353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:46.033883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:13:46.711184 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7369" for this suite. @ 09/30/24 13:13:46.713
• [17.960 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/30/24 13:13:46.717
  I0930 13:13:46.717364 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 13:13:46.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:13:46.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:13:46.729
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:13:46.731
  E0930 13:13:47.034852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:48.035325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:49.036246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:50.036438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:13:50.745
  I0930 13:13:50.747220 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-66ca4435-66c6-41cd-b61b-24274604fc81 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:13:50.75
  I0930 13:13:50.763095 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1877" for this suite. @ 09/30/24 13:13:50.765
• [4.051 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/30/24 13:13:50.768
  I0930 13:13:50.768810 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 13:13:50.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:13:50.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:13:50.78
  I0930 13:13:50.782956 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: creating the pod @ 09/30/24 13:13:50.783
  STEP: submitting the pod to kubernetes @ 09/30/24 13:13:50.783
  E0930 13:13:51.036880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:52.037096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:13:52.803900 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9955" for this suite. @ 09/30/24 13:13:52.805
• [2.042 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/30/24 13:13:52.811
  I0930 13:13:52.811102 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename subpath @ 09/30/24 13:13:52.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:13:52.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:13:52.821
  STEP: Setting up data @ 09/30/24 13:13:52.823
  STEP: Creating pod pod-subpath-test-downwardapi-2fbt @ 09/30/24 13:13:52.831
  STEP: Creating a pod to test atomic-volume-subpath @ 09/30/24 13:13:52.831
  E0930 13:13:53.037575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:54.037738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:55.038794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:56.039683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:57.040083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:58.040276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:13:59.040856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:00.041042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:01.042100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:02.042405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:03.042562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:04.042921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:05.043433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:06.043638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:07.044009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:08.044338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:09.044698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:10.044894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:11.045294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:12.045486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:13.046045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:14.046481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:15.046922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:16.047111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:14:16.87
  I0930 13:14:16.872142 20 output.go:196] Trying to get logs from node worker-1 pod pod-subpath-test-downwardapi-2fbt container test-container-subpath-downwardapi-2fbt: <nil>
  STEP: delete the pod @ 09/30/24 13:14:16.882
  STEP: Deleting pod pod-subpath-test-downwardapi-2fbt @ 09/30/24 13:14:16.895
  I0930 13:14:16.895828 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-2fbt" in namespace "subpath-2684"
  I0930 13:14:16.897477 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2684" for this suite. @ 09/30/24 13:14:16.899
• [24.092 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/30/24 13:14:16.903
  I0930 13:14:16.903855 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 13:14:16.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:14:16.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:14:16.919
  STEP: Creating the pod @ 09/30/24 13:14:16.921
  E0930 13:14:17.047882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:18.048054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:19.049102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:19.444179 20 pod_client.go:173] Successfully updated pod "annotationupdatedeaaa806-5957-4ba7-b38f-90c87442b4a6"
  E0930 13:14:20.049836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:21.050020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:21.452832 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1850" for this suite. @ 09/30/24 13:14:21.454
• [4.554 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 09/30/24 13:14:21.458
  I0930 13:14:21.458327 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename statefulset @ 09/30/24 13:14:21.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:14:21.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:14:21.47
  STEP: Creating service test in namespace statefulset-490 @ 09/30/24 13:14:21.472
  STEP: Creating stateful set ss in namespace statefulset-490 @ 09/30/24 13:14:21.475
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-490 @ 09/30/24 13:14:21.48
  I0930 13:14:21.483017 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0930 13:14:22.050846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:23.051120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:24.051397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:25.051499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:26.051690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:27.051754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:28.051845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:29.052133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:30.052287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:31.052449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:31.484377 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/30/24 13:14:31.484
  I0930 13:14:31.486199 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-490 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0930 13:14:31.572832 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 13:14:31.572873 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 13:14:31.572882 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0930 13:14:31.574983 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0930 13:14:32.052522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:33.052729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:34.053017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:35.053205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:36.053390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:37.053848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:38.054035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:39.054115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:40.054282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:41.054443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:41.575791 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0930 13:14:41.575837 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0930 13:14:41.588548 20 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0930 13:14:41.588628 20 resource.go:175] ss-0  worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:22 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:21 +0000 UTC  }]
  I0930 13:14:41.588640 20 resource.go:175] ss-2            Pending         []
  I0930 13:14:41.588646 20 resource.go:178] 
  I0930 13:14:41.588652 20 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 2
  E0930 13:14:42.055267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:42.591368 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.993929596s
  E0930 13:14:43.055871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:43.593909 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.991198452s
  E0930 13:14:44.056304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:44.597351 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.987884142s
  E0930 13:14:45.056882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:45.599799 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.985339278s
  E0930 13:14:46.057202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:46.603199 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.981933082s
  E0930 13:14:47.057287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:47.606296 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.978851805s
  E0930 13:14:48.057837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:48.608991 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.97627797s
  E0930 13:14:49.058490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:49.611535 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.973702809s
  E0930 13:14:50.059038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:50.614130 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 971.151487ms
  E0930 13:14:51.059624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-490 @ 09/30/24 13:14:51.614
  I0930 13:14:51.616934 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-490 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0930 13:14:51.698713 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0930 13:14:51.698757 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0930 13:14:51.698767 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0930 13:14:51.698821 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-490 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0930 13:14:51.784235 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0930 13:14:51.784282 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0930 13:14:51.784291 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0930 13:14:51.784344 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-490 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0930 13:14:51.864847 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0930 13:14:51.864892 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0930 13:14:51.864901 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0930 13:14:51.867463 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0930 13:14:51.867494 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0930 13:14:51.867503 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/30/24 13:14:51.867
  I0930 13:14:51.869601 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-490 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0930 13:14:51.953717 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 13:14:51.953760 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 13:14:51.953769 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0930 13:14:51.953826 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-490 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0930 13:14:52.037260 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 13:14:52.037302 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 13:14:52.037311 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0930 13:14:52.037368 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=statefulset-490 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0930 13:14:52.060706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:14:52.120705 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0930 13:14:52.120748 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0930 13:14:52.120759 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0930 13:14:52.120770 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0930 13:14:52.122755 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0930 13:14:53.060800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:54.061134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:55.061331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:56.061667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:57.062263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:58.063274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:14:59.063538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:00.063715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:01.063885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:02.063971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:02.125483 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0930 13:15:02.125517 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0930 13:15:02.125525 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0930 13:15:02.136543 20 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0930 13:15:02.136615 20 resource.go:175] ss-0  worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:22 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:21 +0000 UTC  }]
  I0930 13:15:02.136634 20 resource.go:175] ss-1  worker-0  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:41 +0000 UTC  }]
  I0930 13:15:02.136651 20 resource.go:175] ss-2  worker-0  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-30 13:14:41 +0000 UTC  }]
  I0930 13:15:02.136656 20 resource.go:178] 
  I0930 13:15:02.136663 20 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E0930 13:15:03.064079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:03.139484 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.993372878s
  E0930 13:15:04.064618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:04.142123 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.990828023s
  E0930 13:15:05.065198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:05.144709 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.98825581s
  E0930 13:15:06.065297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:06.147849 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.985162258s
  E0930 13:15:07.065917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:07.150452 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.982534063s
  E0930 13:15:08.066469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:08.152916 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.979973485s
  E0930 13:15:09.067015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:09.155510 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.977410108s
  E0930 13:15:10.067110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:10.158288 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.974337134s
  E0930 13:15:11.067212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:11.160409 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 972.287327ms
  E0930 13:15:12.067458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-490 @ 09/30/24 13:15:12.16
  I0930 13:15:12.163368 20 rest.go:150] Scaling statefulset ss to 0
  I0930 13:15:12.166544 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0930 13:15:12.168179 20 statefulset.go:138] Deleting all statefulset in ns statefulset-490
  I0930 13:15:12.169935 20 rest.go:150] Scaling statefulset ss to 0
  I0930 13:15:12.172866 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0930 13:15:12.174360 20 rest.go:88] Deleting statefulset ss
  I0930 13:15:12.180767 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-490" for this suite. @ 09/30/24 13:15:12.182
• [50.728 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/30/24 13:15:12.186
  I0930 13:15:12.186608 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 13:15:12.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:15:12.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:15:12.196
  STEP: creating the pod @ 09/30/24 13:15:12.198
  STEP: submitting the pod to kubernetes @ 09/30/24 13:15:12.198
  E0930 13:15:13.067803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:14.068237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/30/24 13:15:14.21
  STEP: updating the pod @ 09/30/24 13:15:14.212
  I0930 13:15:14.719723 20 pod_client.go:173] Successfully updated pod "pod-update-ac35dca9-f1eb-407f-b7d4-5116277ddd3c"
  STEP: verifying the updated pod is in kubernetes @ 09/30/24 13:15:14.721
  I0930 13:15:14.723327 20 pods.go:391] Pod update OK
  I0930 13:15:14.723443 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1452" for this suite. @ 09/30/24 13:15:14.725
• [2.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/30/24 13:15:14.73
  I0930 13:15:14.730479 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 13:15:14.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:15:14.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:15:14.74
  STEP: creating pod @ 09/30/24 13:15:14.742
  E0930 13:15:15.069080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:16.069289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:16.756356 20 pods.go:83] Pod pod-hostip-4308630c-0c19-487c-be30-7d6e684bb781 has hostIP: 10.0.42.49
  I0930 13:15:16.756465 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2140" for this suite. @ 09/30/24 13:15:16.758
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 09/30/24 13:15:16.762
  I0930 13:15:16.762360 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename dns @ 09/30/24 13:15:16.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:15:16.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:15:16.774
  STEP: Creating a test headless service @ 09/30/24 13:15:16.776
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5780 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5780;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5780 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5780;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5780.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5780.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5780.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5780.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5780.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5780.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5780.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5780.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5780.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5780.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5780.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5780.svc;check="$$(dig +notcp +noall +answer +search 247.64.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.64.247_udp@PTR;check="$$(dig +tcp +noall +answer +search 247.64.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.64.247_tcp@PTR;sleep 1; done
   @ 09/30/24 13:15:16.791
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5780 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5780;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5780 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5780;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5780.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5780.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5780.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5780.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5780.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5780.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5780.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5780.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5780.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5780.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5780.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5780.svc;check="$$(dig +notcp +noall +answer +search 247.64.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.64.247_udp@PTR;check="$$(dig +tcp +noall +answer +search 247.64.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.64.247_tcp@PTR;sleep 1; done
   @ 09/30/24 13:15:16.791
  STEP: creating a pod to probe DNS @ 09/30/24 13:15:16.791
  STEP: submitting the pod to kubernetes @ 09/30/24 13:15:16.791
  E0930 13:15:17.070316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:18.070569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/30/24 13:15:18.804
  STEP: looking for the results for each expected name from probers @ 09/30/24 13:15:18.806
  I0930 13:15:18.810571 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.813116 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.815654 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.818070 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.820421 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.822807 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.839043 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.841277 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.843599 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.845995 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.848462 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.850990 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:18.864850 20 dns_common.go:489] Lookups using dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5780 wheezy_tcp@dns-test-service.dns-5780 wheezy_udp@dns-test-service.dns-5780.svc wheezy_tcp@dns-test-service.dns-5780.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5780 jessie_tcp@dns-test-service.dns-5780 jessie_udp@dns-test-service.dns-5780.svc jessie_tcp@dns-test-service.dns-5780.svc]

  I0930 13:15:18.868366 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:15:18.871683 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:15:18.875135 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:15:19.071478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:20.071553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:21.071767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:22.071960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:23.072829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:23.809606 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.812059 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.814438 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.816855 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.819226 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.821465 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.837945 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.840303 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.842766 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.845143 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.847498 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.849949 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:23.864315 20 dns_common.go:489] Lookups using dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5780 wheezy_tcp@dns-test-service.dns-5780 wheezy_udp@dns-test-service.dns-5780.svc wheezy_tcp@dns-test-service.dns-5780.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5780 jessie_tcp@dns-test-service.dns-5780 jessie_udp@dns-test-service.dns-5780.svc jessie_tcp@dns-test-service.dns-5780.svc]

  I0930 13:15:23.868109 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:15:23.871775 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:15:23.875486 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:15:24.073862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:25.074050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:26.074796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:27.074885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:28.074983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:28.809561 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.812056 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.814497 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.816874 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.819293 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.821714 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.838384 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.840696 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.843253 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.845615 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.847975 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.850375 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:28.864189 20 dns_common.go:489] Lookups using dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5780 wheezy_tcp@dns-test-service.dns-5780 wheezy_udp@dns-test-service.dns-5780.svc wheezy_tcp@dns-test-service.dns-5780.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5780 jessie_tcp@dns-test-service.dns-5780 jessie_udp@dns-test-service.dns-5780.svc jessie_tcp@dns-test-service.dns-5780.svc]

  I0930 13:15:28.867902 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:15:28.871605 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:15:28.875442 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:15:29.075819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:30.076033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:31.076189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:32.076375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:33.076474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:33.810548 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.813023 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.815542 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.817982 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.820280 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.822529 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.839123 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.841527 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.843821 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.846170 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.848505 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.850806 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:33.864456 20 dns_common.go:489] Lookups using dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5780 wheezy_tcp@dns-test-service.dns-5780 wheezy_udp@dns-test-service.dns-5780.svc wheezy_tcp@dns-test-service.dns-5780.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5780 jessie_tcp@dns-test-service.dns-5780 jessie_udp@dns-test-service.dns-5780.svc jessie_tcp@dns-test-service.dns-5780.svc]

  I0930 13:15:33.868207 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:15:33.872018 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:15:33.875654 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:15:34.077032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:35.077227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:36.077396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:37.077432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:38.077791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:38.810707 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.813181 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.815657 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.818047 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.820539 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.822992 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.840325 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.842741 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.845215 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.847660 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.850107 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.852486 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:38.866914 20 dns_common.go:489] Lookups using dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5780 wheezy_tcp@dns-test-service.dns-5780 wheezy_udp@dns-test-service.dns-5780.svc wheezy_tcp@dns-test-service.dns-5780.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5780 jessie_tcp@dns-test-service.dns-5780 jessie_udp@dns-test-service.dns-5780.svc jessie_tcp@dns-test-service.dns-5780.svc]

  I0930 13:15:38.870988 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:15:38.874819 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:15:38.878485 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:15:39.078825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:40.078927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:41.079206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:42.079791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:43.079891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:43.809742 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.812453 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.814840 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.817372 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.819732 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.822084 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.838330 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.840561 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.842831 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.845056 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780 from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.847454 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.849818 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5780.svc from pod dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e: the server could not find the requested resource (get pods dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e)
  I0930 13:15:43.863703 20 dns_common.go:489] Lookups using dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5780 wheezy_tcp@dns-test-service.dns-5780 wheezy_udp@dns-test-service.dns-5780.svc wheezy_tcp@dns-test-service.dns-5780.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5780 jessie_tcp@dns-test-service.dns-5780 jessie_udp@dns-test-service.dns-5780.svc jessie_tcp@dns-test-service.dns-5780.svc]

  I0930 13:15:43.867437 20 dns_common.go:495] Pod client logs for webserver: 
  I0930 13:15:43.871084 20 dns_common.go:495] Pod client logs for querier: 
  I0930 13:15:43.874734 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0930 13:15:44.080043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:45.080223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:46.080402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:47.080642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:48.080733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:48.867787 20 dns_common.go:527] DNS probes using dns-5780/dns-test-b6e50cae-7035-4f8a-b012-b87aadeb319e succeeded

  STEP: deleting the pod @ 09/30/24 13:15:48.867
  STEP: deleting the test service @ 09/30/24 13:15:48.878
  STEP: deleting the test headless service @ 09/30/24 13:15:48.891
  I0930 13:15:48.897465 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5780" for this suite. @ 09/30/24 13:15:48.9
• [32.142 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/30/24 13:15:48.906
  I0930 13:15:48.906770 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename security-context-test @ 09/30/24 13:15:48.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:15:48.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:15:48.921
  E0930 13:15:49.080765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:50.080900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:51.081112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:52.081410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:15:52.937670 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7883" for this suite. @ 09/30/24 13:15:52.939
• [4.038 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/30/24 13:15:52.942
  I0930 13:15:52.942927 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename disruption @ 09/30/24 13:15:52.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:15:52.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:15:52.954
  STEP: Waiting for the pdb to be processed @ 09/30/24 13:15:52.959
  E0930 13:15:53.082389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:54.082614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/30/24 13:15:54.962
  STEP: Waiting for all pods to be running @ 09/30/24 13:15:54.969
  I0930 13:15:54.971477 20 disruption.go:691] running pods: 0 < 1
  E0930 13:15:55.082732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:56.082918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/30/24 13:15:56.971
  STEP: Waiting for the pdb to be processed @ 09/30/24 13:15:56.978
  STEP: Patching PodDisruptionBudget status @ 09/30/24 13:15:56.981
  STEP: Waiting for the pdb to be processed @ 09/30/24 13:15:56.988
  I0930 13:15:56.990294 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1092" for this suite. @ 09/30/24 13:15:56.992
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/30/24 13:15:56.996
  I0930 13:15:56.996077 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:15:56.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:15:57.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:15:57.007
  E0930 13:15:57.083853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/30/24 13:15:57.104
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:15:57.255
  STEP: Deploying the webhook pod @ 09/30/24 13:15:57.26
  STEP: Wait for the deployment to be ready @ 09/30/24 13:15:57.27
  I0930 13:15:57.274020 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:15:58.084800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:15:59.085284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:15:59.28
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:15:59.288
  E0930 13:16:00.085694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:16:00.288980 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/30/24 13:16:00.292
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/30/24 13:16:00.307
  STEP: Creating a configMap that should not be mutated @ 09/30/24 13:16:00.313
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/30/24 13:16:00.319
  STEP: Creating a configMap that should be mutated @ 09/30/24 13:16:00.325
  I0930 13:16:00.365648 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3483" for this suite. @ 09/30/24 13:16:00.367
  STEP: Destroying namespace "webhook-markers-9120" for this suite. @ 09/30/24 13:16:00.372
• [3.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/30/24 13:16:00.377
  I0930 13:16:00.377493 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pod-network-test @ 09/30/24 13:16:00.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:16:00.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:16:00.389
  STEP: Performing setup for networking test in namespace pod-network-test-8294 @ 09/30/24 13:16:00.391
  STEP: creating a selector @ 09/30/24 13:16:00.391
  STEP: Creating the service pods in kubernetes @ 09/30/24 13:16:00.391
  I0930 13:16:00.391940 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0930 13:16:01.085902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:02.086100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:03.086183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:04.086456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:05.086744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:06.086934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:07.087412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:08.087629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:09.087713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:10.087903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:11.088267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:12.089206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/30/24 13:16:12.504
  E0930 13:16:13.089577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:14.089898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:16:14.514260 20 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0930 13:16:14.514298 20 networking.go:42] Breadth first check of 10.244.0.110 on host 10.0.42.49...
  I0930 13:16:14.515856 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.111:9080/dial?request=hostname&protocol=udp&host=10.244.0.110&port=8081&tries=1'] Namespace:pod-network-test-8294 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:16:14.515886 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:16:14.516310 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:16:14.516362 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8294/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.111%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.110%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0930 13:16:14.552395 20 utils.go:356] Waiting for responses: map[]
  I0930 13:16:14.552432 20 utils.go:360] reached 10.244.0.110 after 0/1 tries
  I0930 13:16:14.552442 20 networking.go:42] Breadth first check of 10.244.1.234 on host 10.0.35.180...
  I0930 13:16:14.554413 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.111:9080/dial?request=hostname&protocol=udp&host=10.244.1.234&port=8081&tries=1'] Namespace:pod-network-test-8294 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:16:14.554444 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:16:14.554874 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:16:14.554927 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8294/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.111%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.234%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0930 13:16:14.590830 20 utils.go:356] Waiting for responses: map[]
  I0930 13:16:14.590867 20 utils.go:360] reached 10.244.1.234 after 0/1 tries
  I0930 13:16:14.590876 20 networking.go:53] Going to retry 0 out of 2 pods....
  I0930 13:16:14.590965 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8294" for this suite. @ 09/30/24 13:16:14.593
• [14.220 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 09/30/24 13:16:14.597
  I0930 13:16:14.597207 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename statefulset @ 09/30/24 13:16:14.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:16:14.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:16:14.612
  STEP: Creating service test in namespace statefulset-8428 @ 09/30/24 13:16:14.615
  STEP: Looking for a node to schedule stateful set and pod @ 09/30/24 13:16:14.618
  STEP: Creating pod with conflicting port in namespace statefulset-8428 @ 09/30/24 13:16:14.694
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8428 @ 09/30/24 13:16:14.7
  E0930 13:16:15.089954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:16.090212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-8428 @ 09/30/24 13:16:16.705
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8428 @ 09/30/24 13:16:16.708
  I0930 13:16:16.716911 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-8428, name: ss-0, uid: d8341d8b-f336-4fbb-a9f2-e83afbb6f845, status phase: Pending. Waiting for statefulset controller to delete.
  I0930 13:16:16.723948 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-8428, name: ss-0, uid: d8341d8b-f336-4fbb-a9f2-e83afbb6f845, status phase: Failed. Waiting for statefulset controller to delete.
  I0930 13:16:16.733342 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-8428, name: ss-0, uid: d8341d8b-f336-4fbb-a9f2-e83afbb6f845, status phase: Failed. Waiting for statefulset controller to delete.
  I0930 13:16:16.738206 20 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-8428
  STEP: Removing pod with conflicting port in namespace statefulset-8428 @ 09/30/24 13:16:16.738
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8428 and will be in running state @ 09/30/24 13:16:16.748
  E0930 13:16:17.090783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:18.090860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:16:18.756884 20 statefulset.go:138] Deleting all statefulset in ns statefulset-8428
  I0930 13:16:18.758503 20 rest.go:150] Scaling statefulset ss to 0
  E0930 13:16:19.091196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:20.091371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:21.091475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:22.091565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:23.091767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:24.092051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:25.092235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:26.092424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:27.092631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:28.092816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:16:28.765982 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0930 13:16:28.767734 20 rest.go:88] Deleting statefulset ss
  I0930 13:16:28.774515 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8428" for this suite. @ 09/30/24 13:16:28.776
• [14.183 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/30/24 13:16:28.78
  I0930 13:16:28.780031 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename subpath @ 09/30/24 13:16:28.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:16:28.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:16:28.793
  STEP: Setting up data @ 09/30/24 13:16:28.795
  STEP: Creating pod pod-subpath-test-configmap-7f7t @ 09/30/24 13:16:28.801
  STEP: Creating a pod to test atomic-volume-subpath @ 09/30/24 13:16:28.801
  E0930 13:16:29.093735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:30.094061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:31.094460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:32.094637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:33.094912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:34.095196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:35.095440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:36.095639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:37.095675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:38.095868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:39.096163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:40.096361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:41.096388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:42.096605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:43.096849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:44.097153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:45.098071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:46.098257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:47.098461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:48.098661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:49.099289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:50.099486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:51.099790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:52.099979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:16:52.841
  I0930 13:16:52.843514 20 output.go:196] Trying to get logs from node worker-0 pod pod-subpath-test-configmap-7f7t container test-container-subpath-configmap-7f7t: <nil>
  STEP: delete the pod @ 09/30/24 13:16:52.854
  STEP: Deleting pod pod-subpath-test-configmap-7f7t @ 09/30/24 13:16:52.864
  I0930 13:16:52.864609 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-7f7t" in namespace "subpath-6296"
  I0930 13:16:52.866209 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6296" for this suite. @ 09/30/24 13:16:52.868
• [24.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/30/24 13:16:52.872
  I0930 13:16:52.872106 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 13:16:52.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:16:52.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:16:52.885
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/30/24 13:16:52.887
  I0930 13:16:52.887924 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-8365 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0930 13:16:52.941270 20 builder.go:146] stderr: ""
  I0930 13:16:52.941308 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/30/24 13:16:52.941
  E0930 13:16:53.100635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:54.101519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:55.101725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:56.102012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:16:57.102436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/30/24 13:16:57.992
  I0930 13:16:57.992762 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-8365 get pod e2e-test-httpd-pod -o json'
  I0930 13:16:58.039130 20 builder.go:146] stderr: ""
  I0930 13:16:58.039232 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-09-30T13:16:52Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8365\",\n        \"resourceVersion\": \"31715\",\n        \"uid\": \"c9f63ac5-3617-42f0-a7c0-57efab1c459f\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-f7m28\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker-0\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-f7m28\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-30T13:16:53Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-30T13:16:52Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-30T13:16:53Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-30T13:16:53Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-30T13:16:52Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://7148cf94b794e2780bc66635979604c742035e1480ae5805e0579299c658579a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-09-30T13:16:53Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-f7m28\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.0.42.49\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.0.42.49\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.0.115\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.0.115\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-09-30T13:16:52Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/30/24 13:16:58.039
  I0930 13:16:58.039328 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-8365 replace -f -'
  E0930 13:16:58.102721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:16:58.131783 20 builder.go:146] stderr: ""
  I0930 13:16:58.131827 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/30/24 13:16:58.131
  I0930 13:16:58.133797 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-8365 delete pods e2e-test-httpd-pod'
  E0930 13:16:59.103597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:17:00.024489 20 builder.go:146] stderr: ""
  I0930 13:17:00.024532 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0930 13:17:00.024661 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8365" for this suite. @ 09/30/24 13:17:00.027
• [7.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/30/24 13:17:00.03
  I0930 13:17:00.030867 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename deployment @ 09/30/24 13:17:00.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:17:00.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:17:00.042
  I0930 13:17:00.044803 20 deployment.go:1196] Creating deployment "webserver-deployment"
  I0930 13:17:00.048261 20 deployment.go:1200] Waiting for observed generation 1
  E0930 13:17:00.104177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:01.104991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:17:02.052042 20 deployment.go:1205] Waiting for all required pods to come up
  I0930 13:17:02.054281 20 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/30/24 13:17:02.054
  I0930 13:17:02.054401 20 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0930 13:17:02.057825 20 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0930 13:17:02.063014 20 deployment.go:313] Updating deployment webserver-deployment
  I0930 13:17:02.063053 20 deployment.go:1224] Waiting for observed generation 2
  E0930 13:17:02.105796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:03.105872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:17:04.067807 20 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0930 13:17:04.069471 20 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0930 13:17:04.071065 20 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0930 13:17:04.075540 20 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0930 13:17:04.075612 20 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0930 13:17:04.077073 20 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0930 13:17:04.079972 20 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0930 13:17:04.080006 20 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0930 13:17:04.086750 20 deployment.go:313] Updating deployment webserver-deployment
  I0930 13:17:04.086792 20 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0930 13:17:04.090385 20 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0930 13:17:04.091845 20 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0930 13:17:04.105738 20 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bc7d494-541a-425b-95d9-b337f920bb18",
      ResourceVersion: (string) (len=5) "31970",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E0930 13:17:04.106813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:17:04.139046 20 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
      ResourceVersion: (string) (len=5) "31965",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "9bc7d494-541a-425b-95d9-b337f920bb18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 63 37 64 34  39 34 2d 35 34 31 61 2d  |\"9bc7d494-541a-|
              00000120  34 32 35 62 2d 39 35 64  39 2d 62 33 33 37 66 39  |425b-95d9-b337f9|
              00000130  32 30 62 62 31 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |20bb18\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 13:17:04.139713 20 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0930 13:17:04.139863 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
      ResourceVersion: (string) (len=5) "32010",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "9bc7d494-541a-425b-95d9-b337f920bb18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 63 37 64 34  39 34 2d 35 34 31 61 2d  |\"9bc7d494-541a-|
              00000120  34 32 35 62 2d 39 35 64  39 2d 62 33 33 37 66 39  |425b-95d9-b337f9|
              00000130  32 30 62 62 31 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |20bb18\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 13:17:04.148936 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-4jmgv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4jmgv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b804bde8-0dd3-4583-86d4-77eb05416443",
      ResourceVersion: (string) (len=5) "31843",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  31 38 5c 22 7d 22 3a 7b  |.244.0.118\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m5d5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m5d5b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=12) "10.244.0.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863299020,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b97f7d696d76dba1a7f6003d7350e1bb7b2bb726b5fa3026e49db48b6ec02fe8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m5d5b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.150341 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-74vjt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-74vjt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c711fbaa-6070-42e7-938d-61152dc1bb6d",
      ResourceVersion: (string) (len=5) "31866",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 35 5c 22 7d 22 3a 7b  |.244.1.235\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ddnrk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ddnrk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) (len=12) "10.244.1.235",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.235"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863299020,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a8dd68b7895d1bec3a650ed9ad4282df9f783bf2dd995e8a66e95bf9e3972afe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ddnrk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.151814 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9dbpw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9dbpw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a6752fd-8564-4ed5-94d9-1d86c97026a3",
      ResourceVersion: (string) (len=5) "32019",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gh64s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gh64s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gh64s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.154373 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9zpfr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9zpfr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22306dab-4963-454b-a8e5-874803a7f4fe",
      ResourceVersion: (string) (len=5) "32018",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pxgjb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pxgjb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.155444 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cmgbh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cmgbh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b5f4e4f-2191-424e-a405-87e4ed6d46bd",
      ResourceVersion: (string) (len=5) "31845",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  31 39 5c 22 7d 22 3a 7b  |.244.0.119\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mzp5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mzp5b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=12) "10.244.0.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863299020,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a58ca0c31788d95866358ca6da43e48827530c3e87ce6cd602e69a07b0a6c77f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mzp5b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.156831 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-f87gj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-f87gj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "345a5c88-073a-4eef-a21c-e9206164643c",
      ResourceVersion: (string) (len=5) "32017",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xjqx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xjqx9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.157783 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fmd2x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fmd2x",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e2b4313-d899-449c-9bb4-2b94f48e48c9",
      ResourceVersion: (string) (len=5) "31980",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cbn8c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cbn8c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cbn8c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.159383 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fw5sj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fw5sj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4fa0cb0-c521-4c36-8b39-7c6dabbe1452",
      ResourceVersion: (string) (len=5) "31983",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qmgpn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qmgpn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.160961 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-grkv4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-grkv4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "083996dc-dfef-4e7d-b3a2-32e19330c582",
      ResourceVersion: (string) (len=5) "31848",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  31 36 5c 22 7d 22 3a 7b  |.244.0.116\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g5frt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g5frt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=12) "10.244.0.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863299020,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4024cc245990145317ab7e1a71b03c0872b41659c452081150e91c02754f7c8e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g5frt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.162402 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-j5jx5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-j5jx5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dab476c9-e399-46ff-9418-5eaf92cc1c01",
      ResourceVersion: (string) (len=5) "31860",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 36 5c 22 7d 22 3a 7b  |.244.1.236\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lldqg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lldqg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) (len=12) "10.244.1.236",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.236"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863299020,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cac24066008e09daa004a1efd6655e3b40d0da751be7d7130b2313061579b592",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lldqg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.163689 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-j9477" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-j9477",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "586a8f0e-dd17-43f1-8421-382cbaf30d85",
      ResourceVersion: (string) (len=5) "31996",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kkdfh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kkdfh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.164593 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-j9tm9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-j9tm9",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b93ec9bf-492c-4909-8090-71f2e4df4dba",
      ResourceVersion: (string) (len=5) "31986",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j59xk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j59xk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.165472 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-klwq8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-klwq8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "679270a7-ee95-4608-8c1c-465f3675a15a",
      ResourceVersion: (string) (len=5) "31868",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 38 5c 22 7d 22 3a 7b  |.244.1.238\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hw4sc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hw4sc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) (len=12) "10.244.1.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863299020,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e37209bf427297aa9bea0a690d0a69bb73522743f97af2f198f5e0dcf799e22f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hw4sc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.167310 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-p5zsw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-p5zsw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a75ccaae-49f9-4c55-a26b-f5e5a9815787",
      ResourceVersion: (string) (len=5) "31862",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 37 5c 22 7d 22 3a 7b  |.244.1.237\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-skqmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-skqmd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) (len=12) "10.244.1.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863299020,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://86b0edcdc955eec0bd2233208fe450f3f0966cbdd7c48257ebd1ac7bf7bc9d85",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-skqmd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.170041 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-pwt2j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-pwt2j",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb8e476f-4bcd-4a96-870c-10f5bfe7d687",
      ResourceVersion: (string) (len=5) "32021",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pppb5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pppb5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.172746 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-q44cm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-q44cm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a394a8a8-2c26-4e31-891b-cd0150ec6496",
      ResourceVersion: (string) (len=5) "31998",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zckck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zckck",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.173720 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rg4sb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rg4sb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "559cf446-c988-4c5b-8a83-3c7f347e0184",
      ResourceVersion: (string) (len=5) "31871",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 39 5c 22 7d 22 3a 7b  |.244.1.239\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f56jq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f56jq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) (len=12) "10.244.1.239",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.239"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863299020,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ea32548047364a4c4d9be3089ce9ae716694a27dc426e592fec4e0522591e69a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f56jq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.174990 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rgl4v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rgl4v",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb77a22d-f78a-410a-91bd-0f97fcfd66be",
      ResourceVersion: (string) (len=5) "31997",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n59x6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n59x6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.175817 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-sm7rz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-sm7rz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68e3462a-a87e-45f7-a983-65e7a6e2a635",
      ResourceVersion: (string) (len=5) "32012",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kp4rs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kp4rs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.176728 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-v4x7c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-v4x7c",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed1be4e0-8b0e-4c29-9cbe-4fb215a08f94",
      ResourceVersion: (string) (len=5) "32002",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9c64156c-da7d-4c79-825e-6d3d55ce4992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 34 31 35 36 63 2d 64  |d\":\"9c64156c-d|
              00000090  61 37 64 2d 34 63 37 39  2d 38 32 35 65 2d 36 64  |a7d-4c79-825e-6d|
              000000a0  33 64 35 35 63 65 34 39  39 32 5c 22 7d 22 3a 7b  |3d55ce4992\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4sdn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4sdn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.177666 20 deployment.go:67] Pod "webserver-deployment-786f49d774-4zt5z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-4zt5z",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15fcd572-f58c-4730-90a1-8ece07034203",
      ResourceVersion: (string) (len=5) "31940",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 32 31 5c  22 7d 22 3a 7b 22 2e 22  |4.0.121\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-znt5s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-znt5s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=12) "10.244.0.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-znt5s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.180371 20 deployment.go:67] Pod "webserver-deployment-786f49d774-52rzh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-52rzh",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e07404da-6b75-4598-8d40-03e7df1b1d43",
      ResourceVersion: (string) (len=5) "32014",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pjvqz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pjvqz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pjvqz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.181826 20 deployment.go:67] Pod "webserver-deployment-786f49d774-6xp9l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6xp9l",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d055c496-6db9-43cf-9605-09467345dec9",
      ResourceVersion: (string) (len=5) "31987",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5hmdn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5hmdn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.182745 20 deployment.go:67] Pod "webserver-deployment-786f49d774-8bxmr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-8bxmr",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86e4a844-46ff-464f-aa96-33ffd43f55f9",
      ResourceVersion: (string) (len=5) "31957",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 32 32 5c  22 7d 22 3a 7b 22 2e 22  |4.0.122\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8hw6x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8hw6x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=12) "10.244.0.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8hw6x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.183995 20 deployment.go:67] Pod "webserver-deployment-786f49d774-8pmg2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-8pmg2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1cc17f4e-9adb-447a-9eb3-cd47a0747fd7",
      ResourceVersion: (string) (len=5) "32008",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ftlvn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ftlvn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.184838 20 deployment.go:67] Pod "webserver-deployment-786f49d774-gwpl4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-gwpl4",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6012a618-48a0-4c81-af4c-077f739a7bfd",
      ResourceVersion: (string) (len=5) "32023",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8vslv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8vslv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.189840 20 deployment.go:67] Pod "webserver-deployment-786f49d774-j6z25" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-j6z25",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cdeaa3c9-9122-4b79-af03-9d50772f6cbc",
      ResourceVersion: (string) (len=5) "32022",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4dh6v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4dh6v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.192608 20 deployment.go:67] Pod "webserver-deployment-786f49d774-jk8qh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-jk8qh",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4eb575f6-262c-4afd-8d70-3ac31cbb0a33",
      ResourceVersion: (string) (len=5) "31947",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 32 34 31 5c  22 7d 22 3a 7b 22 2e 22  |4.1.241\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w6qmv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w6qmv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) (len=12) "10.244.1.241",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.241"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w6qmv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.193953 20 deployment.go:67] Pod "webserver-deployment-786f49d774-m4qqp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-m4qqp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5da1184-8085-478c-96d0-a935336120b9",
      ResourceVersion: (string) (len=5) "32029",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ft6vg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ft6vg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.194933 20 deployment.go:67] Pod "webserver-deployment-786f49d774-nx59l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-nx59l",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4373c81d-427c-4568-92a1-ce56421b94c6",
      ResourceVersion: (string) (len=5) "32020",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d9jnm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d9jnm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.197324 20 deployment.go:67] Pod "webserver-deployment-786f49d774-q8tn7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-q8tn7",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef8d2d14-6f21-4e3a-bc10-e495d5f5aa93",
      ResourceVersion: (string) (len=5) "31950",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 32 34 30 5c  22 7d 22 3a 7b 22 2e 22  |4.1.240\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmwhg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmwhg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.35.180",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.35.180"
        }
      },
      PodIP: (string) (len=12) "10.244.1.240",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.240"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jmwhg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.199191 20 deployment.go:67] Pod "webserver-deployment-786f49d774-skgdk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-skgdk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25b1d265-10e0-4c8c-b28e-c4b0aa99833f",
      ResourceVersion: (string) (len=5) "31960",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 32 33 5c  22 7d 22 3a 7b 22 2e 22  |4.0.123\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-527wf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-527wf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=12) "10.244.0.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299022,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-527wf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.200594 20 deployment.go:67] Pod "webserver-deployment-786f49d774-wwcsh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-wwcsh",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8562",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8989e5a-7839-4e12-80e6-386f3a146083",
      ResourceVersion: (string) (len=5) "31988",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "4bcb30b6-c3e7-40a7-b511-99fb0aefdb1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  63 62 33 30 62 36 2d 63  |d\":\"4bcb30b6-c|
              00000090  33 65 37 2d 34 30 61 37  2d 62 35 31 31 2d 39 39  |3e7-40a7-b511-99|
              000000a0  66 62 30 61 65 66 64 62  31 64 5c 22 7d 22 3a 7b  |fb0aefdb1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7prqv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7prqv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:17:04.201454 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8562" for this suite. @ 09/30/24 13:17:04.205
• [4.179 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/30/24 13:17:04.21
  I0930 13:17:04.210299 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:17:04.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:17:04.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:17:04.225
  STEP: Setting up server cert @ 09/30/24 13:17:04.32
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:17:04.928
  STEP: Deploying the webhook pod @ 09/30/24 13:17:04.934
  STEP: Wait for the deployment to be ready @ 09/30/24 13:17:04.945
  I0930 13:17:04.948529 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:17:05.106733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:06.106984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:17:06.954
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:17:06.962
  E0930 13:17:07.107017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:17:07.962951 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/30/24 13:17:07.966
  I0930 13:17:07.992727 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3938" for this suite. @ 09/30/24 13:17:07.994
  STEP: Destroying namespace "webhook-markers-7582" for this suite. @ 09/30/24 13:17:08.001
• [3.798 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 09/30/24 13:17:08.008
  I0930 13:17:08.008244 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-preemption @ 09/30/24 13:17:08.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:17:08.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:17:08.02
  I0930 13:17:08.031683 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0930 13:17:08.107673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:09.107973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:10.108999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:11.109068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:12.110066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:13.110241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:14.110695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:15.110800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:16.111713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:17.111940      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:18.112807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:19.113197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:20.114036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:21.114223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:22.115267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:23.115357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:24.115648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:25.115836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:26.116885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:27.117060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:28.117164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:29.117903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:30.118177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:31.118339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:32.118432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:33.118609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:34.118947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:35.119105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:36.120092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:37.120251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:38.121232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:39.121318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:40.121699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:41.121863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:42.121938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:43.122100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:44.123150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:45.123309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:46.123323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:47.123426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:48.124420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:49.124647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:50.125655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:51.125817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:52.126141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:53.126241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:54.126288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:55.126449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:56.126797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:57.126955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:58.127242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:17:59.127517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:00.127577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:01.127703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:02.128090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:03.128253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:04.128812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:05.128917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:06.129879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:07.130048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:08.034379 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/30/24 13:18:08.036
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/30/24 13:18:08.043
  I0930 13:18:08.049564 20 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/30/24 13:18:08.049
  E0930 13:18:08.130603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:09.130908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/30/24 13:18:10.054
  I0930 13:18:10.057763 20 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/30/24 13:18:10.057
  E0930 13:18:10.131929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:11.132109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/30/24 13:18:12.062
  I0930 13:18:12.064377 20 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0930 13:18:12.132492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:12.572325 20 pod_client.go:173] Successfully updated pod "victim-pod"
  I0930 13:18:12.591335 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-700" for this suite. @ 09/30/24 13:18:12.593
• [64.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/30/24 13:18:12.597
  I0930 13:18:12.597269 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename proxy @ 09/30/24 13:18:12.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:12.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:12.607
  I0930 13:18:12.609798 20 proxy.go:293] Creating pod...
  E0930 13:18:13.133308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:14.133494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:14.618902 20 proxy.go:317] Creating service...
  I0930 13:18:14.628892 20 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/pods/agnhost/proxy/some/path/with/DELETE
  I0930 13:18:14.633474 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0930 13:18:14.633519 20 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/pods/agnhost/proxy/some/path/with/GET
  I0930 13:18:14.635868 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0930 13:18:14.635908 20 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/pods/agnhost/proxy/some/path/with/HEAD
  I0930 13:18:14.637969 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0930 13:18:14.638002 20 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/pods/agnhost/proxy/some/path/with/OPTIONS
  I0930 13:18:14.640163 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0930 13:18:14.640203 20 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/pods/agnhost/proxy/some/path/with/PATCH
  I0930 13:18:14.642226 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0930 13:18:14.642260 20 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/pods/agnhost/proxy/some/path/with/POST
  I0930 13:18:14.644398 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0930 13:18:14.644433 20 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/pods/agnhost/proxy/some/path/with/PUT
  I0930 13:18:14.646525 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0930 13:18:14.646558 20 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/services/test-service/proxy/some/path/with/DELETE
  I0930 13:18:14.649092 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0930 13:18:14.649130 20 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/services/test-service/proxy/some/path/with/GET
  I0930 13:18:14.651706 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0930 13:18:14.651742 20 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/services/test-service/proxy/some/path/with/HEAD
  I0930 13:18:14.654108 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0930 13:18:14.654142 20 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/services/test-service/proxy/some/path/with/OPTIONS
  I0930 13:18:14.656576 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0930 13:18:14.656625 20 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/services/test-service/proxy/some/path/with/PATCH
  I0930 13:18:14.659138 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0930 13:18:14.659173 20 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/services/test-service/proxy/some/path/with/POST
  I0930 13:18:14.661969 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0930 13:18:14.662007 20 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1437/services/test-service/proxy/some/path/with/PUT
  I0930 13:18:14.664647 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0930 13:18:14.664765 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1437" for this suite. @ 09/30/24 13:18:14.666
• [2.073 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/30/24 13:18:14.67
  I0930 13:18:14.670241 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sysctl @ 09/30/24 13:18:14.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:14.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:14.682
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/30/24 13:18:14.684
  I0930 13:18:14.688229 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3622" for this suite. @ 09/30/24 13:18:14.767
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/30/24 13:18:14.77
  I0930 13:18:14.770894 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replicaset @ 09/30/24 13:18:14.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:14.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:14.782
  I0930 13:18:14.784883 20 replica_set.go:191] Creating ReplicaSet my-hostname-basic-47ca1970-2fdb-43f4-b70b-33657a8c1e1e
  I0930 13:18:14.790235 20 resource.go:87] Pod name my-hostname-basic-47ca1970-2fdb-43f4-b70b-33657a8c1e1e: Found 0 pods out of 1
  E0930 13:18:15.133732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:16.133924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:17.134093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:18.134280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:19.134568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:19.792576 20 resource.go:87] Pod name my-hostname-basic-47ca1970-2fdb-43f4-b70b-33657a8c1e1e: Found 1 pods out of 1
  I0930 13:18:19.792636 20 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-47ca1970-2fdb-43f4-b70b-33657a8c1e1e" is running
  I0930 13:18:19.794351 20 replica_set.go:220] Pod "my-hostname-basic-47ca1970-2fdb-43f4-b70b-33657a8c1e1e-zp2wf" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:18:16 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:18:14 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:18:16 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:18:16 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:18:14 +0000 UTC Reason: Message:}])
  I0930 13:18:19.794382 20 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/30/24 13:18:19.794
  I0930 13:18:19.800975 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9320" for this suite. @ 09/30/24 13:18:19.803
• [5.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/30/24 13:18:19.808
  I0930 13:18:19.808474 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 13:18:19.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:19.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:19.818
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:18:19.82
  E0930 13:18:20.135242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:21.135626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:22.136082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:23.136269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:18:23.834
  I0930 13:18:23.836151 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-3fd0efd2-5920-4bcb-89f8-a71731e7fb15 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:18:23.844
  I0930 13:18:23.856800 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3170" for this suite. @ 09/30/24 13:18:23.858
• [4.054 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/30/24 13:18:23.862
  I0930 13:18:23.862576 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename endpointslice @ 09/30/24 13:18:23.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:23.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:23.874
  I0930 13:18:23.881246 20 endpointslice.go:1045] Endpoints addresses: [10.0.50.204] , ports: [6443]
  I0930 13:18:23.881282 20 endpointslice.go:1075] EndpointSlices addresses: [10.0.50.204] , ports: [6443]
  I0930 13:18:23.881423 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5436" for this suite. @ 09/30/24 13:18:23.959
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/30/24 13:18:23.963
  I0930 13:18:23.963512 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pv @ 09/30/24 13:18:23.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:23.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:23.973
  STEP: Creating initial PV and PVC @ 09/30/24 13:18:23.975
  I0930 13:18:23.975979 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2344" @ 09/30/24 13:18:23.983
  STEP: Listing PVCs in namespace "pv-2344" @ 09/30/24 13:18:23.985
  STEP: Patching the PV "pv-2344-nlfzd" @ 09/30/24 13:18:23.99
  STEP: Patching the PVC "pvc-rj4th" @ 09/30/24 13:18:24.001
  STEP: Getting PV "pv-2344-nlfzd" @ 09/30/24 13:18:24.008
  STEP: Getting PVC "pvc-rj4th" @ 09/30/24 13:18:24.01
  STEP: Deleting PVC "pvc-rj4th" @ 09/30/24 13:18:24.016
  STEP: Confirm deletion of PVC "pvc-rj4th" @ 09/30/24 13:18:24.021
  E0930 13:18:24.136891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:25.137083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-2344-nlfzd" @ 09/30/24 13:18:26.025
  STEP: Confirm deletion of PV "pv-2344-nlfzd" @ 09/30/24 13:18:26.03
  E0930 13:18:26.137335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:27.137665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/30/24 13:18:28.034
  I0930 13:18:28.034947 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2344-42djs" @ 09/30/24 13:18:28.043
  STEP: Updating the PVC "pvc-8rsv4" @ 09/30/24 13:18:28.066
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-8rsv4=updated" @ 09/30/24 13:18:28.071
  STEP: Deleting PVC "pvc-8rsv4" via DeleteCollection @ 09/30/24 13:18:28.073
  STEP: Confirm deletion of PVC "pvc-8rsv4" @ 09/30/24 13:18:28.079
  E0930 13:18:28.137924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:29.138804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-2344-42djs" via DeleteCollection @ 09/30/24 13:18:30.083
  STEP: Confirm deletion of PV "pv-2344-42djs" @ 09/30/24 13:18:30.087
  E0930 13:18:30.139656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:31.139795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:32.091167 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0930 13:18:32.091200 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-8rsv4"
  I0930 13:18:32.092744 20 pv.go:193] Deleting PersistentVolume "pv-2344-42djs"
  I0930 13:18:32.094256 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2344" for this suite. @ 09/30/24 13:18:32.096
• [8.138 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/30/24 13:18:32.101
  I0930 13:18:32.101182 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename daemonsets @ 09/30/24 13:18:32.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:32.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:32.111
  E0930 13:18:32.139877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:32.200243 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/30/24 13:18:32.203
  I0930 13:18:32.205150 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:18:32.205193 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/30/24 13:18:32.205
  I0930 13:18:32.307521 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:18:32.307559 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  E0930 13:18:33.140509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:33.308409 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0930 13:18:33.308448 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/30/24 13:18:33.31
  I0930 13:18:33.323905 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:18:33.323937 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/30/24 13:18:33.323
  I0930 13:18:33.409464 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:18:33.409504 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  E0930 13:18:34.141163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:34.335870 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:18:34.335910 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  E0930 13:18:35.141276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:35.335709 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0930 13:18:35.335749 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/30/24 13:18:35.339
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9743, will wait for the garbage collector to delete the pods @ 09/30/24 13:18:35.339
  I0930 13:18:35.395226 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.338671ms
  I0930 13:18:35.496082 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.850493ms
  E0930 13:18:36.141465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:37.141656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:37.300054 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:18:37.300093 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0930 13:18:37.301887 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32836"},"items":null}

  I0930 13:18:37.303430 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32836"},"items":null}

  I0930 13:18:37.314506 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9743" for this suite. @ 09/30/24 13:18:37.316
• [5.220 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/30/24 13:18:37.321
  I0930 13:18:37.321245 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 13:18:37.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:37.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:37.331
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/30/24 13:18:37.333
  E0930 13:18:38.142280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:39.142574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:18:39.343
  I0930 13:18:39.344782 20 output.go:196] Trying to get logs from node worker-0 pod pod-d13ed149-eba2-40e0-9422-2a9bde54d013 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 13:18:39.348
  I0930 13:18:39.358961 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1869" for this suite. @ 09/30/24 13:18:39.361
• [2.045 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/30/24 13:18:39.366
  I0930 13:18:39.366186 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename namespaces @ 09/30/24 13:18:39.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:39.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:39.377
  STEP: Updating Namespace "namespaces-8731" @ 09/30/24 13:18:39.379
  I0930 13:18:39.386563 20 namespace.go:389] Namespace "namespaces-8731" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"2aca82b5-56eb-43c6-80d4-e62520b40630", "kubernetes.io/metadata.name":"namespaces-8731", "namespaces-8731":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0930 13:18:39.386692 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8731" for this suite. @ 09/30/24 13:18:39.462
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/30/24 13:18:39.468
  I0930 13:18:39.468705 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 13:18:39.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:39.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:39.481
  I0930 13:18:39.506505 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8703" for this suite. @ 09/30/24 13:18:39.562
• [0.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 09/30/24 13:18:39.566
  I0930 13:18:39.566505 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 13:18:39.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:39.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:39.582
  STEP: Starting the proxy @ 09/30/24 13:18:39.584
  I0930 13:18:39.584989 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-2041 proxy --unix-socket=/tmp/kubectl-proxy-unix1276839428/test'
  STEP: retrieving proxy /api/ output @ 09/30/24 13:18:39.622
  I0930 13:18:39.622636 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2041" for this suite. @ 09/30/24 13:18:39.662
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/30/24 13:18:39.666
  I0930 13:18:39.666776 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename gc @ 09/30/24 13:18:39.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:39.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:39.68
  STEP: create the rc @ 09/30/24 13:18:39.763
  W0930 13:18:39.768265      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0930 13:18:40.142732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:41.143817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:42.144796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:43.144939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/30/24 13:18:43.774
  STEP: wait for the rc to be deleted @ 09/30/24 13:18:43.778
  E0930 13:18:44.147213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:44.789980 20 garbage_collector.go:670] 80 pods remaining
  I0930 13:18:44.790025 20 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0930 13:18:44.790031 20 garbage_collector.go:678] 
  E0930 13:18:45.145713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:45.785011 20 garbage_collector.go:670] 71 pods remaining
  I0930 13:18:45.785048 20 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0930 13:18:45.785055 20 garbage_collector.go:678] 
  E0930 13:18:46.145992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:46.794998 20 garbage_collector.go:670] 60 pods remaining
  I0930 13:18:46.795039 20 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0930 13:18:46.795046 20 garbage_collector.go:678] 
  E0930 13:18:47.146810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:47.784175 20 garbage_collector.go:670] 40 pods remaining
  I0930 13:18:47.784215 20 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0930 13:18:47.784223 20 garbage_collector.go:678] 
  E0930 13:18:48.146998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:48.787440 20 garbage_collector.go:670] 31 pods remaining
  I0930 13:18:48.787483 20 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0930 13:18:48.787492 20 garbage_collector.go:678] 
  E0930 13:18:49.147476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:49.783287 20 garbage_collector.go:670] 20 pods remaining
  I0930 13:18:49.783323 20 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0930 13:18:49.783331 20 garbage_collector.go:678] 
  E0930 13:18:50.147505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/30/24 13:18:50.782
  W0930 13:18:50.784932      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0930 13:18:50.784970 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0930 13:18:50.785110 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3731" for this suite. @ 09/30/24 13:18:50.788
• [11.127 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/30/24 13:18:50.794
  I0930 13:18:50.794292 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-pred @ 09/30/24 13:18:50.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:50.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:50.805
  I0930 13:18:50.808044 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0930 13:18:50.893200 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0930 13:18:50.895143 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0930 13:18:50.897665 20 predicates.go:957] coredns-679c655b6f-g44rj from kube-system started at 2024-09-30 12:57:53 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.897818 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0930 13:18:50.897833 20 predicates.go:957] konnectivity-agent-spbtv from kube-system started at 2024-09-30 11:56:59 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.897841 20 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0930 13:18:50.897850 20 predicates.go:957] kube-proxy-7phx8 from kube-system started at 2024-09-30 11:56:56 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.897857 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0930 13:18:50.897872 20 predicates.go:957] kube-router-hp7ql from kube-system started at 2024-09-30 11:56:55 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.897877 20 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0930 13:18:50.897882 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-30 11:57:15 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.897887 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0930 13:18:50.897893 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-dtf7x from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 13:18:50.897899 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 13:18:50.897903 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0930 13:18:50.897909 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0930 13:18:50.899917 20 predicates.go:957] coredns-679c655b6f-qx7cq from kube-system started at 2024-09-30 11:57:41 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.899955 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0930 13:18:50.899965 20 predicates.go:957] konnectivity-agent-nmhq8 from kube-system started at 2024-09-30 11:56:59 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.899974 20 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0930 13:18:50.899980 20 predicates.go:957] kube-proxy-2dptv from kube-system started at 2024-09-30 11:56:56 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.899984 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0930 13:18:50.899991 20 predicates.go:957] kube-router-cc52w from kube-system started at 2024-09-30 11:56:55 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.899996 20 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0930 13:18:50.900001 20 predicates.go:957] metrics-server-78c4ccbc7f-w5v8q from kube-system started at 2024-09-30 11:57:04 +0000 UTC (1 container statuses recorded)
  I0930 13:18:50.900005 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0930 13:18:50.900010 20 predicates.go:957] sonobuoy-e2e-job-6bbffb04e0e746b5 from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 13:18:50.900014 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0930 13:18:50.900018 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 13:18:50.900023 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-b1314172998a4b2c-jq8fj from sonobuoy started at 2024-09-30 11:57:19 +0000 UTC (2 container statuses recorded)
  I0930 13:18:50.900027 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0930 13:18:50.900034 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/30/24 13:18:50.9
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17fa081dbf7aa5a0], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 09/30/24 13:18:50.912
  E0930 13:18:51.148115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:51.912060 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7495" for this suite. @ 09/30/24 13:18:51.914
• [1.126 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/30/24 13:18:51.92
  I0930 13:18:51.920249 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:18:51.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:51.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:51.932
  STEP: Setting up server cert @ 09/30/24 13:18:52.029
  E0930 13:18:52.148672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:18:52.481
  STEP: Deploying the webhook pod @ 09/30/24 13:18:52.488
  STEP: Wait for the deployment to be ready @ 09/30/24 13:18:52.496
  I0930 13:18:52.502397 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:18:53.149035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:54.149539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:18:54.508
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:18:54.517
  E0930 13:18:55.150377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:18:55.517847 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/30/24 13:18:55.521
  STEP: create a configmap that should be updated by the webhook @ 09/30/24 13:18:55.535
  I0930 13:18:55.574464 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4512" for this suite. @ 09/30/24 13:18:55.578
  STEP: Destroying namespace "webhook-markers-6534" for this suite. @ 09/30/24 13:18:55.582
• [3.668 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/30/24 13:18:55.588
  I0930 13:18:55.588466 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:18:55.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:55.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:55.598
  STEP: Creating projection with secret that has name projected-secret-test-11d96eab-6d83-4a50-b2de-2d425d86a5eb @ 09/30/24 13:18:55.6
  STEP: Creating a pod to test consume secrets @ 09/30/24 13:18:55.603
  E0930 13:18:56.151242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:57.151461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:58.151718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:18:59.152002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:18:59.617
  I0930 13:18:59.619397 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-secrets-4b88caf7-04dc-456f-9f8c-6f829ed6908a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 13:18:59.623
  I0930 13:18:59.632289 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2533" for this suite. @ 09/30/24 13:18:59.634
• [4.051 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/30/24 13:18:59.639
  I0930 13:18:59.639451 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/30/24 13:18:59.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:18:59.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:18:59.65
  STEP: create the container to handle the HTTPGet hook request. @ 09/30/24 13:18:59.734
  E0930 13:19:00.152289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:01.152472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/30/24 13:19:01.748
  E0930 13:19:02.153184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:03.153462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/30/24 13:19:03.757
  STEP: delete the pod with lifecycle hook @ 09/30/24 13:19:03.761
  E0930 13:19:04.154367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:05.154556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:05.769447 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7302" for this suite. @ 09/30/24 13:19:05.771
• [6.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/30/24 13:19:05.776
  I0930 13:19:05.776668 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:19:05.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:05.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:05.786
  STEP: Setting up server cert @ 09/30/24 13:19:05.887
  E0930 13:19:06.155245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:19:06.285
  STEP: Deploying the webhook pod @ 09/30/24 13:19:06.289
  STEP: Wait for the deployment to be ready @ 09/30/24 13:19:06.297
  I0930 13:19:06.303445 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:19:07.156349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:08.156450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:19:08.309
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:19:08.317
  E0930 13:19:09.156522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:09.317830 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/30/24 13:19:09.321
  STEP: create a pod that should be updated by the webhook @ 09/30/24 13:19:09.334
  I0930 13:19:09.381212 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3569" for this suite. @ 09/30/24 13:19:09.384
  STEP: Destroying namespace "webhook-markers-7038" for this suite. @ 09/30/24 13:19:09.388
• [3.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/30/24 13:19:09.392
  I0930 13:19:09.392279 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 13:19:09.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:09.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:09.403
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:19:09.405
  E0930 13:19:10.156656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:11.156932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:19:11.418
  I0930 13:19:11.419837 20 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-f5636527-ebf9-4a1b-8a59-5227b299bd5d container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:19:11.428
  I0930 13:19:11.438953 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9664" for this suite. @ 09/30/24 13:19:11.44
• [2.054 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/30/24 13:19:11.446
  I0930 13:19:11.446191 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename ingressclass @ 09/30/24 13:19:11.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:11.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:11.458
  STEP: getting /apis @ 09/30/24 13:19:11.46
  STEP: getting /apis/networking.k8s.io @ 09/30/24 13:19:11.463
  STEP: getting /apis/networking.k8s.iov1 @ 09/30/24 13:19:11.464
  STEP: creating @ 09/30/24 13:19:11.465
  STEP: getting @ 09/30/24 13:19:11.477
  STEP: listing @ 09/30/24 13:19:11.478
  STEP: watching @ 09/30/24 13:19:11.48
  I0930 13:19:11.480186 20 ingressclass.go:348] starting watch
  STEP: patching @ 09/30/24 13:19:11.481
  STEP: updating @ 09/30/24 13:19:11.484
  I0930 13:19:11.487147 20 ingressclass.go:364] waiting for watch events with expected annotations
  I0930 13:19:11.487194 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/30/24 13:19:11.487
  STEP: deleting a collection @ 09/30/24 13:19:11.493
  I0930 13:19:11.500555 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7778" for this suite. @ 09/30/24 13:19:11.541
• [0.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/30/24 13:19:11.545
  I0930 13:19:11.545451 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubelet-test @ 09/30/24 13:19:11.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:11.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:11.56
  E0930 13:19:12.157154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:13.157336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:13.577745 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-341" for this suite. @ 09/30/24 13:19:13.579
• [2.038 seconds]
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/30/24 13:19:13.583
  I0930 13:19:13.583381 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 13:19:13.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:13.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:13.593
  STEP: Create set of pods @ 09/30/24 13:19:13.595
  I0930 13:19:13.600360 20 pods.go:871] created test-pod-1
  I0930 13:19:13.606626 20 pods.go:871] created test-pod-2
  I0930 13:19:13.609909 20 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/30/24 13:19:13.609
  E0930 13:19:14.158390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:15.158702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/30/24 13:19:15.633
  I0930 13:19:15.635364 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0930 13:19:16.158821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:16.656051 20 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  E0930 13:19:17.159695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:17.636543 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9847" for this suite. @ 09/30/24 13:19:17.64
• [4.060 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/30/24 13:19:17.643
  I0930 13:19:17.643441 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:19:17.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:17.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:17.655
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:19:17.657
  E0930 13:19:18.159859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:19.160207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:20.161051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:21.161162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:19:21.671
  I0930 13:19:21.672757 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-15479b7f-250b-419f-93ac-b0a1b64a62f2 container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:19:21.676
  I0930 13:19:21.687807 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-173" for this suite. @ 09/30/24 13:19:21.689
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/30/24 13:19:21.693
  I0930 13:19:21.693719 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/30/24 13:19:21.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:21.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:21.705
  I0930 13:19:21.707430 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 13:19:22.162135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/30/24 13:19:22.94
  I0930 13:19:22.940962 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 --namespace=crd-publish-openapi-7409 create -f -'
  E0930 13:19:23.162472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:24.162878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:25.002878 20 builder.go:146] stderr: ""
  I0930 13:19:25.002924 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3154-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0930 13:19:25.002983 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 --namespace=crd-publish-openapi-7409 delete e2e-test-crd-publish-openapi-3154-crds test-foo'
  I0930 13:19:25.051897 20 builder.go:146] stderr: ""
  I0930 13:19:25.051945 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3154-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0930 13:19:25.052006 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 --namespace=crd-publish-openapi-7409 apply -f -'
  I0930 13:19:25.106248 20 builder.go:146] stderr: ""
  I0930 13:19:25.106291 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3154-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0930 13:19:25.106345 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 --namespace=crd-publish-openapi-7409 delete e2e-test-crd-publish-openapi-3154-crds test-foo'
  I0930 13:19:25.154249 20 builder.go:146] stderr: ""
  I0930 13:19:25.154291 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3154-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/30/24 13:19:25.154
  I0930 13:19:25.154368 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 --namespace=crd-publish-openapi-7409 create -f -'
  E0930 13:19:25.163765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:25.201706 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/30/24 13:19:25.201
  I0930 13:19:25.201841 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 --namespace=crd-publish-openapi-7409 create -f -'
  I0930 13:19:25.248681 20 builder.go:135] rc: 1
  I0930 13:19:25.248840 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 --namespace=crd-publish-openapi-7409 apply -f -'
  I0930 13:19:25.300200 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/30/24 13:19:25.3
  I0930 13:19:25.300409 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 --namespace=crd-publish-openapi-7409 create -f -'
  I0930 13:19:25.347175 20 builder.go:135] rc: 1
  I0930 13:19:25.347269 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 --namespace=crd-publish-openapi-7409 apply -f -'
  I0930 13:19:25.397243 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/30/24 13:19:25.397
  I0930 13:19:25.397380 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 explain e2e-test-crd-publish-openapi-3154-crds'
  I0930 13:19:25.443368 20 builder.go:146] stderr: ""
  I0930 13:19:25.443421 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3154-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/30/24 13:19:25.443
  I0930 13:19:25.443677 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 explain e2e-test-crd-publish-openapi-3154-crds.metadata'
  I0930 13:19:25.489411 20 builder.go:146] stderr: ""
  I0930 13:19:25.489607 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3154-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0930 13:19:25.489790 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 explain e2e-test-crd-publish-openapi-3154-crds.spec'
  I0930 13:19:25.535228 20 builder.go:146] stderr: ""
  I0930 13:19:25.535279 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3154-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0930 13:19:25.535382 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 explain e2e-test-crd-publish-openapi-3154-crds.spec.bars'
  I0930 13:19:25.580927 20 builder.go:146] stderr: ""
  I0930 13:19:25.580979 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3154-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/30/24 13:19:25.581
  I0930 13:19:25.581142 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7409 explain e2e-test-crd-publish-openapi-3154-crds.spec.bars2'
  I0930 13:19:25.626684 20 builder.go:135] rc: 1
  E0930 13:19:26.164283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:26.823238 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7409" for this suite. @ 09/30/24 13:19:26.828
• [5.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/30/24 13:19:26.832
  I0930 13:19:26.832389 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename conformance-tests @ 09/30/24 13:19:26.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:26.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:26.885
  STEP: Getting node addresses @ 09/30/24 13:19:26.887
  I0930 13:19:26.887401 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0930 13:19:26.929134 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7830" for this suite. @ 09/30/24 13:19:26.931
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/30/24 13:19:26.934
  I0930 13:19:26.934474 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename field-validation @ 09/30/24 13:19:26.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:26.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:26.985
  I0930 13:19:26.987708 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 13:19:27.165397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:28.165806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:29.166107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0930 13:19:29.516656      20 warnings.go:70] unknown field "alpha"
  W0930 13:19:29.516679      20 warnings.go:70] unknown field "beta"
  W0930 13:19:29.516684      20 warnings.go:70] unknown field "delta"
  W0930 13:19:29.516687      20 warnings.go:70] unknown field "epsilon"
  W0930 13:19:29.516690      20 warnings.go:70] unknown field "gamma"
  I0930 13:19:30.040429 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4392" for this suite. @ 09/30/24 13:19:30.042
• [3.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/30/24 13:19:30.046
  I0930 13:19:30.046485 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replicaset @ 09/30/24 13:19:30.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:30.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:30.057
  STEP: Create a Replicaset @ 09/30/24 13:19:30.06
  STEP: Verify that the required pods have come up. @ 09/30/24 13:19:30.064
  I0930 13:19:30.066910 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0930 13:19:30.167162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:31.167356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:32.167643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:33.167833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:34.168118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:35.069177 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/30/24 13:19:35.069
  STEP: Getting /status @ 09/30/24 13:19:35.069
  I0930 13:19:35.070982 20 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/30/24 13:19:35.071
  I0930 13:19:35.075935 20 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/30/24 13:19:35.075
  I0930 13:19:35.077203 20 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0930 13:19:35.077288 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0930 13:19:35.077351 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0930 13:19:35.077615 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0930 13:19:35.077652 20 replica_set.go:682] Found replicaset test-rs in namespace replicaset-5388 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0930 13:19:35.077664 20 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/30/24 13:19:35.077
  I0930 13:19:35.077694 20 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0930 13:19:35.083318 20 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/30/24 13:19:35.083
  I0930 13:19:35.084759 20 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0930 13:19:35.084839 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0930 13:19:35.084902 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0930 13:19:35.085046 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0930 13:19:35.085071 20 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-5388 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0930 13:19:35.085134 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0930 13:19:35.085151 20 replica_set.go:718] Found replicaset test-rs in namespace replicaset-5388 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0930 13:19:35.085161 20 replica_set.go:729] Replicaset test-rs has a patched status
  I0930 13:19:35.085241 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5388" for this suite. @ 09/30/24 13:19:35.087
• [5.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/30/24 13:19:35.091
  I0930 13:19:35.091174 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename configmap @ 09/30/24 13:19:35.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:35.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:35.104
  STEP: Creating configMap configmap-9981/configmap-test-c6f8c5ab-8b89-4e3c-9251-b0445715c1ae @ 09/30/24 13:19:35.106
  STEP: Creating a pod to test consume configMaps @ 09/30/24 13:19:35.109
  E0930 13:19:35.169188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:36.169377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:19:37.119
  I0930 13:19:37.121477 20 output.go:196] Trying to get logs from node worker-0 pod pod-configmaps-49dfb844-d6e7-474f-9416-ce0a8944fb62 container env-test: <nil>
  STEP: delete the pod @ 09/30/24 13:19:37.125
  I0930 13:19:37.135393 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9981" for this suite. @ 09/30/24 13:19:37.137
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/30/24 13:19:37.141
  I0930 13:19:37.141196 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 13:19:37.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:37.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:37.153
  STEP: Counting existing ResourceQuota @ 09/30/24 13:19:37.155
  E0930 13:19:37.169704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:38.170116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:39.170439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:40.170781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:41.171132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/30/24 13:19:42.16
  STEP: Ensuring resource quota status is calculated @ 09/30/24 13:19:42.163
  E0930 13:19:42.171711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:43.172618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:19:44.166001 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4296" for this suite. @ 09/30/24 13:19:44.168
  E0930 13:19:44.173062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
• [7.032 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/30/24 13:19:44.173
  I0930 13:19:44.173284 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename resourcequota @ 09/30/24 13:19:44.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:19:44.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:19:44.184
  STEP: Creating a ResourceQuota with best effort scope @ 09/30/24 13:19:44.186
  STEP: Ensuring ResourceQuota status is calculated @ 09/30/24 13:19:44.189
  E0930 13:19:45.174079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:46.174360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/30/24 13:19:46.191
  STEP: Ensuring ResourceQuota status is calculated @ 09/30/24 13:19:46.194
  E0930 13:19:47.174477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:48.174564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/30/24 13:19:48.197
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/30/24 13:19:48.205
  E0930 13:19:49.175059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:50.175246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/30/24 13:19:50.208
  E0930 13:19:51.175334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:52.175515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/30/24 13:19:52.21
  STEP: Ensuring resource quota status released the pod usage @ 09/30/24 13:19:52.22
  E0930 13:19:53.176333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:54.176421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/30/24 13:19:54.222
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/30/24 13:19:54.23
  E0930 13:19:55.177038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:56.177138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/30/24 13:19:56.232
  E0930 13:19:57.177741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:19:58.177911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/30/24 13:19:58.235
  STEP: Ensuring resource quota status released the pod usage @ 09/30/24 13:19:58.244
  E0930 13:19:59.177985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:00.178093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:00.247382 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-389" for this suite. @ 09/30/24 13:20:00.249
• [16.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/30/24 13:20:00.253
  I0930 13:20:00.253350 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 13:20:00.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:20:00.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:20:00.263
  STEP: Creating pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454 @ 09/30/24 13:20:00.265
  E0930 13:20:01.178449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:02.178630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/30/24 13:20:02.275
  I0930 13:20:02.276780 20 container_probe.go:1749] Initial restart count of pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d is 0
  I0930 13:20:02.278293 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:03.179238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:04.180070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:04.281398 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:05.180170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:06.180315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:06.283516 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:07.180367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:08.180460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:08.286046 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:09.180553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:10.180742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:10.289157 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:11.181077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:12.181276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:12.291803 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:13.181735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:14.182125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:14.294524 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:15.182683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:16.182872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:16.297178 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:17.183115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:18.183298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:18.299979 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:19.183399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:20.183692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:20.303002 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:21.183967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:22.184157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:22.305610 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:23.184239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:24.184329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:24.310627 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:25.184546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:26.184739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:26.313058 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:27.185013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:28.185197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:28.315900 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:29.185837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:30.186032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:30.318441 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:31.186114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:32.186299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:32.320562 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:33.186516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:34.186834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:34.323310 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:35.187227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:36.187410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:36.325746 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:37.187514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:38.187618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:38.328249 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:39.187717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:40.187897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:40.331286 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:41.188173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:42.188356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:42.333821 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:43.188730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:44.189034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:44.336427 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:45.189367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:46.189454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:46.338794 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:47.189712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:48.189903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:48.341625 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:49.190614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:50.190794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:50.344162 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:51.191098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:52.191202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:52.346573 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:53.191491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:54.191720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:54.349020 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:55.191946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:56.192038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:56.351452 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:57.192127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:20:58.192315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:20:58.354015 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:20:59.192914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:00.193097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:00.356486 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:01.193506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:02.193708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:02.359057 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:03.193979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:04.194421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:04.363055 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:05.194944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:06.195141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:06.365465 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:07.195375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:08.195550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:08.368262 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:09.196197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:10.196391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:10.370919 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:11.196486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:12.196575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:12.374019 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:13.196995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:14.197299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:14.376726 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:15.197549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:16.197751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:16.379137 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:17.197979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:18.198174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:18.381913 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:19.198626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:20.198839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:20.384231 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:21.199060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:22.199690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:22.387144 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:23.199771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:24.200781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:24.390192 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:25.201071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:26.201261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:26.392731 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:27.201493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:28.201699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:28.396195 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:29.202684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:30.202852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:30.399215 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:31.203774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:32.204758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:32.403705 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:33.205617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:34.205894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:34.406365 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:35.206212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:36.206378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:36.408657 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:37.206414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:38.206573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:38.411278 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:39.207142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:40.207400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:40.413868 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:41.207703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:42.207877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:42.416327 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:43.208162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:44.208262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:44.418808 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:45.208689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:46.208849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:46.421356 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:47.209195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:48.209356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:48.424140 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:49.209902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:50.210058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:50.426388 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:51.210177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:52.210341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:52.428668 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:53.210472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:54.210818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:54.431385 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:55.211214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:56.211379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:56.433919 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:57.211472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:21:58.211649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:21:58.436299 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:21:59.212118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:00.212369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:00.438775 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:01.212603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:02.212699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:02.440851 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:03.213772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:04.214055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:04.443524 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:05.214140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:06.214241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:06.446706 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:07.214492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:08.214668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:08.449374 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:09.215144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:10.215302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:10.451763 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:11.215566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:12.215862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:12.454240 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:13.216049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:14.216330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:14.456692 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:15.216515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:16.216695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:16.458853 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:17.217718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:18.217876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:18.463883 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:19.218750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:20.218906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:20.466244 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:21.218993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:22.219176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:22.468521 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:23.219324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:24.219414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:24.470926 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:25.219711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:26.219882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:26.473039 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:27.220928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:28.221093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:28.475982 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:29.221666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:30.221837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:30.478232 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:31.222001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:32.222786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:32.481328 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:33.222900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:34.223177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:34.483608 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:35.223383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:36.223547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:36.485747 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:37.224607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:38.224764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:38.488636 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:39.225410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:40.225507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:40.490959 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:41.225727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:42.225847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:42.493318 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:43.226004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:44.226302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:44.495762 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:45.226553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:46.226712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:46.498078 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:47.226857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:48.226938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:48.500479 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:49.227252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:50.227414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:50.502931 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:51.227663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:52.227822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:52.505325 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:53.228082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:54.228172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:54.507547 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:55.228305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:56.229335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:56.510784 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:57.229504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:22:58.229685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:22:58.513635 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:22:59.230382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:00.230546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:00.516082 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:01.230846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:02.231009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:02.518219 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:03.231993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:04.232087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:04.520647 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:05.232393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:06.232494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:06.522936 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:07.232651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:08.232951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:08.525800 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:09.233039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:10.233224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:10.528772 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:11.233521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:12.233696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:12.531025 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:13.233790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:14.234159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:14.533733 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:15.234426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:16.234605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:16.535861 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:17.235666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:18.235735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:18.538647 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:19.236789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:20.237133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:20.541855 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:21.237645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:22.237810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:22.544278 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:23.238018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:24.238109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:24.546623 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:25.238265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:26.238428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:26.548841 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:27.238527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:28.238689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:28.551673 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:29.238735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:30.238896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:30.554421 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:31.239145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:32.239303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:32.556697 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:33.239436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:34.239798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:34.559426 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:35.240157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:36.240322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:36.561671 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:37.241365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:38.241645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:38.564537 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:39.242291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:40.242454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:40.566896 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:41.242637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:42.242793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:42.569367 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:43.243085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:44.243392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:44.571930 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:45.243697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:46.243861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:46.574350 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:47.244082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:48.244248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:48.577081 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:49.244813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:50.244979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:50.579404 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:51.245148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:52.245316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:52.581831 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:53.245542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:54.245828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:54.584360 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:55.246070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:56.246849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:56.587266 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:57.247002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:23:58.247165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:23:58.590214 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:23:59.247976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:00.248068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:24:00.592473 20 container_probe.go:1759] Get pod busybox-3393fc24-c7d4-4b45-98f1-5882f6c9fc4d in namespace container-probe-6454
  E0930 13:24:01.248113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:02.248329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/30/24 13:24:02.592
  I0930 13:24:02.601859 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6454" for this suite. @ 09/30/24 13:24:02.607
• [242.358 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/30/24 13:24:02.611
  I0930 13:24:02.611683 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename var-expansion @ 09/30/24 13:24:02.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:24:02.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:24:02.622
  STEP: Creating a pod to test substitution in container's command @ 09/30/24 13:24:02.624
  E0930 13:24:03.248683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:04.249646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:24:04.633
  I0930 13:24:04.634888 20 output.go:196] Trying to get logs from node worker-0 pod var-expansion-3b7aa8a7-167f-451e-9bf2-406e8bb87701 container dapi-container: <nil>
  STEP: delete the pod @ 09/30/24 13:24:04.644
  I0930 13:24:04.655054 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6951" for this suite. @ 09/30/24 13:24:04.657
• [2.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/30/24 13:24:04.662
  I0930 13:24:04.662350 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename pods @ 09/30/24 13:24:04.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:24:04.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:24:04.671
  STEP: creating the pod @ 09/30/24 13:24:04.673
  STEP: submitting the pod to kubernetes @ 09/30/24 13:24:04.673
  W0930 13:24:04.680439      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0930 13:24:05.249982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:06.250233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/30/24 13:24:06.686
  STEP: updating the pod @ 09/30/24 13:24:06.688
  I0930 13:24:07.197388 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-87868731-a3f1-4b2d-95b2-315379230b04"
  E0930 13:24:07.251309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:08.252321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:09.252714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:10.253788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:24:11.204075 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1979" for this suite. @ 09/30/24 13:24:11.206
• [6.547 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/30/24 13:24:11.209
  I0930 13:24:11.209638 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-watch @ 09/30/24 13:24:11.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:24:11.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:24:11.222
  I0930 13:24:11.224971 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 13:24:11.254789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:12.255473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:13.255679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/30/24 13:24:13.749
  I0930 13:24:13.752155 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-30T13:24:13Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-30T13:24:13Z]] name:name1 resourceVersion:35762 uid:5a73032b-5ad4-4517-9b84-5dca3951f352] num:map[num1:9223372036854775807 num2:1000000]]}
  E0930 13:24:14.255712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:15.255897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:16.256854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:17.257026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:18.257295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:19.257691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:20.257863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:21.257953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:22.258115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:23.258274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/30/24 13:24:23.753
  I0930 13:24:23.756746 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-30T13:24:23Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-30T13:24:23Z]] name:name2 resourceVersion:35797 uid:7fd562eb-147b-4423-942d-acab828c0bb2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0930 13:24:24.259244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:25.259402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:26.259568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:27.259734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:28.260766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:29.261090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:30.261270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:31.261426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:32.261610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:33.261772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/30/24 13:24:33.757
  I0930 13:24:33.761754 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-30T13:24:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-30T13:24:33Z]] name:name1 resourceVersion:35820 uid:5a73032b-5ad4-4517-9b84-5dca3951f352] num:map[num1:9223372036854775807 num2:1000000]]}
  E0930 13:24:34.262249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:35.262425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:36.262606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:37.262764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:38.263022      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:39.263174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:40.263335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:41.263435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:42.263620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:43.263904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/30/24 13:24:43.762
  I0930 13:24:43.766761 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-30T13:24:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-30T13:24:43Z]] name:name2 resourceVersion:35843 uid:7fd562eb-147b-4423-942d-acab828c0bb2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0930 13:24:44.263993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:45.264158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:46.264333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:47.265298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:48.265862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:49.266019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:50.266111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:51.266276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:52.266365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:53.266678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/30/24 13:24:53.766
  I0930 13:24:53.771128 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-30T13:24:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-30T13:24:33Z]] name:name1 resourceVersion:35866 uid:5a73032b-5ad4-4517-9b84-5dca3951f352] num:map[num1:9223372036854775807 num2:1000000]]}
  E0930 13:24:54.267689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:55.267851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:56.268006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:57.268165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:58.268867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:24:59.269025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:00.269190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:01.269360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:02.269525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:03.269553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/30/24 13:25:03.772
  I0930 13:25:03.776407 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-30T13:24:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-30T13:24:43Z]] name:name2 resourceVersion:35889 uid:7fd562eb-147b-4423-942d-acab828c0bb2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0930 13:25:04.269888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:05.269983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:06.270074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:07.270237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:08.270856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:09.271010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:10.271716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:11.271891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:12.272055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:13.272441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:14.272539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:25:14.283892 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2299" for this suite. @ 09/30/24 13:25:14.286
• [63.080 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/30/24 13:25:14.289
  I0930 13:25:14.289645 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename daemonsets @ 09/30/24 13:25:14.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:25:14.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:25:14.301
  STEP: Creating simple DaemonSet "daemon-set" @ 09/30/24 13:25:14.39
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/30/24 13:25:14.394
  I0930 13:25:14.489342 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:25:14.489386 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  E0930 13:25:15.273096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:25:15.398662 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0930 13:25:15.398699 20 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  E0930 13:25:16.273598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:25:16.398540 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0930 13:25:16.398597 20 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/30/24 13:25:16.4
  STEP: DeleteCollection of the DaemonSets @ 09/30/24 13:25:16.402
  STEP: Verify that ReplicaSets have been deleted @ 09/30/24 13:25:16.405
  I0930 13:25:16.410719 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35950"},"items":null}

  I0930 13:25:16.416936 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35953"},"items":[{"metadata":{"name":"daemon-set-hdblz","generateName":"daemon-set-","namespace":"daemonsets-5619","uid":"25d0a4b4-abdc-40f5-b70b-d808004fde61","resourceVersion":"35953","creationTimestamp":"2024-09-30T13:25:14Z","deletionTimestamp":"2024-09-30T13:25:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0eec437b-1eac-4f57-b752-ab8c12b6c9e3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-30T13:25:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0eec437b-1eac-4f57-b752-ab8c12b6c9e3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-30T13:25:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.48\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qzhqq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qzhqq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:14Z"}],"hostIP":"10.0.35.180","hostIPs":[{"ip":"10.0.35.180"}],"podIP":"10.244.1.48","podIPs":[{"ip":"10.244.1.48"}],"startTime":"2024-09-30T13:25:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-30T13:25:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1f9eb43fec4898fd98ff89e6471cabb6bd44739948dfd46fb287b039c19e6cdc","started":true,"volumeMounts":[{"name":"kube-api-access-qzhqq","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-mbqjt","generateName":"daemon-set-","namespace":"daemonsets-5619","uid":"cb64a7c8-35bc-4a8a-ac3c-3bf2ee2036ba","resourceVersion":"35952","creationTimestamp":"2024-09-30T13:25:14Z","deletionTimestamp":"2024-09-30T13:25:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0eec437b-1eac-4f57-b752-ab8c12b6c9e3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-30T13:25:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0eec437b-1eac-4f57-b752-ab8c12b6c9e3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-30T13:25:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.194\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-slsfd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-slsfd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-30T13:25:14Z"}],"hostIP":"10.0.42.49","hostIPs":[{"ip":"10.0.42.49"}],"podIP":"10.244.0.194","podIPs":[{"ip":"10.244.0.194"}],"startTime":"2024-09-30T13:25:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-30T13:25:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://12e4b4ae3e0a2bbad64f0c471c53263ee921a3a37a577aef448c03349513cc2f","started":true,"volumeMounts":[{"name":"kube-api-access-slsfd","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0930 13:25:16.501335 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5619" for this suite. @ 09/30/24 13:25:16.503
• [2.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 09/30/24 13:25:16.51
  I0930 13:25:16.510674 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename svcaccounts @ 09/30/24 13:25:16.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:25:16.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:25:16.522
  STEP: creating a ServiceAccount @ 09/30/24 13:25:16.524
  STEP: watching for the ServiceAccount to be added @ 09/30/24 13:25:16.528
  STEP: patching the ServiceAccount @ 09/30/24 13:25:16.529
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/30/24 13:25:16.533
  STEP: deleting the ServiceAccount @ 09/30/24 13:25:16.534
  I0930 13:25:16.542201 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7090" for this suite. @ 09/30/24 13:25:16.598
• [0.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/30/24 13:25:16.601
  I0930 13:25:16.601981 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename chunking @ 09/30/24 13:25:16.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:25:16.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:25:16.624
  STEP: creating a large number of resources @ 09/30/24 13:25:16.626
  E0930 13:25:17.273804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:18.274119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:19.275071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:20.275470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:21.276378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:22.276500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:23.277551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:24.277751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:25.278088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:26.278670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:27.278871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:28.279315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:29.279617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:30.279633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:31.280176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:32.280727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:33.281366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:34.281891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/30/24 13:25:34.307
  I0930 13:25:34.355271 20 chunking.go:163] Retrieved 40/40 results with rv 36436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/30/24 13:25:34.355
  E0930 13:25:35.282145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:36.282306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:37.282462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:38.282755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:39.282930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:40.283103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:41.283273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:42.283449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:43.283749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:44.283911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:45.284069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:46.284228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:47.284395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:48.284697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:49.284848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:50.285005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:51.285175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:52.285339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:53.285633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:54.285791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:25:54.359047 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:25:55.286658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:56.286821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:57.286983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:58.287275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:25:59.287452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:00.287524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:01.287689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:02.287858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:03.288142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:04.288295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:05.288461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:06.288641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:07.288807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:08.289193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:09.289358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:10.289530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:11.289700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:12.289857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:13.290142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:14.290299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:26:14.358685 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:26:15.290519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:16.290696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:17.290861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:18.291067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:19.291230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:20.291401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:21.291560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:22.291741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:23.292013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:24.292171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:25.292331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:26.292500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:27.292675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:28.292953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:29.293109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:30.293269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:31.293431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:32.293611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:33.293891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:34.293985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:26:34.358876 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:26:35.294671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:36.294757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:37.295479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:38.295752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:39.295770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:40.295949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:41.296116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:42.296281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:43.296565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:44.296741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:45.296835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:46.296991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:47.297090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:48.297855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:49.298017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:50.298187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:51.298355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:52.298520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:53.298811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:54.298967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:26:54.359238 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:26:55.299066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:56.299237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:57.299404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:58.299818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:26:59.299987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:00.300084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:01.300244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:02.300415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:03.300845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:04.301008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:05.301287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:06.301449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:07.301627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:08.301924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:09.302083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:10.302247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:11.302344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:12.302511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:13.302852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:14.303014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:27:14.359244 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:27:15.303109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:16.303271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:17.303433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:18.303862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:19.304021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:20.304190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:21.304352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:22.304522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:23.304812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:24.304973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:25.305132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:26.305296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:27.305634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:28.305886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:29.306068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:30.306230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:31.306393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:32.306555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:33.306863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:34.307017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:27:34.358967 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:27:35.307890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:36.308060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:37.308223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:38.308482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:39.308651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:40.308815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:41.308979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:42.309143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:43.309508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:44.309687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:45.309841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:46.310000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:47.310161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:48.310461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:49.310636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:50.310815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:51.310982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:52.311142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:53.311405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:54.311564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:27:54.358682 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:27:55.312537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:56.312714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:57.312881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:58.313264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:27:59.313422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:00.313605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:01.313696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:02.313859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:03.314874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:04.314959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:05.315133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:06.315297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:07.315466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:08.315764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:09.315920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:10.316079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:11.316241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:12.316397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:13.316662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:14.316825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:28:14.359091 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:28:15.316920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:16.317090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:17.317276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:18.317531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:19.317699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:20.317858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:21.318023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:22.318183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:23.318443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:24.318619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:25.318784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:26.318960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:27.319120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:28.319388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:29.319547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:30.319716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:31.319875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:32.320044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:33.320306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:34.320469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:28:34.358464 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:28:35.321355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:36.321520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:37.321699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:38.322034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:39.322189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:40.322354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:41.322515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:42.322691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:43.323035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:44.323196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:45.323356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:46.323523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:47.323702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:48.323974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:49.324132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:50.324293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:51.324459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:52.324631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:53.324895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:54.325054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:28:54.359186 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:28:55.325085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:56.325248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:57.325414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:58.325692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:28:59.325856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:00.326617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:01.327366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:02.327531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:03.327892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:04.328055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:05.328340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:06.328524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:07.328865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:08.329875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:09.330035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:10.330130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:11.330299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:12.330454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:13.330842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:14.331009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:29:14.359103 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:29:15.331965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:16.332129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:17.332298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:18.332577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:19.332765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:20.332937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:21.333093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:22.333257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:23.333556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:24.333731      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:25.333895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:26.334063      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:27.334403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:28.334685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:29.334866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:30.335021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:31.335178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:32.335342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:33.335622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:34.335791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:29:34.358917 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:29:35.335809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:36.335970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:37.336060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:38.336328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:39.336500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:40.336681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:41.336753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:42.336911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:43.337255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:44.337342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:45.337501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:46.337673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:47.337837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:48.338892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:49.339480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:50.339574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:51.340037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:52.340132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:53.340395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:54.340488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:29:54.358369 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:29:55.340604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:56.340763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:57.340930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:58.341891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:29:59.342059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:00.342214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:01.342316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:02.342478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:03.342893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:04.343768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:05.343859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:06.343951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:07.344106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:08.344446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:09.344533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:10.344694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:11.344858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:12.345017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:13.345270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:14.345425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:30:14.358655 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:30:15.345519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:16.345713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:17.345903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:18.346237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:19.347147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:20.347250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:21.347419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:22.347598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:23.347874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:24.348307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:25.348462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:26.348640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:27.348806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:28.348848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:29.348937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:30.349098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:31.349262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:32.349355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:33.350339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:34.350499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:30:34.358473 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:30:35.351338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:36.351492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:37.351674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:38.352038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:39.352199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:40.352357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:41.352520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:42.352629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:43.352939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:44.353108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:45.353276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:46.353365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:47.353529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:48.353900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:49.354003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:50.354170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:51.354339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:52.354505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:53.354842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:54.355000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:30:54.358933 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:30:55.355099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:56.355266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:57.355425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:58.355843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:30:59.356018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:00.356199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:01.356363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:02.356528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:03.356879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:04.356980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:05.357143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:06.357240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:07.357405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:08.357768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:09.357866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:10.358034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:11.358195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:12.358289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:13.358927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:31:14.358840 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:31:14.358938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:15.359786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:16.359957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:17.360118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:18.360480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:19.360669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:20.360835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:21.360997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:22.361172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:23.361544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:24.361670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:25.361758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:26.361918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:27.362234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:28.362537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:29.362717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:30.362889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:31.363055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:32.363217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:33.363924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:31:34.358386 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY0MzYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0930 13:31:34.364363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:35.364513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:36.364702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:37.364864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:38.365263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:39.365362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:40.366172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:41.366268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:42.366434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:43.366720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:44.366880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:45.367040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:46.367141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:47.367299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:48.367567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:49.367666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:50.367825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:51.367988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:52.368153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:53.368419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:31:54.357398 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0930 13:31:54.357437 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/30/24 13:31:54.357
  STEP: retrieving all remaining pages @ 09/30/24 13:31:54.359
  I0930 13:31:54.361883 20 chunking.go:221] Retrieved 40/40 results with rv 37274 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNzQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0930 13:31:54.364083 20 chunking.go:221] Retrieved 40/40 results with rv 37274 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNzQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0930 13:31:54.366236 20 chunking.go:221] Retrieved 40/40 results with rv 37274 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNzQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0930 13:31:54.368479 20 chunking.go:221] Retrieved 40/40 results with rv 37274 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNzQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  E0930 13:31:54.368697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:31:54.370861 20 chunking.go:221] Retrieved 40/40 results with rv 37274 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNzQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0930 13:31:54.373098 20 chunking.go:221] Retrieved 40/40 results with rv 37274 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNzQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0930 13:31:54.375504 20 chunking.go:221] Retrieved 40/40 results with rv 37274 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzcyNzQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0930 13:31:54.377815 20 chunking.go:221] Retrieved 40/40 results with rv 37274 and continue 
  I0930 13:31:54.377943 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9126" for this suite. @ 09/30/24 13:31:54.38
• [397.783 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/30/24 13:31:54.385
  I0930 13:31:54.385493 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:31:54.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:31:54.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:31:54.396
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:31:54.398
  E0930 13:31:55.369131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:56.369447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:31:56.409
  I0930 13:31:56.411657 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-82ac9e2a-2b39-43cb-9c70-4b684a0c721c container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:31:56.421
  I0930 13:31:56.431549 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5252" for this suite. @ 09/30/24 13:31:56.433
• [2.052 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/30/24 13:31:56.437
  I0930 13:31:56.437118 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename containers @ 09/30/24 13:31:56.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:31:56.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:31:56.449
  STEP: Creating a pod to test override arguments @ 09/30/24 13:31:56.451
  E0930 13:31:57.370383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:31:58.370891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:31:58.461
  I0930 13:31:58.462958 20 output.go:196] Trying to get logs from node worker-0 pod client-containers-029ecdf7-0037-4fff-b22e-0ce22fad77fb container agnhost-container: <nil>
  STEP: delete the pod @ 09/30/24 13:31:58.466
  I0930 13:31:58.477654 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7002" for this suite. @ 09/30/24 13:31:58.479
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/30/24 13:31:58.483
  I0930 13:31:58.483826 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/30/24 13:31:58.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:31:58.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:31:58.494
  STEP: creating a target pod @ 09/30/24 13:31:58.496
  E0930 13:31:59.371623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:00.371723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/30/24 13:32:00.507
  E0930 13:32:01.371816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:02.371884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/30/24 13:32:02.517
  I0930 13:32:02.517326 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9454 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0930 13:32:02.517344 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  I0930 13:32:02.517828 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0930 13:32:02.517880 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-9454/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0930 13:32:02.553873 20 exec_util.go:111] Exec stderr: ""
  I0930 13:32:02.557848 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9454" for this suite. @ 09/30/24 13:32:02.559
• [4.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/30/24 13:32:02.563
  I0930 13:32:02.563441 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename lease-test @ 09/30/24 13:32:02.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:02.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:02.577
  I0930 13:32:02.624942 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1729" for this suite. @ 09/30/24 13:32:02.66
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/30/24 13:32:02.663
  I0930 13:32:02.663997 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename events @ 09/30/24 13:32:02.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:02.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:02.679
  STEP: creating a test event @ 09/30/24 13:32:02.681
  STEP: listing all events in all namespaces @ 09/30/24 13:32:02.684
  STEP: patching the test event @ 09/30/24 13:32:02.687
  STEP: fetching the test event @ 09/30/24 13:32:02.691
  STEP: updating the test event @ 09/30/24 13:32:02.692
  STEP: getting the test event @ 09/30/24 13:32:02.698
  STEP: deleting the test event @ 09/30/24 13:32:02.7
  STEP: listing all events in all namespaces @ 09/30/24 13:32:02.705
  I0930 13:32:02.707729 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4171" for this suite. @ 09/30/24 13:32:02.76
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 09/30/24 13:32:02.764
  I0930 13:32:02.764479 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 13:32:02.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:02.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:02.78
  STEP: Creating a pod to test downward api env vars @ 09/30/24 13:32:02.782
  E0930 13:32:03.372375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:04.372474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:05.372728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:06.372917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:32:06.794
  I0930 13:32:06.796245 20 output.go:196] Trying to get logs from node worker-0 pod downward-api-105b3e63-a900-49e0-a14c-2a96c8c57d25 container dapi-container: <nil>
  STEP: delete the pod @ 09/30/24 13:32:06.8
  I0930 13:32:06.811135 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2807" for this suite. @ 09/30/24 13:32:06.813
• [4.052 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 09/30/24 13:32:06.816
  I0930 13:32:06.816454 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename svcaccounts @ 09/30/24 13:32:06.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:06.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:06.826
  I0930 13:32:06.830384 20 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-6389"
  I0930 13:32:06.833458 20 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-6389"
  STEP: waiting for a new root ca configmap created @ 09/30/24 13:32:07.334
  I0930 13:32:07.336156 20 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-6389"
  I0930 13:32:07.339158 20 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-6389"
  E0930 13:32:07.373323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 09/30/24 13:32:07.839
  I0930 13:32:07.841624 20 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-6389"
  I0930 13:32:07.841721 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6389" for this suite. @ 09/30/24 13:32:07.843
• [1.030 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/30/24 13:32:07.846
  I0930 13:32:07.846868 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:32:07.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:07.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:07.859
  STEP: Creating projection with secret that has name projected-secret-test-af0a5dd7-8668-49c3-b66f-b84be6963d78 @ 09/30/24 13:32:07.861
  STEP: Creating a pod to test consume secrets @ 09/30/24 13:32:07.864
  E0930 13:32:08.374111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:09.374290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:10.374723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:11.374910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:32:11.933
  I0930 13:32:11.935141 20 output.go:196] Trying to get logs from node worker-0 pod pod-projected-secrets-0c7d3d8e-2a81-4f5c-a3df-9cf10083e88e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 13:32:11.939
  I0930 13:32:11.949870 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3693" for this suite. @ 09/30/24 13:32:11.952
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/30/24 13:32:11.955
  I0930 13:32:11.955658 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename watch @ 09/30/24 13:32:11.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:12.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:12.035
  STEP: getting a starting resourceVersion @ 09/30/24 13:32:12.037
  STEP: starting a background goroutine to produce watch events @ 09/30/24 13:32:12.039
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/30/24 13:32:12.039
  E0930 13:32:12.375655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:13.376046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:14.376488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:32:14.784816 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4186" for this suite. @ 09/30/24 13:32:14.834
• [2.932 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/30/24 13:32:14.887
  I0930 13:32:14.887976 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:32:14.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:14.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:14.898
  STEP: Setting up server cert @ 09/30/24 13:32:14.996
  E0930 13:32:15.377278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:32:15.402
  STEP: Deploying the webhook pod @ 09/30/24 13:32:15.407
  STEP: Wait for the deployment to be ready @ 09/30/24 13:32:15.416
  I0930 13:32:15.422201 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:32:16.378328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:17.378426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:32:17.428
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:32:17.436
  E0930 13:32:18.379483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:32:18.436689 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0930 13:32:18.440661 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9611-crds.webhook.example.com via the AdmissionRegistration API @ 09/30/24 13:32:18.949
  STEP: Creating a custom resource while v1 is storage version @ 09/30/24 13:32:18.962
  E0930 13:32:19.380280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:20.380391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/30/24 13:32:20.989
  STEP: Patching the custom resource while v2 is storage version @ 09/30/24 13:32:21.008
  E0930 13:32:21.380437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:32:21.566612 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4441" for this suite. @ 09/30/24 13:32:21.568
  STEP: Destroying namespace "webhook-markers-6338" for this suite. @ 09/30/24 13:32:21.572
• [6.688 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/30/24 13:32:21.575
  I0930 13:32:21.575620 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename field-validation @ 09/30/24 13:32:21.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:21.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:21.587
  I0930 13:32:21.589876 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  W0930 13:32:21.590504      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0x400435b470 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0930 13:32:22.381100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:23.381606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0930 13:32:24.120958      20 warnings.go:70] unknown field "alpha"
  W0930 13:32:24.120981      20 warnings.go:70] unknown field "beta"
  W0930 13:32:24.120986      20 warnings.go:70] unknown field "delta"
  W0930 13:32:24.120991      20 warnings.go:70] unknown field "epsilon"
  W0930 13:32:24.120995      20 warnings.go:70] unknown field "gamma"
  E0930 13:32:24.382257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:32:24.644909 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5953" for this suite. @ 09/30/24 13:32:24.646
• [3.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/30/24 13:32:24.65
  I0930 13:32:24.650406 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename services @ 09/30/24 13:32:24.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:24.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:24.663
  I0930 13:32:24.666898 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1179" for this suite. @ 09/30/24 13:32:24.747
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/30/24 13:32:24.751
  I0930 13:32:24.751466 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/30/24 13:32:24.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:24.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:24.761
  E0930 13:32:25.383006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:26.383090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 09/30/24 13:32:26.783
  STEP: Cleaning up the configmap @ 09/30/24 13:32:26.786
  STEP: Cleaning up the pod @ 09/30/24 13:32:26.789
  I0930 13:32:26.798427 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3086" for this suite. @ 09/30/24 13:32:26.8
• [2.054 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/30/24 13:32:26.806
  I0930 13:32:26.806053 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/30/24 13:32:26.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:26.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:26.817
  I0930 13:32:26.819684 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  E0930 13:32:27.383983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/30/24 13:32:28.015
  I0930 13:32:28.015345 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7227 --namespace=crd-publish-openapi-7227 create -f -'
  I0930 13:32:28.083755 20 builder.go:146] stderr: ""
  I0930 13:32:28.083799 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9512-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0930 13:32:28.083851 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7227 --namespace=crd-publish-openapi-7227 delete e2e-test-crd-publish-openapi-9512-crds test-cr'
  I0930 13:32:28.132111 20 builder.go:146] stderr: ""
  I0930 13:32:28.132154 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9512-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0930 13:32:28.132271 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7227 --namespace=crd-publish-openapi-7227 apply -f -'
  I0930 13:32:28.185488 20 builder.go:146] stderr: ""
  I0930 13:32:28.185532 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9512-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0930 13:32:28.185596 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7227 --namespace=crd-publish-openapi-7227 delete e2e-test-crd-publish-openapi-9512-crds test-cr'
  I0930 13:32:28.234245 20 builder.go:146] stderr: ""
  I0930 13:32:28.234290 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9512-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/30/24 13:32:28.234
  I0930 13:32:28.234370 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=crd-publish-openapi-7227 explain e2e-test-crd-publish-openapi-9512-crds'
  I0930 13:32:28.280032 20 builder.go:146] stderr: ""
  I0930 13:32:28.280086 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9512-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0930 13:32:28.385009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:29.385657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:32:29.497206 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7227" for this suite. @ 09/30/24 13:32:29.502
• [2.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/30/24 13:32:29.508
  I0930 13:32:29.508141 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename deployment @ 09/30/24 13:32:29.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:29.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:29.519
  I0930 13:32:29.528828 20 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0930 13:32:30.385814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:31.386032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:32.386217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:33.386921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:34.387005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:32:34.531365 20 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/30/24 13:32:34.531
  I0930 13:32:34.531439 20 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/30/24 13:32:34.636
  I0930 13:32:34.643931 20 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66600bbf-7233-4ae4-a74f-099295fde25f",
      ResourceVersion: (string) (len=5) "38208",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0930 13:32:34.646036 20 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0930 13:32:34.646071 20 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0930 13:32:34.646257 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1ab5dff-3fdc-4b62-a4c1-5f74e90cfc93",
      ResourceVersion: (string) (len=5) "38209",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "66600bbf-7233-4ae4-a74f-099295fde25f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 36 36 36 30 30 62 62  |"uid\":\"66600bb|
              00000040  66 2d 37 32 33 33 2d 34  61 65 34 2d 61 37 34 66  |f-7233-4ae4-a74f|
              00000050  2d 30 39 39 32 39 35 66  64 65 32 35 66 5c 22 7d  |-099295fde25f\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0930 13:32:34.654990 20 deployment.go:67] Pod "test-cleanup-controller-82zgs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-82zgs",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e7dcfa6-0646-427d-8ac1-2a5a6b06829d",
      ResourceVersion: (string) (len=5) "38184",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "a1ab5dff-3fdc-4b62-a4c1-5f74e90cfc93",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  61 31 61 62 35 64 66 66  |uid\":\"a1ab5dff|
              00000080  2d 33 66 64 63 2d 34 62  36 32 2d 61 34 63 31 2d  |-3fdc-4b62-a4c1-|
              00000090  35 66 37 34 65 39 30 63  66 63 39 33 5c 22 7d 22  |5f74e90cfc93\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 32  30 31 5c 22 7d 22 3a 7b  |.244.0.201\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qtz7n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qtz7n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863299949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.42.49",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.42.49"
        }
      },
      PodIP: (string) (len=12) "10.244.0.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863299949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863299949,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a7f55bfb0e5c3af3481db6db856fd293a7b40a5181e278576e37cc231025a51c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qtz7n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0930 13:32:34.656269 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5732" for this suite. @ 09/30/24 13:32:34.661
• [5.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/30/24 13:32:34.667
  I0930 13:32:34.667831 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 13:32:34.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:34.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:34.682
  STEP: Creating secret with name secret-test-a6a10baa-36cd-4804-869d-688feaebbe5e @ 09/30/24 13:32:34.684
  STEP: Creating a pod to test consume secrets @ 09/30/24 13:32:34.689
  E0930 13:32:35.388030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:36.388225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:37.388647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:38.388959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:32:38.701
  I0930 13:32:38.703369 20 output.go:196] Trying to get logs from node worker-0 pod pod-secrets-647d94b4-53c0-407a-9dc5-d56862b3ec53 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 13:32:38.707
  I0930 13:32:38.717288 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6568" for this suite. @ 09/30/24 13:32:38.752
• [4.092 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/30/24 13:32:38.759
  I0930 13:32:38.759632 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename certificates @ 09/30/24 13:32:38.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:38.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:38.769
  STEP: getting /apis @ 09/30/24 13:32:39.049
  STEP: getting /apis/certificates.k8s.io @ 09/30/24 13:32:39.052
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/30/24 13:32:39.053
  STEP: creating @ 09/30/24 13:32:39.053
  STEP: getting @ 09/30/24 13:32:39.067
  STEP: listing @ 09/30/24 13:32:39.069
  STEP: watching @ 09/30/24 13:32:39.07
  I0930 13:32:39.070841 20 certificates.go:316] starting watch
  STEP: patching @ 09/30/24 13:32:39.071
  STEP: updating @ 09/30/24 13:32:39.076
  I0930 13:32:39.079987 20 certificates.go:332] waiting for watch events with expected annotations
  I0930 13:32:39.080026 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/30/24 13:32:39.08
  STEP: patching /approval @ 09/30/24 13:32:39.081
  STEP: updating /approval @ 09/30/24 13:32:39.086
  STEP: getting /status @ 09/30/24 13:32:39.092
  STEP: patching /status @ 09/30/24 13:32:39.094
  STEP: updating /status @ 09/30/24 13:32:39.099
  STEP: deleting @ 09/30/24 13:32:39.105
  STEP: deleting a collection @ 09/30/24 13:32:39.111
  I0930 13:32:39.118522 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3894" for this suite. @ 09/30/24 13:32:39.12
• [0.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/30/24 13:32:39.125
  I0930 13:32:39.125452 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename cronjob @ 09/30/24 13:32:39.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:32:39.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:32:39.135
  STEP: Creating a ReplaceConcurrent cronjob @ 09/30/24 13:32:39.137
  STEP: Ensuring a job is scheduled @ 09/30/24 13:32:39.142
  E0930 13:32:39.389620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:40.389787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:41.389945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:42.390125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:43.390558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:44.390754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:45.391029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:46.391129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:47.392171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:48.392498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:49.392574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:50.392791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:51.392977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:52.393155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:53.393271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:54.393451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:55.393962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:56.394147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:57.394220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:58.394634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:32:59.394683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:00.394799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/30/24 13:33:01.145
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/30/24 13:33:01.147
  STEP: Ensuring the job is replaced with a new one @ 09/30/24 13:33:01.148
  E0930 13:33:01.395186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:02.395374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:03.395837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:04.395994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:05.396536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:06.396694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:07.397117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:08.397400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:09.397734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:10.397890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:11.398371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:12.398545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:13.399547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:14.399741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:15.400155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:16.400317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:17.400969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:18.401260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:19.402231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:20.402403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:21.402779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:22.402939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:23.403451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:24.403622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:25.404038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:26.404196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:27.404407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:28.404682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:29.405279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:30.405448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:31.405535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:32.405695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:33.406649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:34.406741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:35.407179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:36.407342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:37.407774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:38.408039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:39.408657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:40.408817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:41.409662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:42.409824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:43.410256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:44.410415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:45.410794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:46.410955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:47.411478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:48.411748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:49.412217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:50.412374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:51.412777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:52.412938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:53.413501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:54.413670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:55.414106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:56.414272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:57.414755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:58.415035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:33:59.415174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:00.415338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/30/24 13:34:01.151
  I0930 13:34:01.154963 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5358" for this suite. @ 09/30/24 13:34:01.156
• [82.036 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/30/24 13:34:01.161
  I0930 13:34:01.161755 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename kubectl @ 09/30/24 13:34:01.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:34:01.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:34:01.181
  STEP: creating a replication controller @ 09/30/24 13:34:01.184
  I0930 13:34:01.184091 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 create -f -'
  I0930 13:34:01.274281 20 builder.go:146] stderr: ""
  I0930 13:34:01.274324 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/30/24 13:34:01.274
  I0930 13:34:01.274408 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0930 13:34:01.325905 20 builder.go:146] stderr: ""
  I0930 13:34:01.325945 20 builder.go:147] stdout: "update-demo-nautilus-qzpbl update-demo-nautilus-zwqxh "
  I0930 13:34:01.325993 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-qzpbl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 13:34:01.371493 20 builder.go:146] stderr: ""
  I0930 13:34:01.371633 20 builder.go:147] stdout: ""
  I0930 13:34:01.371645 20 kubectl.go:2502] update-demo-nautilus-qzpbl is created but not running
  E0930 13:34:01.415721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:02.415887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:03.416138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:04.416328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:05.416486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:06.372709 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0930 13:34:06.417088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:06.419272 20 builder.go:146] stderr: ""
  I0930 13:34:06.419305 20 builder.go:147] stdout: "update-demo-nautilus-qzpbl update-demo-nautilus-zwqxh "
  I0930 13:34:06.419361 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-qzpbl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 13:34:06.464637 20 builder.go:146] stderr: ""
  I0930 13:34:06.464683 20 builder.go:147] stdout: "true"
  I0930 13:34:06.464736 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-qzpbl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0930 13:34:06.510970 20 builder.go:146] stderr: ""
  I0930 13:34:06.511011 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0930 13:34:06.511022 20 kubectl.go:2393] validating pod update-demo-nautilus-qzpbl
  E0930 13:34:07.417984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:08.418268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:09.418429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:10.418629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:11.418802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:11.515186 20 kubectl.go:2516] update-demo-nautilus-qzpbl is running right image but validator function failed: the server is currently unable to handle the request (get pods update-demo-nautilus-qzpbl)
  E0930 13:34:12.418930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:13.418936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:14.419035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:15.419197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:16.419392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:16.515660 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0930 13:34:16.566636 20 builder.go:146] stderr: ""
  I0930 13:34:16.566680 20 builder.go:147] stdout: "update-demo-nautilus-qzpbl update-demo-nautilus-zwqxh "
  I0930 13:34:16.566735 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-qzpbl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 13:34:16.612398 20 builder.go:146] stderr: ""
  I0930 13:34:16.612437 20 builder.go:147] stdout: "true"
  I0930 13:34:16.612499 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-qzpbl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0930 13:34:16.659095 20 builder.go:146] stderr: ""
  I0930 13:34:16.659159 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0930 13:34:16.659170 20 kubectl.go:2393] validating pod update-demo-nautilus-qzpbl
  I0930 13:34:16.663285 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0930 13:34:16.663337 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0930 13:34:16.663348 20 kubectl.go:2520] update-demo-nautilus-qzpbl is verified up and running
  I0930 13:34:16.663406 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-zwqxh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 13:34:16.708713 20 builder.go:146] stderr: ""
  I0930 13:34:16.708831 20 builder.go:147] stdout: "true"
  I0930 13:34:16.708891 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-zwqxh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0930 13:34:16.755106 20 builder.go:146] stderr: ""
  I0930 13:34:16.755241 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0930 13:34:16.755253 20 kubectl.go:2393] validating pod update-demo-nautilus-zwqxh
  I0930 13:34:16.759629 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0930 13:34:16.759690 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0930 13:34:16.759703 20 kubectl.go:2520] update-demo-nautilus-zwqxh is verified up and running
  STEP: scaling down the replication controller @ 09/30/24 13:34:16.759
  I0930 13:34:16.760889 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0930 13:34:16.760936 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0930 13:34:17.419798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:17.817197 20 builder.go:146] stderr: ""
  I0930 13:34:17.817239 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/30/24 13:34:17.817
  I0930 13:34:17.817332 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0930 13:34:17.863482 20 builder.go:146] stderr: ""
  I0930 13:34:17.863524 20 builder.go:147] stdout: "update-demo-nautilus-qzpbl "
  I0930 13:34:17.863599 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-qzpbl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 13:34:17.908483 20 builder.go:146] stderr: ""
  I0930 13:34:17.908531 20 builder.go:147] stdout: "true"
  I0930 13:34:17.908598 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-qzpbl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0930 13:34:17.953776 20 builder.go:146] stderr: ""
  I0930 13:34:17.953825 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0930 13:34:17.953837 20 kubectl.go:2393] validating pod update-demo-nautilus-qzpbl
  I0930 13:34:17.956529 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0930 13:34:17.956596 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0930 13:34:17.956616 20 kubectl.go:2520] update-demo-nautilus-qzpbl is verified up and running
  STEP: scaling up the replication controller @ 09/30/24 13:34:17.956
  I0930 13:34:17.957709 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0930 13:34:17.957753 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0930 13:34:18.420600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:19.015161 20 builder.go:146] stderr: ""
  I0930 13:34:19.015201 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/30/24 13:34:19.015
  I0930 13:34:19.015290 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0930 13:34:19.062735 20 builder.go:146] stderr: ""
  I0930 13:34:19.062779 20 builder.go:147] stdout: "update-demo-nautilus-qzpbl update-demo-nautilus-xsqmg "
  I0930 13:34:19.062839 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-qzpbl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 13:34:19.108187 20 builder.go:146] stderr: ""
  I0930 13:34:19.108307 20 builder.go:147] stdout: "true"
  I0930 13:34:19.108363 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-qzpbl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0930 13:34:19.153495 20 builder.go:146] stderr: ""
  I0930 13:34:19.153544 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0930 13:34:19.153554 20 kubectl.go:2393] validating pod update-demo-nautilus-qzpbl
  I0930 13:34:19.156293 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0930 13:34:19.156344 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0930 13:34:19.156360 20 kubectl.go:2520] update-demo-nautilus-qzpbl is verified up and running
  I0930 13:34:19.156412 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-xsqmg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0930 13:34:19.201246 20 builder.go:146] stderr: ""
  I0930 13:34:19.201287 20 builder.go:147] stdout: "true"
  I0930 13:34:19.201340 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods update-demo-nautilus-xsqmg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0930 13:34:19.246510 20 builder.go:146] stderr: ""
  I0930 13:34:19.246551 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0930 13:34:19.246562 20 kubectl.go:2393] validating pod update-demo-nautilus-xsqmg
  I0930 13:34:19.250803 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0930 13:34:19.250860 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0930 13:34:19.250873 20 kubectl.go:2520] update-demo-nautilus-xsqmg is verified up and running
  STEP: using delete to clean up resources @ 09/30/24 13:34:19.25
  I0930 13:34:19.250952 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 delete --grace-period=0 --force -f -'
  I0930 13:34:19.300749 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0930 13:34:19.300794 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0930 13:34:19.300850 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get rc,svc -l name=update-demo --no-headers'
  I0930 13:34:19.350495 20 builder.go:146] stderr: "No resources found in kubectl-643 namespace.\n"
  I0930 13:34:19.350539 20 builder.go:147] stdout: ""
  I0930 13:34:19.350618 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2914885408 --namespace=kubectl-643 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0930 13:34:19.397457 20 builder.go:146] stderr: ""
  I0930 13:34:19.397502 20 builder.go:147] stdout: ""
  I0930 13:34:19.397619 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-643" for this suite. @ 09/30/24 13:34:19.401
• [18.243 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/30/24 13:34:19.405
  I0930 13:34:19.405130 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:34:19.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:34:19.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:34:19.416
  E0930 13:34:19.421040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/30/24 13:34:19.515
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:34:19.811
  STEP: Deploying the webhook pod @ 09/30/24 13:34:19.816
  STEP: Wait for the deployment to be ready @ 09/30/24 13:34:19.826
  I0930 13:34:19.830463 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0930 13:34:20.422087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:21.422340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:34:21.836
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:34:21.844
  E0930 13:34:22.422598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:22.844946 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/30/24 13:34:22.848
  STEP: create a namespace for the webhook @ 09/30/24 13:34:22.863
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/30/24 13:34:22.871
  I0930 13:34:22.907061 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6071" for this suite. @ 09/30/24 13:34:22.909
  STEP: Destroying namespace "webhook-markers-2891" for this suite. @ 09/30/24 13:34:22.913
  STEP: Destroying namespace "fail-closed-namespace-5075" for this suite. @ 09/30/24 13:34:22.916
• [3.515 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/30/24 13:34:22.92
  I0930 13:34:22.920107 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:34:22.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:34:22.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:34:22.976
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:34:22.978
  E0930 13:34:23.423536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:24.423721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:34:24.99
  I0930 13:34:24.992454 20 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-4b7d882f-014c-41ed-9d7c-24026c4b3aab container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:34:25.002
  I0930 13:34:25.012646 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5183" for this suite. @ 09/30/24 13:34:25.014
• [2.098 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/30/24 13:34:25.017
  I0930 13:34:25.017990 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename watch @ 09/30/24 13:34:25.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:34:25.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:34:25.03
  STEP: creating a watch on configmaps @ 09/30/24 13:34:25.032
  STEP: creating a new configmap @ 09/30/24 13:34:25.033
  STEP: modifying the configmap once @ 09/30/24 13:34:25.036
  STEP: closing the watch once it receives two notifications @ 09/30/24 13:34:25.04
  I0930 13:34:25.040941 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5332  a7181b6c-d029-4fec-8c99-4b947c42bb9e 38747 0 2024-09-30 13:34:25 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-30 13:34:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:34:25.041029 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5332  a7181b6c-d029-4fec-8c99-4b947c42bb9e 38748 0 2024-09-30 13:34:25 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-30 13:34:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/30/24 13:34:25.041
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/30/24 13:34:25.047
  STEP: deleting the configmap @ 09/30/24 13:34:25.048
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/30/24 13:34:25.051
  I0930 13:34:25.051677 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5332  a7181b6c-d029-4fec-8c99-4b947c42bb9e 38749 0 2024-09-30 13:34:25 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-30 13:34:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:34:25.051793 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5332  a7181b6c-d029-4fec-8c99-4b947c42bb9e 38750 0 2024-09-30 13:34:25 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-30 13:34:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0930 13:34:25.051894 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5332" for this suite. @ 09/30/24 13:34:25.115
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/30/24 13:34:25.119
  I0930 13:34:25.119451 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 13:34:25.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:34:25.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:34:25.131
  STEP: Creating pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612 @ 09/30/24 13:34:25.133
  E0930 13:34:25.424172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:26.425078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/30/24 13:34:27.142
  I0930 13:34:27.143656 20 container_probe.go:1749] Initial restart count of pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f is 0
  I0930 13:34:27.145101 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:27.425473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:28.426001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:29.147918 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:29.426245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:30.426562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:31.150601 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:31.426905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:32.427088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:33.152941 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:33.427354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:34.427514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:35.155686 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:35.428037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:36.428203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:37.158228 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:37.428636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:38.428956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:39.160791 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:39.429124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:40.429286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:41.163190 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:41.429504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:42.429627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:43.165541 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:43.429917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:44.430076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:45.168148 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:45.430469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:46.430644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:47.170433 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:47.430729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:48.430994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:49.173006 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:49.431369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:50.431532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:51.175407 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:51.431635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:52.431796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:53.177828 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:53.432298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:54.432459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:55.180440 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:55.432698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:56.432980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:57.182897 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:57.433132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:34:58.433437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:34:59.185470 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:34:59.433815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:00.433971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:01.187705 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:35:01.434962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:02.435130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:03.189969 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:35:03.435288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:04.435442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:05.192606 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:35:05.435939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:06.436101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:07.194996 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:35:07.436202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:08.436472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:09.197188 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:35:09.437544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:10.437716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:11.199507 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:35:11.437801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:12.438017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:13.201918 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:35:13.438375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:14.438463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:15.204698 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  E0930 13:35:15.439054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:16.439164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:17.207209 20 container_probe.go:1759] Get pod busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f in namespace container-probe-8612
  I0930 13:35:17.207253 20 container_probe.go:1763] Restart count of pod container-probe-8612/busybox-55a41f03-f92a-4dbc-8ac4-f88c25a3149f is now 1 (50.063561407s elapsed)
  STEP: deleting the pod @ 09/30/24 13:35:17.207
  I0930 13:35:17.216993 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8612" for this suite. @ 09/30/24 13:35:17.219
• [52.103 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/30/24 13:35:17.223
  I0930 13:35:17.223015 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename security-context @ 09/30/24 13:35:17.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:35:17.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:35:17.235
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/30/24 13:35:17.237
  E0930 13:35:17.440163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:18.440472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:19.441244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:20.441411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:35:21.251
  I0930 13:35:21.253108 20 output.go:196] Trying to get logs from node worker-0 pod security-context-28f386b0-e459-4f8d-acef-0a10417f645a container test-container: <nil>
  STEP: delete the pod @ 09/30/24 13:35:21.261
  I0930 13:35:21.271983 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3782" for this suite. @ 09/30/24 13:35:21.273
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/30/24 13:35:21.279
  I0930 13:35:21.279156 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename projected @ 09/30/24 13:35:21.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:35:21.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:35:21.289
  STEP: Creating a pod to test downward API volume plugin @ 09/30/24 13:35:21.291
  E0930 13:35:21.442238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:22.442526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:23.442789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:24.442951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:35:25.305
  I0930 13:35:25.307081 20 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-5a8be004-7182-4856-abc1-9e93f276eb0e container client-container: <nil>
  STEP: delete the pod @ 09/30/24 13:35:25.31
  I0930 13:35:25.321323 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-174" for this suite. @ 09/30/24 13:35:25.323
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/30/24 13:35:25.327
  I0930 13:35:25.327028 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename replication-controller @ 09/30/24 13:35:25.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:35:25.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:35:25.339
  STEP: Creating replication controller my-hostname-basic-a2e99af5-737b-44ac-858e-04d12cd524d8 @ 09/30/24 13:35:25.341
  I0930 13:35:25.346853 20 resource.go:87] Pod name my-hostname-basic-a2e99af5-737b-44ac-858e-04d12cd524d8: Found 0 pods out of 1
  E0930 13:35:25.443024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:26.443317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:27.443391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:28.444021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:29.444230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:30.349275 20 resource.go:87] Pod name my-hostname-basic-a2e99af5-737b-44ac-858e-04d12cd524d8: Found 1 pods out of 1
  I0930 13:35:30.349316 20 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-a2e99af5-737b-44ac-858e-04d12cd524d8" are running
  I0930 13:35:30.350727 20 rc.go:523] Pod "my-hostname-basic-a2e99af5-737b-44ac-858e-04d12cd524d8-w97wn" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:35:26 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:35:25 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:35:26 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:35:26 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-30 13:35:25 +0000 UTC Reason: Message:}])
  I0930 13:35:30.350763 20 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/30/24 13:35:30.35
  I0930 13:35:30.357277 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8059" for this suite. @ 09/30/24 13:35:30.359
• [5.035 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 09/30/24 13:35:30.362
  I0930 13:35:30.362544 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename downward-api @ 09/30/24 13:35:30.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:35:30.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:35:30.372
  STEP: Creating a pod to test downward api env vars @ 09/30/24 13:35:30.374
  E0930 13:35:30.444952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:31.445135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:32.445498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:33.445924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:35:34.386
  I0930 13:35:34.388265 20 output.go:196] Trying to get logs from node worker-0 pod downward-api-44718b5e-3e8a-4278-a417-a01de88ab8cd container dapi-container: <nil>
  STEP: delete the pod @ 09/30/24 13:35:34.392
  I0930 13:35:34.402997 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6724" for this suite. @ 09/30/24 13:35:34.405
• [4.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/30/24 13:35:34.409
  I0930 13:35:34.409050 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 13:35:34.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:35:34.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:35:34.422
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/30/24 13:35:34.424
  E0930 13:35:34.446291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:35.446958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:36.447542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:37.447661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:35:38.436
  I0930 13:35:38.438610 20 output.go:196] Trying to get logs from node worker-0 pod pod-a711c676-247b-4214-844f-6ce274c76f21 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 13:35:38.442
  E0930 13:35:38.448646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:38.452593 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8489" for this suite. @ 09/30/24 13:35:38.454
• [4.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/30/24 13:35:38.458
  I0930 13:35:38.458280 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename emptydir @ 09/30/24 13:35:38.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:35:38.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:35:38.47
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/30/24 13:35:38.471
  E0930 13:35:39.449572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:40.449859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:35:40.483
  I0930 13:35:40.485104 20 output.go:196] Trying to get logs from node worker-0 pod pod-1b83885b-d922-4fea-8615-713e3a9f1088 container test-container: <nil>
  STEP: delete the pod @ 09/30/24 13:35:40.488
  I0930 13:35:40.499820 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9151" for this suite. @ 09/30/24 13:35:40.502
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/30/24 13:35:40.507
  I0930 13:35:40.507476 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename container-probe @ 09/30/24 13:35:40.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:35:40.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:35:40.518
  STEP: Creating pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405 @ 09/30/24 13:35:40.52
  E0930 13:35:41.450640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:42.450906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/30/24 13:35:42.532
  I0930 13:35:42.534074 20 container_probe.go:1749] Initial restart count of pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 is 0
  I0930 13:35:42.535724 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:35:43.451844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:44.452035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:44.538368 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:35:45.452247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:46.452427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:46.540921 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:35:47.452842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:48.453131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:48.543428 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:35:49.453230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:50.453325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:50.546721 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:35:51.453695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:52.453880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:52.549149 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:35:53.454155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:54.454348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:54.551718 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:35:55.454435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:56.454529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:56.554993 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:35:57.455529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:35:58.455933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:35:58.557158 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:35:59.456055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:00.456236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:00.559506 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:01.456333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:02.456525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:02.561872 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:03.457019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:04.457201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:04.564577 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:05.457287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:06.457480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:06.566977 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:07.457893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:08.457974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:08.569386 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:09.458330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:10.458515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:10.571901 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:11.458781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:12.458978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:12.574417 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:13.458989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:14.459179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:14.577606 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:15.459522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:16.459728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:16.580311 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:17.460194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:18.460592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:18.582964 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:19.460690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:20.460853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:20.585199 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:21.461147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:22.461342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:22.587772 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:23.461824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:24.462025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:24.590358 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:25.462100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:26.462283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:26.592800 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:27.462732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:28.463040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:28.595433 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:29.463277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:30.463625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:30.597797 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:31.463795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:32.463956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:32.600331 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:33.464260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:34.464420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:34.602762 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:35.464601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:36.464764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:36.605048 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:37.464904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:38.465106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:38.607546 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:39.465447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:40.465630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:40.610120 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:41.465943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:42.466101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:42.612492 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:43.466478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:44.466577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:44.614818 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:45.466664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:46.466826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:46.617380 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:47.467211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:48.467563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:48.620054 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:49.467897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:50.468057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:50.622439 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:51.468257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:52.468355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:52.624765 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:53.468755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:54.469543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:54.628002 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:55.469819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:56.470092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:56.630742 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:57.470185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:36:58.470549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:36:58.632829 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:36:59.470660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:00.470748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:00.635096 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:01.470922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:02.471091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:02.637603 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:03.471692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:04.472556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:04.639927 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:05.472739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:06.472899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:06.642542 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:07.473378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:08.473800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:08.645218 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:09.474011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:10.474183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:10.647486 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:11.474291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:12.474448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:12.649744 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:13.474691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:14.474857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:14.652267 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:15.475134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:16.475300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:16.655020 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:17.475824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:18.476067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:18.657459 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:19.476263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:20.476432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:20.660076 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:21.476946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:22.477115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:22.662566 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:23.477467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:24.477647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:24.665066 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:25.477727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:26.477888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:26.667481 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:27.478252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:28.479042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:28.670475 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:29.479133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:30.479298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:30.672717 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:31.479387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:32.479551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:32.674982 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:33.479968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:34.480132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:34.677518 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:35.480357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:36.480519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:36.680037 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:37.480837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:38.481623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:38.683118 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:39.481958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:40.482119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:40.685690 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:41.482454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:42.482628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:42.688033 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:43.482978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:44.483147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:44.690779 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:45.483615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:46.483777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:46.693359 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:47.484134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:48.484342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:48.695717 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:49.484477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:50.484657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:50.698075 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:51.484905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:52.485078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:52.700514 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:53.485321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:54.486385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:54.702831 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:55.486637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:56.486802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:56.705542 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:57.487369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:37:58.487610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:37:58.707962 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:37:59.487718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:00.487879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:00.710300 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:01.488072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:02.488234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:02.712765 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:03.488778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:04.488946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:04.715419 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:05.489176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:06.489347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:06.717778 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:07.489544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:08.489905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:08.720335 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:09.490089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:10.490260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:10.722637 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:11.491328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:12.491493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:12.724891 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:13.491634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:14.491801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:14.727197 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:15.492067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:16.492227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:16.729819 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:17.492557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:18.492965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:18.732336 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:19.493103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:20.493269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:20.734740 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:21.493685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:22.493840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:22.737290 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:23.494077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:24.494235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:24.739635 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:25.494599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:26.494757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:26.742410 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:27.495216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:28.495442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:28.744826 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:29.495550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:30.495888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:30.747296 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:31.496164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:32.496344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:32.749873 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:33.496857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:34.497099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:34.752595 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:35.497317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:36.497477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:36.754989 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:37.497724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:38.498094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:38.757670 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:39.498428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:40.498615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:40.759902 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:41.498638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:42.498803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:42.762172 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:43.498971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:44.499136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:44.764577 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:45.499372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:46.499530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:46.766882 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:47.499608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:48.499946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:48.769369 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:49.500098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:50.500258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:50.771717 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:51.500478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:52.501100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:52.774630 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:53.501444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:54.501538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:54.776903 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:55.501648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:56.501718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:56.779331 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:57.502089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:38:58.502471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:38:58.782053 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:38:59.502743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:00.502906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:00.784367 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:01.503001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:02.503165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:02.786787 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:03.503642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:04.503807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:04.789310 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:05.503995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:06.504774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:06.792506 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:07.505216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:08.505574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:08.795223 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:09.505983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:10.506146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:10.797678 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:11.506325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:12.506488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:12.799891 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:13.506695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:14.507660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:14.802194 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:15.507948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:16.508773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:16.805419 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:17.509082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:18.509294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:18.807680 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:19.509314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:20.509479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:20.809994 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:21.509750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:22.509918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:22.812316 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:23.510123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:24.511173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:24.814699 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:25.511374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:26.511546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:26.819014 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:27.511748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:28.511965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:28.821389 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:29.512051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:30.512214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:30.823728 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:31.512399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:32.512573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:32.826095 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:33.512925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:34.513085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:34.828531 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:35.513771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:36.513925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:36.831687 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:37.514343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:38.514546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:38.834019 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:39.514742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:40.514899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:39:40.836691 20 container_probe.go:1759] Get pod liveness-e59ea086-2112-4fad-87f7-ca171ac3cf86 in namespace container-probe-7405
  E0930 13:39:41.515323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:42.515487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/30/24 13:39:42.836
  I0930 13:39:42.845797 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7405" for this suite. @ 09/30/24 13:39:42.848
• [242.346 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/30/24 13:39:42.853
  I0930 13:39:42.853821 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename endpointslice @ 09/30/24 13:39:42.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:39:42.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:39:42.863
  STEP: getting /apis @ 09/30/24 13:39:42.865
  STEP: getting /apis/discovery.k8s.io @ 09/30/24 13:39:42.868
  STEP: getting /apis/discovery.k8s.iov1 @ 09/30/24 13:39:42.869
  STEP: creating @ 09/30/24 13:39:42.869
  STEP: getting @ 09/30/24 13:39:42.88
  STEP: listing @ 09/30/24 13:39:42.882
  STEP: watching @ 09/30/24 13:39:42.884
  I0930 13:39:42.884409 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/30/24 13:39:42.885
  STEP: cluster-wide watching @ 09/30/24 13:39:42.886
  I0930 13:39:42.886920 20 endpointslice.go:459] starting watch
  STEP: patching @ 09/30/24 13:39:42.887
  STEP: updating @ 09/30/24 13:39:42.891
  I0930 13:39:42.896156 20 endpointslice.go:482] waiting for watch events with expected annotations
  I0930 13:39:42.896224 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/30/24 13:39:42.896
  STEP: deleting a collection @ 09/30/24 13:39:42.902
  I0930 13:39:42.911383 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8672" for this suite. @ 09/30/24 13:39:42.949
• [0.099 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 09/30/24 13:39:42.952
  I0930 13:39:42.952824 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename sched-preemption @ 09/30/24 13:39:42.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:39:42.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:39:42.966
  I0930 13:39:42.976999 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0930 13:39:43.516111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:44.516298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:45.516335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:46.516525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:47.516626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:48.516975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:49.518042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:50.518142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:51.519114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:52.519212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:53.519343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:54.519432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:55.519489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:56.519797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:57.520786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:58.521036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:39:59.522040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:00.522223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:01.523174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:02.523355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:03.523382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:04.523571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:05.524515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:06.524723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:07.525651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:08.525986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:09.527039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:10.527202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:11.528244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:12.528429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:13.528560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:14.528670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:15.528692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:16.528890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:17.529789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:18.530019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:19.531073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:20.531162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:21.531310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:22.531515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:23.531782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:24.531977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:25.531993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:26.532182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:27.532340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:28.532557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:29.532930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:30.533547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:31.533740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:32.533908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:33.534093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:34.534377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:35.534432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:36.534610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:37.534676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:38.535064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:39.535088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:40.535251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:41.535279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:42.535441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:40:42.980351 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/30/24 13:40:42.982
  I0930 13:40:42.996006 20 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0930 13:40:43.001673 20 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0930 13:40:43.015014 20 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0930 13:40:43.020222 20 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/30/24 13:40:43.02
  E0930 13:40:43.535789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:44.535888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/30/24 13:40:45.029
  E0930 13:40:45.536606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:46.536767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:47.536885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:48.537106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:40:49.083008 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8281" for this suite. @ 09/30/24 13:40:49.084
• [66.135 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/30/24 13:40:49.088
  I0930 13:40:49.088087 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 13:40:49.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:40:49.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:40:49.1
  STEP: Creating secret with name secret-test-7b55daea-2d3b-45dd-812e-bf2482a308c1 @ 09/30/24 13:40:49.102
  STEP: Creating a pod to test consume secrets @ 09/30/24 13:40:49.105
  E0930 13:40:49.538136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:50.538414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:40:51.117
  I0930 13:40:51.118878 20 output.go:196] Trying to get logs from node worker-0 pod pod-secrets-9c997868-3747-4d74-8072-9b9072879f56 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 13:40:51.128
  I0930 13:40:51.138965 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9278" for this suite. @ 09/30/24 13:40:51.141
• [2.056 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/30/24 13:40:51.144
  I0930 13:40:51.144790 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename secrets @ 09/30/24 13:40:51.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:40:51.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:40:51.158
  STEP: Creating secret with name secret-test-map-1a646859-9b35-4b63-b1de-77867e1887f3 @ 09/30/24 13:40:51.16
  STEP: Creating a pod to test consume secrets @ 09/30/24 13:40:51.163
  E0930 13:40:51.539150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:52.539381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/30/24 13:40:53.174
  I0930 13:40:53.176028 20 output.go:196] Trying to get logs from node worker-0 pod pod-secrets-8ca56565-8e7a-4b54-9db7-218c44520ea0 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/30/24 13:40:53.18
  I0930 13:40:53.189301 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1732" for this suite. @ 09/30/24 13:40:53.191
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/30/24 13:40:53.194
  I0930 13:40:53.194787 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename webhook @ 09/30/24 13:40:53.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:40:53.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:40:53.206
  STEP: Setting up server cert @ 09/30/24 13:40:53.306
  E0930 13:40:53.540323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/30/24 13:40:53.747
  STEP: Deploying the webhook pod @ 09/30/24 13:40:53.75
  STEP: Wait for the deployment to be ready @ 09/30/24 13:40:53.76
  I0930 13:40:53.764232 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0930 13:40:54.541208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0930 13:40:55.541404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/30/24 13:40:55.77
  STEP: Verifying the service has paired with the endpoint @ 09/30/24 13:40:55.778
  E0930 13:40:56.542386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0930 13:40:56.778800 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/30/24 13:40:56.834
  STEP: Creating a configMap that should be mutated @ 09/30/24 13:40:56.844
  STEP: Deleting the collection of validation webhooks @ 09/30/24 13:40:56.867
  STEP: Creating a configMap that should not be mutated @ 09/30/24 13:40:56.89
  I0930 13:40:56.919536 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-446" for this suite. @ 09/30/24 13:40:56.921
  STEP: Destroying namespace "webhook-markers-8527" for this suite. @ 09/30/24 13:40:56.926
• [3.736 seconds]
------------------------------
SSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/30/24 13:40:56.931
  I0930 13:40:56.931322 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2914885408
  STEP: Building a namespace api object, basename csi-storageclass @ 09/30/24 13:40:56.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/30/24 13:40:56.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/30/24 13:40:56.943
  STEP: Creating a StorageClass @ 09/30/24 13:40:56.945
  STEP: Get StorageClass "e2e-sk5vt" @ 09/30/24 13:40:56.948
  STEP: Patching the StorageClass "e2e-sk5vt" @ 09/30/24 13:40:56.95
  STEP: Delete StorageClass "e2e-sk5vt" @ 09/30/24 13:40:56.954
  STEP: Confirm deletion of StorageClass "e2e-sk5vt" @ 09/30/24 13:40:56.958
  STEP: Create a replacement StorageClass @ 09/30/24 13:40:56.959
  STEP: Updating StorageClass "e2e-v2-55qm4" @ 09/30/24 13:40:56.964
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-55qm4=updated" @ 09/30/24 13:40:56.968
  STEP: Deleting StorageClass "e2e-v2-55qm4" via DeleteCollection @ 09/30/24 13:40:56.97
  STEP: Confirm deletion of StorageClass "e2e-v2-55qm4" @ 09/30/24 13:40:56.974
  I0930 13:40:56.975803 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3924" for this suite. @ 09/30/24 13:40:57.022
• [0.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0930 13:40:57.025801 20 suites.go:34] Running AfterSuite actions on node 1
  I0930 13:40:57.025822 20 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.036 seconds]
------------------------------

Ran 404 of 6603 Specs in 6208.629 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6199 Skipped
PASS

Ginkgo ran 1 suite in 1h43m29.196169098s
Test Suite Passed
